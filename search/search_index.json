{"config":{"lang":["en","ja"],"separator":"[\\s\\-\\.]+","pipeline":["stopWordFilter"]},"docs":[{"location":"","title":"\u9996\u9875","text":""},{"location":"#little-bee","title":"\u6b22\u8fce\u6765\u5230 Little Bee \u535a\u5ba2","text":"<p>\u6b64\u535a\u5ba2\u662f\u57fa\u4e8e mkdocs.org \u548c mkdocs-material \u521b\u5efa\u5728 Github \u4e0a\u7684\u9879\u76ee\u3002\u4e3b\u8981\u76ee\u7684\u662f\u5206\u4eab\u8ba1\u7b97\u673a\u76f8\u5173\u6280\u672f\uff0c\u540c\u65f6\u4e5f\u5305\u62ec\u4e00\u4e9b\u4e2a\u4eba\u9879\u76ee\u7684\u4ecb\u7ecd\u3002</p>"},{"location":"booknotes/cpp_debug/01/","title":"\u8c03\u8bd5\u7b26\u53f7\u548c\u8c03\u8bd5\u5668","text":"<p>\u300a\u9ad8\u6548C/C++\u8c03\u8bd5\u300b - \u4e25\u7426\uff0c\u7b2c\u4e00\u7ae0\u7684\u8bfb\u4e66\u7b14\u8bb0\uff0c\u672c\u6587\u4e2d\u7684\u6240\u6709\u4ee3\u7801\u53ef\u5728GitHub\u4ed3\u5e93\u4e2d\u627e\u5230</p>"},{"location":"booknotes/cpp_debug/01/#_2","title":"\u8c03\u8bd5\u7b26\u53f7","text":"<p>\u5e38\u89c1\u7684\u8c03\u8bd5\u7b26\u53f7\u6709\u4ee5\u4e0b\u51e0\u7c7b\uff1a</p> <ul> <li>\u5168\u5c40\u51fd\u6570\u548c\u53d8\u91cf</li> <li>\u6e90\u6587\u4ef6\u548c\u884c\u4fe1\u606f</li> <li>\u7c7b\u578b\u4fe1\u606f</li> <li>\u9759\u6001\u51fd\u6570\u548c\u5c40\u90e8\u53d8\u91cf</li> <li>\u67b6\u6784\u548c\u7f16\u8bd1\u5668\u4f9d\u8d56\u4fe1\u606f</li> </ul>"},{"location":"booknotes/cpp_debug/01/#dwarf","title":"DWARF\u683c\u5f0f","text":"<p>DWARF\u683c\u5f0f\u662fLinux\u7cfb\u7edf\u4e2d\u7684\u6807\u51c6\u8c03\u8bd5\u7b26\u53f7\u683c\u5f0f\u3002DWARF\u4ee5\u6811\u5f62\u7ed3\u6784\u7ec4\u7ec7\u8c03\u8bd5\u7b26\u53f7\u3002\u6bcf\u4e00\u4e2a\u6811\u8282\u70b9\u90fd\u662f\u4e00\u4e2a\u8c03\u8bd5\u4fe1\u606f\u8bb0\u5f55(Debug Information Entry, DIE)\u3002</p> <p>\u4e0b\u9762\u6211\u4eec\u4ee5foo.cpp\u4e3a\u4f8b\u4ecb\u7ecdDWARF\u683c\u5f0f\uff1a</p> <pre><code>int gInt = 1;\nint GlobalFunc(int i)\n{\n    return i + gInt;\n}\n</code></pre> <p>\u6211\u4eec\u53ef\u4ee5\u7528<code>readelf --debug-dump foo.o</code>\u547d\u4ee4\u67e5\u770b\u8c03\u8bd5\u7b26\u53f7\u7684\u5404\u79cd\u4fe1\u606f\u3002\u8c03\u8bd5\u7b26\u53f7\u88ab\u5212\u5206\u4e3a\u591a\u4e2a\u8282(section)\uff1a</p> <ul> <li><code>.debug_abbrev</code>\u8282<ul> <li>\u7f29\u7565\u8868\u4e2d\u8bb0\u5f55DIE\u7684\u6a21\u677f\uff0c\u7528\u4e8e\u771f\u5b9eDIE\u9879\u7684\u7d22\u5f15</li> </ul> </li> <li><code>.debug_info</code>\u8282<ul> <li>\u5305\u542b\u4e86\u8c03\u8bd5\u7b26\u53f7\u7684\u6838\u5fc3\u5185\u5bb9\uff0c\u5176\u4e2d\u6bcf\u4e2aDIE\u90fd\u6307\u5b9a\u4e86\u5176\u5728\u7f29\u7565\u8868\u4e2d\u7684\u7d22\u5f15</li> </ul> </li> <li><code>.debug_line</code>\u8282<ul> <li>\u7528\u4e8e\u5c06\u6307\u4ee4\u5730\u5740\u6620\u5c04\u5230\u6e90\u4ee3\u7801\u884c\u53f7</li> </ul> </li> <li><code>.eh_frame</code>\u8282(\u6216<code>.debug_frame</code>\u8282)<ul> <li>\u63cf\u8ff0\u4e86\u51fd\u6570\u7684\u6808\u5e27\u548c\u5bc4\u5b58\u5668\u7684\u5206\u914d\u65b9\u5f0f</li> </ul> </li> </ul> <p>\u4ee5<code>GlobalFunc</code>\u51fd\u6570\u7684\u53c2\u6570<code>int i</code>\u4e3a\u4f8b\uff0c\u5176\u5728\u6c47\u7f16\u4ee3\u7801\"foo.s\"\u4e2d\u7f16\u7801\u5982\u4e0b\uff1a</p> <pre><code>.uleb128 0x5\n.string \"i\"\n.byte   0x1\n.byte   0x2\n.byte   0x14\n.long   0x44\n.uleb128 0x2\n.byte   0x91\n.sleb128 -20\n.byte   0\n</code></pre> <p>\u53c2\u6570<code>int i</code>\u7684DIE\u5728<code>.debug_info</code>\u6bb5\u4e2d\u5185\u5bb9\u5982\u4e0b\uff1a <pre><code> &lt;2&gt;&lt;6d&gt;: Abbrev Number: 5 (DW_TAG_formal_parameter)\n    &lt;6e&gt;   DW_AT_name        : i\n    &lt;70&gt;   DW_AT_decl_file   : 1\n    &lt;71&gt;   DW_AT_decl_line   : 2\n    &lt;72&gt;   DW_AT_decl_column : 20\n    &lt;73&gt;   DW_AT_type        : &lt;0x44&gt;\n    &lt;77&gt;   DW_AT_location    : 2 byte block: 91 6c  (DW_OP_fbreg: -20)\n</code></pre></p> <p>\u5176\u5bf9\u5e94\u7684\u539f\u59cb\u6570\u636e\u53ef\u901a\u8fc7<code>objdump -s --section=.debug_info foo.o</code>\u547d\u4ee4\u67e5\u770b\uff1a</p> <ul> <li><code>05 6900 01 02 14 44000000 02 916c 00</code></li> </ul> <p>\u53c2\u6570<code>int i</code>\u7684DIE\u542b\u4e49\u5305\u62ec\uff1a</p> <ul> <li>\u8fd9\u4e2aDIE\u5728\u7f29\u7565\u8868\u4e2d\u7684\u7d22\u5f15\u662f5</li> <li>\u53c2\u6570\u540d\u79f0\u662f\u201ci\u201d</li> <li>\u5b83\u51fa\u73b0\u5728\u7b2c1\u4e2a\u6587\u4ef6\u4e2d</li> <li>\u5b83\u4f4d\u4e8e\u8be5\u6587\u4ef6\u7684\u7b2c2\u884c\uff0c\u7b2c20\u5217</li> <li>\u53c2\u6570\u7684\u7c7b\u578b\u6709\u53e6\u4e00\u4e2aDIE(\u5f15\u7528\u4e3a0x44)\u6765\u63cf\u8ff0</li> <li>\u53c2\u6570\u7684\u5b58\u50a8\u4f4d\u7f6e\u7531\u63a5\u4e0b\u6765\u76842\u5b57\u8282\u6307\u793a\uff0c\u8fd9\u5bf9\u5e94\u4e8e\u76f8\u5bf9\u4e8e\u5bc4\u5b58\u5668fbreg\u7684\u504f\u79fb\u91cf-20</li> <li>\u6700\u540e\u8fd9\u4e2aDIE\u4ee5\u4e00\u51710\u5b57\u8282\u7ed3\u675f</li> </ul>"},{"location":"booknotes/cpp_debug/01/#_3","title":"\u8c03\u8bd5\u5668\u5185\u90e8","text":"<p>Linux\u5185\u6838\u63d0\u4f9b\u4e86\u4e00\u4e2a\u7cfb\u7edf\u8c03\u7528<code>ptrace</code>\uff0c\u5141\u8bb8\u4e00\u4e2a\u8fdb\u7a0b(\u8c03\u8bd5\u5668\u6216\u5176\u4ed6\u5de5\u5177\uff0c\u5982\u7cfb\u7edf\u8c03\u7528\u8ffd\u8e2a\u5668strace)\u67e5\u8be2\u548c\u63a7\u5236\u53e6\u4e00\u4e2a\u8fdb\u7a0b(\u88ab\u8c03\u8bd5\u7a0b\u5e8f)\u7684\u6267\u884c\u3002<code>ptrace</code>\u63d0\u4f9b\u4e86\u4ee5\u4e0b\u529f\u80fd\uff1a</p> <ul> <li>\u8bfb\u5199\u88ab\u8c03\u8bd5\u8fdb\u7a0b\u5185\u5b58\u5730\u5740\u7a7a\u95f4\u4e2d\u7684\u5185\u5bb9\uff0c\u5305\u62ec\u6587\u672c\u548c\u6570\u636e\u6bb5</li> <li>\u67e5\u8be2\u548c\u4fee\u6539\u88ab\u8c03\u8bd5\u8fdb\u7a0b\u7684\u7528\u6237\u533a\u57df\u4fe1\u606f\uff0c\u4f8b\u5982\u5bc4\u5b58\u5668\u7b49</li> <li>\u67e5\u8be2\u548c\u4fee\u6539\u88ab\u8c03\u8bd5\u8fdb\u7a0b\u7684\u4fe1\u53f7\u4fe1\u606f\u548c\u8bbe\u7f6e</li> </ul> <p>GDB\u7684\u65ad\u70b9\u5c31\u662f\u5229\u7528<code>ptrace</code>\u5b9e\u73b0\u7684\u3002\u5047\u8bbe\u51fd\u6570<code>main</code>\u7684\u8d77\u59cb\u5730\u5740\u4e3a<code>0x400590</code>\uff0cGDB\u5728<code>main</code>\u5904\u8bbe\u7f6e\u65ad\u70b9\uff0c\u63a5\u4e0b\u6765\u7684\u8fc7\u7a0b\u5927\u81f4\u5982\u4e0b\uff1a</p> <ul> <li>GDB\u8bfb\u53d6\u5730\u5740<code>0x400590</code>\u5904\u7684\u4ee3\u7801</li> <li>GDB\u4f7f\u7528<code>PTRACE_POKEDATA</code>\u8bf7\u6c42\u66ff\u6362\u8be5\u5730\u5740\u7684\u4ee3\u7801\uff0c\u5c06\u6700\u4f4e\u5b57\u8282\u66f4\u6539\u4e3a<code>0xcc</code>\u3002<code>0xcc</code>\u662f\u4e00\u79cd\u7279\u6b8a\u7684\u9677\u9631\u6307\u4ee4INT3\uff0c\u5f53Linux\u7cfb\u7edf\u9047\u5230<code>INT3</code>\u6307\u4ee4\uff0c\u4f1a\u4ea7\u751f<code>SIGTRAP</code>\u4fe1\u53f7\u3002\u8c03\u8bd5\u5668\u63a5\u6536\u5230<code>SIGTRAP</code>\u4fe1\u53f7\u540e\uff0c\u4f1a\u5224\u65ad\u662f\u5426\u5b58\u5728\u65ad\u70b9\u6216\u76d1\u63a7\u70b9\uff0c\u4ece\u800c\u505a\u51fa\u5bf9\u5e94\u7684\u52a8\u4f5c</li> <li>\u88ab\u8c03\u8bd5\u7684\u7a0b\u5e8f\u6267\u884c\u9677\u9631\u6307\u4ee4<code>0xcc</code>\uff0c\u8fdb\u5165\u6682\u505c\u72b6\u6001\uff0c\u5e76\u5411GDB\u53d1\u9001<code>SIGTRAP</code>\u4fe1\u53f7</li> <li>GDB\u6536\u5230\u4fe1\u53f7\u540e\uff0c\u91c7\u53d6\u76f8\u5e94\u7684\u52a8\u4f5c\u3002\u4f8b\u5982\uff0c\u5982\u679c\u5b58\u5728\u65ad\u70b9\u4e14\u6ee1\u8db3\u6761\u4ef6\uff0cGDB\u4f1a\u7b49\u5f85\u7528\u6237\u8c03\u8bd5\u547d\u4ee4</li> <li>\u5982\u679c\u6211\u4eec\u7ee7\u7eed\u6267\u884c\u7a0b\u5e8f\uff0cGDB\u4f1a\u66ff\u6362\u56de<code>0x400590</code>\u5904\u7684\u539f\u59cb\u6307\u4ee4\uff0c\u5e76\u4f7f\u7528<code>PTRACE_SINGLESTEP</code>\u8bf7\u6c42\u6267\u884c\u5355\u4e2a\u6307\u4ee4</li> </ul>"},{"location":"booknotes/cpp_debug/01/#_4","title":"\u8c03\u8bd5\u6280\u5de7","text":""},{"location":"booknotes/cpp_debug/01/#add-symbol-file","title":"add-symbol-file","text":"<p>\u5982\u679c\u6211\u4eec\u8981\u8c03\u8bd5\u7684\u7a0b\u5e8f\u6ca1\u6709<code>debug</code>\u4fe1\u606f\uff0c\u53ef\u4ee5\u901a\u8fc7<code>add-symbol-file</code>\u547d\u4ee4\u624b\u52a8\u5bfc\u5165<code>debug</code>\u4fe1\u606f\u8fdb\u884c\u8c03\u8bd5\u3002\"add-symbol-file\"\u4f8b\u5b50\u5c55\u793a\u4e86\u5982\u4f55\u5229\u7528<code>add-symbol-file</code>\u547d\u4ee4\u8c03\u8bd5\u7f3a\u5931\u8c03\u8bd5\u4fe1\u606f\u7684\u7a0b\u5e8f\u3002</p> <p>\u9700\u8981\u6ce8\u610f\u7684\u662f\uff1a\u8981\u60f3\u6210\u529f\u5bfc\u5165\u8c03\u8bd5\u4fe1\u606f\uff0c\u9700\u4fdd\u8bc1\u8c03\u8bd5\u4fe1\u606f\u5fc5\u987b\u548c\u88ab\u8c03\u8bd5\u7a0b\u5e8f\u4e00\u81f4\uff0c\u5305\u62ec\u4f18\u5316\u7b49\u7ea7\u7b49\u3002\u5426\u5219\uff0c\u65ad\u70b9\u4ecd\u4f1a\u56e0\u4e3a\u5730\u5740\u4e0d\u5bf9\u800c\u65e0\u6cd5\u5de5\u4f5c\u3002</p> <pre><code>sh&gt; gdb -q ./main\nReading symbols from ./main...\n(No debugging symbols found in ./main)\n(gdb) b main\nBreakpoint 1 at 0x401136\n# \u7531\u4e8e\u53ef\u6267\u884c\u6587\u4ef6\u201cmain\u201d\u4e0d\u5305\u542b\u8c03\u8bd5\u4fe1\u606f\uff0c\u6240\u4ee5\u65ad\u70b9\u4fe1\u606f\u4e0d\u5168\n(gdb) info b\nNum     Type           Disp Enb Address            What\n1       breakpoint     keep y   0x0000000000401136 &lt;main+4&gt;\n# \u7528\u201cadd-symbol-file\u201d\u5bfc\u5165\u5305\u542b\u8c03\u8bd5\u4fe1\u606f\u7684\u201cmain_d\u201d\n(gdb) add-symbol-file main_d\nReading symbols from main_d...\n# \u65ad\u70b9\u5728\"main.c:6\"\u5904\n(gdb) info b\nNum     Type           Disp Enb Address            What\n1       breakpoint     keep y   0x000000000040113a in main() at main.c:6\n# \u542f\u52a8\u7a0b\u5e8f\u540e\uff0c\u505c\u5728\u4e86\u65ad\u70b9\u5904\n(gdb) r\nBreakpoint 1, main () at main.c:6\n6          init();\n# \u7531\u4e8e\u201clibsym.so\u201d\u4e0d\u5305\u542b\u8c03\u8bd5\u4fe1\u606f\uff0c\u6240\u4ee5\u65e0\u6cd5\u5728\u201cmm_symbol.c:init\u201d\u5904\u6253\u65ad\u70b9\n(gdb) b mm_symbol.c:init\nNo source file named mm_symbol.c.\nMake breakpoint pending on future shared library load? (y or [n]) y\nBreakpoint 2 (mm_symbol.c:init) pending.\n(gdb) info b\nNum     Type           Disp Enb Address            What\n1       breakpoint     keep y   0x000000000040113a in main() at main.c:6\n        breakpoint already hit 1 time\n2       breakpoint     keep y   &lt;PENDING&gt;          mm_symbol.c:init\n(gdb) info sharedlibrary \nFrom                To                  Syms Read   Shared Object Library\n0x00007ffff7dd5030  0x00007ffff7df4214  Yes (*)     /lib64/ld-linux-x86-64.so.2\n0x00007ffff7ff1040  0x00007ffff7ff115d  Yes (*)     ./libsym.so\n# \u5bfc\u5165\"libsym_d.so\"\u7684\u8c03\u8bd5\u4fe1\u606f\u201clibsym.sym\u201d\u5230\u6307\u5b9a\u5730\u5740\u201c0x00007ffff7ff1040\u201d\n# \u5171\u4eab\u5e93\u5730\u5740\u53ef\u901a\u8fc7\u201cinfo sharedlibrary\u201d\u627e\u5230\uff0c\u201clibsym.sym\u201d\u7531\n# \u201cobjcopy --only-keep-debug libsym_d.so libsym.sym\u201d\n# \u547d\u4ee4\u4ea7\u751f\uff0c\u5f53\u7136\u4e5f\u53ef\u4ee5\u76f4\u63a5\u4ece\u201clibsym_d.so\u201d\u5bfc\u5165\u8c03\u8bd5\u4fe1\u606f\u3002\n(gdb) add-symbol-file libsym.sym 0x00007ffff7ff1040\nReading symbols from libsym.sym...\n# \u8c03\u8bd5\u4fe1\u606f\u5bfc\u5165\u6210\u529f\u540e\uff0c\u6210\u529f\u5728\u201cmm_symbol.c:init\u201d\u5904\u6253\u4e0a\u4e86\u65ad\u70b9\n(gdb) info b\nNum     Type           Disp Enb Address            What\n1       breakpoint     keep y   0x000000000040113a in main() at main.c:6\n        breakpoint already hit 1 time\n2       breakpoint     keep y   0x00007ffff7ff10f9 in init() at mm_symbol.c:7\n(gdb) c\nContinuing.\nBreakpoint 2, init () at mm_symbol.c:7\n7          g_blocks[0].size = 1;\n(gdb) c\nContinuing.\ng_blocks[0]=0x404040, g_blocks[0].size=1, g_blocks[0].prev=(nil), g_blocks[0].next=0x404058\ng_blocks[1]=0x404058, g_blocks[1].size=2, g_blocks[1].prev=0x404040, g_blocks[1].next=(nil)\n[Inferior 1 (process 22107) exited normally]\n</code></pre>"},{"location":"booknotes/cpp_debug/01/#_5","title":"\u6761\u4ef6\u65ad\u70b9","text":"<p>\u4e0b\u9762\u662f\u5e38\u89c1\u7684\u6761\u4ef6\u65ad\u70b9\u8bbe\u7f6e\u65b9\u6cd5\uff1a</p> <pre><code># \u5ffd\u7565\u65ad\u70b9(1) 100\u6b21\n(gdb) ignore 1 100\n# \u5728\u53d8\u91cfindex\u4e3a5\u7684\u6761\u4ef6\u4e0b\u5728\u51fd\u6570foo\u5165\u53e3\u5904\u505c\u6b62\n(gdb) break foo if index==5\n# \u5728\u6307\u4ee4\u5730\u57400x12345678\u5904\u8bbe\u7f6e\u65ad\u70b9\uff0c\u4e14\u51fd\u6570`GetRefCount`\u8fd4\u56de\u503c\u4e3a0\u65f6\u624d\u751f\u6548\n# GDB\u8fd8\u63d0\u4f9b\u4e86\u5e38\u7528\u7684\u51fd\u6570\u7528\u4e8e\u8bbe\u7f6e\u6761\u4ef6\u65ad\u70b9\uff0c\u5982\u5b57\u7b26\u4e32\u6bd4\u8f83\u51fd\u6570\u201c$_streq\u201d\uff0c\u66f4\u591a\u51fd\u6570\u53ef\u53c2\u89c1\uff1a\n#   https://sourceware.org/gdb/current/onlinedocs/gdb.html/Convenience-Funs.html\n(gdb) break *0x12345678 if GetRefCount(this)==0\n</code></pre>"},{"location":"booknotes/cpp_debug/01/#_6","title":"\u76d1\u6d4b\u70b9","text":"<p>\u65ad\u70b9\u53ef\u4ee5\u8bbe\u7f6e\u5728\u4ee3\u7801\u4e2d\uff0c\u4e5f\u53ef\u4ee5\u8bbe\u7f6e\u5728\u6570\u636e\u5bf9\u8c61\u4e0a\u3002\u540e\u8005\u88ab\u79f0\u4e3a\u76d1\u6d4b\u70b9\uff0c\u6216\u8005\u6570\u636e\u65ad\u70b9\u3002</p> <p>\u65ad\u70b9\u548c\u76d1\u6d4b\u70b9\u4f7f\u7528\u4e0d\u540c\u7684\u673a\u5236\u5b9e\u73b0\u3002\u5982\u524d\u9762\u6240\u8ff0\uff0c\u8c03\u8bd5\u5668\u662f\u901a\u8fc7\u5c06\u6307\u5b9a\u4f4d\u7f6e\u7684\u6307\u4ee4\u66ff\u6362\u4e3a\u77ed\u9677\u9631\u6307\u4ee4\u6765\u8bbe\u7f6e\u65ad\u70b9\uff0c\u539f\u6765\u7684\u6307\u4ee4\u4ee3\u7801\u88ab\u4fdd\u5b58\u5728\u7f13\u51b2\u533a\u3002\u5f53\u7a0b\u5e8f\u6267\u884c\u5230\u9677\u9631\u6307\u4ee4\uff0c\u4e5f\u5c31\u662f\u8fbe\u5230\u65ad\u70b9\u65f6\uff0c\u5185\u6838\u4f1a\u505c\u6b62\u7a0b\u5e8f\u8fd0\u884c\u5e76\u901a\u77e5\u8c03\u8bd5\u5668\uff0c\u540e\u8005\u4ece\u7b49\u5f85\u4e2d\u9192\u6765\uff0c\u663e\u793a\u6240\u8ddf\u8e2a\u7a0b\u5e8f\u7684\u72b6\u6001\uff0c\u7136\u540e\u7b49\u5f85\u7528\u6237\u7684\u4e0b\u4e00\u6761\u547d\u4ee4\u3002</p> <p>\u76d1\u6d4b\u70b9\u4e0d\u80fd\u7528\u6307\u4ee4\u65ad\u70b9\u7684\u65b9\u6cd5\u5b9e\u73b0\uff0c\u56e0\u4e3a\u6570\u636e\u5bf9\u8c61\u662f\u4e0d\u53ef\u6267\u884c\u7684\u3002\u6240\u4ee5\u5b83\u7684\u5b9e\u73b0\u662f\u8981\u4e48\u5b9a\u671f\u5730(\u8f6f\u4ef6\u6a21\u5f0f)\u67e5\u8be2\u6570\u636e\u7684\u503c\uff0c\u8981\u4e48\u4f7f\u7528CPU\u652f\u6301\u7684\u8c03\u8bd5\u5bc4\u5b58\u5668(\u786c\u4ef6\u6a21\u5f0f)\u3002\u8f6f\u4ef6\u76d1\u6d4b\u70b9\u662f\u901a\u8fc7\u5355\u6b65\u8fd0\u884c\u7a0b\u5e8f\u5e76\u5728\u6bcf\u4e00\u6b65\u68c0\u67e5\u88ab\u8ddf\u8e2a\u7684\u53d8\u91cf\u6765\u5b9e\u73b0\u7684\uff0c\u8fd9\u79cd\u65b9\u5f0f\u4f7f\u7a0b\u5e8f\u6bd4\u6b63\u5e38\u8fd0\u884c\u8981\u6162\u6570\u767e\u500d\u3002</p> <p>\u7531\u4e8e\u5355\u6b65\u8fd0\u884c(\u8f6f\u4ef6\u6a21\u5f0f)\u4e0d\u80fd\u4fdd\u8bc1\u5728\u591a\u7ebf\u7a0b\u73af\u5883\u4e0b\u7684\u7ed3\u679c\u4e00\u81f4\u6027\uff0c\u56e0\u6b64\u5728\u591a\u7ebf\u7a0b\u548c\u591a\u5904\u7406\u5668\u7684\u73af\u5883\u4e0b\uff0c\u8fd9\u79cd\u65b9\u6cd5\u53ef\u80fd\u65e0\u6cd5\u6355\u83b7\u5230\u6570\u636e\u88ab\u8bbf\u95ee\u7684\u77ac\u95f4\u3002\u786c\u4ef6\u76d1\u6d4b\u70b9\u5219\u6ca1\u6709\u8fd9\u4e2a\u95ee\u9898\uff0c\u56e0\u4e3a\u88ab\u8ddf\u8e2a\u7684\u53d8\u91cf\u7684\u8ba1\u7b97\u662f\u7531\u786c\u4ef6\u5b8c\u6210\u7684\uff0c\u8c03\u8bd5\u5668\u4e0d\u7528\u4ecb\u5165\uff0c\u5b83\u6839\u672c\u4e0d\u4f1a\u51cf\u6162\u7a0b\u5e8f\u7684\u6267\u884c\u901f\u5ea6\u3002\u4f46\u662f\u7531\u4e8eCPU\u8c03\u8bd5\u5bc4\u5b58\u5668\u4e2a\u6570\u7684\u9650\u5236\uff0c\u5982\u679c\u76d1\u6d4b\u70b9\u8868\u8fbe\u5f0f\u5f88\u590d\u6742\u6216\u9700\u8981\u8bbe\u7f6e\u5f88\u591a\u76d1\u6d4b\u70b9\uff0c\u8c03\u8bd5\u5668\u4f1a\u9690\u5f0f\u5730\u56de\u5f52\u5230\u8f6f\u4ef6\u76d1\u6d4b\u70b9\u3002</p> <p>\"watch\"\u4f8b\u5b50\u5c55\u793a\u4e86\u5982\u4f55\u5229\u7528<code>watch sum if times &gt;= 2</code>\u547d\u4ee4\u8bbe\u7f6e\u76d1\u63a7\u70b9\uff0c\u76d1\u63a7<code>sum</code>\u503c\u7684\u53d8\u5316\uff0c\u5e76\u5728<code>times</code>\u5927\u4e8e\u7b49\u4e8e2\u7684\u6761\u4ef6\u4e0b\u89e6\u53d1\u3002</p> <pre><code>sh&gt; gdb -q ./main -ex 'b main' -ex 'run' -ex 'watch sum if times &gt;= 2' -ex 'c'\nBreakpoint 1, main () at main.cpp:5\n5           int sum = 0;\nHardware watchpoint 2: sum\nContinuing.\n1: sum=1\nHardware watchpoint 2: sum\nOld value = 1\nNew value = 3\nmain () at main.cpp:14\n14          printf(\"%d: sum=%d\\n\", times, sum);\n# \u5728\"times\"\u7b49\u4e8e2\uff0c\"sum\"\u7b49\u4e8e3\u5904\uff0c\u6210\u529f\u505c\u4f4f\n(gdb) info b\nNum     Type           Disp Enb Address            What\n1       breakpoint     keep y   0x000000000040112a in main() at main.cpp:5\n        breakpoint already hit 1 time\n2       hw watchpoint  keep y                      sum\n        stop only if times &gt;= 2\n        breakpoint already hit 1 time\n</code></pre>"},{"location":"booknotes/cpp_debug/01/#_7","title":"\u6539\u53d8\u6267\u884c\u53ca\u5176\u526f\u4f5c\u7528","text":"<p>\u8c03\u8bd5\u5668\u9664\u4e86\u53ef\u4ee5\u7528\u6765\u89c2\u5bdf\u88ab\u8ffd\u8e2a\u7684\u8fdb\u7a0b\u72b6\u6001\uff0c\u8fd8\u80fd\u591f\u6539\u53d8\u88ab\u8c03\u8bd5\u8fdb\u7a0b\u7684\u72b6\u6001\uff0c\u4ece\u800c\u6539\u53d8\u5176\u672c\u6765\u9884\u8bbe\u7684\u6267\u884c\u8def\u5f84\u3002\u5176\u4e2d\uff0c\u6700\u76f4\u63a5\u7684\u65b9\u5f0f\u662f\u6539\u53d8\u53d8\u91cf\u7684\u503c\u3002\u4f8b\u5982\uff0c\u4e0b\u9762\u7684\u547d\u4ee4\u5c06\u53d8\u91cf<code>gFlags</code>\u7684\u503c\u8bbe\u7f6e\u4e3a5\uff1a <pre><code>(gdb) set var gFlags=5\n</code></pre></p> <p>\u4e0b\u9762\u7684\u4ee3\u7801\uff0c\u8c03\u8bd5\u5668\u8c03\u7528\u4e86\u51fd\u6570<code>malloc</code>\u6765\u5206\u914d\u4e00\u4e2a8\u5b57\u8282\u7684\u5185\u5b58\u5757\uff0c\u5e76\u6253\u5370\u51fa\u8fd4\u56de\u7684\u5185\u5b58\u5730\u5740\uff1a <pre><code>(gdb) print /x malloc(8)\n     $1 = 0x501010\n</code></pre></p> <p>\u4e0b\u9762\u7684\u6761\u4ef6\u65ad\u70b9\u5c06\u542f\u7528\u4e34\u65f6\u8ddf\u8e2a\u548c\u65e5\u5fd7\u8bb0\u5f55\uff0c\u6bcf\u6b21\u53d8\u91cf<code>sum</code>\u7684\u503c\u53d1\u751f\u6539\u53d8\u65f6\uff0cGDB\u547d\u4ee4\u90fd\u4f1a\u8c03\u7528<code>Logme</code>\u51fd\u6570\u5c06\u503c\u6253\u5370\u5230\u6587\u4ef6\u4e2d\u3002\u4f46\u662f\u7531\u4e8e<code>Logme</code>\u51fd\u6570\u4e00\u76f4\u8fd4\u56de\u96f6\uff0c\u6240\u4ee5\u7a0b\u5e8f\u5e76\u4e0d\u4f1a\u4e2d\u65ad\u3002 <pre><code>(gdb) watch sum if Logme(sum)&gt;0\n</code></pre></p> <p>\"set_var\"\u4f8b\u5b50\u5c55\u793a\u4e86\u5982\u4f55\u5229\u7528<code>set var</code>\u547d\u4ee4\u6539\u53d8\u53d8\u91cf\u7684\u503c\uff0c\u5e76\u5229\u7528<code>watch</code>\u547d\u4ee4\u8bb0\u5f55<code>sum</code>\u503c\u7684\u53d8\u5316\u60c5\u51b5\uff1a</p> <pre><code>sh&gt; make debug\n# GDB\u4f1a\u6267\u884c\u4e0b\u9762\u4e24\u6761\u6307\u4ee4\n# (gdb) set var gFlags=5\n# (gdb) watch sum if Logme(sum)&gt;0\n...\n# \u8c03\u5f0f\u7ed3\u675f\u540e\uff0c\u5728\"test.log\"\u4e2d\uff0cgFlags\u7684\u503c\u662f5\u800c\u4e0d\u662f0\uff0c\n# var\u8bb0\u5f55\u4e86sum\u53d8\u91cf\u7684\u503c\u53d8\u5316\u8fc7\u7a0b\nsh&gt; cat test.log\ngFlags=5, var=1\ngFlags=5, var=3\ngFlags=5, var=6\ngFlags=5, var=10\n</code></pre>"},{"location":"booknotes/cpp_debug/02/","title":"\u5806\u6570\u636e\u7ed3\u6784","text":"<p>\u300a\u9ad8\u6548C/C++\u8c03\u8bd5\u300b - \u4e25\u7426\uff0c\u7b2c\u4e8c\u7ae0\u7684\u8bfb\u4e66\u7b14\u8bb0\uff0c\u672c\u6587\u4e2d\u7684\u6240\u6709\u4ee3\u7801\u53ef\u5728GitHub\u4ed3\u5e93\u4e2d\u627e\u5230</p>"},{"location":"booknotes/cpp_debug/02/#_2","title":"\u7406\u89e3\u5185\u5b58\u7ba1\u7406\u5668","text":""},{"location":"booknotes/cpp_debug/05/","title":"\u4f18\u5316\u540e\u7684\u4e8c\u8fdb\u5236","text":"<p>\u300a\u9ad8\u6548C/C++\u8c03\u8bd5\u300b - \u4e25\u7426\uff0c\u7b2c\u4e94\u7ae0\u7684\u8bfb\u4e66\u7b14\u8bb0\uff0c\u672c\u6587\u4e2d\u7684\u6240\u6709\u4ee3\u7801\u53ef\u5728GitHub\u4ed3\u5e93\u4e2d\u627e\u5230</p>"},{"location":"booknotes/cpp_debug/05/#_2","title":"\u8c03\u8bd5\u7248\u548c\u53d1\u884c\u7248\u7684\u533a\u522b","text":"<p>\u8c03\u8bd5\u7248\u548c\u53d1\u884c\u7248\u7684\u5177\u4f53\u533a\u522b\u5982\u4e0b\uff1a</p> <ul> <li>\u5185\u5b58\u5206\u914d\u7b97\u6cd5\u4e0d\u540c<ul> <li>Windows\u8c03\u8bd5\u7248\u53ef\u80fd\u5206\u914d\u6bd4\u53d1\u884c\u7248\u66f4\u591a\u7684\u5b57\u8282\uff0c\u4ece\u800c\u63a9\u76d6\u4e86\u7528\u6237\u5185\u5b58\u6ea2\u51fa\u7684\u95ee\u9898</li> </ul> </li> <li>\u7531\u4e8e\u6761\u4ef6\u7f16\u8bd1\u5bfc\u81f4\u6267\u884c\u8bed\u53e5\u7684\u4e0d\u540c<ul> <li>\u4f8b\u5982\uff0c<code>assert</code>\u8bed\u53e5\u5c31\u53ea\u5728\u8c03\u8bd5\u7248\u4e2d\u751f\u6548</li> </ul> </li> <li>\u5c40\u90e8\u53d8\u91cf\u548c\u51fd\u6570\u53c2\u6570\u7684\u5b58\u50a8\u4f4d\u7f6e\u53ef\u80fd\u4f1a\u6709\u6240\u4e0d\u540c<ul> <li>\u4f18\u5316\u5668\u4f1a\u5c3d\u53ef\u80fd\u5730\u5229\u7528\u5bc4\u5b58\u5668\uff0c\u800c\u8c03\u8bd5\u7248\u603b\u4f1a\u4e3a\u5c40\u90e8\u53d8\u91cf\u548c\u53c2\u6570\u5206\u914d\u6808\u5185\u5b58</li> <li>\u4f8b\u5982\uff0c\u5bf9\u4e8e\u672a\u521d\u59cb\u5316\u53d8\u91cf\u4ec5\u53d1\u884c\u7248\u4e2d\u5b58\u5728\u95ee\u9898\uff0c\u539f\u56e0\u53ef\u80fd\u662f\uff0c\u5728\u8c03\u8bd5\u7248\u4e2d\u8be5\u53d8\u91cf\u5b58\u5728\u6808\u4e0a\uff0c\u800c\u53d1\u884c\u7248\u4e2d\u5b58\u5728\u5bc4\u5b58\u5668\u4e2d\u3002\u6808\u4e0a\u672a\u521d\u59cb\u5316\u7684\u5185\u5b58\u53ef\u80fd\u662f\u4e00\u4e2a\u53ef\u4ee5\u5bb9\u5fcd\u7684\u6570\u503c\uff0c\u800c\u5bc4\u5b58\u5668\u4e2d\u539f\u5148\u7684\u503c\u66f4\u52a0\u968f\u673a\uff0c\u56e0\u800c\u66f4\u5bb9\u6613\u53d1\u73b0\u95ee\u9898</li> </ul> </li> <li>\u4f18\u5316\u5668\u4f1a\u4f18\u5316\u4ee3\u7801\u6267\u884c<ul> <li>\u5bf9\u4e8e\u6bd4\u8f83\u6fc0\u8fdb\u7684\u4f18\u5316\u5668\uff0c\u6709\u65f6\u53ef\u80fd\u4f1a\u56e0\u6539\u53d8\u4e86\u4ee3\u7801\u6267\u884c\u987a\u5e8f\uff0c\u800c\u4ea7\u751f\u4e0d\u671f\u671b\u7684\u7ed3\u679c</li> </ul> </li> </ul>"},{"location":"booknotes/cpp_debug/05/#_3","title":"\u8c03\u8bd5\u4f18\u5316\u4ee3\u7801\u7684\u6311\u6218","text":"<p>\u8c03\u8bd5\u4f18\u5316\u7a0b\u5e8f\u6700\u5177\u6311\u6218\u6027\u7684\u90e8\u5206\u53ef\u80fd\u662f\u68c0\u67e5\u5c40\u90e8\u53d8\u91cf\u548c\u51fd\u6570\u53c2\u6570\u7684\u503c\u3002\u6839\u636e\u51fd\u6570\u7684\u590d\u6742\u7a0b\u5ea6\u3001\u4f18\u5316\u7ea7\u522b\u7684\u9009\u62e9\u548c\u7f16\u8bd1\u5668\u7684\u7279\u5b9a\u5b9e\u73b0\uff0c\u8c03\u8bd5\u5668\u53ef\u80fd\u5728\u67d0\u4e9b\u4e0a\u4e0b\u6587\u4e2d\u62d2\u7edd\u663e\u793a\u67d0\u4e9b\u5c40\u90e8\u53d8\u91cf\u7684\u503c\u6216\u6253\u5370\u5904\u5b8c\u5168\u9519\u8bef\u7684\u503c\u3002\u5b83\u4e0e\u4f18\u5316\u5668\u653e\u7f6e\u5c40\u90e8\u53d8\u91cf\u7684\u4f4d\u7f6e\u4ee5\u53ca\u5b83\u4eec\u5728\u7a0b\u5e8f\u8fd0\u884c\u65f6\u5982\u4f55\u66f4\u65b0\u6709\u5f88\u5927\u5173\u7cfb\uff1a</p> <ul> <li>\u4f18\u5316\u540e\u7684\u7a0b\u5e8f\u4e0d\u4e00\u5b9a\u6bcf\u6b21\u90fd\u66f4\u65b0\u5c40\u90e8\u53d8\u91cf\u5728\u5185\u5b58\u4e2d\u7684\u503c(\u6709\u53ef\u80fd\u5728\u5bc4\u5b58\u5668\u95f4\u64cd\u4f5c)\uff0c\u5bfc\u81f4\u5185\u5b58\u4f4d\u7f6e\u4e0d\u53cd\u5e94\u5f53\u524d\u4f4d\u7f6e\u7684\u503c</li> <li>\u7531\u4e8e\u6267\u884c\u987a\u5e8f\u7684\u4f18\u5316\uff0c\u5bfc\u81f4\u5c40\u90e8\u53d8\u91cf\u7684\u4fee\u6539\u65f6\u95f4\u53ef\u80fd\u548c\u6e90\u4ee3\u7801\u4e0d\u4e00\u81f4</li> <li>\u6ca1\u6709\u4efb\u4f55\u526f\u4f5c\u7528\u7684\u5c40\u90e8\u53d8\u91cf\u53ef\u80fd\u88ab\u4f18\u5316\u5668\u5220\u9664</li> </ul> <p>\u4e0e\u5c40\u90e8\u53d8\u91cf\u548c\u51fd\u6570\u53c2\u6570\u4e0d\u540c\uff0c\u5168\u5c40\u53d8\u91cf\u4e0d\u4f1a\u53d7\u5230\u4f18\u5316\u7684\u4efb\u4f55\u5f71\u54cd\uff0c\u56e0\u4e3a\u5168\u5c40\u53d8\u91cf\u5177\u6709\u56fa\u5b9a\u7684\u5185\u5b58\u4f4d\u7f6e\u3002</p> <p>\u65e0\u8bba\u662f\u53d1\u884c\u7248\u8fd8\u662f\u8c03\u8bd5\u7248\uff0c\u90fd\u5efa\u8bae\u603b\u662f\u6253\u5f00\u751f\u6210\u8c03\u8bd5\u7b26\u53f7\u7684\u7f16\u8bd1\u9009\u9879\uff0c\u5373<code>-g</code>\u7f16\u8bd1\u9009\u9879\u3002</p>"},{"location":"booknotes/cpp_debug/05/#_4","title":"\u6c47\u7f16\u4ee3\u7801\u4ecb\u7ecd","text":"<p>\u4e0b\u8868\u603b\u7ed3\u4e86x86-64\u5bc4\u5b58\u5668\u662f\u5982\u4f55\u7528\u4e8e\u53c2\u6570\u4f20\u9012\u548c\u8fd4\u56de\u503c\u7684\u3002</p> \u5bc4\u5b58\u5668 \u7528\u6cd5 \u7531\u88ab\u8c03\u7528\u8005\u4fdd\u5b58 rax \u4e34\u65f6\u5bc4\u5b58\u5668\uff0c\u7b2c1\u4e2a\u8fd4\u56de\u503c\uff0c\u53ef\u53d8\u53c2\u6570\u65f6SSE\u5bc4\u5b58\u5668\u7684\u4e2a\u6570 No rbx \u57fa\u5730\u5740 Yes rcx \u7b2c4\u4e2a\u6574\u6570\u53c2\u6570 No rdx \u7b2c3\u4e2a\u6574\u6570\u53c2\u6570\uff0c\u7b2c2\u4e2a\u8fd4\u56de\u503c No rsp \u6808\u6307\u9488\uff08\u6307\u5411\u6808\u9876\uff0c\u6700\u4f4e\u5730\u5740\uff09 Yes rbp \u6808\u5e27\u6307\u9488\uff08\u6307\u5411\u5f53\u524d\u51fd\u6570\u6808\u5e27\u5f00\u59cb\u7684\u5730\u65b9\uff09 Yes rsi \u7b2c2\u4e2a\u6574\u6570\u53c2\u6570 No rdi \u7b2c1\u4e2a\u6574\u6570\u53c2\u6570 No r8 \u7b2c5\u4e2a\u6574\u6570\u53c2\u6570 No r9 \u7b2c6\u4e2a\u6574\u6570\u53c2\u6570 No r10 \u4f20\u9012\u51fd\u6570\u9759\u6001\u94fe\u63a5\u53c2\u6570 No r11 \u4e34\u65f6\u5bc4\u5b58\u5668 No r12 ~ r15 \u4e34\u65f6\u5bc4\u5b58\u5668 Yes xmm0 ~ xmm7 \u4f20\u9012\u6d6e\u70b9\u6570\u53c2\u6570 No xmm8 ~ xmm15 \u4e34\u65f6\u5bc4\u5b58\u5668 No mmx0 ~ mxx7 \u4e34\u65f6\u5bc4\u5b58\u5668 No st0, st1 \u4e34\u65f6\u5bc4\u5b58\u5668\uff0c\u8fd4\u56de<code>long double</code>\u7c7b\u578b No st2 ~ st7 \u4e34\u65f6\u5bc4\u5b58\u5668 No fs \u7ebf\u7a0b\u7279\u6709\u5bc4\u5b58\u5668 No"},{"location":"booknotes/cpp_debug/05/#_5","title":"\u6c47\u7f16\u7a0b\u5e8f\u7684\u7ed3\u6784","text":"<p>\u6240\u6709\u51fd\u6570\u7684\u5f00\u5934\u548c\u7ed3\u5c3e\u90fd\u975e\u5e38\u76f8\u4f3c\uff0c\u5b83\u4eec\u5206\u522b\u88ab\u79f0\u4e3a\u51fd\u6570\u7684\u5e8f\u8a00\uff08Prologue\uff09\u548c\u7ed3\u8bed\uff08Epilog\uff09\u3002\u51fd\u6570\u5e8f\u9a8c\u7ed9\u88ab\u8c03\u7528\u51fd\u6570\u8bbe\u7f6e\u4e00\u4e2a\u6808\u5e27\uff0c\u800c\u7ed3\u8bed\u505a\u76f8\u53cd\u7684\u4e8b\u60c5\uff0c\u91ca\u653e\u6808\u5e27\u5e76\u8fd4\u56de\u5230\u524d\u4e00\u4e2a\u8c03\u7528\u51fd\u6570\u7684\u6808\u5e27\u3002\u5178\u578b\u7684\u5e8f\u8a00\u7684\u7247\u6bb5\u5982\u4e0b\uff1a</p> <pre><code>pushq %rbp          # \u5c06\u5f53\u524d\u51fd\u6570\u7684\u6808\u5e27\u6307\u9488\u5165\u6808\u4fdd\u5b58\nmovq %rsp, %rbp     # \u5c06\u6808\u5e27\u6307\u9488\u8ddf\u65b0\u4e3a\u6808\u9876\u4f4d\u7f6e\uff0c\u4e3a\u88ab\u8c03\u7528\u51fd\u6570\u6808\u5f00\u59cb\u7684\u5730\u65b9\nsubq $56, %rsp      # \u5c06\u6808\u6307\u9488\u4e0b\u79fb56\u5b57\u8282\uff0c\u4e3a\u88ab\u8c03\u7528\u51fd\u6570\u5206\u914d\u4e8656\u5b57\u8282\u7684\u6808\u7a7a\u95f4\n</code></pre> <p>\u4ee5\u4e0b\u9762\u7684\u4ee3\u7801\"prologue\"\u4e3a\u4f8b\uff1a</p> <pre><code>#include &lt;stdio.h&gt;\n\nint f(int num)\n{\n   return num;\n}\n\nint main(int argc, char **argv)\n{\n   f(5);\n}\n</code></pre> <p>\u5176\u6c47\u7f16\u4ee3\u7801\u5982\u4e0b\uff1a</p> <pre><code>0000000000000000 &lt;f&gt;:\n#include &lt;stdio.h&gt;\n\nint f(int num)\n{\n   0:   f3 0f 1e fa             endbr64 \n   4:   55                      push   %rbp\n   5:   48 89 e5                mov    %rsp,%rbp\n   8:   89 7d fc                mov    %edi,-0x4(%rbp)\n   return num;\n   b:   8b 45 fc                mov    -0x4(%rbp),%eax\n}\n   e:   5d                      pop    %rbp\n   f:   c3                      ret    \n\n0000000000000010 &lt;main&gt;:\n\nint main(int argc, char **argv)\n{\n  10:   f3 0f 1e fa             endbr64 \n  14:   55                      push   %rbp\n  15:   48 89 e5                mov    %rsp,%rbp\n  18:   48 83 ec 10             sub    $0x10,%rsp\n  1c:   89 7d fc                mov    %edi,-0x4(%rbp)\n  1f:   48 89 75 f0             mov    %rsi,-0x10(%rbp)\n   f(5);\n  23:   bf 05 00 00 00          mov    $0x5,%edi\n  28:   e8 00 00 00 00          call   2d &lt;main+0x1d&gt;\n  2d:   b8 00 00 00 00          mov    $0x0,%eax\n}\n  32:   c9                      leave  \n  33:   c3                      ret    \n</code></pre> <p><code>main</code>\u51fd\u6570\u5728\u8c03\u7528<code>f(5)</code>\u4e4b\u524d\uff0c\u505a\u4e86\u5982\u4e0b\u7684\u4e8b\u60c5\uff1a</p> <pre><code>push   %rbp                 # \u5165\u6808\u4fdd\u5b58\u6808\u5e27\u6307\u9488\nmov    %rsp,%rbp            # \u4e3af()\u51fd\u6570\u8bbe\u7f6e\u6808\u5e27\u6808\u5e27\nsub    $0x10,%rsp           # \u4e3af()\u51fd\u6570\u5206\u914d16\u5b57\u8282\u6808\u7a7a\u95f4\nmov    %edi,-0x4(%rbp)      # \u5165\u6808\u4fdd\u5b58edi\u5bc4\u5b58\u5668\uff0c\u4e3a\u4f20\u9012\u7b2c1\u4e2a\u53c2\u6570\nmov    %rsi,-0x10(%rbp)     # \u5165\u6808\u4fdd\u5b58rsi\u5bc4\u5b58\u5668\uff0c\u4e3a\u4f20\u9012\u7b2c2\u4e2a\u53c2\u6570\nmov    $0x5,%edi            # \u7b2c\u4e00\u4e2a\u53c2\u6570\u7684\u503c\u4e3a5\uff0c\u901a\u8fc7edi\u5bc4\u5b58\u5668\u4f20\u9012\ncall   2d &lt;main+0x1d&gt;       # \u8c03\u7528f()\u51fd\u6570\n</code></pre> <p><code>f</code>\u51fd\u6570\u5728\u8fd4\u56de\u4e4b\u524d\uff0c\u505a\u4e86\u5982\u4e0b\u7684\u4e8b\u60c5\uff1a</p> <pre><code>mov    -0x4(%rbp),%eax      # \u5c06\u8fd4\u56de\u503c\u5199\u5165eax\u5bc4\u5b58\u5668\npop    %rbp                 # \u6062\u590drbp\u5bc4\u5b58\u5668\u4e3amain\u51fd\u6570\u7684\u6808\u5e27\u6307\u9488\uff0c\u6b64\u6808\u5e27\u662f\u5728\u51fd\u6570\u5e8f\u8a00\u4e2d\u5165\u6808\u7684\nret                         # \u4ecef\u51fd\u6570\u8fd4\u56de\u5230main\u51fd\u6570\n</code></pre>"},{"location":"booknotes/cpp_debug/05/#_6","title":"\u51fd\u6570\u53c2\u6570\u4f20\u9012","text":"<p>\u4e0b\u9762\u7528\u4e00\u4e2a\u4f8b\u5b50\uff0c\u7b2c\u4e94\u7ae0\u7684\u8bfb\u4e66\u7b14\u8bb0\uff0c\u672c\u6587\u4e2d\u7684\u6240\u6709\u4ee3\u7801\u53ef\u5728GitHub\u4ed3\u5e93\uff0c\u4ecb\u7ecd\u4e00\u4e0b\u4e0d\u540c\u7c7b\u578b\u7684\u51fd\u6570\u53c2\u6570\u7684\u4f20\u9012\u8fc7\u7a0b\u3002</p> <pre><code>class POD_STRUCT\n{\npublic:\n   short s;\n   int a;\n   double d;\n};\n\nclass NONE_POD_STRUCT\n{\n   virtual bool Verify() { return true; }\n\npublic:\n   short s;\n   int a;\n   double d;\n};\n\ndouble Sum(int i_int0,\n           int i_int1,\n           POD_STRUCT i_pod,\n           NONE_POD_STRUCT i_nonpod,\n           long *ip_long,\n           float i_float,\n           long i_long0,\n           long i_long1)\n{\n   double result = i_int0 + i_int1 + i_pod.a + i_pod.d + i_pod.s + i_nonpod.a + i_nonpod.d + i_nonpod.s + *ip_long + i_float + i_long0 + i_long1;\n\n   return result;\n}\n\nint main()\n{\n   int a_int_0 = 0;\n   int a_int_1 = 1;\n   POD_STRUCT a_pod = {0, 1, 2.2};\n   NONE_POD_STRUCT a_nonpod;\n   long a_long = 3;\n   float a_float = 4.4;\n\n   double sum = Sum(a_int_0, a_int_1, a_pod, a_nonpod, &amp;a_long, a_float, a_long, a_long);\n\n   return 0;\n}\n</code></pre> <p>\u4f8b\u5b50\u4e2d<code>sum</code>\u51fd\u6570\u901a\u8fc7\u4e0b\u9762\u7684\u5bc4\u5b58\u5668\u6216\u6808\u4f20\u9012\u53c2\u6570\uff1a</p> \u901a\u7528\u5bc4\u5b58\u5668 \u6d6e\u70b9\u5bc4\u5b58\u5668 \u6808\u5e27 %edi: i_int0 %xmm0: i_pod.d %rbp+16: i_long1 %esi: i_int1 %xmm1: i_float %rdx: i_pod.s, i_pod.a %rcx: &amp;i_nonpod %r8: ip_long %r9: i_long0 <p>\u4f18\u5316\u5668\u4f1a\u5c3d\u91cf\u4f7f\u7528\u5bc4\u5b58\u5668\uff08\u800c\u975e\u6808\uff09\u4f20\u9012\u53c2\u6570\uff0c\u56e0\u6b64\u4e0a\u8868\u4e2d\u53ea\u6709<code>i_long1</code>\u53c2\u6570\u901a\u8fc7\u6808\u4f20\u9012\u3002\u4f46\u662f\u5b9e\u9645\u7f16\u8bd1\u5668\u4f1a\u56e0\u4e3a\u4f18\u5316\u7a0b\u5ea6\u4e0d\u540c\uff0c\u800c\u9009\u62e9\u5bc4\u5b58\u5668\u6216\u8005\u6808\u4f20\u9012\u53c2\u6570\u3002</p>"},{"location":"booknotes/cpp_debug/10/","title":"\u5185\u5b58\u8c03\u8bd5\u5de5\u5177","text":"<p>\u300a\u9ad8\u6548C/C++\u8c03\u8bd5\u300b - \u4e25\u7426\uff0c\u7b2c\u5341\u7ae0\u7684\u8bfb\u4e66\u7b14\u8bb0\uff0c\u672c\u6587\u4e2d\u7684\u6240\u6709\u4ee3\u7801\u53ef\u5728GitHub\u4ed3\u5e93\u4e2d\u627e\u5230</p> <p>\u5185\u5b58\u8c03\u8bd5\u5de5\u5177\u5927\u81f4\u5206\u4e09\u7c7b\uff1a</p> <ul> <li>\u586b\u5145\u5b57\u8282\u65b9\u6cd5<ul> <li>\u5728\u6bcf\u4e2a\u5185\u5b58\u5757\u7684\u5f00\u5934\u6216\u672b\u5c3e\u6dfb\u52a0\u989d\u5916\u7684\u586b\u5145\u5b57\u8282\uff0c\u5982\u679c\u8fd9\u4e9b\u586b\u5145\u5b57\u8282\u53d1\u751f\u6539\u53d8\uff0c\u8bf4\u660e\u5b58\u5728\u975e\u6cd5\u7684\u5185\u5b58\u4fee\u6539</li> </ul> </li> <li>\u7cfb\u7edf\u4fdd\u62a4\u9875\u65b9\u6cd5<ul> <li>\u5728\u53ef\u80fd\u88ab\u8d8a\u754c\u7684\u5185\u5b58\u5757\u524d\u540e\u8bbe\u7f6e\u4e00\u4e2a\u4e0d\u53ef\u8bbf\u95ee\u7684\u7cfb\u7edf\u4fdd\u62a4\u9875\uff0c\u5982\u679c\u7a0b\u5e8f\u8bd5\u56fe\u8bbf\u95ee\u53d7\u4fdd\u62a4\u7684\u5185\u5b58\uff0c\u7cfb\u7edf\u5c31\u53ef\u4ee5\u901a\u8fc7\u786c\u4ef6\u68c0\u6d4b\u5230\u8fd9\u79cd\u64cd\u4f5c</li> </ul> </li> <li>\u52a8\u6001\u4e8c\u8fdb\u5236\u5206\u6790<ul> <li>\u5e38\u89c1\u7684\u5185\u5b58\u68c0\u6d4b\u5de5\u5177<code>Valgrind</code>\u548c<code>Google Address Sanitizer</code>\u90fd\u662f\u901a\u8fc7\u6b64\u65b9\u6cd5\u5b9e\u73b0\u7684</li> <li>\u91c7\u7528\u5f71\u5b50\u5185\u5b58\u6765\u8ddf\u8e2a\u7a0b\u5e8f\u7684\u5b9e\u65f6\u5185\u5b58\u4f7f\u7528</li> </ul> </li> </ul>"},{"location":"booknotes/cpp_debug/10/#ptmallocs-malloc_check_","title":"ptmalloc's MALLOC_CHECK_","text":"<p><code>glibc</code>\u5185\u5b58\u7ba1\u7406\u5668<code>ptmalloc</code>\u5b9e\u73b0\u4e86\u4e00\u4e2a\u57fa\u4e8e\u586b\u5145\u7684\u7b80\u5355\u4e14\u975e\u5e38\u6709\u7528\u7684\u8c03\u8bd5\u7279\u6027\u3002\u6211\u4eec\u53ef\u4ee5\u901a\u8fc7\u5c06\u73af\u5883\u53d8\u91cf<code>MALLOC_CHECK_</code>\u8bbe\u7f6e\u4e3a\u975e\u96f6\u6570\u503c\u6765\u542f\u7528\u5b83\u3002\u8be5\u503c\u7684\u6700\u4f4e\u4e24\u4f4d\u51b3\u5b9a\u4e86<code>ptmalloc</code>\u5728\u68c0\u6d4b\u5230\u9519\u8bef\u65f6\u5e94\u91c7\u53d6\u7684\u64cd\u4f5c\uff1a</p> <ul> <li>\u5982\u679c\u6700\u4f4e\u4f4d\u8bbe\u7f6e\u4e86(\u4f8b\u59821)\uff0c\u90a3\u4e48\u6bcf\u6b21\u68c0\u6d4b\u5230\u9519\u8bef\u65f6\u90fd\u4f1a\u5728stderr\u4e0a\u6253\u5370\u9519\u8bef\u6d88\u606f</li> <li>\u5982\u679c\u7b2c\u4e8c\u4f4d\u8bbe\u7f6e\u4e86(\u4f8b\u59822)\uff0c\u90a3\u4e48\u53ea\u8981\u6838\u5fc3\u8f6c\u50a8\u6253\u5f00\uff0c<code>ptmalloc</code>\u5c31\u4f1a\u5728\u68c0\u6d4b\u5230\u9519\u8bef\u65f6\u7ec8\u6b62\u8fdb\u7a0b\u5e76\u751f\u6210\u4e00\u4e2a\u6838\u5fc3\u8f6c\u50a8\u6587\u4ef6</li> </ul> <p>\u4f8b\u5b50\u201cmem_check\u201d\u5c55\u793a\u4e86<code>MALLOC_CHECK_</code>\u73af\u5883\u53d8\u91cf\u7684\u4f5c\u7528\u3002</p> <pre><code>#include &lt;stdio.h&gt;\n\nint main()\n{\n   int *array = new int[100];\n   array[100] = 0; // error\n   delete[] array;\n   return 0;\n}\n</code></pre> <p>\u4e0a\u9762\u7684\u4ee3\u7801\u5b58\u5728\u8d8a\u754c\u8bbf\u95ee\u7684\u95ee\u9898\uff0c\u6b63\u5e38\u6267\u884c\u7a0b\u5e8f\u5e76\u4e0d\u4f1a\u62a5\u4efb\u4f55\u9519\u8bef\uff0c\u4f46\u901a\u8fc7\u8bbe\u7f6e<code>MALLOC_CHECK_</code>\u73af\u5883\u53d8\u91cf\uff0c\u53ef\u68c0\u6d4b\u51fa\u7a0b\u5e8f\u5b58\u5728\u9519\u8bef\uff1a</p> <pre><code>sh&gt; ./main\nsh&gt; env MALLOC_CHECK_=1 ./main\n*** Error in `./main': free(): invalid pointer: 0x000000000149cc20 ***\n# \u7531\u4e8e\u6ca1\u6709\u5f00\u542f\u6838\u5fc3\u5b58\u50a8\uff0c\u6240\u4ee5\u6b64\u5904\u53ea\u662f\u56e0\u5185\u5b58\u975e\u6cd5\u8bbf\u95ee\u800c\u4e2d\u65ad\u4e86\u7a0b\u5e8f\nsh&gt; env MALLOC_CHECK_=2 ./main\nAbort\n</code></pre>"},{"location":"booknotes/cpp_debug/10/#google-address-sanitizer","title":"Google Address Sanitizer","text":"<p>Google Address Sanitizer(\u901a\u5e38\u7b80\u79f0\u4e3a<code>ASan</code>)\u662f\u4e00\u4e2a\u5feb\u901f\u7684\u5185\u5b58\u9519\u8bef\u68c0\u6d4b\u5668\uff0c\u5b83\u80fd\u53d1\u73b0\u5982\u4e0b\u95ee\u9898\uff1a</p> <ul> <li>\u5185\u5b58\u6cc4\u6f0f</li> <li>\u7f13\u51b2\u533a\u6ea2\u51fa</li> <li>\u91ca\u653e\u540e\u4f7f\u7528</li> <li>\u4f7f\u7528\u672a\u521d\u59cb\u5316\u7684\u5185\u5b58</li> <li>\u7a7a\u6307\u9488\u5f15\u7528</li> <li>\u6808\u7f13\u51b2\u6ea2\u51fa</li> </ul> <p>\u4e3a\u4e86\u4f7f\u7528<code>ASan</code>\uff0c\u9700\u8981\u5728\u7f16\u8bd1\u65f6\u52a0\u4e0a<code>-fsanitize=address</code>\u6807\u5fd7\uff0c\u540c\u65f6\u52a0\u4e0a<code>-g</code>\u751f\u6210\u8c03\u8bd5\u4fe1\u606f\u4ee5\u65b9\u4fbf<code>ASan</code>\u6253\u5370\u9519\u8bef\u62a5\u544a\u3002</p> <p>\u4e0a\u9762\u7684\u4f8b\u5b50\u201cmem_check\u201d\u540c\u6837\u53ef\u4ee5\u7528<code>ASan</code>\u627e\u5230\u6570\u7ec4\u8d8a\u754c\u7684\u95ee\u9898(\u53d1\u751f\u5728<code>main.cpp</code>\u7684\u7b2c\u516d\u884c)\uff1a</p> <pre><code>g++ -fsanitize=address -g main.cpp -o main\n./main\n=================================================================\n==101388==ERROR: AddressSanitizer: heap-buffer-overflow on address 0x6140000001d0 at pc 0x0000004011ca bp 0x7ffd8bc52d20 sp 0x7ffd8bc52d18\nWRITE of size 4 at 0x6140000001d0 thread T0\n    #0 0x4011c9 in main /lan/cva/hsv-apfw/yuxiangw/GitHub/starter-demo/effective_debugging/malloc_check/main.cpp:6\n    #1 0x2b98af7ad3d4 in __libc_start_main (/lib64/libc.so.6+0x223d4)\n    #2 0x4010c8  (/lan/cva/hsv-apfw/yuxiangw/GitHub/starter-demo/effective_debugging/malloc_check/main+0x4010c8)\n\n0x6140000001d0 is located 0 bytes to the right of 400-byte region [0x614000000040,0x6140000001d0)\nallocated by thread T0 here:\n    #0 0x2b98aeb1b37f in operator new[](unsigned long) /tmp/gcc-v9.3.0p7/gcc.source/libsanitizer/asan/asan_new_delete.cc:107\n    #1 0x401183 in main /lan/cva/hsv-apfw/yuxiangw/GitHub/starter-demo/effective_debugging/malloc_check/main.cpp:5\n    #2 0x2b98af7ad3d4 in __libc_start_main (/lib64/libc.so.6+0x223d4)\n\nSUMMARY: AddressSanitizer: heap-buffer-overflow /lan/cva/hsv-apfw/yuxiangw/GitHub/starter-demo/effective_debugging/malloc_check/main.cpp:6 in main\nShadow bytes around the buggy address:\n  0x0c287fff7fe0: 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00\n  0x0c287fff7ff0: 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00\n  0x0c287fff8000: fa fa fa fa fa fa fa fa 00 00 00 00 00 00 00 00\n  0x0c287fff8010: 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00\n  0x0c287fff8020: 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00\n=&gt;0x0c287fff8030: 00 00 00 00 00 00 00 00 00 00[fa]fa fa fa fa fa\n  0x0c287fff8040: fa fa fa fa fa fa fa fa fa fa fa fa fa fa fa fa\n  0x0c287fff8050: fa fa fa fa fa fa fa fa fa fa fa fa fa fa fa fa\n  0x0c287fff8060: fa fa fa fa fa fa fa fa fa fa fa fa fa fa fa fa\n  0x0c287fff8070: fa fa fa fa fa fa fa fa fa fa fa fa fa fa fa fa\n  0x0c287fff8080: fa fa fa fa fa fa fa fa fa fa fa fa fa fa fa fa\nShadow byte legend (one shadow byte represents 8 application bytes):\n  Addressable:           00\n  Partially addressable: 01 02 03 04 05 06 07 \n  Heap left redzone:       fa\n  Freed heap region:       fd\n  Stack left redzone:      f1\n  Stack mid redzone:       f2\n  Stack right redzone:     f3\n  Stack after return:      f5\n  Stack use after scope:   f8\n  Global redzone:          f9\n  Global init order:       f6\n  Poisoned by user:        f7\n  Container overflow:      fc\n  Array cookie:            ac\n  Intra object redzone:    bb\n  ASan internal:           fe\n  Left alloca redzone:     ca\n  Right alloca redzone:    cb\n  Shadow gap:              cc\n==101388==ABORTING\n</code></pre>"},{"location":"booknotes/csapp/01/","title":"\u8ba1\u7b97\u673a\u6f2b\u6e38","text":"<p>\u300a\u6df1\u5165\u7406\u89e3\u8ba1\u7b97\u673a\u7cfb\u7edf\u300b - Randal E. Bryant - \u7b2c\u4e09\u7248\uff0c\u7b2c\u4e00\u7ae0\u7684\u8bfb\u4e66\u7b14\u8bb0\uff0c\u672c\u6587\u4e2d\u7684\u6240\u6709\u4ee3\u7801\u53ef\u5728GitHub\u4ed3\u5e93\u4e2d\u627e\u5230</p>"},{"location":"booknotes/csapp/01/#_2","title":"\u4ec0\u4e48\u662f\u4fe1\u606f","text":"<p>\u7cfb\u7edf\u4e2d\u6240\u6709\u7684\u4fe1\u606f\u90fd\u662f\u7531\u4e00\u4e32\u6bd4\u7279\u8868\u793a\u7684\u3002\u4f8b\u5982\uff0c\u4e00\u4e2a\u7b80\u5355\u7684\"hello world\"\u7a0b\u5e8f\uff0c\u5728\u8ba1\u7b97\u673a\u4e2d\u88ab\u5b58\u50a8\u4e3a\u4e00\u4e32\u6570\u5b57\u3002\u8ba1\u7b97\u673a\u5728\u4e0d\u540c\u7684\u4e0a\u4e0b\u6587\u4e2d\uff0c\u5bf9\u540c\u6837\u7684\u4e00\u4e32\u6570\u5b57\u53ef\u80fd\u8868\u793a\u4e3a\u4e00\u4e2a\u6574\u6570\u3001\u6d6e\u70b9\u6570\u3001\u5b57\u7b26\u4e32\u6216\u8005\u673a\u5668\u6307\u4ee4\u3002 <pre><code>&gt; hd main.c\n00000000  23 69 6e 63 6c 75 64 65  20 3c 73 74 64 69 6f 2e  |#include &lt;stdio.|\n00000010  68 3e 0a 0a 69 6e 74 20  6d 61 69 6e 28 29 0a 7b  |h&gt;..int main().{|\n00000020  0a 20 20 20 70 72 69 6e  74 66 28 22 68 65 6c 6c  |.   printf(\"hell|\n00000030  6f 2c 20 77 6f 72 6c 64  5c 6e 22 29 3b 0a 20 20  |o, world\\n\");.  |\n00000040  20 72 65 74 75 72 6e 20  30 3b 0a 7d 0a           | return 0;.}.|\n0000004d\n</code></pre></p> <p>\u56e0\u6b64\uff0c\u8ba1\u7b97\u673a\u4e2d\u7684\u4fe1\u606f\uff0c\u53ef\u4ee5\u7406\u89e3\u4e3a\u4f4d+\u4e0a\u4e0b\u6587\u3002\u5f53\u6211\u4eec\u89e3\u91ca\u67d0\u4e2a\u4fe1\u606f\u65f6\uff0c\u4e0d\u4ec5\u8981\u77e5\u9053\u5b83\u662f\u4ec0\u4e48\uff0c\u8fd8\u8981\u77e5\u9053\u5b83\u5904\u4e8e\u4ec0\u4e48\u73af\u5883\u3002</p>"},{"location":"booknotes/csapp/01/#_3","title":"\u5982\u4f55\u8ba9\u7a0b\u5e8f\u8dd1\u8d77\u6765","text":"<p>\u4ee5\"hello world\"\u7a0b\u5e8f\u4e3a\u4f8b\uff0c\u8ba1\u7b97\u673a\u662f\u5982\u4f55\u901a\u8fc7\u4e00\u4e32\u6570\u5b57\uff0c\u5728\u5c4f\u5e55\u4e0a\u663e\u5f0f\"hello, world\"\u5b57\u6837\u7684\uff1f</p>"},{"location":"booknotes/csapp/01/#_4","title":"\u751f\u6210\u53ef\u6267\u884c\u6587\u4ef6","text":"<p>\u4e0a\u56fe\u663e\u5f0f\u4e86\u4ece\u6e90\u6587\u4ef6\"hello.c\"\u5230\u53ef\u6267\u884c\u6587\u4ef6\"hello\"\u7684\u8fc7\u7a0b\uff0c\u4e3b\u8981\u5305\u62ec\uff1a</p> <ul> <li>\u9884\u5904\u7406\u9636\u6bb5</li> <li>\u7f16\u8bd1\u9636\u6bb5</li> <li>\u6c47\u7f16\u9636\u6bb5</li> <li>\u94fe\u63a5\u9636\u6bb5</li> </ul> <p>\u66f4\u8be6\u7ec6\u7684\u8fc7\u7a0b\uff0c\u53ef\u53c2\u8003\u535a\u6587\u300a\u7a0b\u5e8f\u5458\u7684\u81ea\u6211\u4fee\u517b-\u7f16\u8bd1\u300b\u3002</p>"},{"location":"booknotes/csapp/01/#_5","title":"\u8fd0\u884c\u53ef\u6267\u884c\u6587\u4ef6","text":"<p>\u4e0a\u56fe\u663e\u5f0f\u4e86\u4e00\u4e2a\u5b8c\u6574\u7684\u8ba1\u7b97\u673a\u7cfb\u7edf\u9700\u8981\u5305\u62ec\u7684\u786c\u4ef6\uff0c\u5927\u81f4\u5206\u4e3a\u56db\u79cd\uff1a</p> <ul> <li>\u603b\u7ebf(Bus)</li> <li>I/O\u8bbe\u5907(Display, Disk)</li> <li>\u4e3b\u5b58(Memory)</li> <li>\u5904\u7406\u5668(CPU)</li> </ul> <p>\u6700\u521d\uff0c\u53ef\u6267\u884c\u6587\u4ef6\u5b58\u5728\u4e0e\u78c1\u76d8(Disk)\u4e0a\u3002\u5f53\u8fd0\u884c\u7a0b\u5e8f\u540e\uff0c\u4f1a\u5728\u663e\u793a\u5668(Display)\u4e0a\u51fa\u73b0\"hello, world\"\u5b57\u6837\u3002\u5927\u81f4\u8fc7\u7a0b\u5982\u4e0b\uff1a</p> <ul> <li>\u5f53\u6211\u4eec\u6572\u51fb\u952e\u76d8\u8f93\u5165\u547d\u4ee4\uff0c\u542f\u52a8\u53ef\u6267\u884c\u6587\u4ef6\u540e</li> <li>\u5728\u78c1\u76d8\u4e0a\u7684\u53ef\u6267\u884c\u6587\u4ef6\u901a\u8fc7\u603b\u7ebf\uff0c\u88ab\u52a0\u8f7d\u5230\u4e86\u4e3b\u5b58</li> <li>\u5904\u7406\u5668\u6267\u884c\u4e3b\u5b58\u4e2d\u7684\u4e00\u6761\u6761\u547d\u4ee4\uff0c\u6700\u7ec8\u5c06\"hello, world\"\u5b57\u7b26\u4e32\u5199\u5165\u5bc4\u5b58\u5668\u6587\u4ef6</li> <li>\u603b\u7ebf\u518d\u4ece\u5bc4\u5b58\u5668\u6587\u4ef6\u4e2d\u590d\u5236\"hello, world\"\u5b57\u7b26\u4e32\u5230\u663e\u5f0f\u5668\uff0c\u6700\u7ec8\u663e\u793a\u5728\u5c4f\u5e55\u4e0a</li> </ul> <p></p> <p>\u7528\u6237\u5728\u7f16\u5199\u5e94\u7528\u7a0b\u5e8f\u7684\u65f6\u5019\uff0c\u5e76\u4e0d\u9700\u8981\u77e5\u9053\u5982\u4f55\u548c\u786c\u4ef6\u6253\u4ea4\u9053\u3002\u90a3\u662f\u56e0\u4e3a\uff0c\u64cd\u4f5c\u7cfb\u7edf\u5c06\u4e0a\u8ff0\u786c\u4ef6\u90fd\u505a\u4e86\u62bd\u8c61\u3002\u5982\u4e0a\u56fe\u6240\u793a\uff0c\u64cd\u4f5c\u7cfb\u7edf\u4f4d\u4e8e\u5e94\u7528\u5c42\u548c\u786c\u4ef6\u5c42\u4e4b\u95f4\u3002\u5f53\u7528\u6237\u5de5\u4f5c\u5728\u5e94\u7528\u5c42\u65f6\uff0c\u4ed6\u53ea\u9700\u8981\u77e5\u9053\u5f53\u524d\u64cd\u4f5c\u7cfb\u7edf\u7684\u5de5\u4f5c\u60c5\u51b5\uff0c\u800c\u65e0\u9700\u77e5\u9053\u5177\u4f53\u8dd1\u5728\u4ec0\u4e48\u786c\u4ef6\u4e0a\u3002\u5bf9\u4e8e\u5e94\u7528\u5c42\u7684\u8f6f\u4ef6\u6765\u8bf4\uff0c</p> <ul> <li>I/O\u8bbe\u5907\u88ab\u62bd\u8c61\u6210\u4e86\u6587\u4ef6(Files)<ul> <li>\u5f53\u9700\u8981\u64cd\u4f5cI/O\u8bbe\u5907\u65f6\uff0c\u53ea\u9700\u8981\u77e5\u9053\u5982\u4f55\u8bfb\u5199\u6587\u4ef6\u5373\u53ef</li> </ul> </li> <li>\u4e3b\u5b58(\u5305\u62ec\u90e8\u5206I/O\u8bbe\u5907)\u88ab\u62bd\u8c61\u6210\u4e86\u865a\u62df\u5730\u5740(Virtual Memory)<ul> <li>\u5f53\u9700\u8981\u8bfb\u5199\u4e3b\u5b58\u65f6\uff0c\u53ea\u9700\u8981\u77e5\u9053\u5982\u4f55\u8bfb\u5199\u865a\u62df\u5730\u5740\u5373\u53ef</li> </ul> </li> <li>\u4e00\u7ec4\u5b8c\u6574\u7684\u786c\u4ef6\u64cd\u4f5c\u88ab\u62bd\u8c61\u6210\u4e86\u8fdb\u7a0b(Process)<ul> <li>\u5f53\u9700\u8981\u5728\u4e0d\u540c\u786c\u4ef6\u64cd\u4f5c\u4e4b\u95f4\u5207\u6362\u65f6\uff0c\u53ea\u9700\u8981\u77e5\u9053\u5982\u4f55\u5207\u6362\u8fdb\u7a0b\u5373\u53ef</li> </ul> </li> </ul> <p>\u5728\u300aOperating System Three Easy Pieces\u300b\u4e00\u4e66\u4e2d\uff0c\u5c31\u5bf9\u64cd\u4f5c\u7cfb\u7edf\u7684\u8fd9\u4e09\u79cd\u62bd\u8c61\u505a\u4e86\u8be6\u7ec6\u7684\u4ecb\u7ecd\uff0c\u611f\u5174\u8da3\u7684\u540c\u5b66\u53ef\u4ee5\u5ef6\u4f38\u9605\u8bfb\u3002</p>"},{"location":"booknotes/csapp/02/","title":"\u4fe1\u606f\u7684\u8868\u793a\u548c\u5904\u7406","text":"<p>\u300a\u6df1\u5165\u7406\u89e3\u8ba1\u7b97\u673a\u7cfb\u7edf\u300b - Randal E. Bryant - \u7b2c\u4e09\u7248\uff0c\u7b2c\u4e8c\u7ae0\u7684\u8bfb\u4e66\u7b14\u8bb0\uff0c\u672c\u6587\u4e2d\u7684\u6240\u6709\u4ee3\u7801\u53ef\u5728GitHub\u4ed3\u5e93\u4e2d\u627e\u5230</p>"},{"location":"booknotes/csapp/02/#_2","title":"\u4fe1\u606f\u5b58\u50a8","text":""},{"location":"booknotes/csapp/02/#_3","title":"\u6570\u636e\u5927\u5c0f","text":"<p>\u4f8b\u5b50\"sizeof\"\u6253\u5370\u4e86\u5e38\u89c1\u7c7b\u578b\u7684\u5927\u5c0f\u3002\u5176\u4e2d\uff0c<code>long</code>\u7c7b\u578b\u572832\u4f4d\u673a\u5668\u4e0a\u662f\"4 bytes\"\uff0c\u572864\u4f4d\u673a\u5668\u4e0a\u662f\"8 bytes\"\u3002</p> <pre><code>&gt; ./main\nchar: 1\nshort: 2\nint: 4\nlong: 8\nlong long: 8\nfloat: 4\ndouble: 8\n</code></pre>"},{"location":"booknotes/csapp/02/#_4","title":"\u5b57\u8282\u987a\u5e8f","text":"<p>\u4f8b\u5b50\"show_bytes\"\u6309\u5b57\u8282\u5927\u5c0f\uff0c\u6253\u5370\u4e86\u4e0d\u540c\u7c7b\u578b\u53d8\u91cf\u7684\u5728\u5185\u5b58\u4e2d\u7684\u503c\u3002 <pre><code>int main()\n{\n    int ival = 0x3039;\n    float fval = (float)ival;\n    int *pval = &amp;ival;\n    show(ival);\n    show(fval);\n    show(pval);\n\n    const char s[] = \"abcd\";\n    show_bytes((byte_pointer)s, sizeof(s));\n    return 0;\n}\n</code></pre> <pre><code>&gt; ./main\n # 0x3039 int\u7c7b\u578b\u7684\u53d8\u91cf\u5728\u5185\u5b58\u4e2d\u7684\u503c\n 39 30 00 00\n # 0x3039 float\u7c7b\u578b\u7684\u53d8\u91cf\u5728\u5185\u5b58\u4e2d\u7684\u503c\n 00 e4 40 46\n # 0x3039 int\u7c7b\u578b\u7684\u6307\u9488\u5728\u5185\u5b58\u4e2d\u7684\u503c\n 50 28 04 ee fe 7f 00 00\n # \"abcd\" \u5b57\u7b26\u4e32\u5728\u5185\u5b58\u4e2d\u7684\u503c\n 61 62 63 64 00\n</code></pre></p> <p>\u4e0a\u9762\u4f8b\u5b50\u4e2d\uff0c\u5b58\u50a8\u5b57\u8282\u987a\u5e8f\u4e3a\u5c0f\u7aef\u6a21\u5f0f\uff0c\u5373\u4f4e\u5b57\u8282\u5b58\u5728\u4f4e\u5730\u5740\u4f4d\u3002</p>"},{"location":"booknotes/csapp/02/#_5","title":"\u79fb\u4f4d\u8fd0\u7b97","text":"\u64cd\u4f5c \u503c \u53c2\u6570x [0110_0011], [1001_0101] x &lt;&lt; 4 [0011_0000], [0101_0000] x &gt;&gt; 4 (\u903b\u8f91\u53f3\u79fb) [0000_0110], [0000_1001] x &gt;&gt; 4 (\u7b97\u672f\u53f3\u79fb) [0000_0110], [1111_1001] <p>\u4e0a\u8868\u663e\u793a\u4e868\u4f4d\u53c2\u6570<code>x</code>\u7684\u4e24\u4e2a\u4e0d\u540c\u7684\u503c\u505a\u4e0d\u540c\u7684\u79fb\u4f4d\u64cd\u4f5c\u5f97\u5230\u7684\u7ed3\u679c\u3002\u9664\u4e86\u9ed1\u4f53\u6761\u76ee\u4e4b\u5916\uff0c\u5176\u4ed6\u7684\u4f4d\u79fb\u64cd\u4f5c\u90fd\u586b\u51450\u3002</p> <p>\u5728C\u8bed\u8a00\u4e2d\uff0c</p> <ul> <li>\u5bf9\u6709\u7b26\u53f7\u6570\uff0c\u4f7f\u7528\u7b97\u672f\u53f3\u79fb</li> <li>\u5bf9\u65e0\u7b26\u53f7\u8bf4\uff0c\u4f7f\u7528\u903b\u8f91\u53f3\u79fb</li> </ul> <p>\u4f8b\u5b50\"right_shift\"\u5206\u522b\u5bf9\u6709\u7b26\u53f7\u6811\u548c\u65e0\u7b26\u53f7\u6570\u8fdb\u7a0b\u4e86\u4f4d\u79fb\u64cd\u4f5c\uff1a <pre><code>void logic_right_shift()\n{\n    printf(\"%s\\n\", __func__);\n    uint8_t i = 0b10010000;\n    uint8_t i2 = i &gt;&gt; 4;\n    std::cout &lt;&lt; \"\\ti: 0b\" &lt;&lt; to_bin_str(i)\n        &lt;&lt; \", (i &gt;&gt; 4): 0b\" &lt;&lt; to_bin_str(i2)\n        &lt;&lt; std::endl;\n}\n\nvoid arithmetic_right_shift()\n{\n    printf(\"%s\\n\", __func__);\n    int8_t i = 0b10010000;\n    int8_t i2 = i &gt;&gt; 4;\n    std::cout &lt;&lt; \"\\ti: 0b\" &lt;&lt; to_bin_str(i)\n        &lt;&lt; \", (i &gt;&gt; 4): 0b\" &lt;&lt; to_bin_str(i2)\n        &lt;&lt; std::endl;\n\n    int8_t j = 0b01010000;\n    int8_t j2 = j &gt;&gt; 4;\n    std::cout &lt;&lt; \"\\ti: 0b\" &lt;&lt; to_bin_str(j)\n        &lt;&lt; \", (i &gt;&gt; 4): 0b\" &lt;&lt; to_bin_str(j2)\n        &lt;&lt; std::endl;\n}\n</code></pre> <pre><code>&gt; ./main\nlogic_right_shift\n        i: 0b10010000, (i &gt;&gt; 4): 0b00001001\narithmetic_right_shift\n        i: 0b10010000, (i &gt;&gt; 4): 0b11111001\n        i: 0b01010000, (i &gt;&gt; 4): 0b00000101\n</code></pre></p>"},{"location":"booknotes/csapp/02/#_6","title":"\u6574\u6570","text":""},{"location":"booknotes/csapp/02/#_7","title":"\u6574\u6570\u8868\u793a","text":"<p>\u5bf9\u4e8e\u65e0\u7b26\u53f7\u6574\u6570\uff0c\u91c7\u7528\u5e38\u89c4\u4e8c\u8fdb\u5236\u7f16\u7801\u3002\u5bf9\u4e8e\u6709\u7b26\u53f7\u6574\u6570\uff0c\u91c7\u7528\u8865\u7801(two's-complement)\u7f16\u7801\uff0c\u5c06\u5b57\u7684\u6700\u9ad8\u6709\u6548\u4f4d\u89e3\u91ca\u4e3a\u8d1f\u6743\u3002\u4e0b\u56fe\u663e\u793a\u4e86\u56db\u4f4d\u4e8c\u8fdb\u5236\u7684\u4e24\u79cd\u6574\u6570\u8868\u793a\u7684\u7ed3\u679c\uff1a</p> <p></p>"},{"location":"booknotes/csapp/02/#_8","title":"\u6574\u6570\u8f6c\u6362","text":"<p>C\u8bed\u8a00\u4e2d\uff0c\u65e0\u7b26\u53f7\u6574\u6570\u548c\u6709\u7b26\u53f7\u6574\u6570\u7684\u89c4\u5219\u662f\uff1a</p> <ul> <li>\u4fdd\u6301\u4f4d\u7f6e\u4e0d\u53d8</li> </ul> <p>\u4f8b\u5b50\"conv\"\u5728\u65e0\u7b26\u53f7\u6570\u548c\u6709\u7b26\u53f7\u6570\u4e4b\u95f4\u8fdb\u884c\u4e86\u8f6c\u6362\uff1a <pre><code>int main()\n{\n   short int v = -12345;\n   unsigned short uv = (unsigned short) v;\n   printf(\"v = %d, uv = %u\\n\", v, uv);\n\n   unsigned short u = 0xFFFF;\n   short int tu = (short int) u;\n   printf(\"u = %u, tu = %d\\n\", u, tu);\n   return 0;\n}\n</code></pre> <pre><code># 53191 + 12345 = 2^16\n# 65535 + 1 = 2^16\n&gt; ./main\nv = -12345, uv = 53191\nu = 65535, tu = -1\n</code></pre></p>"},{"location":"booknotes/csapp/02/#_9","title":"\u6574\u6570\u8fd0\u7b97","text":"<p>\u4e0b\u56fe\u663e\u793a\u4e86\u201c\u65e0\u7b26\u53f7\u52a0\u6cd5\u201d\u548c\u201c\u8865\u7801\u52a0\u6cd5\u201d\u7684\u5404\u79cd\u6ea2\u51fa\u60c5\u51b5\uff1a</p> <ul> <li>\u65e0\u7b26\u53f7\u52a0\u6cd5\u4f1a\u51fa\u73b0\u6b63\u6ea2\u51fa\uff0c\u5bfc\u81f4\u6700\u7ec8\u7ed3\u679c\u5c112^w</li> <li>\u8865\u7801\u52a0\u6cd5\u4f1a\u51fa\u73b0\u6b63\u6ea2\u51fa\u548c\u8d1f\u6ea2\u51fa<ul> <li>\u6b63\u6ea2\u51fa\u4f1a\u4f7f\u7ed3\u679c\u53d8\u4e3a\u8d1f\u6570\uff0c\u5bfc\u81f4\u6700\u7ec8\u7ed3\u679c\u76f8\u5dee2^w</li> <li>\u8d1f\u6ea2\u51fa\u4f1a\u4f7f\u7ed3\u679c\u53d8\u4e3a\u6b63\u6570\uff0c\u5bfc\u81f4\u6700\u7ec8\u7ed3\u679c\u4e5f\u76f8\u5dee2^w</li> </ul> </li> </ul> <p></p>"},{"location":"booknotes/csapp/02/#_10","title":"\u6d6e\u70b9\u6570","text":""},{"location":"booknotes/csapp/02/#ieee","title":"IEEE\u6d6e\u70b9\u8868\u793a","text":"<p>\u5b9a\u70b9\u8868\u793a\u6cd5\u4e0d\u80fd\u5f88\u6709\u6548\u5730\u8868\u793a\u975e\u5e38\u5927\u7684\u6570\u5b57\u3002\u56e0\u6b64\uff0cIEEE\u89c4\u5b9a\u4e86\u6d6e\u70b9\u8868\u793a\u6cd5\uff0c\u7528<code>V=(-1)^s * M * 2^E</code>\u7684\u5f62\u5f0f\u6765\u8868\u793a\u4e00\u5171\u6570\uff1a</p> <ul> <li>\u7b26\u53f7(s)<ul> <li>\u51b3\u5b9a\u8fd9\u4e2a\u6570\u4f7f\u8d1f\u6570\u8fd8\u662f\u6b63\u6570</li> </ul> </li> <li>\u5c3e\u6570(M)<ul> <li>\u4e00\u4e2a\u4e8c\u8fdb\u5236\u5c0f\u6570\uff0c\u8303\u56f4\u662f1-2\u4e4b\u95f4\uff0c\u6216\u80050-1\u4e4b\u95f4</li> </ul> </li> <li>\u9636\u7801(E)<ul> <li>\u5bf9\u6d6e\u70b9\u6570\u52a0\u6743\uff0c\u6743\u91cd\u662f2\u7684E\u6b21\u5e42</li> </ul> </li> </ul> <p>C\u8bed\u8a00\u4e2d\uff0c\u6709\u4e24\u79cd\u6d6e\u70b9\u6570\uff0c\u5b83\u4eec\u7684\u7ed3\u6784\u662f\u4e00\u6837\u7684\uff0c\u533a\u522b\u5728\u4e8e\u5c3e\u6570\u548c\u9636\u7801\u7684\u957f\u5ea6\u4e0d\u540c\uff1a</p> <ul> <li>\u5355\u7cbe\u5ea6\u6d6e\u70b9\u6570(float, 4 bytes)<ul> <li>8\u4f4d\u9636\u7801\u57df\uff0c23\u4f4d\u5c3e\u6570\u57df</li> </ul> </li> <li>\u53cc\u7cbe\u5ea6\u6d6e\u70b9\u6570(double, 8 bytes)<ul> <li>11\u4f4d\u9636\u7801\u57df\uff0c52\u4f4d\u5c3e\u6570\u57df</li> </ul> </li> </ul> <p>\u4e0b\u56fe\u662f\u5355\u7cbe\u5ea6\u6d6e\u70b9\u6570\uff0c\u6839\u636e\u9636\u7801\u7684\u503c\uff0c\u5206\u6210\u7684\u4e09\u79cd\u4e0d\u540c\u60c5\u51b5\uff1a</p> <p></p> <ul> <li>\u89c4\u683c\u5316\u7684\u503c<ul> <li>\u6700\u666e\u904d\u7684\u60c5\u51b5\uff0c\u65e2\u4e0d\u662f\u6700\u5c0f\u7684\u503c\uff0c\u4e5f\u4e0d\u662f\u6700\u5927\u7684\u503c</li> <li>\u9636\u7801\u57df\u8f6c\u6362\u4e3a\u9636\u7801<code>E</code>\u7684\u516c\u5f0f\u662f\uff1a<code>E=e-Bias</code><ul> <li>\u5176\u4e2d\uff0ce\u662fk\u4f4d\u4e8c\u8fdb\u5236\u9636\u7801\u57df\u7684\u503c\uff0cBias\u7b49\u4e8e<code>2^(k-1)-1</code>(\u5355\u7cbe\u5ea6\u662f127\uff0c\u53cc\u7cbe\u5ea6\u662f1023)</li> </ul> </li> <li>\u5c3e\u6570\u57df\u8f6c\u6362\u4f4d\u5c3e\u6570<code>M</code>\u7684\u516c\u5f0f\u662f\uff1a<code>M=1+f</code><ul> <li>\u5176\u4e2d\uff0cf\u662f\u4e8c\u8fdb\u5236\u5c0f\u6570\u5c3e\u6570\u57df\u7684\u503c<code>0.f(n-1)...f1f0</code></li> </ul> </li> </ul> </li> <li>\u975e\u89c4\u683c\u5316\u7684\u503c<ul> <li>\u6570\u503c\u975e\u5e38\u5c0f\u7684\u60c5\u51b5</li> <li>\u9636\u7801\u57df\u5168\u4f4d\u96f6\uff0c\u9636\u7801<code>E</code>\u7684\u8ba1\u7b97\u516c\u5f0f\u662f\uff1a<code>E=1-Bias=2-2^(k-1)</code>(\u5355\u7cbe\u5ea6\u662f-126\uff0c\u53cc\u7cbe\u5ea6\u662f-1022)</li> <li>\u5c3e\u6570\u57df\u8f6c\u6362\u4f4d\u5c3e\u6570<code>M</code>\u7684\u516c\u5f0f\u662f\uff1a<code>M=f</code>\uff0c\u4e0d\u5305\u542b\u9690\u542b\u7684\u5f00\u5934\u76841</li> </ul> </li> <li>\u7279\u6b8a\u503c<ul> <li>\u6570\u503c\u975e\u5e38\u5927\u7684\u60c5\u51b5\uff0c\u6216\u8005\u8868\u793a\u4e0d\u662f\u4e00\u4e2a\u6570</li> <li>\u9636\u7801\u57df\u5168\u4e3a1\uff0c\u4e14\u5c3e\u6570\u57df\u5168\u4e3a\u96f6\u65f6<ul> <li>\u7b26\u53f7\u4f4d<code>s=0</code>\uff0c\u8868\u793a\u6b63\u65e0\u7a77</li> <li>\u7b26\u53f7\u4f4d<code>s=1</code>\uff0c\u8868\u793a\u8d1f\u65e0\u7a77</li> </ul> </li> <li>\u9636\u7801\u57df\u5168\u4e3a1\uff0c\u4e14\u5c3e\u6570\u57df\u4e0d\u5168\u4e3a\u96f6\u65f6<ul> <li>\u8868\u793a\u4e0d\u662f\u4e00\u4e2a\u6570\uff0c\u79f0\u4e3a<code>NAN</code>\uff0c\u4f8b\u5982\uff1a\u221a-1</li> </ul> </li> </ul> </li> </ul> <p>\u4e0b\u8868\u5c55\u793a\u4e86\u5047\u5b9a\u76848\u4f4d\u6d6e\u70b9\u683c\u5f0f\u7684\u793a\u4f8b\uff0c\u5176\u4e2d\u6709<code>k=4</code>\u7684\u9636\u7801\u57df\u548c<code>n=3</code>\u7684\u5c3e\u6570\u57df\u3002\u8868\u88ab\u5206\u6210\u4e86\u4e09\u4e2a\u533a\u57df\uff0c\u63cf\u8ff0\u4e86\u4e92\u4e0d\u91cd\u53e0\u7684\u4e09\u7c7b\u6570\u5b57\uff1a</p> <p></p>"},{"location":"booknotes/csapp/02/#_11","title":"\u820d\u5165","text":"<p>\u56e0\u4e3a\u8868\u793a\u65b9\u6cd5\u9650\u5236\u4e86\u6d6e\u70b9\u6570\u7684\u8303\u56f4\u548c\u7cbe\u5ea6\uff0c\u6240\u4ee5\u6d6e\u70b9\u8fd0\u7b97\u53ea\u80fd\u8fd1\u4f3c\u5730\u8868\u793a\u5b9e\u6570\u8fd0\u7b97\u3002\u5bf9\u4e8e\u503c<code>x</code>\uff0c\u6211\u4eec\u91c7\u7528\u820d\u5165\u8fd0\u7b97\uff0c\u627e\u5230\u201c\u6700\u63a5\u8fd1\u7684\u201d\u5339\u914d\u503c<code>x'</code>\u3002IEEE\u6d6e\u70b9\u683c\u5f0f\u5b9a\u4e49\u4e86\u56db\u79cd\u4e0d\u540c\u7684\u820d\u5165\u65b9\u5f0f\uff0c\u5c06\u4e00\u4e2a\u5c0f\u6570\u820d\u5165\u5230\u6700\u63a5\u8fd1\u7684\u6574\u6570\uff1a</p> \u65b9\u5f0f 1.40 1.60 1.50 2.50 -1.50 \u5411\u5076\u6570\u820d\u5165 1 2 2 2 -2 \u5411\u96f6\u820d\u5165 1 1 1 2 -1 \u5411\u4e0b\u820d\u5165 1 1 1 2 -2 \u5411\u4e0a\u820d\u5165 2 2 2 3 -1"},{"location":"booknotes/csapp/02/#_12","title":"\u6d6e\u70b9\u8fd0\u7b97","text":"<p>\u6d6e\u70b9\u6570\u7531\u4e8e\u820d\u5165\u8fd0\u7b97\u7684\u5b58\u5728\uff0c\u5e76\u4e0d\u9075\u5b88\u666e\u904d\u7684\u7b97\u672f\u5c5e\u6027\uff0c\u5982\u7ed3\u5408\u6027\u3002\u4f8b\u5b50\"float\"\u4e2d\u5206\u522b\u5bf9<code>(3.14 + 1e20) - 1e20</code>\u548c<code>3.14 + (1e20 - 1e20)</code>\u505a\u4e86\u6d6e\u70b9\u8fd0\u7b97\uff0c\u524d\u8005\u503c\u4e3a\u96f6\uff0c\u540e\u8005\u503c\u4e3a3.14\u3002</p> <p>C\u8bed\u8a00\u4e2d\uff0c\u5728<code>int</code>\u3001<code>float</code>\u683c\u5f0f\u4e4b\u95f4\u8fdb\u884c\u5f3a\u5236\u7c7b\u578b\u8f6c\u6362\u65f6\uff0c\u7a0b\u5e8f\u6539\u53d8\u6570\u503c\u548c\u4f4d\u6a21\u5f0f\u7684\u539f\u5219\u5982\u4e0b\uff1a</p> <ul> <li>\u4ece<code>int</code>\u8f6c\u6362\u6210<code>float</code>\uff0c\u6570\u5b57\u4e0d\u4f1a\u6ea2\u51fa\uff0c\u4f46\u662f\u53ef\u80fd\u88ab\u820d\u5165</li> <li>\u4ece<code>float</code>\u8f6c\u6362\u6210<code>int</code>\uff0c\u503c\u5c06\u4f1a\u5411\u96f6\u820d\u5165</li> </ul> <p><pre><code>int main()\n{\n   // \u56e0\u820d\u5165\u8fd0\u7b97\uff0c\u4e22\u5931\u4e863.14\n   printf(\"((3.14 + 1e20) - 1e20) = %f\\n\", (3.14 + 1e20) - 1e20);\n   printf(\"(3.14 + (1e20 - 1e20)) = %f\\n\", 3.14 + (1e20 - 1e20));\n\n   // \u5411\u96f6\u53d6\u820d\n   float a = -1.999;\n   int b = a;\n   double c = 1.999;\n   int d = c;\n   printf(\"int(%f)=%d\\n\", a, b);\n   printf(\"int(%f)=%d\\n\", c, d);\n   return 0;\n}\n</code></pre> <pre><code>&gt; ./main\n((3.14 + 1e20) - 1e20) = 0.000000\n(3.14 + (1e20 - 1e20)) = 3.140000\nint(-1.999000)=-1\nint(1.999000)=1\n</code></pre></p>"},{"location":"booknotes/csapp/03/","title":"\u7a0b\u5e8f\u7684\u673a\u5668\u8868\u793a","text":"<p>\u300a\u6df1\u5165\u7406\u89e3\u8ba1\u7b97\u673a\u7cfb\u7edf\u300b - Randal E. Bryant - \u7b2c\u4e09\u7248\uff0c\u7b2c\u4e09\u7ae0\u7684\u8bfb\u4e66\u7b14\u8bb0\uff0c\u672c\u6587\u4e2d\u7684\u6240\u6709\u4ee3\u7801\u53ef\u5728GitHub\u4ed3\u5e93\u4e2d\u627e\u5230</p>"},{"location":"booknotes/csapp/03/#_2","title":"\u7a0b\u5e8f\u7f16\u7801","text":"<p>\u673a\u5668\u4ee3\u7801\u5c06\u5bf9C\u8bed\u8a00\u7a0b\u5e8f\u5458\u9690\u85cf\u7684\u5904\u7406\u5668\u72b6\u6001\u90fd\u53d8\u4e3a\u53ef\u89c1\uff0c\u5982\uff1a</p> <ul> <li>\u7a0b\u5e8f\u8ba1\u6570\u5668<ul> <li>\u5c06\u8981\u6267\u884c\u7684\u4e0b\u4e00\u6761\u6307\u4ee4\u5728\u5185\u5b58\u4e2d\u7684\u5730\u5740\uff0c\u5728x86-64\u4e2d\u7528<code>%rip</code>\u8868\u793a</li> </ul> </li> <li>\u6574\u6570\u5bc4\u5b58\u5668\u6587\u4ef6<ul> <li>16\u4e2a\u547d\u540d\u7684\u4f4d\u7f6e\uff0c\u5206\u522b\u5b58\u50a864\u4f4d\u7684\u503c\uff0c\u7528\u6765\u8bb0\u5f55\u7a0b\u5e8f\u72b6\u6001\uff0c\u5982\u8fc7\u7a0b\u53c2\u6570\uff0c\u51fd\u6570\u8fd4\u56de\u503c\u7b49</li> </ul> </li> <li>\u6761\u4ef6\u7801\u5bc4\u5b58\u5668<ul> <li>\u4fdd\u6301\u6700\u8fd1\u6267\u884c\u7684\u7b97\u672f\u6216\u903b\u8f91\u6307\u4ee4\u7684\u72b6\u6001\u4fe1\u606f\uff0c\u7528\u6765\u5b9e\u73b0<code>if</code>\u548c<code>while</code>\u7b49\u8bed\u53e5</li> </ul> </li> <li>\u4e00\u7ec4\u5411\u91cf\u5bc4\u5b58\u5668<ul> <li>\u5b58\u653e\u4e00\u5171\u6216\u591a\u4e2a\u6574\u6570\u6216\u6d6e\u70b9\u6570\u503c\uff0c\u7528\u4e8e\u5411\u91cf\u8fd0\u7b97</li> </ul> </li> </ul> <p>\u4f8b\u5b50\"mstore\"\u4ee5<code>-Og</code>\u7f16\u8bd1\u5668\u4f18\u5316\u9009\u9879\uff0c\u5f97\u5230<code>multstore</code>\u5bf9\u5e94\u7684\u6c47\u7f16\u4ee3\u7801\u5982\u4e0b\uff1a</p> \u94fe\u63a5\u524d\u7684\u6c47\u7f16\u4ee3\u7801\u94fe\u63a5\u540e\u7684\u6c47\u7f16\u4ee3\u7801C\u4ee3\u7801 <pre><code># \"objdump -d mstore.o\"\u5f97\u5230\u7684\u53cd\u6c47\u7f16\u4fe1\u606f\n# void multstore(long x, long y, long *dest)\n# x in %rdi, y in %rsi, dest in %rdx\n0000000000000000 &lt;multstore&gt;:\n 0:   f3 0f 1e fa             endbr64\n 4:   53                      push   %rbx               # \u4fdd\u5b58 %rbx\n 5:   48 89 d3                mov    %rdx,%rbx          # \u62f7\u8d1d dest \u5230 %rbx\n 8:   e8 00 00 00 00          callq  d &lt;multstore+0xd&gt;  # \u8c03\u7528\u5b50\u51fd\u6570\n d:   48 89 03                mov    %rax,(%rbx)        # \u4fdd\u5b58\u5b50\u51fd\u6570\u8fd4\u56de\u503c\u5230 *dest\n10:   5b                      pop    %rbx               # \u6062\u590d %rbx\n11:   c3                      retq \n</code></pre> <pre><code># \"objdump -d main\"\u5f97\u5230\u7684\u53cd\u6c47\u7f16\u4fe1\u606f\n00000000000011d5 &lt;multstore&gt;:\n    11d5:       f3 0f 1e fa             endbr64 \n    11d9:       53                      push   %rbx\n    11da:       48 89 d3                mov    %rdx,%rbx\n    11dd:       e8 e7 ff ff ff          callq  11c9 &lt;mult2&gt;\n    11e2:       48 89 03                mov    %rax,(%rbx)\n    11e5:       5b                      pop    %rbx\n    11e6:       c3                      retq   \n    11e7:       66 0f 1f 84 00 00 00    nopw   0x0(%rax,%rax,1)\n    11ee:       00 00\n</code></pre> <pre><code>void multstore(long x, long y, long *dest)\n{\n    long t = mult2(x, y);\n    *dest = t;\n}\n</code></pre>"},{"location":"booknotes/csapp/03/#_3","title":"\u6570\u636e\u683c\u5f0f","text":"C\u58f0\u660e Intel\u6570\u636e\u7c7b\u578b \u6c47\u7f16\u4ee3\u7801\u540e\u7f00 \u5927\u5c0f(\u5b57\u8282) char \u5b57\u8282 b 1 short \u5b57 w 2 int \u53cc\u5b57 l 4 long \u56db\u5b57 q 8 char* \u56db\u5b57 q 8 float \u5355\u7cbe\u5ea6 s 4 double \u53cc\u7cbe\u5ea6 l 8 <p>\u5982\u4e0a\u8868\u6240\u793a\uff0c\u5927\u591a\u6570GCC\u751f\u6210\u7684\u6c47\u7f16\u4ee3\u7801\u6307\u4ee4\u90fd\u6709\u4e00\u4e2a\u5b57\u7b26\u7684\u540e\u7f00\uff0c\u8868\u660e\u64cd\u4f5c\u6570\u7684\u5927\u5c0f\u3002\u4f8b\u5982\uff0c\u6570\u636e\u4f20\u9001\u6307\u4ee4\u6709\u56db\u4e2a\u53d8\u79cd\uff1a</p> <ul> <li><code>movb</code>(\u4f20\u9001\u5b57\u8282\uff0cbyte)</li> <li><code>movw</code>(\u4f20\u9001\u5b57\uff0cword)</li> <li><code>movl</code>(\u4f20\u9001\u53cc\u5b57\uff0clong word)</li> <li><code>movq</code>(\u4f20\u9001\u56db\u5b57\uff0cquad word)\u3002</li> </ul>"},{"location":"booknotes/csapp/03/#_4","title":"\u8bbf\u95ee\u4fe1\u606f","text":"<p>\u4e00\u4e2ax86-64\u7684\u4e2d\u592e\u5904\u7406\u5668\u5305\u542b\u4e00\u7ec416\u4e2a\u5b58\u50a864\u4f4d\u503c\u7684\u901a\u7528\u76ee\u7684\u5bc4\u5b58\u5668\u3002</p> <ul> <li>\u6700\u521d\u76848086\u4e2d\u67098\u4e2a16\u4f4d\u7684\u5bc4\u5b58\u5668\uff0c\u5373\u4e0b\u56fe\u4e2d\u7684<code>%ax</code>\u5230<code>%sp</code></li> <li>\u6269\u5c55\u5230IA32\u67b6\u6784\u65f6\uff0c\u8fd9\u4e9b\u5bc4\u5b58\u5668\u4e5f\u6269\u5c55\u621064\u4f4d\uff0c\u6807\u53f7\u4ece<code>%eax</code>\u5230<code>%esp</code></li> <li>\u6269\u5c55\u5230x86-64\u540e\uff0c\u539f\u6765\u76848\u4e2a\u5bc4\u5b58\u5668\u6269\u5c55\u621064\u4f4d\uff0c\u6807\u53f7\u4ece<code>%rax</code>\u5230<code>%rsp</code>\uff0c\u9664\u6b64\u4e4b\u5916\uff0c\u8fd8\u65b0\u589e\u4e868\u4e2a\u5bc4\u5b58\u5668\uff0c\u6807\u53f7\u4ece<code>%r8</code>\u5230<code>%r15</code></li> </ul> <p></p> <p>\u6307\u4ee4\u53ef\u4ee5\u5bf9\u5bc4\u5b58\u5668\u7684\u4f4e\u4f4d\u5b57\u8282\u4e2d\u5b58\u653e\u7684\u4e0d\u540c\u5927\u5c0f\u7684\u6570\u636e\u8fdb\u884c\u64cd\u4f5c\u3002\u5f53\u5bf9\u5bc4\u5b58\u5668\u90e8\u5206\u5b57\u8282\u8fdb\u884c\u64cd\u4f5c\u65f6\uff0c\u5176\u4ed6\u5b57\u8282\u9075\u5faa\u4e24\u6761\u89c4\u5219\uff1a</p> <ul> <li>\u64cd\u4f5c1\u5b57\u8282\u548c2\u5b57\u8282\u7684\u6307\u4ee4\u4f1a\u4fdd\u5b58\u5269\u4e0b\u7684\u5b57\u8282\u4e0d\u53d8</li> <li>\u64cd\u4f5c4\u5b57\u8282\u7684\u6307\u4ee4\u4f1a\u628a\u9ad8\u4f4d4\u4e2a\u5b57\u8282\u7f6e\u4e3a0</li> </ul> <p>\u4f8b\u5982\uff0c\u4e0b\u9762\u7684\u4f8b\u5b50\u5bf9\u4e0d\u540c\u5b57\u8282\u4f4d\u5199\u5165<code>-1</code>\uff0c\u4f1a\u4ea7\u751f\u4e0d\u540c\u7684\u7ed3\u679c\uff1a <pre><code>movabsq $0011223344556677, %rax     # %rax = 0011223344556677\nmovb    $-1, %al                    # %rax = 00112233445566FF\nmovw    $-1, %ax                    # %rax = 001122334455FFFF\nmovl    $-1, %eax                   # %rax = 00000000FFFFFFFF\nmovq    $-1, %rax                   # %rax = FFFFFFFFFFFFFFFF\n</code></pre></p> <p>\u5728\u5e38\u89c1\u7684\u7a0b\u5e8f\u91cc\uff0c\u4e0d\u540c\u7684\u5bc4\u5b58\u5668\u626e\u6f14\u7740\u4e0d\u540c\u7684\u89d2\u8272\u3002\u4f8b\u5982\uff0c</p> <ul> <li><code>%rsp</code>\u59cb\u7ec8\u6307\u5411\u6808\u9876</li> <li><code>%rbp</code>\u6307\u5411\u5f53\u524d\u6808\u5f00\u59cb\u7684\u5730\u65b9</li> <li>\u51fd\u6570\u8c03\u7528\u65f6\uff0c\u524d6\u4e2a\u53c2\u6570\u4f9d\u6b21\u5b58\u653e\u5728\u4ee5\u4e0b\u5bc4\u5b58\u5668\u4e2d<ul> <li><code>%rdi</code>\uff0c<code>%rsi</code>\uff0c<code>%rdx</code>\uff0c<code>%rcx</code>\uff0c<code>%r8</code>\uff0c<code>%r9</code></li> </ul> </li> <li><code>%rax</code>\u7528\u6237\u5b58\u653e\u51fd\u6570\u7684\u8fd4\u56de\u503c</li> </ul> <p>\u66f4\u8be6\u7ec6\u7684\u4ecb\u7ecd\uff0c\u53ef\u53c2\u8003\u672c\u6587\u7684\"\u8fc7\u7a0b\"\u7ae0\u8282\u3002</p>"},{"location":"booknotes/csapp/03/#_5","title":"\u64cd\u4f5c\u6570\u6307\u793a\u7b26","text":"<p>x86-64\u652f\u6301\u591a\u79cd\u64cd\u4f5c\u6570\u683c\u5f0f\u3002\u6e90\u6570\u636e\u503c\u53ef\u4ee5\u662f\u5e38\u6570\u3001\u6216\u662f\u5bc4\u5b58\u5668\u6216\u5185\u5b58\u4e2d\u7684\u503c\u3002\u76ee\u7684\u6570\u636e\u53ef\u4ee5\u5b58\u653e\u5728\u5bc4\u5b58\u5668\u6216\u5185\u5b58\u4e2d\u3002\u5404\u79cd\u4e0d\u540c\u7684\u64cd\u4f5c\u6570\u88ab\u5206\u4e3a\u4e09\u79cd\u7c7b\u578b\uff1a</p> <ul> <li>\u7acb\u5373\u6570<code>Imm</code></li> <li>\u5bc4\u5b58\u5668<code>R[ra]</code></li> <li>\u5185\u5b58\u5f15\u7528<code>M[Imm]</code><ul> <li>\u5b58\u5728\u591a\u79cd\u5bfb\u627e\u65b9\u5f0f</li> </ul> </li> </ul> \u7c7b\u578b \u683c\u5f0f \u64cd\u4f5c\u6570\u503c \u540d\u79f0 \u7acb\u5373\u6570 $Imm Imm \u7acb\u5373\u6570\u5bfb\u5740 \u5bc4\u5b58\u554a ra R[ra] \u5bc4\u5b58\u5668\u5bfb\u5740 \u5b58\u50a8\u5668 Imm M[Imm] \u7edd\u5bf9\u5bfb\u5740 \u5b58\u50a8\u5668 (ra) M[R[ra]] \u95f4\u63a5\u5bfb\u5740 \u5b58\u50a8\u5668 Imm(rb) M[Imm + R[rb]] (\u57fa\u5740+\u504f\u79fb\u91cf)\u5bfb\u5740 \u5b58\u50a8\u5668 (rb,ri) M[R[rb]+ R[ri]] \u53d8\u5740\u5bfb\u5740 \u5b58\u50a8\u5668 Imm(rb,ri) M[Imm + R[rb]+ R[ri]] \u53d8\u5740\u5bfb\u5740 \u5b58\u50a8\u5668 (,ri,s) M[R[ri] * s] \u6bd4\u4f8b\u53d8\u5740\u5bfb\u5740 \u5b58\u50a8\u5668 Imm(,ri,s) M[Imm + R[ri] * s] \u6bd4\u4f8b\u53d8\u5740\u5bfb\u5740 \u5b58\u50a8\u5668 (rb,ri,s) M[R[rb]+ R[ri] * s] \u6bd4\u4f8b\u53d8\u5740\u5bfb\u5740 \u5b58\u50a8\u5668 Imm(rb,ri,s) M[Imm + R[rb]+ R[ri] * s] \u6bd4\u4f8b\u53d8\u5740\u5bfb\u5740"},{"location":"booknotes/csapp/03/#_6","title":"\u6570\u636e\u4f20\u9001\u6307\u4ee4","text":"\u6307\u4ee4 \u63cf\u8ff0 \u4f8b\u5b50 mov S, D \u628a\u6570\u636e<code>S</code>\u4f20\u9001\u7ed9<code>D</code> movb, movw, movl, movq movabsq I, R \u628a\u56db\u5b57\u7acb\u5373\u6570\u5b58\u50a8\u5728\u5bc4\u5b58\u5668<code>R</code>\u4e2d <code>movabsq $0011223344556677, %rax</code> movz S, R \u628a\u6570\u636e<code>S</code>\u5b58\u50a8\u5728\u5bc4\u5b58\u5668<code>R</code>\u4e2d\uff0c\u9ad8\u4f4d\u7528\u96f6\u8865\u9f50 movzbw, movzbl, movzwl, movzbq, movzwq movs S, R \u628a\u6570\u636e<code>S</code>\u5b58\u50a8\u5728\u5bc4\u5b58\u5668<code>R</code>\u4e2d\uff0c\u9ad8\u4f4d\u7528\u7b26\u53f7\u4f4d\u8865\u9f50 movsbw, movsbl, movswl, movsbq, movswq, movslq cltq \u628a<code>%eax</code>\u7b26\u53f7\u6269\u5c55\u5230<code>%rax</code> <p>\u4f8b\u5982\uff0c\u4e0b\u9762\u7684\u4f8b\u5b50\u63cf\u8ff0\u4e86\u4e0d\u540c\u4f20\u9001\u6307\u4ee4\u7684\u6548\u679c\uff1a <pre><code>movabsq $0011223344556677, %rax     # %rax = 0011223344556677\nmovb    $0xAA, %dl                  # %dl  = AA\nmovb    %dl, %al                    # %rax = 00112233445566AA\nmovsbq  $dl, %rax                   # %rax = FFFFFFFFFFFFFFAA\nmovzbq  $dl, %rax                   # %rax = 00000000000000AA\n</code></pre></p> <p>\u4f8b\u5b50\"mov\"\u4e2d\u7684<code>exchange</code>\u51fd\u6570\u5229\u7528\u4e86<code>mov</code>\u6307\u4ee4\uff0c\u4fee\u6539\u4e86\u6307\u9488<code>xp</code>\u6307\u5411\u7684\u5185\u5bb9\uff1a</p> \u6c47\u7f16\u4ee3\u7801C\u4ee3\u7801 <pre><code># long exchange(long *xp, long y)\n# xp in %rdi, y in %rsi\n0000000000000000 &lt;exchange&gt;:\n0:   f3 0f 1e fa             endbr64\n4:   48 8b 07                mov    (%rdi),%rax     # \u4ece\u5730\u5740\u662f %rdi \u7684\u5185\u5b58\u4e2d\u83b7\u53d6\u503c(*xp)\uff0c\u5e76\u4f20\u9012\u5230\u8fd4\u56de\u503c %rax \u4e2d\n7:   48 89 37                mov    %rsi,(%rdi)     # (*xp = y)\na:   c3                      retq\n</code></pre> <pre><code>long exchange(long *xp, long y)\n{\n    long x = *xp;\n    *xp = y;\n    return x;\n}\n</code></pre>"},{"location":"booknotes/csapp/03/#_7","title":"\u538b\u5165\u548c\u5f39\u51fa\u6808\u6570\u636e","text":"\u6307\u4ee4 \u6548\u679c \u63cf\u8ff0 pushq S R[%rsp] &lt;- R[%rsp] - 8; M[R[%rsp]] &lt;- S \u5c06\u56db\u5b57\u538b\u5165\u6808 popq D D &lt;- M[R[%rsp]]; R[%rsp] &lt;- R[%rsp] + 8 \u5c06\u56db\u5b57\u5f39\u51fa\u6808 <p><code>pushq</code>\u548c<code>popq</code>\u6307\u4ee4\u53ea\u6709\u4e00\u4e2a\u64cd\u4f5c\u6570 --- \u538b\u5165\u7684\u6570\u636e\u6e90\u548c\u5f39\u51fa\u7684\u6570\u636e\u76ee\u7684\u3002</p> <p>\u56e0\u4e3a\u6808\u548c\u7a0b\u5e8f\u4ee3\u7801\u90fd\u653e\u5728\u540c\u4ee5\u5185\u5b58\u4e2d\uff0c\u6240\u4ee5\u7a0b\u5e8f\u53ef\u4ee5\u7528\u6807\u51c6\u7684\u5185\u5b58\u5bfb\u5740\u65b9\u5f0f\u8bbf\u95ee\u6808\u5185\u7684\u4efb\u610f\u4f4d\u7f6e\u3002\u4f8b\u5982\uff0c\u5047\u8bbe\u6808\u9876\u5143\u7d20\u662f\u56db\u5b57\uff0c\u6307\u4ee4<code>movq 8(%rsp), %rdx</code>\u4f1a\u5c06\u7b2c\u4e8c\u4e2a\u56db\u5b57\u4ece\u6808\u4e2d\u590d\u5236\u5230\u5bc4\u5b58\u5668<code>%rdx</code>\u4e2d\u3002</p>"},{"location":"booknotes/csapp/03/#_8","title":"\u7b97\u672f\u548c\u903b\u8f91\u64cd\u4f5c","text":"\u6307\u4ee4 \u6548\u679c \u63cf\u8ff0 leaq S,R R \u2190 &amp;S \u52a0\u8f7d\u6709\u6548\u5730\u5740\uff0c\u76ee\u7684\u5730\u5fc5\u987b\u662f\u5bc4\u5b58\u5668 inc  D D \u2190 D+1 \u52a01\uff0c\u53ef\u4ee5\u662f\u5bc4\u5b58\u5668\uff0c\u4e5f\u53ef\u4ee5\u662f\u4e00\u4e2a\u5185\u5b58\u4f4d\u7f6e dec  D D \u2190 D\u22121 \u51cf1 neg  D D \u2190 -D \u53d6\u8d1f not  D D \u2190 ~D \u53d6\u8865 add  S,D D \u2190 D + S \u52a0\uff0c\u5982\u679c\u662f\u5199\u56de\u5185\u5b58\u7684\u64cd\u4f5c\uff0c\u7b2c\u4e00\u4e2a\u64cd\u4f5c\u6570\u5fc5\u987b\u662f\u4ece\u5185\u5b58\u8bfb\u51fa sub  S,D D \u2190 D \u2212 S \u51cf imul S,D D \u2190 D \u2217 S \u4e58 xor  S,D D \u2190 D ^ S \u5f02\u6216 or   S,D D \u2190 D S and  S,D D \u2190 D &amp; S \u4e0e sal  k,D D \u2190 D&lt;&lt;k \u5de6\u79fb\uff0c\u79fb\u4f4d\u91cf\u53ef\u4ee5\u662f\u7acb\u5373\u6570\uff0c\u6216\u5355\u5b57\u8282\u5bc4\u5b58\u5668<code>%cl</code> shl  k,D D \u2190 D&lt;&lt;k \u5de6\u79fb (\u7b49\u540cSAL) sar  k,D D \u2190 D&gt;&gt;k \u7b97\u672f\u53f3\u79fb shr  k,D D \u2190 D&gt;&gt;k \u903b\u8f91\u53f3\u79fb"},{"location":"booknotes/csapp/03/#_9","title":"\u52a0\u8f7d\u6709\u6548\u5730\u5740","text":"<p>\u52a0\u8f7d\u6709\u6548\u5730\u5740(load effective address)\u6307\u4ee4<code>leaq</code>\u5b9e\u9645\u4e0a\u662f<code>movq</code>\u6307\u4ee4\u7684\u53d8\u5f62\uff0c\u5c06\u6709\u6548\u5730\u5740\u5199\u5165\u76ee\u7684\u64cd\u4f5c\u6570\uff08\u5fc5\u987b\u662f\u5bc4\u5b58\u5668\uff09\u3002</p> <p>\u4f8b\u5b50\"lea\"\u4e2d\u7684<code>scale</code>\u51fd\u6570\u5229\u7528<code>leaq</code>\u6307\u4ee4\uff0c\u5bf9<code>x + 4 * y + 12 * z</code>\u8868\u8fbe\u8fdb\u884c\u4e86\u6c42\u503c\uff1a</p> \u6c47\u7f16\u4ee3\u7801C\u4ee3\u7801 <pre><code># long scale(long x, long y, long z)\n# x in %rdi, y in %rsi, z in %rdx\n0000000000000000 &lt;scale&gt;:\n 0:   f3 0f 1e fa             endbr64 \n 4:   48 8d 04 b7             lea    (%rdi,%rsi,4),%rax    # x + 4*y\n 8:   48 8d 14 52             lea    (%rdx,%rdx,2),%rdx    # z + 2*z = 3*z\n c:   48 8d 04 90             lea    (%rax,%rdx,4),%rax    # (x+4*y)+4*(3*z) = x + 4*y + 12*z\n10:   c3                      retq\n</code></pre> <pre><code>long scale(long x, long y, long z)\n{\n    long t = x + 4 * y + 12 * z;\n    return t;\n}\n</code></pre>"},{"location":"booknotes/csapp/03/#_10","title":"\u5e38\u89c1\u7684\u7b97\u672f\u64cd\u4f5c","text":"<p>\u5982\u4e0a\u8868\u6240\u89c6\uff0c\u5e38\u89c1\u7684\u7b97\u672f\u64cd\u4f5c\u5305\u62ec\uff1a\u52a0\u8f7d\u6709\u6548\u5730\u5740\u3001\u4e00\u5143\u548c\u4e8c\u5143\u64cd\u4f5c\u3001\u79fb\u4f4d\u64cd\u4f5c\u7b49\u3002</p> <p>\u4f8b\u5b50\"arith\"\u4e2d\u7684<code>arith</code>\u51fd\u6570\u5bf9\u5e38\u89c1\u7b97\u672f\u8868\u8fbe\u8fdb\u884c\u4e86\u6c42\u503c\uff1a</p> \u6c47\u7f16\u4ee3\u7801C\u4ee3\u7801 <pre><code># long arith(long x, long y, long z)\n# x in %rdi, y in %rsi, z in %rdx\n0000000000000000 &lt;arith&gt;:\n 0:   f3 0f 1e fa             endbr64 \n 4:   48 31 f7                xor    %rsi,%rdi              # t1 = x ^ y\n 7:   48 8d 04 52             lea    (%rdx,%rdx,2),%rax     # 3*z\n b:   48 c1 e0 04             shl    $0x4,%rax              # t2 = 16 * (3*z) = 48*z\n f:   81 e7 0f 0f 0f 0f       and    $0xf0f0f0f,%edi        # t3 = t1 &amp; 0x0F0F0F0F\n15:   48 29 f8                sub    %rdi,%rax              # Return t2 - t3\n18:   c3                      retq\n</code></pre> <pre><code>long arith(long x, long y, long z)\n{\n    long t1 = x ^ y;\n    long t2 = z * 48;\n    long t3 = t1 &amp; 0x0F0F0F0F;\n    long t4 = t2 - t3;\n    return t4;\n}\n</code></pre>"},{"location":"booknotes/csapp/03/#_11","title":"\u7279\u6b8a\u7684\u7b97\u672f\u64cd\u4f5c","text":"\u6307\u4ee4 \u6548\u679c \u63cf\u8ff0 imulq S R[%rdx]:R[%rax] \u2190 S \u00d7 R[%rax] \u6709\u7b26\u53f7\u5168\u4e58\u6cd5 mulq S R[%rdx]:R[%rax] \u2190 S \u00d7 R[%rax] \u65e0\u7b26\u53f7\u5168\u4e58\u6cd5 cqto R[%rdx]:R[%rax] \u2190 \u7b26\u53f7\u6269\u5c55(R[%rax]) \u8f6c\u6362\u4e3a\u516b\u5b57 idivq S R[%rdx] \u2190 R[%rdx]:R[%rax] mod S  R[%rax] \u2190 R[%rdx]:R[%rax] \u00f7 S \u6709\u7b26\u53f7\u9664\u6cd5 divq S R[%rdx] \u2190 R[%rdx]:R[%rax] mod S  R[%rax] \u2190 R[%rdx]:R[%rax] \u00f7 S \u65e0\u7b26\u53f7\u9664\u6cd5 <p>\u4e24\u4e2a64\u4f4d\u6709\u7b26\u53f7\u6216\u65e0\u7b26\u53f7\u6574\u6570\u76f8\u4e58\u5f97\u5230\u7684\u4e58\u79ef\u9700\u8981128\u4f4d\u6765\u8868\u793a\u3002\u4e0a\u8868\u63cf\u8ff0\u7684\u662f\u652f\u6301\u4ea7\u751f\u4e24\u4e2a64\u4f4d\u6570\u5b57\u7684\u5168128\u4f4d\u4e58\u79ef\u4ee5\u53ca\u6574\u6570\u9664\u6cd5\u7684\u6307\u4ee4\u3002</p> <p><code>imulq</code>\u6307\u4ee4\u6709\u4e24\u79cd\u4e0d\u540c\u7684\u5f62\u5f0f\uff1a</p> <ul> <li>\u201c\u53cc\u64cd\u4f5c\u6570\u201d\u4e58\u6cd5\u6307\u4ee4<ul> <li>\u4ece\u4e24\u4e2a64\u4f4d\u64cd\u4f5c\u6570\u4ea7\u751f\u4e00\u4e2a64\u4f4d\u4e58\u79ef</li> </ul> </li> <li>\u201c\u5355\u64cd\u4f5c\u6570\u201d\u4e58\u6cd5\u6307\u4ee4<ul> <li>\u8ba1\u7b97\u4e24\u4e2a64\u4f4d\u503c\u7684\u5168128\u4f4d\u4e58\u79ef</li> <li>\u4e00\u4e2a\u53c2\u6570\u5fc5\u987b\u5728\u5bc4\u5b58\u5668<code>%rax</code>\u4e2d\uff0c\u53e6\u4e00\u4e2a\u53c2\u6570\u4f5c\u4e3a\u6307\u4ee4\u7684\u6e90\u64cd\u4f5c\u6570</li> <li>\u4e58\u79ef\u7ed3\u679c\u5b58\u653e\u5728<code>%rdx</code>(\u9ad864\u4f4d)\u548c<code>%rax</code>(\u4f4e64\u4f4d)\u4e2d</li> </ul> </li> </ul> <p>\u4f8b\u5b50\"mul\"\u4e2d\u7684\u4e24\u4e2a\u4e58\u79ef\u51fd\u6570\u5206\u522b\u5229\u7528\u4e86\u4e24\u79cd<code>imulq</code>\u6307\u4ee4\uff0c\u5b8c\u6210\u4e86\u4e58\u6cd5\u64cd\u4f5c\uff1a</p> \u201c\u5355\u64cd\u4f5c\u6570\u201d\u4e58\u6cd5\u6307\u4ee4\u201c\u53cc\u64cd\u4f5c\u6570\u201d\u4e58\u6cd5\u6307\u4ee4C\u4ee3\u7801 <pre><code># void multi_64(uint128_t *dest, uint64_t x, uint64_t y)\n# dest in %rdi, x in %rsi, y in %rdx\n0000000000000000 &lt;multi_64&gt;:\n 0:   f3 0f 1e fa             endbr64 \n 4:   48 89 f0                mov    %rsi,%rax      # x\u662f\u7b2c\u4e00\u4e2a\u53c2\u6570\n 7:   48 f7 e2                mul    %rdx           # y\u662f\u7b2c\u4e8c\u4e2a\u53c2\u6570\uff0c\u8ba1\u7b97x*y\uff0c\u7ed3\u679c\u5b58\u653e\u5728 %rdx:%rax \u4e2d\n a:   48 89 07                mov    %rax,(%rdi)    # \u5c06\u4f4e64\u4f4d\u62f7\u8d1d\u5230 dest \u4f4e\u4f4d\u5730\u5740\n d:   48 89 57 08             mov    %rdx,0x8(%rdi) # \u5c06\u9ad864\u4f4d\u62f7\u8d1d\u5230 dest \u9ad8\u4f4d\u5730\u5740\n11:   c3                      retq\n</code></pre> <pre><code># void multi_32(uint64_t *dest, uint32_t a, uint32_t b)\n# dest in %rdi, a in %esi, b in %edx\n0000000000000012 &lt;multi_32&gt;:\n12:   f3 0f 1e fa             endbr64 \n16:   0f af f2                imul   %edx,%esi      # a*b, \u7ed3\u679c\u5b58\u5728 %rsi \u4e2d\n19:   48 89 37                mov    %rsi,(%rdi)    # \u5c06\u7ed3\u679c\u5b58\u5165 dest \u4e2d\n1c:   c3                      retq\n</code></pre> <pre><code>typedef unsigned __int128 uint128_t;\nvoid multi_64(uint128_t *dest, uint64_t x, uint64_t y)\n{\n    *dest = x * (uint128_t)y;\n}\n\nvoid multi_32(uint64_t *dest, uint32_t a, uint32_t b)\n{\n    *dest = a * b;\n}\n</code></pre> <p>\u9664\u6cd5\u6216\u53d6\u6a21\u64cd\u4f5c\u90fd\u662f\u7531\u201c\u5355\u64cd\u4f5c\u6570\u201d\u9664\u6cd5\u6307\u4ee4\u5b8c\u6210\u7684\uff0c\u5176\u89c4\u5219\u5982\u4e0b\uff1a</p> <ul> <li>\u5bc4\u5b58\u5668<code>%rdx</code>(\u9ad864\u4f4d)\u548c<code>%rax</code>(\u4f4e64\u4f4d)\u4e2d\u7684128\u4f4d\u6570\u4f5c\u4e3a\u88ab\u9664\u6570\uff0c\u5982\u679c\u9664\u6570\u662f\u4e00\u4e2a64\u4f4d\u7684\u503c<ul> <li>\u65e0\u7b26\u53f7\u8fd0\u7b97\uff1a<code>%rdx</code>\u5e94\u8be5\u8bbe\u7f6e\u4e3a\u51680</li> <li>\u6709\u7b26\u53f7\u8fd0\u7b97\uff1a<code>%rdx</code>\u5e94\u8be5\u8bbe\u7f6e\u4e3a<code>%rax</code>\u7684\u7b26\u53f7\u4f4d\uff0c\u53ef\u4ee5\u7528\u6307\u4ee4<code>cqto</code>\u6765\u5b8c\u6210</li> </ul> </li> <li>\u9664\u6570\u4f5c\u4e3a\u6307\u4ee4\u7684\u64cd\u4f5c\u6570\u7ed9\u51fa</li> <li>\u8fd0\u7b97\u7ed3\u679c\u7684\u5546\u5b58\u50a8\u5728\u5bc4\u5b58\u5668<code>%rax</code>\u4e2d\uff0c\u4f59\u6570\u5b58\u50a8\u5728\u5bc4\u5b58\u5668<code>%rdx</code>\u4e2d</li> </ul> <p>\u4f8b\u5b50\"div\"\u5229\u7528\u9664\u6cd5\u6307\u4ee4\u5b8c\u6210\u4e86\u65e0\u7b26\u53f7\u6570<code>uremdiv</code>\u548c\u6709\u7b26\u53f7\u6570<code>remdiv</code>\u7684\u9664\u6cd5\u64cd\u4f5c\uff1a</p> \u201c\u5355\u64cd\u4f5c\u6570\u201d\u9664\u6cd5\u6307\u4ee4C\u4ee3\u7801 <pre><code># void uremdiv(unsigned long x, unsigned long y, unsigned long *qp, unsigned long *rp)\n# x in %rdi, y in %rsi, qp in %rdx, rp in %rcx\n0000000000000000 &lt;uremdiv&gt;:\n 0:   f3 0f 1e fa             endbr64 \n 4:   48 89 f8                mov    %rdi,%rax      # \u62f7\u8d1d\u88ab\u9664\u6570 x \u5230 %rax\n 7:   49 89 d0                mov    %rdx,%r8       # \u4fdd\u5b58 qp \u5730\u5740\uff0c\u4ee5\u817e\u51fa %rdx \u7528\u4e8e\u9664\u6cd5\u64cd\u4f5c\n a:   ba 00 00 00 00          mov    $0x0,%edx      # \u6e05\u96f6 %rdx\n f:   48 f7 f6                div    %rsi           # \u6267\u884c\u9664\u6cd5\u64cd\u4f5c\uff0c\u4ee5 y \u4e3a\u9664\u6570\n12:   49 89 00                mov    %rax,(%r8)     # \u5c06\u5546\u5b58\u5165 *qp\n15:   48 89 11                mov    %rdx,(%rcx)    # \u5c06\u4f59\u6570\u5b58\u5165 *rp\n18:   c3                      retq   \n\n# void remdiv(long x, long y, long *qp, long *rp)\n# x in %rdi, y in %rsi, qp in %rdx, rp in %rcx\n0000000000000019 &lt;remdiv&gt;:\n19:   f3 0f 1e fa             endbr64 \n1d:   48 89 f8                mov    %rdi,%rax      # \u62f7\u8d1d\u88ab\u9664\u6570 x \u5230 %rax\n20:   49 89 d0                mov    %rdx,%r8       # \u4fdd\u5b58 qp \u5730\u5740\uff0c\u4ee5\u817e\u51fa %rdx \u7528\u4e8e\u9664\u6cd5\u64cd\u4f5c\n23:   48 99                   cqto                  # \u5c06 %rdx \u8bbe\u7f6e\u4e3a %rax \u7684\u7b26\u53f7\u4f4d\n25:   48 f7 fe                idiv   %rsi           # \u6267\u884c\u9664\u6cd5\u64cd\u4f5c\uff0c\u4ee5 y \u4e3a\u9664\u6570\n28:   49 89 00                mov    %rax,(%r8)     # \u5c06\u5546\u5b58\u5165 *qp\n2b:   48 89 11                mov    %rdx,(%rcx)    # \u5c06\u4f59\u6570\u5b58\u5165 *rp\n2e:   c3                      retq\n</code></pre> <pre><code>void uremdiv(unsigned long x, unsigned long y, unsigned long *qp, unsigned long *rp)\n{\n    unsigned long q = x / y;\n    unsigned long r = x % y;\n    *qp = q;\n    *rp = r;\n}\n\nvoid remdiv(long x, long y, long *qp, long *rp)\n{\n    long q = x / y;\n    long r = x % y;\n    *qp = q;\n    *rp = r;\n}\n</code></pre>"},{"location":"booknotes/csapp/03/#_12","title":"\u63a7\u5236","text":""},{"location":"booknotes/csapp/03/#_13","title":"\u6761\u4ef6\u7801","text":"<p>\u9664\u4e86\u524d\u9762\u63cf\u8ff0\u7684\u6574\u6570\u5bc4\u5b58\u5668\uff0cCPU\u8fd8\u7ef4\u62a4\u7740\u4e00\u7ec4\u5355\u4e2a\u4f4d\u7684\u6761\u4ef6\u7801\u5bc4\u5b58\u5668\uff0c\u5b83\u4eec\u63cf\u8ff0\u4e86\u6700\u8fd1\u7684\u7b97\u672f\u6216\u903b\u8f91\u64cd\u4f5c\u7684\u5c5e\u6027\u3002\u6700\u5e38\u89c1\u7684\u6761\u4ef6\u7801\u6709\uff1a</p> <ul> <li>CF - \u8fdb\u4f4d\u6807\u5fd7</li> <li>ZF - \u96f6\u6807\u5fd7</li> <li>SF - \u7b26\u53f7\u6807\u5fd7</li> <li>OF - \u6ea2\u51fa\u6807\u5fd7</li> </ul> <p>\u5047\u5982\u7528<code>ADD</code>\u6307\u4ee4\uff0c\u5b8c\u6210\u8868\u8fbe\u5f0f<code>t=a+b</code>\u7684\u529f\u80fd\uff0c\u4f1a\u6839\u636e\u4e0b\u9762\u7684\u8868\u8fbe\u5f0f\u8bbe\u7f6e\u6761\u4ef6\u7801\uff1a <pre><code>CF = (unsigned)t &lt; (unsigned)a      // \u65e0\u7b26\u53f7\u6570\u53d1\u751f\u6ea2\u51fa\nZF = (t==0)                         // \u96f6\nSF = (t&lt;0)                          // \u8d1f\u6570\nOF = (a&lt;0 == b&lt;0) &amp;&amp; (t&lt;0 != a&lt;0)   // \u6709\u7b26\u53f7\u6570\u53d1\u751f\u6ea2\u51fa\n</code></pre></p> <p>\u9664\u4e86<code>leaq</code>\u6307\u4ee4\u4e0d\u6539\u53d8\u4efb\u4f55\u6761\u4ef6\u7801\u5916\uff0c\u5176\u4ed6\u6307\u4ee4\u90fd\u4f1a\u8bbe\u7f6e\u6761\u4ef6\u7801\uff1a</p> <ul> <li>\u5bf9\u4e8e\u903b\u8f91\u64cd\u4f5c\uff0c\u4f8b\u5982<code>XOR</code>\uff0c\u8fdb\u4f4d\u6807\u5fd7\u548c\u6ea2\u51fa\u6807\u5fd7\u4f1a\u8bbe\u7f6e\u62100</li> <li>\u5bf9\u4e8e\u79fb\u4f4d\u64cd\u4f5c\uff0c\u8fdb\u4f4d\u6807\u5fd7\u5c06\u8bbe\u7f6e\u4e3a\u6700\u540e\u4e00\u4e2a\u88ab\u79fb\u51fa\u7684\u4f4d\uff0c\u800c\u6ea2\u51fa\u6807\u5fd7\u8bbe\u7f6e\u4e3a0</li> <li><code>INC</code>\u548c<code>DEC</code>\u6307\u4ee4\u4f1a\u8bbe\u7f6e\u6ea2\u51fa\u548c\u96f6\u6807\u5fd7</li> </ul> <p><code>CMP</code>\u6307\u4ee4\u548c<code>TEST</code>\u6307\u4ee4\uff0c\u53ea\u8bbe\u7f6e\u6761\u4ef6\u7801\u800c\u4e0d\u6539\u53d8\u4efb\u4f55\u5176\u4ed6\u5bc4\u5b58\u5668\u3002\u5b83\u4eec\u7684\u64cd\u4f5c\u5982\u4e0b\uff1a</p> \u6307\u4ee4 \u63cf\u8ff0 cmp S1, S2 \u6bd4\u8f83(S2-S1)\uff0c\u6839\u636e\u4e24\u4e2a\u64cd\u4f5c\u6570\u4e4b\u5dee\u6765\u8bbe\u7f6e\u6761\u4ef6\u7801 test S1, S2 \u6d4b\u8bd5(S1&amp;S2)\uff0c\u7528\u6765\u6307\u793a\u54ea\u4e9b\u4f4d\u5e94\u8be5\u88ab\u6d4b\u8bd5 <p>\u6761\u4ef6\u7801\u7684\u4f7f\u7528\u65b9\u5f0f\u6709\u4e09\u79cd\uff1a</p> <ul> <li>\u6839\u636e\u6761\u4ef6\u7801\u7684\u67d0\u79cd\u7ec4\u5408\uff0c\u5c06\u4e00\u4e2a\u5b57\u8282\u8bbe\u7f6e\u4f4d0\u6216\u80051\uff0c\u5982<code>SET</code>\u6307\u4ee4</li> <li>\u6839\u636e\u6761\u4ef6\u7801\u8df3\u8f6c\u5230\u7a0b\u5e8f\u7684\u67d0\u4e2a\u5176\u4ed6\u7684\u90e8\u5206\uff0c\u5982<code>JMP</code>\u6307\u4ee4</li> <li>\u6839\u636e\u6761\u4ef6\u7801\u6709\u6761\u4ef6\u7684\u4f20\u9001\u6570\uff0c\u5982<code>CMOV</code>\u6307\u4ee4</li> </ul>"},{"location":"booknotes/csapp/03/#_14","title":"\u6761\u4ef6\u7f6e\u4f4d\u6307\u4ee4","text":"<p>\u4e0b\u8868\u662f\u5e38\u89c1\u7684<code>SET</code>\u6307\u4ee4\uff0c\u6bcf\u6761\u6307\u4ee4\u6839\u636e\u6761\u4ef6\u7801\u7684\u7ec4\u5408\uff0c\u5c06\u4e00\u4e2a\u5b57\u8282\u8bbe\u7f6e\u4f4d0\u6216\u80051\uff1a</p> <p></p> <p>\u4f8b\u5b50\"cmp\"\u901a\u8fc7<code>SET</code>\u6307\u4ee4\u548c<code>CMP</code>\u6307\u4ee4\uff0c\u5b8c\u6210\u4e86\u4e24\u4e2a\u6570\u7684\u6bd4\u8f83\u8fc7\u7a0b\uff1a</p> \u6c47\u7f16\u4ee3\u7801C\u4ee3\u7801 <pre><code># int comp(long a, long b)\n# a in %rdi, b in %rsi\n0000000000000000 &lt;comp&gt;a\n0:   f3 0f 1e fa             endbr64 \n4:   48 39 f7                cmp    %rsi,%rdi   # \u6bd4\u8f83 a-b\n7:   0f 9c c0                setl   %al         # a&lt;b \u65f6\u88ab\u7f6e1\na:   0f b6 c0                movzbl %al,%eax    # \u5c06\u7ed3\u679c\u8fd4\u56de\uff0c\u9ad8\u4f4d\u88ab\u6e05\u96f6\nd:   c3                      retq\n</code></pre> <pre><code>int comp(long a, long b)\n{\n    return a &lt; b;\n}\n</code></pre>"},{"location":"booknotes/csapp/03/#_15","title":"\u6761\u4ef6\u8df3\u8f6c\u6307\u4ee4","text":"<p>\u4e0b\u8868\u662f\u5e38\u89c1\u7684<code>JMP</code>\u6307\u4ee4\uff0c\u5f53\u8df3\u8f6c\u6761\u4ef6\u6ee1\u8db3\u65f6\uff0c\u8df3\u8f6c\u5230\u4e00\u6761\u5e26\u6807\u53f7\u7684\u76ee\u7684\u5730\uff1a</p> <ul> <li>\u76f4\u63a5\u8df3\u8f6c<ul> <li>\u8df3\u8f6c\u76ee\u6807\u662f\u4f5c\u4e3a\u6307\u4ee4\u7684\u4e00\u90e8\u5206\u7f16\u7801\uff0c\u5982\uff1a<code>jmp .L1</code></li> </ul> </li> <li>\u95f4\u63a5\u8df3\u8f6c<ul> <li>\u8df3\u8f6c\u76ee\u6807\u662f\u4ece\u5bc4\u5b58\u5668\u6216\u5185\u5b58\u4f4d\u7f6e\u8bfb\u51fa\u7684\uff0c\u5982\uff1a<code>jmp *%rax</code>\uff0c<code>jmp *(%rax)</code></li> </ul> </li> </ul> <p></p> <p>C\u8bed\u8a00\u4e2d\u7684<code>if-else</code>\u8bed\u53e5\u5728\u6c47\u7f16\u4ee3\u7801\u4e2d\u88ab\u8f6c\u6362\u4e3a<code>goto</code>\u7248\u672c\uff1a</p> \u6c47\u7f16\u4ee3\u7801\u7684\"if-else\"C\u8bed\u8a00\u7684\"if-else\" <pre><code>t = test-expr;\nif (!t)\n    goto false;\nthen-statement\ngoto done;\n\nfalse:\n    else-statement\ndone:\n</code></pre> <pre><code>if (test-expr)\n    then-statement\nelse\n    else-statement\n</code></pre> <p>\u4f8b\u5b50\"jmp\"\u901a\u8fc7<code>JMP</code>\u6307\u4ee4\u548c<code>CMP</code>\u6307\u4ee4\uff0c\u5b9e\u73b0\u4e86<code>if-else</code>\u6761\u4ef6\u5206\u652f\uff1a</p> \u6c47\u7f16\u4ee3\u7801\"if-else\"\u7248\u672cC\u4ee3\u7801\"goto\"\u7248\u672cC\u4ee3\u7801 <pre><code># long absdiff(long x, long y)\n# x in %rdi, y in %rsi\n0000000000000000 &lt;absdiff&gt;:\n 0:   f3 0f 1e fa             endbr64 \n 4:   48 89 f0                mov    %rsi,%rax\n 7:   48 39 f7                cmp    %rsi,%rdi              # \u6bd4\u8f83 x-y\n a:   7d 0c                   jge    18 &lt;absdiff+0x18&gt;      # x&gt;=y\uff0c\u8df3\u8f6c\u7f6e0x18\u4f4d\u7f6e\n c:   48 83 05 00 00 00 00    addq   $0x1,0x0(%rip)         # lt_cnt++\n13:   01 \n14:   48 29 f8                sub    %rdi,%rax              # result = y - x\n17:   c3                      retq   \n18:   48 83 05 00 00 00 00    addq   $0x1,0x0(%rip)         # ge_cnt++\n1f:   01 \n20:   48 29 f7                sub    %rsi,%rdi              # x = x - y\n23:   48 89 f8                mov    %rdi,%rax              # result = x\n26:   c3                      retq \n</code></pre> <pre><code>long absdiff(long x, long y)\n{\n    long result;\n    if (x &lt; y)\n    {\n        lt_cnt++;\n        result = y - x;\n    }\n    else\n    {\n        ge_cnt++;\n        result = x - y;\n    }\n    return result;\n}\n</code></pre> <pre><code>long gotodiff(long x, long y)\n{\n    long result;\n    if (x &gt;= y)\n        goto x_ge_y;\n    lt_cnt++;\n    result = y - x;\n    return result;\nx_ge_y:\n    ge_cnt++;\n    result = x - y;\n    return result;\n}\n</code></pre>"},{"location":"booknotes/csapp/03/#_16","title":"\u6761\u4ef6\u4f20\u9001\u6307\u4ee4","text":"<p>\u4e0b\u8868\u662f\u5e38\u89c1\u7684<code>CMOV</code>\u6307\u4ee4\uff0c\u5f53\u4f20\u9001\u6761\u4ef6\u6ee1\u8db3\u65f6\uff0c\u6307\u4ee4\u628a\u6e90\u503cS\u590d\u5236\u5230\u76ee\u7684R\uff1a</p> <p></p> <p>\u548c\u6761\u4ef6\u8df3\u8f6c\u4e0d\u540c\uff0c\u5904\u7406\u5668\u65e0\u9700\u9884\u6d4b\u6d4b\u8bd5\u7684\u7ed3\u679c\u5c31\u53ef\u4ee5\u6267\u884c\u6761\u4ef6\u4f20\u9001\uff0c\u56e0\u6b64\u53ef\u4ee5\u907f\u514d\u5904\u7406\u5668\u56e0\u9519\u8bef\u9884\u6d4b\u5bfc\u81f4\u6027\u80fd\u4e0b\u964d\u3002</p> <p>\u7136\u800c\uff0c\u4e0d\u662f\u6240\u6709\u7684\u6761\u4ef6\u8868\u8fbe\u5f0f\u90fd\u53ef\u4ee5\u7528\u6761\u4ef6\u4f20\u9001\u6765\u7f16\u8bd1\u3002\u4ee5<code>v = test-expr ? then-expr : else-expr</code>\u8bed\u53e5\u4e3a\u4f8b\u5b50\uff0c\u7528\u6761\u4ef6\u4f20\u9001\u7f16\u8bd1\u8fd9\u4e2a\u8868\u8fbe\u5f0f\u4f1a\u5f97\u5230\u4ee5\u4e0b\u63cf\u8ff0\uff1a</p> <pre><code>v = then-expr;\nve = else-expr;\nt = test-expr;\nif (!t) v = ve;\n</code></pre> <p>\u6761\u4ef6\u4f20\u9001\u7684\u7f16\u8bd1\u65b9\u5f0f\u4f1a\u540c\u65f6\u5bf9<code>then-expr</code>\u548c<code>else-expr</code>\u6c42\u503c\u3002\u8fd9\u548cC\u8bed\u8a00\u7684\u6761\u4ef6\u8bed\u53e5\u7684\u6267\u884c\u8fc7\u7a0b\u662f\u4e0d\u4e00\u81f4\u7684\u3002</p> <p>\u56e0\u6b64\uff0c\u6761\u4ef6\u4f20\u9001\u53ea\u80fd\u7528\u4e8e\u975e\u5e38\u53d7\u9650\u5236\u7684\u60c5\u51b5\uff0c\u4ee5\u63d0\u4f9b\u4ee3\u7801\u8fd0\u884c\u7684\u6548\u7387\u3002\u4f8b\u5b50\"cmov\"\u53ea\u6709\u5f00\u542f\u4e86<code>-O1</code>\u4f18\u5316\u9009\u9879\uff0c\u624d\u80fd\u751f\u6210\u6761\u4ef6\u4f20\u9001\u7684\u6c47\u7f16\u4ee3\u7801\uff0c\u9ed8\u8ba4\u60c5\u51b5\u4e0b\u4f7f\u7528\u7684\u662f\u6761\u4ef6\u8df3\u8f6c\u6307\u4ee4\uff1a</p> \u6c47\u7f16\u4ee3\u7801C\u4ee3\u7801 <pre><code># long cmovdiff(long x, long y)\n# x in %rdi, y in %rsi\n0000000000000000 &lt;cmovdiff&gt;:\n 0:   f3 0f 1e fa             endbr64 \n 4:   48 89 f2                mov    %rsi,%rdx\n 7:   48 29 fa                sub    %rdi,%rdx  # y-x\n a:   48 89 f8                mov    %rdi,%rax\n d:   48 29 f0                sub    %rsi,%rax  # rval = x-y\n10:   48 39 fe                cmp    %rdi,%rsi  # \u6bd4\u8f83 y-x\n13:   48 0f 4f c2             cmovg  %rdx,%rax  # \u5982\u679c y&gt;x, rval = y-x\n17:   c3                      retq  \n</code></pre> <pre><code>long cmovdiff(long x, long y)\n{\n    long rval = y-x;\n    long eval = x-y;\n    long ntest = x &gt;= y;\n    if (ntest) rval = eval;\n    return rval;\n}\n</code></pre>"},{"location":"booknotes/csapp/03/#_17","title":"\u5faa\u73af","text":"<p>C\u8bed\u8a00\u63d0\u4f9b\u4e86\u591a\u79cd\u5faa\u73af\u7ed3\u6784\uff0c\u5373<code>do-while</code>\u3001<code>while</code>\u548c<code>for</code>\u3002\u6c47\u7f16\u4e2d\u6ca1\u6709\u76f8\u5e94\u7684\u6307\u4ee4\u5b58\u5728\uff0c\u4f46\u53ef\u4ee5\u7528\u6761\u4ef6\u6d4b\u8bd5\u548c\u8df3\u8f6c\u7ec4\u5408\u8d77\u6765\u5b9e\u73b0\u5faa\u73af\u7684\u6548\u679c\u3002</p> <ul> <li> <p><code>do-while</code>\u5faa\u73af</p> \u6c47\u7f16\u4ee3\u7801\u7684\"do-while\"C\u8bed\u8a00\u7684\"do-while\" <pre><code>loop:\n    body-statement\n    t = test-expr;\n    if (t)\n        goto loop;\n</code></pre> <pre><code>do\n    body-statement\n    while(test-expr);\n</code></pre> </li> <li> <p><code>while</code>\u5faa\u73af</p> \u6c47\u7f16\u4ee3\u7801\u7684\"while\"C\u8bed\u8a00\u7684\"while\" <pre><code>    goto test;\nloop:\n    body-statement\ntest:\n    t = test-expr;\n    if (t)\n        goto loop;\n</code></pre> <pre><code>while(test-expr)\n    body-statement\n</code></pre> </li> <li> <p><code>for</code>\u5faa\u73af</p> \u6c47\u7f16\u4ee3\u7801\u7684\"for\"C\u8bed\u8a00\u7684\"for\" <pre><code>    init-expr;\n    goto test;\nloop:\n    body-statement\n    update-expr;\ntest:\n    t = test-expr;\n    if (t)\n        goto loop;\n</code></pre> <pre><code>for (init-expr; test-expr; update-expr)\n    body-statement\n</code></pre> </li> </ul>"},{"location":"booknotes/csapp/03/#switch","title":"switch\u8bed\u53e5","text":"<p>switch\u8bed\u53e5\u7684\u5173\u952e\u6b65\u9aa4\u662f\u901a\u8fc7\u8df3\u8f6c\u8868\u6765\u8bbf\u95ee\u4ee3\u7801\u4f4d\u7f6e\u3002\u548c\u4f7f\u7528\u4e00\u7ec4\u5f88\u957f\u7684<code>if-else</code>\u8bed\u53e5\u76f8\u6bd4\uff0c\u4f7f\u7528\u8df3\u8f6c\u8868\u7684\u6709\u70b9\u662f\u6267\u884c\u5f00\u5173\u8bed\u53e5\u7684\u65f6\u95f4\u4e0e\u5f00\u5173\u7684\u6570\u91cf\u65e0\u5173\u3002</p> <p>\u4f8b\u5b50\"switch\"\u7f16\u8bd1\u51fa\u7684<code>switch</code>\u8bed\u53e5\u7684\u6c47\u7f16\u4ee3\u7801\uff0c\u5305\u542b\u4e00\u4e2a\u8df3\u8f6c\u8868\uff0c\u7c7b\u4f3cswitch_impl.c\u4e2d\u7684<code>goto</code>\u7248\u672c\u7684C\u4ee3\u7801\u5b9e\u73b0\uff1a</p> \u6c47\u7f16\u4ee3\u7801switch\u8bed\u53e5\"goto\"\u7248\u672c\u7684switch\u8bed\u53e5 <pre><code># void switch_eg(long x, long n, long *dest)\n# x in %rdi, n in %rsi, dest in %rdx\nswitch_eg:\n    subq    $100, %rsi              # index = n - 100\n    cmpq    $6, %rsi                # \u6bd4\u8f83 index-6\n    ja      .L8                     # \u5982\u679c index&gt;6, \u8df3\u8f6c\u5230 default \u5206\u652f\n    leaq    .L4(%rip), %rcx         # \u83b7\u53d6\u8df3\u8f6c\u8868 .L4 \u8d77\u59cb\u5730\u5740\n    movslq  (%rcx,%rsi,4), %rax     # \u83b7\u53d6\u8df3\u8f6c\u8868\u4e2d(index-6)\u4f4d\u7f6e\u7684\u503c\uff0c\u5373\u9700\u8981\u8df3\u8f6c\u7684\u5730\u5740\u76f8\u5bf9\u504f\u79fb\n    addq    %rcx, %rax              # \u8ba1\u7b97\u51fa\u8df3\u8f6c\u5730\u5740\n    notrack jmp *%rax               # \u6267\u884c\u8df3\u8f6c\n.L4:\n    .long    .L7-.L4                # Case 100: loc_A\n    .long    .L8-.L4                # Case 101: loc_def\n    .long    .L6-.L4                # Case 102: loc_B\n    .long    .L5-.L4                # Case 103: loc_C\n    .long    .L3-.L4                # Case 104: loc_D\n    .long    .L8-.L4                # Case 105: loc_def\n    .long    .L3-.L4                # Case 106: loc_D\n</code></pre> <pre><code>void switch_eg(long x, long n, long *dest)\n{\n    long val = x;\n    switch (n)\n    {\n    case 100:\n        val *= 13;\n        break;\n    case 102:\n        val += 10;\n    case 103:\n        val += 11;\n        break;\n    case 104:\n    case 106:\n        val *= val;\n        break;\n    default:\n        val = 0;\n    }\n    *dest = val;\n}\n</code></pre> <pre><code>void switch_eg_impl(long x, long n, long *dest)\n{\n    static void *jt[7] = {\n        &amp;&amp;loc_A, &amp;&amp;loc_def, &amp;&amp;loc_B, &amp;&amp;loc_C, &amp;&amp;loc_D, &amp;&amp;loc_def, &amp;&amp;loc_D\n    };\n    unsigned long index = n - 100;\n    long val;\n    if(index &gt; 6)\n        goto loc_def;\n    goto *jt[index];\n\nloc_A:\n    val = x * 13;\n    goto done;\nloc_B:\n    x = x + 10;\nloc_C:\n    val = x + 11;\n    goto done;\nloc_D:\n    val = x * x;\n    goto done;\nloc_def:\n    val = 0;\ndone:\n    *dest = val;\n}\n</code></pre>"},{"location":"booknotes/csapp/03/#_18","title":"\u8fc7\u7a0b","text":"<p>\u8fc7\u7a0b\u662f\u8f6f\u4ef6\u4e2d\u4e00\u79cd\u5f88\u91cd\u8981\u7684\u62bd\u8c61\u3002\u5047\u8bbe\u8fc7\u7a0bP\u8c03\u7528\u8fc7\u7a0bQ\uff0cQ\u6267\u884c\u540e\u8fd4\u56de\u5230P\u3002\u8fd9\u4e2a\u52a8\u4f5c\u5305\u62ec\u4e86\uff1a</p> <ul> <li>\u4f20\u9012\u63a7\u5236</li> <li>\u4f20\u9012\u6570\u636e</li> <li>\u5206\u914d\u548c\u91ca\u653e\u5185\u5b58</li> </ul>"},{"location":"booknotes/csapp/03/#_19","title":"\u8fd0\u884c\u65f6\u6808","text":"<p>\u4e0b\u56fe\u7ed9\u51fa\u6765\u8fd0\u884c\u65f6\u6808\u7684\u901a\u7528\u7ed3\u6784\uff1a</p> <p></p> <ul> <li>P\u7684\u6808\u5e27<ul> <li>\u901a\u8fc7\u5bc4\u5b58\u5668\uff0c\u8fc7\u7a0bP\u53ef\u4ee5\u4f20\u9012\u6700\u591a6\u4e2a\u6574\u6570\u503c\uff0c\u5982\u679cQ\u9700\u8981\u66f4\u591a\u7684\u53c2\u6570\uff0cP\u9700\u8981\u5728\u8c03\u7528Q\u4e4b\u524d\u5728\u81ea\u5df1\u7684\u6808\u5e27\u91cc\u5b58\u50a8\u597d\u8fd9\u4e9b\u53c2\u6570</li> <li>\u5f53\u8fc7\u7a0bP\u8c03\u7528\u8fc7\u7a0bQ\u65f6\uff0c\u4f1a\u628a\u8fd4\u56de\u5730\u5740\u538b\u5165\u6808\u4e2d\uff0c\u6211\u4eec\u628a\u8fd9\u4e2a\u8fd4\u56de\u5730\u5740\u5f53\u505aP\u7684\u6808\u5e27\u7684\u4e00\u90e8\u5206\uff0c\u56e0\u4e3a\u5b83\u5b58\u653e\u7684\u662f\u4e0eP\u76f8\u5173\u7684\u72b6\u6001</li> </ul> </li> <li>Q\u7684\u6808\u5e27<ul> <li>Q\u7684\u4ee3\u7801\u5728\u8fc7\u7a0b\u7684\u5f00\u59cb\uff0c\u4f1a\u5206\u914d\u5b83\u7684\u6808\u5e27\u6240\u9700\u7684\u7a7a\u95f4<ul> <li>\u5927\u591a\u6570\u8fc7\u7a0b\u7684\u6808\u5e27\u90fd\u662f\u5b9a\u957f\u7684\uff0c\u4f46\u6709\u4e9b\u8fc7\u7a0b\u9700\u8981\u53d8\u957f\u7684\u5e27\uff0c\u5728x86-64\u4e2d\uff0c\u5e38\u7528\u5e27\u6307\u9488<code>%rbp</code>\u5e2e\u52a9\u6808\u5e27\u7684\u7ba1\u7406</li> </ul> </li> <li>\u5728\u8fd9\u4e2a\u7a7a\u95f4\u4e2d\uff0cQ\u53ef\u4ee5\u4fdd\u5b58\u5bc4\u5b58\u5668\u7684\u503c\uff0c\u5206\u914d\u5c40\u90e8\u53d8\u91cf\u7a7a\u95f4\uff0c\u4e3a\u5176\u8c03\u7528\u7684\u8fc7\u7a0b\u8bbe\u7f6e\u53c2\u6570</li> </ul> </li> </ul>"},{"location":"booknotes/csapp/03/#_20","title":"\u63a7\u5236\u8f6c\u79fb","text":"\u6307\u4ee4 \u63cf\u8ff0 call Label \u8fc7\u7a0b\u8c03\u7528 call *Operand \u8fc7\u7a0b\u8c03\u7528 ret \u4ece\u8fc7\u7a0b\u8c03\u7528\u4e2d\u8fd4\u56de <ul> <li><code>call</code>\u6307\u4ee4\u4f1a\u6267\u884c\u4e24\u4e2a\u52a8\u4f5c<ul> <li>\u5c06\u8fd4\u56de\u5730\u5740\u538b\u5165\u6808\u4e2d\uff0c\u6b64\u5730\u5740\u662f\u7d27\u8ddf\u5728<code>call</code>\u6307\u4ee4\u540e\u9762\u7684\u90a3\u6761\u6307\u4ee4\u7684\u5730\u5740</li> <li>\u5c06PC\u5bc4\u5b58\u5668\u8bbe\u7f6e\u4e3a\u8c03\u7528\u8fc7\u7a0b\u7684\u8d77\u59cb\u5730\u5740</li> </ul> </li> <li><code>ret</code>\u6307\u4ee4\u4e5f\u4f1a\u6267\u884c\u4e24\u4e2a\u52a8\u4f5c<ul> <li>\u4ece\u6808\u4e2d\u5f39\u51fa\u8fd4\u56de\u5730\u5740</li> <li>\u5c06PC\u5bc4\u5b58\u5668\u8bbe\u7f6e\u4e3a\u6b64\u8fd4\u56de\u5730\u5740</li> </ul> </li> </ul>"},{"location":"booknotes/csapp/03/#_21","title":"\u6570\u636e\u4f20\u9001","text":"\u64cd\u4f5c\u6570\u5927\u5c0f \u53c2\u65701 \u53c2\u65702 \u53c2\u65703 \u53c2\u65704 \u53c2\u65705 \u53c2\u65706 64 %rdi %rsi %rdx %rcx %r8 %r9 32 %edi %esi %edx %ecx %r8d %r9d 16 %di %si %dx %cx %r8w %r9w 8 %dil %sil %dl %cl %r8b %r9b <p>x86-64\u4e2d\uff0c\u901a\u8fc7\u5bc4\u5b58\u5668\u6700\u591a\u53ef\u4ee5\u4f20\u90126\u4e2a\u6574\u578b\u53c2\u6570\u3002\u5982\u4e0a\u8868\u6240\u793a\uff0c\u6839\u636e\u53c2\u6570\u7684\u4f4d\u6570\u548c\u5728\u51fd\u6570\u8c03\u7528\u4e2d\u4f4d\u7f6e\uff0c\u4f1a\u5206\u914d\u4e0d\u540c\u7684\u5bc4\u5b58\u5668\u3002\u5982\u679c\u4e00\u4e2a\u51fd\u6570\u6709\u5927\u4e8e6\u4e2a\u6574\u578b\u53c2\u6570\uff0c\u8d85\u51fa\u90e8\u5206\u5c31\u8981\u901a\u8fc7\u6808\u6765\u4f20\u9012\u3002</p> <p>\u4f8b\u5b50\"proc_params\"\u4e2d\u7684<code>proc</code>\u51fd\u6570\u67098\u4e2a\u53c2\u6570\uff0c\u4e14\u5927\u5c0f\u5404\u4e0d\u76f8\u540c\uff0c\u901a\u8fc7\u89c2\u5bdf\u5176\u6c47\u7f16\u4ee3\u7801\uff0c\u548c\u4e0a\u9762\u7684\u63cf\u8ff0\u662f\u4e00\u81f4\u7684\uff1a</p> \u6c47\u7f16\u4ee3\u7801C\u4ee3\u7801 <pre><code># void proc(long a1, long *a1p, int a2, int *a2p, short a3, short *a3p, char a4, char *a4p)\n# a1 in %rdi, a1p in %rsi\n# a2 in %edx, a2p in %rcx\n# a3 in %r8w, a3p in %r9\n# a4 at %rsp+8, a4p at %rsp+16\n0000000000000000 &lt;proc&gt;:\n 0:   f3 0f 1e fa             endbr64 \n 4:   48 8b 44 24 10          mov    0x10(%rsp),%rax    # \u5c06 a4p \u5b58\u5165 %rax\n 9:   48 01 3e                add    %rdi,(%rsi)        # *a1p += a1 (64\u4f4d)\n c:   01 11                   add    %edx,(%rcx)        # *a2p += a2 (32\u4f4d)\n e:   66 45 01 01             add    %r8w,(%r9)         # *a3p += a3 (16\u4f4d)\n12:   8b 54 24 08             mov    0x8(%rsp),%edx     # \u5c06 a4 \u5b58\u5165 %edx (8\u4f4d)\n16:   00 10                   add    %dl,(%rax)         # *a4p += a4 (8\u4f4d)\n18:   c3                      retq\n</code></pre> <pre><code>void proc(long a1, long *a1p, int a2, int *a2p, short a3, short *a3p, char a4, char *a4p)\n{\n    *a1p += a1;\n    *a2p += a2;\n    *a3p += a3;\n    *a4p += a4;\n}\n</code></pre>"},{"location":"booknotes/csapp/03/#_22","title":"\u6808\u4e0a\u7684\u5c40\u90e8\u5b58\u50a8","text":"<p>\u5927\u591a\u6570\u60c5\u51b5\u4e0b\u8fc7\u7a0b\u4e2d\u7684\u5c40\u90e8\u6570\u636e\u53ef\u5b58\u653e\u5728\u5bc4\u5b58\u5668\u4e2d\uff0c\u4f46\u6709\u4e9b\u60c5\u51b5\u4e0b\uff0c\u5c40\u90e8\u6570\u636e\u5fc5\u987b\u5b58\u653e\u5728\u5185\u5b58\u4e2d\uff1a</p> <ul> <li>\u5bc4\u5b58\u5668\u4e0d\u8db3\u591f\u5b58\u653e\u6240\u6709\u7684\u672c\u5730\u6570\u636e</li> <li>\u5bf9\u4e00\u4e2a\u5c40\u90e8\u53d8\u91cf\u4f7f\u7528\u4e86\u5730\u5740\u8fd0\u7b97\u7b26<code>&amp;</code>\uff0c\u9700\u8981\u4ea7\u751f\u4e00\u4e2a\u5730\u5740</li> <li>\u5c40\u90e8\u53d8\u91cf\u662f\u6570\u7ec4\u6216\u7ed3\u6784</li> </ul> <p>\u4f8b\u5b50\"proc_params\"\u4e2d\u7684<code>call_proc</code>\u51fd\u6570\u5fc5\u987b\u5728\u6808\u4e0a\u5206\u914d\u5c40\u90e8\u53d8\u91cf\uff0c\u4ee5\u4ea7\u751f\u5c40\u90e8\u53d8\u91cf\u7684\u5730\u5740\uff0c\u4f20\u5165<code>proc</code>\u51fd\u6570\uff1a</p> \u6c47\u7f16\u4ee3\u7801C\u4ee3\u7801 <pre><code># long call_proc()\n#   proc(x1, &amp;x1, x2, &amp;x2, x3, &amp;x3, x4, &amp;x4)\n0000000000000019 &lt;call_proc&gt;:\n19:   f3 0f 1e fa             endbr64 \n1d:   53                      push   %rbx               # \u4fdd\u5b58 %rbx \u5bc4\u5b58\u5668\n1e:   48 83 ec 20             sub    $0x20,%rsp         # \u5728\u6808\u4e0a\u5206\u914d32\u5b57\u8282\u7a7a\u95f4\n22:   bb 28 00 00 00          mov    $0x28,%ebx\n27:   64 48 8b 03             mov    %fs:(%rbx),%rax    # \u83b7\u53d6\u91d1\u4e1d\u96c0\u503c\uff0c\u7528\u4e8e\u4fdd\u62a4\u6808\u6ea2\u51fa\uff0c\u8be6\u60c5\u53c2\u89c1\u540e\u9762\u7684\u7ae0\u8282\n2b:   48 89 44 24 18          mov    %rax,0x18(%rsp)    # \u5728\u6808(%rsp+24)\u5b58\u51658\u5b57\u8282\u7684\u91d1\u4e1d\u96c0\u503c\n30:   31 c0                   xor    %eax,%eax          # \u7f6e\u96f6 %rax\n32:   48 c7 44 24 10 01 00    movq   $0x1,0x10(%rsp)    # \u5728\u6808(%rsp+16)\u5b58\u51658\u5b57\u8282\u7684x1\n39:   00 00 \n3b:   c7 44 24 0c 02 00 00    movl   $0x2,0xc(%rsp)     # \u5728\u6808(%rsp+12)\u5b58\u51654\u5b57\u8282\u7684x2\n42:   00 \n43:   66 c7 44 24 0a 03 00    movw   $0x3,0xa(%rsp)     # \u5728\u6808(%rsp+10)\u5b58\u51652\u5b57\u8282\u7684x3\n4a:   c6 44 24 09 04          movb   $0x4,0x9(%rsp)     # \u5728\u6808(%rsp+9)\u5b58\u51651\u5b57\u8282\u7684x4\n4f:   48 8d 4c 24 0c          lea    0xc(%rsp),%rcx     # \u53c2\u65704\u5bc4\u5b58\u5668 %rcx \u5b58\u5165&amp;x2\n54:   48 8d 74 24 10          lea    0x10(%rsp),%rsi    # \u53c2\u65702\u5bc4\u5b58\u5668 %rsi \u5b58\u5165&amp;x1\n59:   48 8d 44 24 09          lea    0x9(%rsp),%rax     # &amp;x4 \u901a\u8fc7 %rax \u5165\u6808\n5e:   50                      push   %rax               # \u5165\u6808&amp;x4\uff0c\u7528\u4e8e\u53c2\u65708\uff0c\u6808\u9876\u4e0b\u79fb8\u5b57\u8282\n5f:   6a 04                   pushq  $0x4               # \u5165\u6808x4\uff0c\u7528\u4e8e\u53c2\u65707\uff0c\u6808\u9876\u4e0b\u79fb8\u5b57\u8282\n61:   4c 8d 4c 24 1a          lea    0x1a(%rsp),%r9     # \u53c2\u65706\u5bc4\u5b58\u5668 %r9 \u5b58\u5165&amp;x3\uff0c&amp;x3\u5730\u5740\u56e0\u6808\u9876\u53d8\u5316\u9700\u8981\u66f4\u65b0\n66:   41 b8 03 00 00 00       mov    $0x3,%r8d          # \u53c2\u65705\u5bc4\u5b58\u5668 %r8d \u5b58\u5165x3\n6c:   ba 02 00 00 00          mov    $0x2,%edx          # \u53c2\u65703\u5bc4\u5b58\u5668 %edx \u5b58\u5165x2\n71:   bf 01 00 00 00          mov    $0x1,%edi          # \u53c2\u65701\u5bc4\u5b58\u5668 %edi \u5b58\u5165x1\n76:   e8 00 00 00 00          callq  7b &lt;call_proc+0x62&gt;# \u8c03\u7528 proc \u51fd\u6570\n7b:   48 63 4c 24 1c          movslq 0x1c(%rsp),%rcx    # \u5c06x2\u5b58\u5165 %rcx, \u51fd\u6570\u8c03\u7528\u524d\u540e\u6808\u9876\u4f4d\u7f6e\u4e0d\u53d8\n80:   48 03 4c 24 20          add    0x20(%rsp),%rcx    # x1+x2\n85:   0f bf 54 24 1a          movswl 0x1a(%rsp),%edx    # \u5c06x3\u5b58\u5165 %edx\n8a:   0f be 44 24 19          movsbl 0x19(%rsp),%eax    # \u5c06x4\u5b58\u5165 %eax\n8f:   29 c2                   sub    %eax,%edx          # x3-x4\n91:   48 63 c2                movslq %edx,%rax\n94:   48 0f af c1             imul   %rcx,%rax          # (x1+x2)*(x3-x4)\n98:   48 83 c4 10             add    $0x10,%rsp         # \u91ca\u653e call_proc \u53c2\u6570\u5728\u6808\u4e0a\u7684\u7a7a\u95f4\n9c:   48 8b 7c 24 18          mov    0x18(%rsp),%rdi\na1:   64 48 33 3b             xor    %fs:(%rbx),%rdi    # \u68c0\u67e5\u91d1\u4e1d\u96c0\u503c\uff0c\u786e\u4fdd\u6808\u6ca1\u6709\u88ab\u7834\u574f\na5:   75 06                   jne    ad &lt;call_proc+0x94&gt;\na7:   48 83 c4 20             add    $0x20,%rsp         # \u91ca\u653e proc \u7684\u6808\u7a7a\u95f4\nab:   5b                      pop    %rbx               # \u6062\u590d %rbx \u5bc4\u5b58\u5668\nac:   c3                      retq                      # \u8fd4\u56de\nad:   e8 00 00 00 00          callq  b2 &lt;call_proc+0x99&gt;\n</code></pre> <pre><code>long call_proc()\n{\n    long x1 = 1;\n    int x2 = 2;\n    short x3 = 3;\n    char x4 = 4;\n    proc(x1, &amp;x1, x2, &amp;x2, x3, &amp;x3, x4, &amp;x4);\n    return (x1+x2)*(x3-x4);\n}\n</code></pre> <p>\u4e0b\u56fe\u5c55\u793a\u4e86<code>call_proc</code>\u51fd\u6570\u7684\u6808\u5e27\u5185\u5bb9\uff0c\u5176\u4e2d\u201c\u91d1\u4e1d\u96c0\u201d\u7528\u4e8e\u68c0\u9a8c\u6808\u662f\u5426\u88ab\u7834\u574f\uff0c\u8be6\u60c5\u53ef\u53c2\u89c1\"\u6808\u7834\u574f\u68c0\u6d4b\"\u7ae0\u8282\u3002</p> <p></p>"},{"location":"booknotes/csapp/03/#_23","title":"\u5bc4\u5b58\u5668\u4e2d\u7684\u5c40\u90e8\u5b58\u50a8\u7a7a\u95f4","text":"<p>\u6839\u636e\u60ef\u4f8b\uff0c\u5bc4\u5b58\u5668<code>%rbx</code>\u3001<code>%rbp</code>\u548c<code>%r12~%r15</code>\u4e3a\u88ab\u8c03\u7528\u8fd9\u4fdd\u5b58\u5bc4\u5b58\u5668\u3002\u6240\u6709\u5176\u4ed6\u7684\u5bc4\u5b58\u5668\uff0c\u9664\u4e86\u6808\u6307\u9488<code>%rsp</code>\uff0c\u90fd\u4e3a\u8c03\u7528\u8005\u4fdd\u5b58\u5bc4\u5b58\u5668\uff0c\u4efb\u4f55\u51fd\u6570\u90fd\u80fd\u4fee\u6539\u4ed6\u4eec\u3002</p> <p>\u4f8b\u5b50\"proc_reg_save\"\u4e2d\u7684<code>P</code>\u51fd\u6570\u5728\u4e24\u6b21\u8c03\u7528<code>Q</code>\u51fd\u6570\u7684\u8fc7\u7a0b\u4e2d\uff0c\u5229\u7528\u88ab\u8c03\u7528\u8fd9\u4fdd\u5b58\u5bc4\u5b58\u5668<code>%rbx</code>\u548c<code>%rbp</code>\u4fdd\u5b58\u4e86\u5c40\u90e8\u53d8\u91cf\uff0c\u56e0\u6b64\u9700\u8981\u5728\u8c03\u7528\u7ed3\u675f\u65f6\u6062\u590d\u5bc4\u5b58\u5668<code>%rbx</code>\u548c<code>%rbp</code>\u539f\u6765\u7684\u503c\uff1a</p> \u6c47\u7f16\u4ee3\u7801C\u4ee3\u7801 <pre><code># long P(long x, long y)\n# x in %rdi, y in %rsi\n0000000000000009 &lt;P&gt;:\n 9:   f3 0f 1e fa             endbr64 \n d:   55                      push   %rbp           # \u4fdd\u5b58 %rbp\n e:   53                      push   %rbx           # \u4fdd\u5b58 %rbx\n f:   48 89 fd                mov    %rdi,%rbp      # \u4fdd\u5b58x\u5230 %rbp\n12:   48 89 f7                mov    %rsi,%rdi      # \u4fdd\u5b58y\u5230\u53c2\u65701\u5bc4\u5b58\u5668 %rdi\n15:   e8 00 00 00 00          callq  1a &lt;P+0x11&gt;    # \u8c03\u7528 Q(y)\n1a:   48 89 c3                mov    %rax,%rbx      # \u4fdd\u5b58Q(y)\u7684\u8fd4\u56de\u503c\n1d:   48 89 ef                mov    %rbp,%rdi      # \u4fdd\u5b58x\u5230\u53c2\u65701\u5bc4\u5b58\u5668 %rdi\n20:   e8 00 00 00 00          callq  25 &lt;P+0x1c&gt;    # \u8c03\u7528 Q(x)\n25:   48 01 d8                add    %rbx,%rax      # \u5c06Q(y)\u7684\u8fd4\u56de\u503c\uff0c\u52a0\u5230Q(x)\u7684\u8fd4\u56de\u503c\u4e0a\n28:   5b                      pop    %rbx           # \u6062\u590d %rbx\n29:   5d                      pop    %rbp           # \u6062\u590d %rbp\n2a:   c3                      retq\n</code></pre> <pre><code>long P(long x, long y)\n{\n    long u = Q(y);\n    long v = Q(x);\n    return u + v;\n}\n</code></pre>"},{"location":"booknotes/csapp/03/#_24","title":"\u9012\u5f52\u8fc7\u7a0b","text":"<p>\u4f8b\u5b50\"proc_reg_save\"\u4f7f\u7528\u5bc4\u5b58\u5668<code>%rbx</code>\u6765\u4fdd\u5b58\u53c2\u6570n\uff0c\u5148\u628a\u5df2\u6709\u7684\u503c\u4fdd\u5b58\u5728\u6808\u4e0a\uff0c\u5728\u8fd4\u56de\u524d\u6062\u590d\u8be5\u503c\u3002\u56e0\u6b64\uff0c\u9012\u5f52\u6df1\u5ea6\u8d8a\u6df1\uff0c\u6240\u9700\u8981\u7684\u6808\u7a7a\u95f4\u5c31\u8d8a\u5927\u3002</p> \u6c47\u7f16\u4ee3\u7801C\u4ee3\u7801 <pre><code># long rfact(long n)\n# n in %rdi\n0000000000000000 &lt;rfact&gt;:\n 0:   f3 0f 1e fa             endbr64 \n 4:   48 83 ff 01             cmp    $0x1,%rdi          # \u6bd4\u8f83 n-1\n 8:   7f 06                   jg     10 &lt;rfact+0x10&gt;    # \u5982\u679cn&gt;1\uff0c\u8df3\u8f6c\u81f30x10\u884c\n a:   b8 01 00 00 00          mov    $0x1,%eax          # \u5982\u679cn&lt;=1\uff0c\u8fd4\u56de1\n f:   c3                      retq\n10:   53                      push   %rbx               # \u5165\u6808\u4fdd\u5b58 %rbx\n11:   48 89 fb                mov    %rdi,%rbx          # \u628a n \u5b58\u5165 %rbx\n14:   48 8d 7f ff             lea    -0x1(%rdi),%rdi    # \u628a n-1 \u5b58\u5165\u53c2\u65701\u5bc4\u5b58\u5668 %rdi\n18:   e8 00 00 00 00          callq  1d &lt;rfact+0x1d&gt;    # \u8c03\u7528 rfact(n-1)\n1d:   48 0f af c3             imul   %rbx,%rax          # \u5c06\u8c03\u7528\u7ed3\u679c\u4e58\u4ee5 n\n21:   5b                      pop    %rbx               # \u6062\u590d %rbx\n22:   c3                      retq                      # \u8fd4\u56de\n</code></pre> <pre><code>long rfact(long n)\n{\n    long result;\n    if (n &lt;= 1)\n        result = 1;\n    else\n        result = n * rfact(n-1);\n    return result;\n}\n</code></pre>"},{"location":"booknotes/csapp/03/#_25","title":"\u7f13\u51b2\u533a\u6ea2\u51fa\u4fdd\u62a4","text":"<p>\u5c40\u90e8\u53d8\u91cf\u548c\u72b6\u6001\u4fe1\u606f\u90fd\u5b58\u653e\u5728\u6808\u4e2d\uff0cC\u5bf9\u4e8e\u6570\u7ec4\u5f15\u7528\u4e0d\u8fdb\u884c\u4efb\u4f55\u8fb9\u754c\u68c0\u67e5\uff0c\u56e0\u6b64\u5bf9\u6570\u7ec4\u7684\u8d8a\u754c\u5199\u64cd\u4f5c\u4f1a\u7834\u574f\u6808\u4e2d\u7684\u72b6\u6001\u4fe1\u606f\u3002\u4e00\u79cd\u5e38\u89c1\u7684\u72b6\u6001\u7834\u574f\u79f0\u4e3a\u7f13\u51b2\u533a\u6ea2\u51fa\u3002\u73b0\u4ee3\u7f16\u8bd1\u5668\u548c\u64cd\u4f5c\u7cfb\u7edf\u5b9e\u73b0\u4e86\u5f88\u591a\u673a\u5236\uff0c\u9650\u5236\u5165\u4fb5\u8005\u901a\u8fc7\u7f13\u51b2\u533a\u6ea2\u51fa\u653b\u51fb\u3002</p>"},{"location":"booknotes/csapp/03/#_26","title":"\u6808\u968f\u673a\u5316","text":"<p>\u6808\u968f\u673a\u5316\u7684\u601d\u60f3\uff0c\u5229\u7528\u4e86\u5730\u5740\u7a7a\u95f4\u5e03\u5c40\u968f\u673a\u5316(Address-Space Layout Randomization, ASLR)\u6280\u672f\uff0c\u4f7f\u5f97\u6808\u7684\u4f4d\u7f6e\u5728\u7a0b\u5e8f\u6bcf\u6b21\u8fd0\u884c\u65f6\u90fd\u6709\u53d8\u5316\u3002\u56e0\u6b64\uff0c\u9650\u5236\u4e86\u5bf9\u67d0\u4e00\u56fa\u5b9a\u5730\u5740\u7684\u653b\u51fb\u3002\u5176\u5b9e\u73b0\u65b9\u5f0f\u65f6\uff1a\u7a0b\u5e8f\u5f00\u59cb\u65f6\uff0c\u5728\u6808\u4e0a\u5206\u914d\u4e00\u6bb50~n\u5b57\u8282\u4e4b\u95f4\u7684\u968f\u673a\u5927\u5c0f\u7684\u7a7a\u95f4\u3002</p> <p>\u4f8b\u5b50\"protect_ASLR\"\u6bcf\u6b21\u8fd0\u884c\uff0c\u90fd\u4f1a\u6253\u5370\u4e0d\u540c\u7684\u5730\u5740\u503c\u3002\u5f53\u7136\uff0c\u5982\u679c\u5229\u7528<code>setarch `uname -m` -R ./main</code>\uff0c\u7981\u6b62ASLR\u529f\u80fd\uff0c\u5219\u6bcf\u6b21\u6253\u5370\u7684\u7ed3\u6784\u4f1a\u53d8\u5f97\u4e00\u6837\u3002</p> <p><pre><code>int main()\n{\n   long local;\n   printf(\"local at %p\\n\", &amp;local);\n   return 0;\n}\n</code></pre> <pre><code>&gt; ./main\nlocal at 0x7ffda1b6c530\n&gt; ./main\nlocal at 0x7ffded86af10\n\n# \u7981\u6b62ASLR\u8fd0\u884c\u7a0b\u5e8f\n&gt; setarch `uname -m` -R ./main\nlocal at 0x7fffffffdf10\n&gt; setarch `uname -m` -R ./main\nlocal at 0x7fffffffdf10\n</code></pre></p>"},{"location":"booknotes/csapp/03/#_27","title":"\u6808\u7834\u574f\u68c0\u6d4b","text":"<p>\u6808\u7834\u574f\u68c0\u6d4b\u80fd\u591f\u68c0\u6d4b\u5230\u4f55\u65f6\u6808\u5df2\u7ecf\u88ab\u7834\u574f\u3002\u5176\u601d\u60f3\u662f\u5728\u6808\u5e27\u4e2d\u4efb\u4f55\u5c40\u90e8\u7f13\u51b2\u533a\u4e0e\u6808\u72b6\u6001\u4e4b\u95f4\u5b58\u50a8\u4e00\u4e2a\u7279\u6b8a\u7684\u91d1\u4e1d\u96c0\u503c(canary)\uff0c\u4e5f\u79f0\u54e8\u5175\u503c(guard value)\uff0c\u662f\u5728\u7a0b\u5e8f\u6bcf\u6b21\u8fd0\u884c\u65f6\u968f\u673a\u4ea7\u751f\u7684\u3002\u5728\u6062\u590d\u5bc4\u5b58\u5668\u72b6\u6001\u548c\u4ece\u51fd\u6570\u8fd4\u56de\u4e4b\u524d\uff0c\u7a0b\u5e8f\u68c0\u67e5\u8fd9\u4e2a\u91d1\u4e1d\u96c0\u503c\u662f\u5426\u88ab\u8be5\u51fd\u6570\u7684\u67d0\u4e2a\u64cd\u4f5c\u6216\u8005\u8be5\u51fd\u6570\u8c03\u7528\u7684\u67d0\u4e2a\u51fd\u6570\u7684\u67d0\u4e2a\u64cd\u4f5c\u6539\u53d8\u4e86\u3002\u5982\u679c\u662f\u7684\uff0c\u90a3\u4e48\u7a0b\u5e8f\u5f02\u5e38\u4e2d\u6b62\u3002</p> <p>\u91d1\u4e1d\u96c0\u503c\u662f\u901a\u8fc7\u6307\u4ee4\u53c2\u6570<code>%fs:40</code>\uff0c\u7528\u6bb5\u5bfb\u5740(segmented addressiong)\u4ece\u5185\u5b58\u4e2d\u8bfb\u5165\u7684\u3002\u5c06\u91d1\u4e1d\u96c0\u503c\u5b58\u653e\u5728\u4e00\u4e2a\u7279\u6b8a\u7684\u6bb5\u4e2d\uff0c\u6807\u5fd7\u4e3a\u201c\u53ea\u8bfb\u201d\uff0c\u8fd9\u6837\u653b\u51fb\u8005\u5c31\u4e0d\u80fd\u8986\u76d6\u5b58\u50a8\u7684\u91d1\u4e1d\u96c0\u503c\u3002</p> <p>\u4f8b\u5b50\"protect_canary\"\u9ed8\u8ba4\u60c5\u51b5\u4e0b\u80fd\u4ea7\u751f\u62e5\u6709\u6808\u7834\u574f\u68c0\u67e5\u7684\u4ee3\u7801\uff0c\u5229\u7528<code>-fno-stack-protector</code>\u9009\u9879\uff0c\u4e5f\u53ef\u4ee5\u4ea7\u751f\u6ca1\u6709\u91d1\u4e1d\u96c0\u503c\u7684\u4ee3\u7801\uff1a</p> \u6709\"\u91d1\u4e1d\u96c0\"\u503c\u7684\u6c47\u7f16\u4ee3\u7801\u6ca1\u6709\"\u91d1\u4e1d\u96c0\"\u503c\u7684\u6c47\u7f16\u4ee3\u7801C\u4ee3\u7801 <pre><code># void bar()\n#   foo(&amp;x);\n#   &amp;x in %rdi\n0000000000000021 &lt;bar&gt;:\n21:   f3 0f 1e fa             endbr64 \n25:   55                      push   %rbp               # \u5165\u6808\u4fdd\u5b58 %rbp\n26:   48 89 e5                mov    %rsp,%rbp          # \u8bbe\u7f6e\u5e27\u6307\u9488 %rbp\n29:   48 83 ec 10             sub    $0x10,%rsp         # \u5206\u914d16\u5b57\u8282\u6808\u7a7a\u95f4\n2d:   64 48 8b 04 25 28 00    mov    %fs:0x28,%rax      # \u83b7\u53d6\u91d1\u4e1d\u96c0\u503c\n34:   00 00 \n36:   48 89 45 f8             mov    %rax,-0x8(%rbp)    # \u5c068\u5b57\u8282\u91d1\u4e1d\u96c0\u503c\u5199\u5165\u6808\n3a:   31 c0                   xor    %eax,%eax\n3c:   48 c7 45 f0 01 00 00    movq   $0x1,-0x10(%rbp)   # \u5c068\u5b57\u8282x\u503c\u5199\u5165\u6808\n43:   00 \n44:   48 8d 45 f0             lea    -0x10(%rbp),%rax   # &amp;x\n48:   48 89 c7                mov    %rax,%rdi          # \u8bbe\u7f6efoo\u51fd\u6570\u53c2\u65701\u4e3a&amp;x\n4b:   e8 00 00 00 00          callq  50 &lt;bar+0x2f&gt;      # \u8c03\u7528foo(&amp;x)\n50:   90                      nop\n51:   48 8b 45 f8             mov    -0x8(%rbp),%rax    # \u83b7\u53d6\u6808\u4e0a\u7684\u91d1\u4e1d\u96c0\u503c\n55:   64 48 33 04 25 28 00    xor    %fs:0x28,%rax      # \u68c0\u6d4b\u91d1\u4e1d\u96c0\u503c\u662f\u5426\u6b63\u786e\n5c:   00 00 \n5e:   74 05                   je     65 &lt;bar+0x44&gt;\n60:   e8 00 00 00 00          callq  65 &lt;bar+0x44&gt;\n65:   c9                      leaveq \n66:   c3                      retq \n</code></pre> <pre><code># void bar()\n#   foo(&amp;x);\n#   &amp;x in %rdi\n0000000000000021 &lt;bar&gt;:\n21:   f3 0f 1e fa             endbr64 \n25:   55                      push   %rbp               # \u5165\u6808\u4fdd\u5b58 %rbp\n26:   48 89 e5                mov    %rsp,%rbp          # \u8bbe\u7f6e\u5e27\u6307\u9488 %rbp\n29:   48 83 ec 10             sub    $0x10,%rsp         # \u5206\u914d16\u5b57\u8282\u6808\u7a7a\u95f4\n2d:   48 c7 45 f8 01 00 00    movq   $0x1,-0x8(%rbp)    # \u5c068\u5b57\u8282\u91d1\u4e1d\u96c0\u503c\u5199\u5165\u6808\n34:   00 \n35:   48 8d 45 f8             lea    -0x8(%rbp),%rax    # &amp;x\n39:   48 89 c7                mov    %rax,%rdi          # \u8bbe\u7f6efoo\u51fd\u6570\u53c2\u65701\u4e3a&amp;x\n3c:   e8 00 00 00 00          callq  41 &lt;bar+0x20&gt;      # \u8c03\u7528foo(&amp;x)\n41:   90                      nop\n42:   c9                      leaveq \n43:   c3                      retq\n</code></pre> <pre><code>void foo(long *x)\n{\n    *x += 1;\n}\n\nvoid bar()\n{\n    long x = 1;\n    foo(&amp;x);\n}\n</code></pre>"},{"location":"booknotes/csapp/03/#_28","title":"\u9650\u5236\u53ef\u6267\u884c\u4ee3\u7801\u533a\u57df","text":"<p>\u6700\u540e\u4e00\u62db\u662f\u6d88\u9664\u653b\u51fb\u8005\u5411\u7cfb\u7edf\u4e2d\u63d2\u5165\u53ef\u6267\u884c\u4ee3\u7801\u7684\u80fd\u529b\u3002\u786c\u4ef6\u652f\u6301\u591a\u79cd\u5f62\u5f0f\u7684\u5185\u5b58\u4fdd\u62a4\uff0c\u80fd\u591f\u6307\u660e\u7528\u6237\u7a0b\u5e8f\u548c\u64cd\u4f5c\u7cfb\u7edf\u5185\u6838\u6240\u5141\u8bb8\u7684\u8bbf\u95ee\u5f62\u5f0f\uff0c\u5305\u62ec\uff1a\u8bfb\u3001\u5199\u548c\u6267\u884c\u3002\u6808\u53ef\u4ee5\u88ab\u6807\u8bb0\u4e3a\u53ef\u8bfb\u548c\u53ef\u5199\uff0c\u4f46\u662f\u4e0d\u53ef\u6267\u884c\uff0c\u4ece\u800c\u9632\u6b62\u8fd0\u884c\u6808\u4e0a\u7684\u6076\u610f\u4ee3\u7801\u3002</p>"},{"location":"booknotes/csapp/03/#_29","title":"\u5176\u4ed6","text":""},{"location":"booknotes/csapp/03/#_30","title":"\u6570\u636e\u5bf9\u9f50","text":"<p>\u4e3a\u4e86\u7b80\u5316\u786c\u4ef6\u8bbe\u8ba1\uff0c\u67d0\u79cd\u7c7b\u578b\u5bf9\u8c61\u7684\u5730\u5740\u5fc5\u987b\u662f\u67d0\u4e2a\u503cK\uff08\u901a\u5e38\u65f62\u30014\u62168\uff09\u7684\u500d\u6570\u3002</p> K \u7c7b\u578b 1 char 2 short 4 int, float 8 long, double, char* <p>\u9ed8\u8ba4\u60c5\u51b5\u4e0b\uff0c\u7ed3\u6784\u4f53\u6570\u636e\u5bf9\u9f50\u9075\u5faa\u4e24\u4e2a\u539f\u5219\uff1a</p> <ul> <li>\u6210\u5458\u53d8\u91cf\u95f4\u9700\u8981\u6dfb\u52a0\u7a7a\u9699\uff0c\u4f7f\u6bcf\u4e2a\u6210\u5458\u53d8\u91cf\u7684\u5730\u5740\u81ea\u8eab\u5bf9\u9f50\uff0c\u5373\u81ea\u8eab\u7c7b\u578b\u5927\u5c0f\u7684\u500d\u6570</li> <li>\u7ed3\u6784\u4f53\u672b\u5c3e\u9700\u8981\u6dfb\u52a0\u7a7a\u9699\uff0c\u4f7f\u7ed3\u6784\u4f53\u5927\u5c0f\u4e3a\u5176\u6700\u5927\u6210\u5458\u53d8\u91cf\u5927\u5c0f\u7684\u500d\u6570\uff0c\u8fd9\u6837\u7ed3\u6784\u4f53\u7684\u6570\u7ec4\u7c7b\u578b\u4e5f\u80fd\u6ee1\u8db3\u5bf9\u9f50\u8981\u6c42</li> </ul> <p><code>#pragma pack(n)</code>\u547d\u4ee4\u6307\u5b9a\u5bf9\u9f50\u503c\u540e\uff0c\u6709\u6548\u5bf9\u9f50\u503c=min{\u81ea\u8eab\u5bf9\u9f50\u503c\uff0c\u5f53\u524d\u6307\u5b9a\u7684\u5bf9\u9f50\u503c}\uff0c\u56e0\u6b64\u53ef\u4ee5\u51cf\u5c11\u7ed3\u6784\u4f53\u7684\u5927\u5c0f\u3002</p> <p>\u4f8b\u5b50\"data_size\"\u6253\u5370\u4e86\u4e0d\u540c\u7ed3\u6784\u4f53\u7684\u5927\u5c0f\uff1a</p> <p><pre><code>struct A\n{\n    char a;     // 0\n    short b;    // 2\n    int c;      // 4\n};              // 8\n\nstruct B\n{\n    char a;     // 0\n    int b;      // 4\n    short c;    // 8\n};              // 12\n\n#pragma pack(2)\nstruct C\n{\n    char a;     // 0\n    int b;      // 2\n    short c;    // 6\n};              // 8\n#pragma pack()\n\nstruct D\n{\n    double a;   // 0\n    char b;     // 8\n};              // 16\n\n#pragma pack(4)\nstruct E\n{\n    double a;   // 0\n    char b;     // 8\n};              // 12\n#pragma pack()\n</code></pre> <pre><code>&gt;./main\nsize class A: 8\nsize class B: 12\nsize class C: 8\nsize class D: 16\nsize class E: 12\n</code></pre></p>"},{"location":"booknotes/csapp/04/","title":"\u5904\u7406\u5668\u4f53\u7cfb\u7ed3\u6784","text":"<p>\u300a\u6df1\u5165\u7406\u89e3\u8ba1\u7b97\u673a\u7cfb\u7edf\u300b - Randal E. Bryant - \u7b2c\u4e09\u7248\uff0c\u7b2c\u56db\u7ae0\u7684\u8bfb\u4e66\u7b14\u8bb0\uff0c\u672c\u6587\u4e2d\u7684\u6240\u6709\u4ee3\u7801\u53ef\u5728GitHub\u4ed3\u5e93\u4e2d\u627e\u5230</p> <p>\u4e00\u4e2a\u5904\u7406\u5668\u652f\u6301\u7684\u6307\u4ee4\u548c\u6307\u4ee4\u7684\u5b57\u8282\u7ea7\u7f16\u7801\u79f0\u4e3a\u5b83\u7684\u6307\u4ee4\u96c6\u4f53\u7cfb\u7ed3\u6784(Instruction-Set Architecture, ISA)\u3002ISA\u5728\u7f16\u8bd1\u5668\u7f16\u5199\u8005\u548c\u5904\u7406\u5668\u8bbe\u8ba1\u4eba\u5458\u4e4b\u95f4\u63d0\u4f9b\u4e86\u4e00\u4e2a\u6982\u5ff5\u62bd\u8c61\u5c42\uff0c\u7f16\u8bd1\u5668\u7f16\u5199\u8005\u53ea\u9700\u8981\u77e5\u9053\u5141\u8bb8\u54ea\u4e9b\u6307\u4ee4\uff0c\u4ee5\u53ca\u5b83\u4eec\u662f\u5982\u4f55\u7f16\u7801\u7684\uff1b\u800c\u5904\u7406\u5668\u8bbe\u8ba1\u8005\u5fc5\u987b\u5efa\u9020\u51fa\u6267\u884c\u8fd9\u4e9b\u6307\u4ee4\u7684\u5904\u7406\u5668\u3002</p> <p>\u672c\u7ae0\u5c06\u7b80\u8981\u4ecb\u7ecd\u5904\u7406\u5668\u786c\u4ef6\u7684\u8bbe\u8ba1\uff1a</p> <ul> <li>\u9996\u5148\u5b9a\u4e49\u4e00\u4e2a\u7b80\u5355\u7684\u6307\u4ee4\u96c6\u201cY86-64\u201d</li> <li>\u7136\u540e\u4ecb\u7ecd\u4e00\u79cd\u786c\u4ef6\u63a7\u5236\u8bed\u8a00(Hardware Control Language, HCL)\uff0c\u7528\u4e8e\u63cf\u8ff0\u6211\u4eec\u7684\u5904\u7406\u5668\u8bbe\u8ba1<ul> <li>\u5148\u8bbe\u8ba1\u4e00\u4e2a\u57fa\u4e8e\u987a\u5e8f\u64cd\u4f5c\u3001\u529f\u80fd\u6b63\u786e\u7684Y86-64\u5904\u7406\u5668</li> <li>\u518d\u521b\u5efa\u4e00\u4e2a\u6d41\u6c34\u7ebf\u5316\u7684\u5904\u7406\u5668</li> </ul> </li> <li>\u6700\u540e\u8fd8\u4f1a\u8bbe\u8ba1\u4e00\u4e9b\u5de5\u5177\u6765\u7814\u7a76\u548c\u6d4b\u8bd5\u5904\u7406\u5668\u8bbe\u8ba1<ul> <li>\u5305\u62ecY86-64\u7684\u6c47\u7f16\u5668\u3001Y86-64\u7684\u6a21\u62df\u5668(\u57fa\u4e8eHCL\u6587\u4ef6)</li> </ul> </li> </ul>"},{"location":"booknotes/csapp/04/#y86-64","title":"Y86-64\u6307\u4ee4\u96c6\u4f53\u7cfb\u7ed3\u6784","text":""},{"location":"booknotes/csapp/04/#_2","title":"\u7a0b\u5e8f\u5458\u53ef\u89c1\u7684\u72b6\u6001","text":"<p>Y86-64\u7684\u7a0b\u5e8f\u53ef\u4ee5\u8bbf\u95ee\u548c\u4fee\u6539\u7a0b\u5e8f\u5bc4\u5b58\u5668\u3001\u6761\u4ef6\u7801\u3001\u7a0b\u5e8f\u8ba1\u6570\u5668\u548c\u5185\u5b58\u3002\u8fd9\u4e9b\u72b6\u6001\u76f8\u5f53\u4e8eY86-64\u7684\u786c\u4ef6\u63a5\u53e3\uff0c\u5728\u63a5\u4e0b\u6765\u5206\u6790Y86_64\u6307\u4ee4\u7684\u8fc7\u7a0b\u4e2d\uff0c\u8bf7\u65f6\u523b\u5173\u6ce8\u8fd9\u4e9b\u72b6\u6001\u7684\u53d8\u5316\u3002</p>"},{"location":"booknotes/csapp/04/#y86-64_1","title":"Y86-64\u6307\u4ee4","text":"<p>\u4e0a\u56fe\u663e\u793a\u4e86Y86-64\u5404\u6307\u4ee4\u7684\u7ed3\u6784\u3002\u867d\u7136\u4e0d\u540c\u6307\u4ee4\u7684\u957f\u5ea6\u548c\u529f\u80fd\u90fd\u4e0d\u540c\uff0c\u4f46\u662f\u4e3a\u4e86\u6700\u5927\u9650\u5ea6\u5730\u590d\u7528\u786c\u4ef6\u7535\u8def\uff0c\u6bcf\u4e2a\u6307\u4ee4\u90fd\u9075\u5faa\u76f8\u540c\u7684\u6267\u884c\u6a21\u5f0f\uff0c\u8be6\u60c5\u53ef\u53c2\u8003\"\u5c06\u5904\u7406\u7ec4\u7ec7\u6210\u9636\u6bb5\"\u7ae0\u8282</p>"},{"location":"booknotes/csapp/04/#y86-64_2","title":"Y86-64\u7a0b\u5e8f","text":"<p>\u6839\u636eY86-64\u6307\u4ee4\u89c4\u5219\uff0c\u4e0b\u9762\u7ed9\u51fa<code>sum</code>\u51fd\u6570\u5728Y86-64\u4e0b\u7684\u6c47\u7f16\u4ee3\u7801\uff1a</p> C\u4ee3\u7801\"Y86-64\"\u6c47\u7f16\u4ee3\u7801\"x86-64\"\u6c47\u7f16\u4ee3\u7801 <pre><code>long sum(long *start, long count)\n{\n    long sum = 0;\n    while (count)\n    {\n        sum += *start;\n        start++;\n        count--;\n    }\n    return sum;\n}\n</code></pre> <pre><code># long sum(long *start, long count)\n# start in %rdi, count in %rsi\nsum:\n    irmovq $8,%r8       # \u5c06\u5e38\u65708\u653e\u5165\u5bc4\u5b58\u5668\n    irmovq $1,%r9       # \u5c06\u5e38\u65701\u653e\u5165\u5bc4\u5b58\u5668\n    xorq %rax,%rax      # sum = 0\n    andq %rsi,%rsi      # \u521d\u59cb\u5316\u6761\u4ef6\u7801\uff0c\u975e\u96f6\u6807\u5fd7\nloop:\n    mrmovq (%rdi),%r10  # \u83b7\u53d6*start\u503c\n    addq %r10,%rax      # sum += *start\n    addq %r8,%rdi       # start++\n    subq %r9,%rsi       # count--\uff0c\u5e76\u8bbe\u7f6e\u6761\u4ef6\u7801\ntest:\n    jne loop            # \u5f53count\u975e\u96f6\u65f6\uff0c\u8df3\u8f6c\n    ret\n</code></pre> <pre><code># long sum(long *start, long count)\n# start in %rdi, count in %rsi\nsum:\n    movl $0,%eax        # sum = 0\n    jmp .L2             # \u8df3\u8f6c\u5230test\n.L3:                    # loop:\n    addq (%rdi),%rax    # sum += *start\n    addq $8,%rdi        # start++\n    subq $1,%rsi        # count--\ntest:\n    testq %rsi,%rsi\n    jne .L3             # \u5f53count\u975e\u96f6\u65f6\uff0c\u8df3\u8f6c\n    ret\n</code></pre> <p>\"Y86-64\"\u6c47\u7f16\u4ee3\u7801\u548c\"x86-64\"\u6c47\u7f16\u4ee3\u7801\u4e0d\u540c\u4e4b\u5904\u6709\uff1a</p> <ul> <li>Y86-64\u9700\u8981\u5c06\u5e38\u6570\u52a0\u8f7d\u5230\u5bc4\u5b58\u5668\uff0c\u4e0d\u80fd\u4f7f\u7528\u7acb\u5373\u6570</li> <li>\u8981\u5b9e\u73b0\u4ece\u5185\u5b58\u8bfb\u53d6\u4e00\u4e2a\u6570\u503c\u5e76\u5c06\u5176\u4e0e\u4e00\u4e2a\u5bc4\u5b58\u5668\u76f8\u52a0\uff0cY86-64\u9700\u8981\u4e24\u6761\u6307\u4ee4(\u7b2c9~10\u884c)\uff0c\u800cx86-64\u53ea\u9700\u8981\u4e00\u6761<code>addq</code>\u6307\u4ee4(\u7b2c7\u884c)</li> </ul>"},{"location":"booknotes/csapp/04/#hcl","title":"\u903b\u8f91\u8bbe\u8ba1\u548c\u786c\u4ef6\u63a7\u5236\u8bed\u8a00HCL","text":"<p>\u8981\u5b9e\u73b0\u4e00\u4e2a\u6570\u5b57\u7cfb\u7edf\u9700\u8981\u4e09\u4e2a\u4e3b\u8981\u7684\u7ec4\u6210\u90e8\u5206\uff1a</p> <ul> <li>\u8ba1\u7b97\u5bf9\u4f4d\u8fdb\u884c\u64cd\u4f5c\u7684\u51fd\u6570\u7684\u7ec4\u5408\u903b\u8f91</li> <li>\u5b58\u50a8\u4f4d\u7684\u5b58\u50a8\u5355\u5143</li> <li>\u63a7\u5236\u5b58\u50a8\u5668\u5355\u5143\u66f4\u65b0\u7684\u65f6\u949f\u4fe1\u53f7</li> </ul>"},{"location":"booknotes/csapp/04/#_3","title":"\u7ec4\u5408\u7535\u8def","text":"<p>\u5c06\u5f88\u591a\u7684\u903b\u8f91\u95e8\u7ec4\u5408\u6210\u4e00\u4e2a\u7f51\uff0c\u5c31\u80fd\u6784\u5efa\u8ba1\u7b97\u5757(computational block)\uff0c\u79f0\u4e3a\u7ec4\u5408\u7535\u8def(combinational circuits)\u3002\u5982\u4f55\u6784\u5efa\u8fd9\u4e9b\u7f51\u6709\u51e0\u4e2a\u9650\u5236\uff1a</p> <ul> <li>\u6bcf\u4e2a\u903b\u8f91\u95e8\u7684\u8f93\u5165\u5fc5\u987b\u662f\u4e0b\u8ff0\u9009\u9879\u4e4b\u4e00\uff1a<ul> <li>\u4e00\u4e2a\u7cfb\u7edf\u8f93\u5165</li> <li>\u67d0\u4e2a\u5b58\u50a8\u5355\u5143\u7684\u8f93\u51fa</li> <li>\u67d0\u4e2a\u903b\u8f91\u95e8\u7684\u8f93\u51fa</li> </ul> </li> <li>\u4e24\u4e2a\u6216\u591a\u4e2a\u903b\u8f91\u95e8\u7684\u8f93\u51fa\u4e0d\u80fd\u8fde\u63a5\u5728\u4e00\u8d77</li> <li>\u8fd9\u4e2a\u7f51\u5fc5\u987b\u662f\u65e0\u73af\u7684\uff0c\u5373\u7f51\u4e2d\u4e0d\u80fd\u6709\u8def\u5f84\u7ecf\u8fc7\u4e00\u7cfb\u5217\u7684\u95e8\u800c\u5f62\u6210\u4e00\u4e2a\u56de\u8def</li> </ul>"},{"location":"booknotes/csapp/04/#_4","title":"\u65f6\u5e8f\u7535\u8def","text":"<p>\u7ec4\u5408\u7535\u8def\u4e0d\u5b58\u50a8\u4efb\u4f55\u4fe1\u606f\u3002\u4e3a\u4e86\u4ea7\u751f\u65f6\u5e8f\u7535\u8def(sequential circuit)\uff0c\u4e5f\u5c31\u662f\u6709\u72b6\u6001\u5e76\u4e14\u5728\u8fd9\u4e2a\u72b6\u6001\u4e0a\u8fdb\u884c\u8ba1\u7b97\u7684\u7cfb\u7edf\uff0c\u6211\u4eec\u5fc5\u987b\u5f15\u5165\u6309\u4f4d\u5b58\u50a8\u4fe1\u606f\u7684\u8bbe\u5907\uff0c\u5305\u62ec\uff1a\u7a0b\u5e8f\u8ba1\u6570\u5668\u3001\u6761\u4ef6\u7801\u3001\u5bc4\u5b58\u5668\u6587\u4ef6\u3001\u5185\u5b58\u7b49\u3002\u65f6\u5e8f\u7535\u8def\u662f\u4f5c\u4e3a\u7535\u8def\u4e0d\u540c\u90e8\u5206\u4e2d\u7684\u7ec4\u5408\u903b\u8f91\u4e4b\u95f4\u7684\u5c4f\u969c\u3002</p> <p>\u4e0b\u56fe\u7ed9\u51fa\u4e86\u7a0b\u5e8f\u8ba1\u6570\u5668\u3001\u72b6\u6001\u7801\u3001\u5bc4\u5b58\u5668\u6587\u4ef6\u548c\u5185\u5b584\u4e2a\u72b6\u6001\u5355\u5143\u3002\u7ec4\u5408\u903b\u8f91(\u4f8b\u5982ALU)\u73af\u7ed5\u7740\u6761\u4ef6\u7801\u5bc4\u5b58\u5668\uff0c\u4ea7\u751f\u8f93\u5165\u5230\u6761\u4ef6\u7801\u5bc4\u5b58\u5668\u3002\u800c\u5176\u4ed6\u90e8\u5206(\u4f8b\u5982\u5206\u652f\u8ba1\u7b97\u548cPC\u9009\u62e9\u903b\u8f91)\u53c8\u5c06\u6761\u4ef6\u7801\u5bc4\u5b58\u5668\u4f5c\u4e3a\u8f93\u5165\u3002</p> <p></p> <p>\u4e0a\u56fe\u4e2d\u84dd\u8272\u90e8\u5206\u8868\u793a<code>addq</code>\u6307\u4ee4\u76f8\u5173\u5355\u5143\uff0c</p> <ul> <li>\u5728\u65f6\u949f\u5468\u671f3\u5f00\u59cb\u7684\u65f6\u5019(\u70b91)<ul> <li>\u5f00\u59cb<code>addq</code>\u6307\u4ee4\u7684\u7ec4\u5408\u903b\u8f91\u5de5\u4f5c</li> <li>\u72b6\u6001\u5355\u5143\u66f4\u65b0\u4e3a<code>irmovq</code>\u6307\u4ee4\u7684\u72b6\u6001</li> </ul> </li> <li>\u5728\u65f6\u949f\u5468\u671f3\u672b\u5c3e\u7684\u65f6\u5019(\u70b92)<ul> <li><code>addq</code>\u6307\u4ee4\u7ec4\u5408\u903b\u8f91\u5de5\u4f5c\u5b8c\u6210\uff0c\u4e3a\u5176\u72b6\u6001\u5355\u5143\u51c6\u5907\u597d\u4e86\u65b0\u503c</li> <li>\u6b64\u65f6\u72b6\u6001\u5355\u5143\u8fd8\u7ef4\u6301\u7740<code>irmovq</code>\u6307\u4ee4\u7684\u72b6\u6001</li> </ul> </li> <li>\u5728\u65f6\u949f\u5468\u671f4\u5f00\u59cb\u7684\u65f6\u5019(\u70b93)<ul> <li>\u5f00\u59cb<code>je</code>\u6307\u4ee4\u7684\u7ec4\u5408\u903b\u8f91\u5de5\u4f5c</li> <li>\u72b6\u6001\u5355\u5143\u66f4\u65b0\u4e3a<code>addq</code>\u6307\u4ee4\u7684\u72b6\u6001</li> </ul> </li> <li>\u5728\u65f6\u949f\u5468\u671f4\u672b\u5c3e\u7684\u65f6\u5019(\u70b94)<ul> <li><code>je</code>\u6307\u4ee4\u7ec4\u5408\u903b\u8f91\u5de5\u4f5c\u5b8c\u6210\uff0c\u4e3a\u5176\u72b6\u6001\u5355\u5143\u51c6\u5907\u597d\u4e86\u65b0\u503c</li> <li>\u6b64\u65f6\u72b6\u6001\u5355\u5143\u8fd8\u7ef4\u6301\u7740<code>addq</code>\u6307\u4ee4\u7684\u72b6\u6001</li> </ul> </li> </ul>"},{"location":"booknotes/csapp/04/#hcl_1","title":"HCL\u8868\u8fbe\u5f0f","text":"<p>\u786c\u4ef6\u63cf\u8ff0\u8bed\u8a00(Hardware Description Language, HDL)\u662f\u4e00\u79cd\u7528\u6765\u63cf\u8ff0\u786c\u4ef6\u7ed3\u6784\uff0c\u800c\u4e0d\u662f\u7a0b\u5e8f\u884c\u4e3a\u7684\u6587\u672c\u8868\u793a\u65b9\u5f0f\u3002\u6211\u4eec\u7684<code>HCL</code>\u8bed\u8a00\u53ea\u8868\u8fbe\u786c\u4ef6\u8bbe\u8ba1\u7684\u63a7\u5236\u90e8\u5206\u3002\u5c06<code>HCL</code>\u4ee3\u7801\u4e0e\u57fa\u672c\u786c\u4ef6\u5355\u5143\u7684<code>Verilog</code>\u4ee3\u7801\u7ed3\u5408\u8d77\u6765\uff0c\u5c31\u80fd\u4ea7\u751f<code>HDL</code>\u63cf\u8ff0\u3002</p> <p><code>HCL</code>\u4e3b\u8981\u5305\u62ec\u4ee5\u4e0b\u51e0\u7c7b\u8bed\u6cd5\u5f62\u5f0f\uff1a</p> <ul> <li>\u5e03\u5c14\u8868\u8fbe\u5f0f<ul> <li>\u7528\u4e8e\u63cf\u8ff0\u7b80\u5355\u7684\u7ec4\u5408\u7535\u8def\uff0c\u4f8b\u5982\uff0c\u4e0b\u9762\u7684\u8868\u8fbe\u5f0f\u63cf\u8ff0\u4e86\u4e24\u4e2a\u4e0e\u95e8\u548c\u4e00\u4e2a\u6216\u95e8\u7684\u7ec4\u5408\u7535\u8def\uff1a <pre><code>bool eq = (a &amp;&amp; b) || (!a &amp;&amp; !b);\n</code></pre></li> </ul> </li> <li>\u6574\u6570\u8868\u8fbe\u5f0f<ul> <li>\u7528\u4e8e\u63cf\u8ff0\u590d\u6742\u7684\u7ec4\u5408\u7535\u8def\uff0c\u4f8b\u5982\uff0c\u4e0b\u9762\u7684\u8868\u8fbe\u5f0f\u63cf\u8ff0\u4e86\u5b57\u7ea7(\u591a\u4f4d\u6570\u636e)\u76f8\u7b49\u6d4b\u8bd5\u7535\u8def\uff1a <pre><code>bool Eq = (A == B);\n</code></pre></li> </ul> </li> <li>\u60c5\u51b5\u8868\u8fbe\u5f0f<ul> <li>\u7528\u4e8e\u63cf\u8ff0\u591a\u8def\u590d\u7528\u5668\uff0c\u4f8b\u5982\uff0c\u4e0b\u9762\u7684\u8868\u793a\u5f0f\u63cf\u8ff0\u4e86\u4e00\u4e2a\u56db\u8def\u590d\u7528\u5668\uff1a <pre><code>word Out4 = [\n    !s1 &amp;&amp; !s0  : A; #00\n    !s1         : B; #01\n    !s0         : C; #10\n    1           : D; #11\n];\n</code></pre></li> </ul> </li> <li>\u96c6\u5408\u5173\u7cfb<ul> <li>\u7528\u4e8e\u5224\u65ad\u67d0\u4e2a\u6307\u4ee4\u4ee3\u7801\u662f\u5426\u5c5e\u4e8e\u67d0\u4e00\u7c7b\u6307\u4ee4\u4ee3\u7801 <pre><code>bool s1 = code in {2, 3};   #\u5f53code\u5728\u96c6\u5408{2, 3}\u4e2d\u65f6\uff0cs1\u4e3a1\nbool s0 = code in {1, 3};   #\u5f53code\u5728\u96c6\u5408{1, 3}\u4e2d\u65f6\uff0cs0\u4e3a1\n</code></pre></li> </ul> </li> </ul>"},{"location":"booknotes/csapp/04/#y86-64_3","title":"Y86-64\u987a\u5e8f\u5b9e\u73b0","text":""},{"location":"booknotes/csapp/04/#_5","title":"\u5c06\u5904\u7406\u7ec4\u7ec7\u6210\u9636\u6bb5","text":"<p>\u4e3a\u4e86\u7edf\u4e00\uff0c\u5c06Y86-64\u6307\u4ee4\u7684\u6267\u884c\u8fc7\u7a0b\u5206\u4e3a\u4e94\u4e2a\u9636\u6bb5\uff1a</p> <ul> <li>\u53d6\u503c(fetch)<ul> <li>\u4ece\u5185\u5b58\u4e2d\u53d6\u51fa\u4e0d\u540c\u5927\u5c0f\u7684\u6307\u4ee4\uff0c\u83b7\u53d6<code>rA</code>\uff0c<code>rB</code>\uff0c<code>valC</code>\uff0c\u5e76\u8ba1\u7b97<code>valP</code></li> </ul> </li> <li>\u8bd1\u7801(decode)<ul> <li>\u83b7\u53d6<code>valA</code>\u548c<code>valB</code></li> </ul> </li> <li>\u6267\u884c(execute)<ul> <li>\u8ba1\u7b97<code>valE</code>\u548c\u72b6\u6001\u7801<code>CC</code></li> </ul> </li> <li>\u8bbf\u5b58(memory)<ul> <li>\u8bfb\u5199\u5185\u5b58\uff0c\u8bfb\u51fa\u7684\u5185\u5b58\u503c\u5b58\u4e8e<code>valM</code></li> </ul> </li> <li>\u5199\u56de(write back)<ul> <li>\u5c06<code>valE</code>\u6216<code>valM</code>\u5199\u5165\u5bf9\u5e94\u7684\u5bc4\u5b58\u5668</li> </ul> </li> <li>\u66f4\u65b0PC(PC update)<ul> <li>\u9664\u4e86\u6761\u4ef6\u8df3\u8f6c\u6307\u4ee4\u548c<code>ret</code>\u5916\uff0c\u90fd\u80fd\u5728\u53d6\u6307\u9636\u6bb5\u786e\u5b9a\u4e0b\u4e00\u6761\u6307\u4ee4\u7684\u5730\u5740<ul> <li><code>call</code>\u548c<code>jmp</code>(\u65e0\u6761\u4ef6\u8f6c\u79fb)\uff0cPC\u7684\u66f4\u65b0\u503c\u4e3a<code>valC</code></li> <li>\u5176\u4ed6\u6307\u4ee4\uff0cPC\u7684\u66f4\u65b0\u503c\u4e3a<code>valP</code></li> </ul> </li> </ul> </li> </ul> <p>\u4e0b\u9762\u4ecb\u7ecd\u4e0d\u540c\u7c7b\u578b\u7684\u6307\u4ee4\u5728\u5404\u9636\u6bb5\u7684\u52a8\u4f5c\uff1a</p> <ul> <li> <p>\u4f20\u9001\u6307\u4ee4mov - \u5411\u5bc4\u5b58\u5668\u6216\u5185\u5b58\u4f20\u9012\u6570\u636e\uff0c\u4e0d\u6d89\u53ca\u6761\u4ef6\u7801</p> \u9636\u6bb5 rrmovq rA,rB irmovq V,rB rmmovq rA,D(rB) mrmovq D(rB),rA \u53d6\u6307 icode:ifun &lt;- M1[PC]rA:rB &lt;- M1[PC+1]valP &lt;- PC+2 icode:ifun &lt;- M1[PC]rA:rB &lt;- M1[PC+1]valC &lt;- M8[PC+2]valP &lt;- PC+10 icode:ifun &lt;- M1[PC]rA:rB &lt;- M1[PC+1]valC &lt;- M8[PC+2]valP &lt;- PC+10 icode:ifun &lt;- M1[PC]rA:rB &lt;- M1[PC+1]valC &lt;- M8[PC+2]valP &lt;- PC+10 \u8bd1\u7801 valA &lt;- R[rA] valA &lt;- R[rA]valB &lt;- R[rB] valB &lt;- R[rB] \u6267\u884c valE &lt;- 0+valA valE &lt;- 0+valC valE &lt;- valB+valC valE &lt;- valB+valC \u8bbf\u5b58 M8[valE] &lt;- valA valM &lt;- M8[valE] \u5199\u56de R[rB] &lt;- valE R[rB] &lt;- valE R[rA] &lt;- valM \u66f4\u65b0PC PC &lt;- valP PC &lt;- valP PC &lt;- valP PC &lt;- valP </li> <li> <p>\u7b97\u672f\u8fd0\u7b97\u6307\u4ee4OP - \u5bf9\u4e24\u4e2a\u5bc4\u5b58\u5668\u503c\u8fdb\u884c\u7b97\u672f\u8fd0\u7b97\uff0c\u5e76\u4fee\u6539\u6761\u4ef6\u7801\uff0c\u4e0d\u6d89\u53ca\u5185\u5b58\u8bbf\u95ee</p> \u9636\u6bb5 OPq rA, rB \u53d6\u6307 icode:ifun &lt;- M1[PC]rA:rB &lt;- M1[PC+1]valP &lt;- PC+2 \u8bd1\u7801 valA &lt;- R[rA]  valB &lt;- R[rB] \u6267\u884c valE &lt;- valB OP valASet CC \u8bbf\u5b58 \u5199\u56de R[rB] &lt;- valE \u66f4\u65b0PC PC &lt;- valP </li> <li> <p>\u6808\u64cd\u4f5c\u6307\u4ee4 - \u65e2\u8981\u8bbf\u95ee\u5185\u5b58\uff0c\u53c8\u8981\u8bbf\u95ee\u5bc4\u5b58\u5668\uff0c\u4e0d\u6d89\u53ca\u6761\u4ef6\u7801</p> \u9636\u6bb5 pushq rA popq rA \u53d6\u6307 icode:ifun &lt;- M1[PC]rA:rB &lt;- M1[PC+1]valP &lt;- PC+2 icode:ifun &lt;- M1[PC]rA:rB &lt;- M1[PC+1]valP &lt;- PC+2 \u8bd1\u7801 valA &lt;- R[rA]valB &lt;- R[%rsp] valA &lt;- R[%rsp]valB &lt;- R[%rsp] \u6267\u884c valE &lt;- valB+(-8) valE &lt;- valB+8 \u8bbf\u5b58 M8[valE] &lt;- valA valM &lt;- M8[valA] \u5199\u56de R[%rsp] &lt;- valE R[%rsp] &lt;- valER[rA] &lt;- valM \u66f4\u65b0PC PC &lt;- valP PC &lt;- valP </li> <li> <p>\u8df3\u8f6c\u6307\u4ee4 - \u5bf9\u7a0b\u5e8f\u8ba1\u6570\u5668\u7684\u5904\u7406\u65b9\u5f0f\u4e0e\u5176\u4ed6\u6307\u4ee4\u4e0d\u540c\uff0c\u5176\u4ed6\u6307\u4ee4PC\u66f4\u65b0\u503c\u90fd\u662f<code>valP</code></p> \u9636\u6bb5 jXX Dest call Dest ret \u53d6\u6307 icode:ifun &lt;- M1[PC]valC &lt;- M8[PC+1]valP &lt;- PC+9 icode:ifun &lt;- M1[PC]valC &lt;- M8[PC+1]valP &lt;- PC+9 icode:ifun &lt;- M1[PC]valP &lt;- PC+1 \u8bd1\u7801 valB &lt;- R[%rsp] valA &lt;- R[%rsp]valB &lt;- R[%rsp] \u6267\u884c Cnd &lt;- Cond(CC, ifun) valE &lt;- valB+(-8) valE &lt;- valB+8 \u8bbf\u5b58 M8[valE] &lt;- valP valM &lt;- M8[valA] \u5199\u56de R[%rsp] &lt;- valE R[%rsp] &lt;- valE \u66f4\u65b0PC PC &lt;- Cnd?valC:valP PC &lt;- valC PC &lt;- valM </li> </ul>"},{"location":"booknotes/csapp/04/#y86-64_4","title":"Y86-64\u6d41\u6c34\u7ebf\u5b9e\u73b0","text":""},{"location":"booknotes/csapp/04/#_6","title":"\u6d41\u6c34\u7ebf\u7684\u901a\u7528\u539f\u7406","text":"<p>\u6d41\u6c34\u7ebf\u5316\u7684\u4e00\u4e2a\u91cd\u8981\u7279\u6027\u5c31\u662f\u63d0\u9ad8\u4e86\u7cfb\u7edf\u7684\u541e\u5410\u91cf(throughput)\uff0c\u4e0d\u8fc7\u5b83\u4f1a\u8f7b\u5fae\u5730\u589e\u52a0\u5ef6\u8fdf(latency)\u3002</p> <p>\u4f8b\u5982\uff0c\u4e0b\u56fe\u5728\u6ca1\u6709\u6d41\u6c34\u5316\u4e4b\u524d\uff0c\u4e0b\u4e00\u6761\u6307\u4ee4\u5fc5\u987b\u5728320ps\u4e4b\u540e\u624d\u80fd\u6267\u884c\uff0c\u56e0\u6b64\u9650\u5236\u4e86\u541e\u5410\u91cf(Throughput)\u3002</p> <p></p> <p>\u800c\u5728\u6d41\u6c34\u5316\u4e4b\u540e\uff0c\u4e0b\u4e00\u6761\u6307\u4ee4\u53ea\u9700\u8981\u5728120ps\u4e4b\u540e\u5c31\u80fd\u5f00\u59cb\u6267\u884c\uff0c\u5927\u5927\u63d0\u9ad8\u4e86\u541e\u5410\u91cf\u3002</p> <p></p>"},{"location":"booknotes/csapp/04/#_7","title":"\u6d41\u6c34\u7ebf\u7684\u5c40\u9650\u6027","text":"<p>\u4e0a\u9762\u6d41\u6c34\u7ebf\u7684\u4f8b\u5b50\u4e2d\uff0c\u6211\u4eec\u5c06\u8ba1\u7b97\u5206\u6210\u4e09\u4e2a\u76f8\u4e92\u72ec\u7acb\u7684\u9636\u6bb5\uff0c\u6bcf\u4e2a\u9636\u6bb5\u9700\u8981\u7684\u65f6\u95f4\u65f6\u539f\u6765\u903b\u8f91\u7684\u4e09\u5206\u4e4b\u4e00\u3002\u4e0d\u5e78\u7684\u662f\uff0c\u4f1a\u51fa\u73b0\u5176\u4ed6\u4e00\u4e9b\u56e0\u7d20\uff0c\u964d\u4f4e\u6d41\u6c34\u7ebf\u7684\u6548\u7387\u3002</p> <ul> <li>\u4e0d\u4e00\u81f4\u7684\u5212\u5206<ul> <li>\u6d41\u6c34\u7ebf\u7684\u8fd0\u884c\u65f6\u949f\u7531\u6700\u6162\u7684\u9636\u6bb5\u51b3\u5b9a\uff0c\u4e0b\u56fe\u65f6\u949f\u5468\u671f\u589e\u5927\u4e3a170ps\uff0c\u56e0\u6b64\u541e\u5410\u91cf\u4e0b\u964d</li> <li>\u53e6\u5916\uff0c\u7531\u4e8e\u65f6\u949f\u5468\u671f\u51cf\u6162\u4e86\uff0c\u5ef6\u8fdf\u4e5f\u589e\u52a0\u5230\u4e86510ps </li> </ul> </li> <li>\u6d41\u6c34\u7ebf\u8fc7\u6df1\uff0c\u6536\u76ca\u53cd\u800c\u4e0b\u964d<ul> <li>\u901a\u8fc7\u589e\u52a0\u6d41\u6c34\u7ebf\u7684\u9636\u6bb5\u6570\u53ef\u4ee5\u63d0\u9ad8\u541e\u5410\u91cf\uff0c\u4f46\u662f\u4f1a\u589e\u52a0\u5ef6\u8fdf </li> </ul> </li> <li>\u5e26\u53cd\u9988\u7684\u6d41\u6c34\u7ebf\u7cfb\u7edf<ul> <li>\u5728\u4e0b\u56fe\u4e2d\uff0c\u672a\u6d41\u6c34\u7ebf\u524d\uff0cI1\u7684\u7ed3\u679c\u662fI2\u7684\u8f93\u5165</li> <li>\u5f53\u6d41\u6c34\u7ebf\u5316\u540e\uff0cI1\u7684\u7ed3\u679c\u6210\u4e3a\u4e86I4\u7684\u8f93\u5165\uff0c\u8fd9\u662f\u4e0d\u53ef\u63a5\u53d7\u7684 </li> </ul> </li> </ul>"},{"location":"booknotes/csapp/04/#_8","title":"\u6d41\u6c34\u7ebf\u7684\u8c03\u6574","text":"<p>\u76f8\u5bf9\u4e8eY86-64\u7684\u987a\u5e8f\u5b9e\u73b0\uff0c\u6d41\u6c34\u7ebf\u5b9e\u73b0\u5fc5\u987b\u89e3\u51b3\u66f4\u591a\u7684\u95ee\u9898\uff0c\u4f8b\u5982\uff1a</p> <ul> <li> <p>\u6570\u636e\u5192\u9669</p> <ul> <li>\u5f53\u524d\u6307\u4ee4\u8981\u7528\u5230\u4e0a\u4e00\u6761\u6307\u4ee4\u7684\u8ba1\u7b97\u7ed3\u679c\uff0c\u800c\u6b64\u8ba1\u7b97\u7ed3\u679c\u8fd8\u672a\u5b8c\u6210<ul> <li>\u901a\u8fc7\u63d2\u5165\u6d41\u6c34\u7ebf\u5bc4\u5b58\u5668\u6216\u8005\u8f6c\u53d1\uff0c\u4ee5\u63d0\u524d\u83b7\u53d6\u8ba1\u7b97\u7ed3\u679c</li> <li>\u901a\u8fc7\u6682\u505c\u5f53\u524d\u6307\u4ee4\uff0c\u4ee5\u83b7\u53d6\u6b63\u786e\u7684\u8ba1\u7b97\u7ed3\u679c</li> </ul> </li> </ul> </li> <li> <p>\u63a7\u5236\u5192\u9669</p> <ul> <li>\u6d41\u6c34\u7ebf\u9700\u8981\u63d0\u524d\u201c\u66f4\u65b0PC\u201d\u9636\u6bb5\uff0c\u4ee5\u5728\u4e0b\u4e00\u4e2a\u5468\u671f\u7acb\u5373\u83b7\u5f97\u66f4\u65b0\u7684PC\u503c\uff0c\u800c\u5728\u6b64\u9636\u6bb5\u53ef\u80fd\u8fd8\u65e0\u6cd5\u786e\u5b9a\u4e0b\u4e00\u6761\u6307\u4ee4\u7684\u4f4d\u7f6e\uff0c\u5982\uff1a\u6761\u4ef6\u8df3\u8f6c\u548c<code>ret</code>\u6307\u4ee4<ul> <li>\u6761\u4ef6\u8df3\u8f6c\u6307\u4ee4\uff0c\u901a\u8fc7\u9884\u6d4b\u4e0b\u4e00\u4e2aPC\u503c\uff0c\u5148\u7ee7\u7eed\u6267\u884c\u6307\u4ee4\uff0c\u5982\u679c\u9884\u6d4b\u9519\u8bef\uff0c\u53d6\u6d88\u8fd9\u4e9b\u6307\u4ee4\uff0c\u5e76\u8df3\u8f6c\u5230\u6b63\u786e\u7684\u4f4d\u7f6e\u6267\u884c</li> <li><code>ret</code>\u6307\u4ee4\uff0c\u901a\u8fc7\u6682\u505c\u4e0b\u4e00\u6761\u6307\u4ee4\uff0c\u76f4\u5230<code>ret</code>\u6307\u4ee4\u5230\u8fbe\u5199\u56de\u9636\u6bb5\uff0c\u4ece\u5185\u5b58\u4e2d\u83b7\u53d6\u5230\u4e86\u4e0b\u4e00\u6761\u6307\u4ee4\u7684\u5730\u5740</li> </ul> </li> </ul> </li> <li> <p>\u5f02\u5e38</p> <ul> <li>Y86-64\u5728\u4e09\u79cd\u60c5\u51b5\u4e0b\u4f1a\u53d1\u751f\u5f02\u5e38\uff1a1)<code>halt</code>\u6307\u4ee4\uff0c2)\u6709\u975e\u6cd5\u6307\u4ee4\u548c\u529f\u80fd\u7801\u7ec4\u5408\u7684\u6307\u4ee4\uff0c3)\u53d6\u6307\u6216\u6570\u636e\u8bfb\u5199\u89c6\u56fe\u8bbf\u95ee\u4e00\u4e2a\u975e\u6cd5\u5730\u5740\u3002<ul> <li>\u7531\u6d41\u6c34\u7ebf\u4e2d\u6700\u6df1\u7684\u6307\u4ee4\u5f15\u8d77\u7684\u5f02\u5e38\uff0c\u4f18\u5148\u7ea7\u6700\u9ad8\uff0c\u4ee5\u4fdd\u8bc1\u7528\u6237\u80fd\u83b7\u53d6\u6700\u65e9\u7684\u5f02\u5e38\u6307\u4ee4</li> <li>\u6d41\u6c34\u7ebf\u5bc4\u5b58\u5668\u4e2d\u7684\u72b6\u6001\u7801<code>stat</code>\u8bb0\u5f55\u4e86\u67d0\u6761\u6307\u4ee4\u7684\u5f02\u5e38\u72b6\u6001\uff0c\u4ee5\u907f\u514d\u51fa\u73b0\u7531\u4e8e\u5206\u652f\u9884\u6d4b\u9519\u8bef\u53d6\u51fa\u7684\u6307\u4ee4\u9020\u6210\u7684\u5f02\u5e38</li> <li>\u5f53\u6307\u4ee4\u5f02\u5e38\u65f6\uff0c\u6d41\u6c34\u7ebf\u63a7\u5236\u903b\u8f91\u4f1a\u7981\u6b62\u66f4\u65b0\u6761\u4ef6\u7801\u5bc4\u5b58\u5668\u6216\u5185\u5b58\u6570\u636e\uff0c\u4ee5\u9632\u6b62\u5176\u4ed6\u6307\u4ee4\u5bf9\u5176\u4fee\u6539</li> </ul> </li> </ul> </li> </ul>"},{"location":"booknotes/csapp/04/#y86-64_5","title":"Y86-64\u5404\u9636\u6bb5\u5b9e\u73b0\u5bf9\u6bd4","text":""},{"location":"booknotes/csapp/04/#pc","title":"PC\u9009\u62e9\u548c\u53d6\u6307\u9636\u6bb5","text":"<p>\u4e0a\u56fe\u5206\u522b\u63cf\u8ff0\u4e86SEQ\u548cPIPE\u6a21\u578b\u4e2d\u7684\u201c\u66f4\u65b0PC\u201d\u548c\u201c\u53d6\u6307\u201d\u9636\u6bb5\uff0c</p> <ul> <li>\u76f8\u540c\u4e4b\u5904<ul> <li>\u7528\u4e8e\u4ece\u5185\u5b58\u4e2d\u8bfb\u53d6\u6307\u4ee4\u548c\u62bd\u53d6\u4e0d\u540c\u6307\u4ee4\u5b57\u6bb5\u7684\u786c\u4ef6\u5355\u5143\u76f8\u540c</li> </ul> </li> <li>\u4e0d\u540c\u4e4b\u5904<ul> <li>SEQ\u6a21\u578b\u7684\u201c\u66f4\u65b0PC\u201d\u9636\u6bb5\u5904\u5728\u6700\u540e\u90e8\u5206\uff0c\u53ef\u6839\u636e\u8f93\u5165\u786e\u5b9a\u8981\u66f4\u65b0\u7684PC\u503c\uff0c\u800c\u65e0\u9700\u9884\u6d4b</li> <li>PIPE\u6a21\u578b\u63d0\u524d\u4e86\u201c\u66f4\u65b0PC\u201d\u9636\u6bb5\uff0c\u56e0\u6b64\u9700\u8981\u9884\u6d4b\u4e0b\u4e00\u4e2aPC\u503c\uff0cPC\u9009\u62e9\u903b\u8f91\u5728\u4e09\u4e2a\u503c\u4e2d\u505a\u9009\u62e9\uff1a<ul> <li>\u5728\u6761\u4ef6\u8df3\u8f6c\u6307\u4ee4\u9884\u6d4b\u5931\u8d25\u65f6\uff0c\u4ece\u6d41\u6c34\u7ebf\u5bc4\u5b58\u5668M(\u8bbf\u5b58\u4e4b\u524d)\u4e2d\u8bfb\u51fa\u4e0b\u4e00\u6761\u6307\u4ee4\u5730\u5740<code>M_valA</code></li> <li>\u5728<code>ret</code>\u6307\u4ee4\u8fdb\u5165\u5199\u56de\u9636\u6bb5\u65f6\uff0c\u4ece\u6d41\u6c34\u7ebf\u5bc4\u5b58\u5668W(\u5199\u56de\u4e4b\u524d)\u4e2d\u8bfb\u51fa\u8fd4\u56de\u5730\u5740<code>W_valM</code></li> <li>\u5176\u4ed6\u60c5\u51b5\u4f1a\u4f7f\u7528\u5b58\u653e\u5728\u6d41\u6c34\u5bc4\u5b58\u5668F(\u53d6\u6307\u4e4b\u524d)\u4e2d\u7684PC\u7684\u9884\u6d4b\u503c<code>F_predPC</code></li> </ul> </li> </ul> </li> </ul>"},{"location":"booknotes/csapp/04/#_9","title":"\u8bd1\u7801\u548c\u5199\u56de\u9636\u6bb5","text":"<p>\u4e0a\u56fe\u5206\u522b\u63cf\u8ff0\u4e86SEQ\u548cPIPE\u6a21\u578b\u4e2d\u7684\u201c\u8bd1\u7801\u201d\u548c\u201c\u5199\u56de\u201d\u9636\u6bb5\uff0c</p> <ul> <li>\u76f8\u540c\u4e4b\u5904<ul> <li><code>dstE</code>\u3001<code>dstM</code>\u3001<code>srcA</code>\u548c<code>srcB</code>\u7684\u6982\u5ff5\u662f\u7c7b\u4f3c\u7684</li> </ul> </li> <li>\u4e0d\u540c\u4e4b\u5904<ul> <li>SEQ\u6a21\u578b\u8bd1\u7801\u548c\u5199\u56de\u9636\u6bb5\u6307\u7684\u662f\u540c\u4e00\u4e2a\u6307\u4ee4\uff0c\u56e0\u6b64\u8bd1\u7801\u9636\u6bb5\u7684<code>dstE</code>\u548c<code>dstM</code>\u4fe1\u53f7\uff0c\u4e5f\u80fd\u670d\u52a1\u4e8e\u5199\u56de\u9636\u6bb5</li> <li>PIPE\u6a21\u578b\u5c06<code>valP</code>\u901a\u8fc7<code>Sel</code>\u5408\u5e76\u4e3a<code>valA</code>\uff0c\u56e0\u4e3a\u6ca1\u6709\u6307\u4ee4\u5373\u9700\u8981<code>valP</code>\u53c8\u9700\u8981<code>valA</code>\u7684\uff0c\u6b64\u65f6\u9700\u8981\u6839\u636e\u4e0d\u540c\u7684\u60c5\u51b5\uff0c\u9009\u62e9\u4e0d\u540c\u7684\u503c\u5b58\u4e8e\u6d41\u6c34\u7ebf\u5bc4\u5b58\u5668E(\u6267\u884c\u4e4b\u524d)\u4e2d</li> <li>PIPE\u6a21\u578b\u901a\u8fc7<code>Fwd A</code>\u548c<code>Fwd B</code>\u5b9e\u73b0\u4e86\u8f6c\u53d1\u903b\u8f91\uff0c\u4ece\u800c\u907f\u514d\u4e86\u90e8\u5206\u6570\u636e\u5192\u9669\u7684\u95ee\u9898</li> <li>PIPE\u6a21\u578b\u4e2d\u5bc4\u5b58\u5668\u5199\u7684\u4f4d\u7f6e\u662f\u7531\u6765\u81ea\u5199\u56de\u9636\u6bb5\u7684<code>dstE</code>\u548c<code>dstM</code>\u4fe1\u53f7\u6307\u5b9a\u7684\uff0c\u4e0d\u662f\u6765\u81ea\u4e8e\u8bd1\u7801\u9636\u6bb5\uff0c\u56e0\u4e3a\u6b64\u65f6\u8981\u5199\u7684\u662f\u5f53\u524d\u6b63\u5728\u5199\u56de\u9636\u6bb5\u4e2d\u7684\u6307\u4ee4\u7684\u7ed3\u679c</li> </ul> </li> </ul>"},{"location":"booknotes/csapp/04/#_10","title":"\u6267\u884c\u9636\u6bb5","text":"<p>\u4e0a\u56fe\u5206\u522b\u63cf\u8ff0\u4e86SEQ\u548cPIPE\u6a21\u578b\u4e2d\u7684\u201c\u6267\u884c\u201d\u9636\u6bb5\uff0c</p> <ul> <li>\u76f8\u540c\u4e4b\u5904<ul> <li>\u6267\u884c\u7b97\u672f/\u903b\u8f91\u8fd0\u7b97\uff0c\u6838\u5fc3\u8fd0\u7b97\u7535\u8def\u76f8\u540c</li> </ul> </li> <li>\u4e0d\u540c\u4e4b\u5904<ul> <li>SEQ\u6a21\u578b\u53ea\u5e0c\u671b\u5728\u6267\u884c<code>OPq</code>\u6307\u4ee4\u65f6\u624d\u8bbe\u7f6e\u6761\u4ef6\u7801\uff0c\u56e0\u6b64<code>bool set_cc = icode in { IOPQ };</code></li> <li>PIPE\u6a21\u578b\u7684\u201cSet CC\u201d\u903b\u8f91\u6dfb\u52a0\u4e86\u4fe1\u53f7<code>m_stat</code>\u548c<code>W_stat</code>\uff0c\u5f53\u53d1\u751f\u5f02\u5e38\u65f6\uff0c\u7981\u6b62\u5bf9\u6761\u4ef6\u7801\u7684\u66f4\u65b0</li> <li>PIPE\u6a21\u578b\u4e2d\uff0c<code>e_valE</code>\u548c<code>e_dstE</code>\u4f5c\u4e3a\u8f6c\u53d1\u6e90\uff0c\u6307\u5411\u8bd1\u7801\u9636\u6bb5</li> </ul> </li> </ul>"},{"location":"booknotes/csapp/04/#_11","title":"\u8bbf\u5b58\u9636\u6bb5","text":"<p>\u4e0a\u56fe\u5206\u522b\u63cf\u8ff0\u4e86SEQ\u548cPIPE\u6a21\u578b\u4e2d\u7684\u201c\u8bbf\u5b58\u201d\u9636\u6bb5\uff0c</p> <ul> <li>\u76f8\u540c\u4e4b\u5904<ul> <li>\u4efb\u52a1\u90fd\u662f\u662f\u8bfb\u6216\u8005\u5199\u7a0b\u5e8f\u6570\u636e</li> </ul> </li> <li>\u4e0d\u540c\u4e4b\u5904<ul> <li>PIPE\u6a21\u578b\u4e2d\u6ca1\u6709SEQ\u6a21\u578b\u4e2d\u6807\u53f7\u4e3a\u201cData\u201d\u7684\u5757\uff0c\u8fd9\u4e2a\u5757\u662f\u7528\u6765\u5728\u6570\u636e\u6e90<code>valP</code>\u548c<code>valA</code>\u4e2d\u8fdb\u884c\u9009\u62e9\u7684\uff0c\u5728PIPE\u6a21\u578b\u4e2d\u5df2\u7531\u8bd1\u7801\u9636\u6bb5\u7684\u201cSel+Fwd A\u201d\u5757\u5b8c\u6210\u4e86</li> <li>PIPE\u6a21\u578b\u4e2d\u8bbf\u5b58\u9636\u6bb5\u7684\u8bb8\u591a\u4fe1\u53f7\u88ab\u4f20\u9012\u5230\u8f83\u65e9\u7684\u9636\u6bb5</li> </ul> </li> </ul>"},{"location":"booknotes/csapp/04/#y86-64_6","title":"Y86-64\u4eff\u771f\u5668\u5b9e\u4f8b","text":"<p>\u672c\u7ae0\u4e2d\u7684\u4ee3\u7801\u53c2\u8003\u4e86\"y86_64-tools\"\u9879\u76ee\uff0c\u57fa\u4e8eC++\uff0c\u91cd\u65b0\u5b9e\u73b0\u4e86Y86-64\u7684\u4e09\u4e2a\u4e3b\u8981\u5de5\u5177\uff1a</p> <ul> <li>Y86-64\u6c47\u7f16\u5668<ul> <li>\u5c06Y86-64\u7684\u6c47\u7f16\u4ee3\u7801<code>.ys</code>\u6587\u4ef6\uff0c\u7f16\u8bd1\u4e3a\u4e8c\u8fdb\u5236Y86-64\u7684\u673a\u5668\u6307\u4ee4<code>.yo</code>\u6587\u4ef6</li> </ul> </li> <li>HCL\u8f6c\u6362\u5de5\u5177<ul> <li>\u5c06HCL\u683c\u5f0f\u7684\u786c\u4ef6\u63cf\u8ff0\u6587\u4ef6\uff0c\u8f6c\u6362\u4e3a\u5bf9\u5e94\u7684C\u4ee3\u7801</li> </ul> </li> <li>Y86-64\u4eff\u771f\u5668<ul> <li>\u4e00\u4e2a\u53ef\u8fd0\u884c<code>.yo</code>\u6587\u4ef6\u7684Y86-64\u4eff\u771f\u5668\uff0c\u53ef\u6253\u5370\u51fa\u7a0b\u5e8f\u8fd0\u884c\u524d\u540e\u5bc4\u5b58\u5668\u548c\u5185\u5b58\u7684\u53d8\u5316</li> </ul> </li> <li>\u56fe\u5f62\u5316\u754c\u9762<ul> <li>\u57fa\u4e8e<code>TCL/TK</code>\u7684\u684c\u9762\u754c\u9762 </li> <li>\u57fa\u4e8e<code>Vue3+Webassembly</code>\u7684\u7f51\u9875\u754c\u9762</li> </ul> </li> </ul>"},{"location":"booknotes/csapp/04/#y86-64_7","title":"Y86-64\u6c47\u7f16\u5668","text":"<p>Y86-64\u6c47\u7f16\u5668\u901a\u8fc7<code>Flex</code>\u5de5\u5177\uff0c\u5206\u6790\u51faY86-64\u7684\u6c47\u7f16\u4ee3\u7801\u4e2d\u7684\u5185\u5bb9\uff0c\u7136\u540e\u7ed3\u5408Y86-64\u7684\u6307\u4ee4\u96c6\u4f53\u7cfb\u7ed3\u6784\uff0c\u5c06\u6c47\u7f16\u6307\u4ee4\u8f6c\u6362\u6210\u5bf9\u5e94\u7684\u673a\u5668\u4ee3\u7801\u3002<code>Flex</code>\u5de5\u5177\u5bf9Y86-64\u6c47\u7f16\u5668\u8bcd\u6cd5\u6587\u4ef6\"yas.lex\"\u7684\u5206\u6790\u8fc7\u7a0b\uff0c\u53ef\u53c2\u8003\u535a\u6587\u300aFlex\u548cBison\u300b\u3002\u7531\u4e8e\u6c47\u7f16\u5668\u53ea\u9700\u8981\u5c06\u6c47\u7f16\u4ee3\u7801\u548c\u673a\u5668\u4ee3\u7801\u4e00\u4e00\u5bf9\u5e94\uff0c\u5e76\u4e0d\u6d89\u53ca\u8bed\u6cd5\u5206\u6790\uff0c\u56e0\u6b64\u4e0d\u9700\u8981\u7528\u5230<code>Bison</code>\u5de5\u5177\u3002</p> <p>\u4f8b\u5982\uff0c\u4e664.1.5\u8282\u4e2d<code>long sum(long *start, long count)</code>\u7684\u4f8b\u5b50\uff0c\u901a\u8fc7\u6c47\u7f16\u5668\u53ef\u5f97\u5230\u5982\u4e0b\u673a\u5668\u4ee3\u7801\uff1a assembler&gt; ./build/yas ../test_yas/asum.ys<pre><code>                            | # Execution begins at address 0 \n0x000:                      |   .pos 0\n0x000: 30f40002000000000000 |   irmovq stack, %rsp      # Set up stack pointer\n0x00a: 803800000000000000   |   call main               # Execute main program\n0x013: 00                   |   halt                    # Terminate program \n                            | \n                            | # Array of 4 elements\n0x018:                      |   .align 8\n0x018: 0d000d000d000000     | array:    .quad 0x000d000d000d\n0x020: c000c000c0000000     |   .quad 0x00c000c000c0\n0x028: 000b000b000b0000     |   .quad 0x0b000b000b00\n0x030: 00a000a000a00000     |   .quad 0xa000a000a000\n                            | \n0x038: 30f71800000000000000 | main:     irmovq array,%rdi\n0x042: 30f60400000000000000 |   irmovq $4,%rsi\n0x04c: 805600000000000000   |   call sum                # sum(array, 4)\n0x055: 90                   |   ret\n                            | \n                            | # long sum(long *start, long count)\n                            | # start in %rdi, count in %rsi\n0x056: 30f80800000000000000 | sum:      irmovq $8,%r8        # Constant 8\n0x060: 30f90100000000000000 |   irmovq $1,%r9        # Constant 1\n0x06a: 6300                 |   xorq %rax,%rax       # sum = 0\n0x06c: 6266                 |   andq %rsi,%rsi       # Set CC\n0x06e: 708700000000000000   |   jmp     test         # Goto test\n0x077: 50a70000000000000000 | loop:     mrmovq (%rdi),%r10   # Get *start\n0x081: 60a0                 |   addq %r10,%rax       # Add to sum\n0x083: 6087                 |   addq %r8,%rdi        # start++\n0x085: 6196                 |   subq %r9,%rsi        # count--.  Set CC\n0x087: 747700000000000000   | test:     jne    loop          # Stop when 0\n0x090: 90                   |   ret                  # Return\n                            | \n                            | # Stack starts here and grows to lower addresses\n0x200:                      |   .pos 0x200\n0x200:                      | stack:\nYas Lexer parse is done\n</code></pre></p>"},{"location":"booknotes/csapp/04/#hcl_2","title":"HCL\u8f6c\u6362\u5de5\u5177","text":"<p>\u4e3a\u4e86\u65b9\u4fbf\u63cf\u8ff0\u7535\u8def\uff0c\u4e664.2\u8282\u8bbe\u8ba1\u4e86\u4e00\u79cd\u786c\u4ef6\u63a7\u5236\u8bed\u8a00HCL\u3002\u672c\u6587\u7684\"HCL\u8868\u8fbe\u5f0f\"\u7ae0\u8282\u4ecb\u7ecd\u4e86\u56db\u79cdHCL\u8868\u8fbe\u5f0f\u7c7b\u578b\uff0c\u6bcf\u79cd\u8868\u8fbe\u5f0f\u90fd\u53ef\u4ee5\u7528\u4e00\u4e2aC\u51fd\u6570\u8868\u8fbe\u540c\u6837\u7684\u903b\u8f91\u3002<code>Flex</code>\u5de5\u5177\u901a\u8fc7\u8bcd\u6cd5\u6587\u4ef6\"hcl.lex\"\u53ef\u89e3\u6790\u51faHCL\u6587\u4ef6\u4e2d\u7684\u5173\u952e\u8bcd\uff0c<code>Bison</code>\u5de5\u5177\u901a\u8fc7\u8bed\u6cd5\u6587\u4ef6\"hcl.y\"\u5c06\u8fd9\u4e9b\u5173\u952e\u8bcd\u7ec4\u5408\u6210\u4e0d\u540c\u7684HCL\u8868\u8fbe\u5f0f\uff0c\u6700\u7ec8\u751f\u6210\u5bf9\u5e94\u7684C\u4ee3\u7801\u3002</p> <p>\u4f8b\u5982\uff0c\u4e664.2.2\u4e2d\u7684\u591a\u8def\u9009\u62e9\u5668\"mux4.hcl\"\uff0c\u53ef\u8f6c\u6362\u4e3a\u5982\u4e0b\u7684C\u4ee3\u7801\uff1a hcl&gt; ./build/hcl ../test_hcl/mux4.hcl<pre><code>#include &lt;stdio.h&gt;\n#include &lt;stdlib.h&gt;\nint code_val, s0_val, s1_val;\nchar **data_names;\nlong long gen_s1()\n{\n   return ((code_val) == 2 || (code_val) == 3);\n}\n\nlong long gen_s0()\n{\n   return ((code_val) == 1 || (code_val) == 3);\n}\n\nlong long gen_Out4()\n{\n   return ((!(s1_val) &amp; !(s0_val)) ? (atoi(data_names[0])) : !(s1_val) ? (atoi(data_names[1])) : !\n      (s0_val) ? (atoi(data_names[2])) : (atoi(data_names[3])));\n}\n\nint main(int argc, char *argv[]) {\n   if (argc &lt; 6) {\n      printf(\"Please input five arguments: code, A, B, C and D, such as: ./mux4 0 1 2 3 4\\n\");\n      return -1;\n   }\n   data_names = argv+2;\n   code_val = atoi(argv[1]);\n   s1_val = gen_s1();\n   s0_val = gen_s0();\n   printf(\"Out = %lld\\n\", gen_Out4());\n   return 0;\n}\n</code></pre></p>"},{"location":"booknotes/csapp/04/#y86-64_8","title":"Y86-64\u4eff\u771f\u5668","text":"<p>\u5728\u672c\u6587\"\u7a0b\u5e8f\u5458\u53ef\u89c1\u7684\u72b6\u6001\"\u7ae0\u8282\u4e2d\uff0cY86-64\u5bf9\u5916\u63a5\u53e3\u53ea\u6709\uff1a\u7a0b\u5e8f\u5bc4\u5b58\u5668\u3001\u6761\u4ef6\u7801\u3001\u7a0b\u5e8f\u8ba1\u6570\u5668\u548c\u5185\u5b58\u3002\u6362\u53e5\u8bdd\u8bf4\uff0c\u6211\u4eec\u53ea\u8981\u4fdd\u8bc1\u8fd9\u56db\u4e2a\u90e8\u5206\u7684\u884c\u4e3a\u548cY86-64\u4e00\u81f4\uff0c\u5c31\u53ef\u4ee5\u901a\u8fc7\u8f6f\u4ef6\u6a21\u62df\u51fa\u4e00\u4e2aY86-64\u673a\u5668\u3002\u5f53\u8fd0\u884c\u4e00\u4e2aY86-64\u7a0b\u5e8f\u65f6\uff0c\u4eff\u771f\u5668\u9700\u8981\u4fdd\u8bc1\u7a0b\u5e8f\u5bc4\u5b58\u5668\u548c\u5185\u5b58\u7684\u53d8\u5316\uff0c\u540c\u771f\u6b63\u7684Y86-64\u673a\u5668\u4e00\u81f4\u3002</p> <p>\u6211\u4eec\u901a\u8fc7\u4e09\u79cd\u65b9\u5f0f\u5b9e\u73b0\u4e86Y86-64\u4eff\u771f\u5668\uff1a</p> <ul> <li>\u9010\u4e2a\u5b9e\u73b0\u6bcf\u6761\u6307\u4ee4\u7684\u884c\u4e3a - YIS<ul> <li>\u901a\u8fc7<code>switch</code>\u8bed\u53e5\uff0c\u5bf9\u6bcf\u6761\u6307\u4ee4\u901a\u8fc7\u4e0d\u540c\u7684\u4ee3\u7801\u6a21\u62df</li> </ul> </li> <li>\u6a21\u62dfY86-64\u7684\u987a\u5e8f\u5b9e\u73b0 - SEQ<ul> <li>\u7ed3\u5408\"seq.hcl\"\u786c\u4ef6\u63cf\u8ff0\uff0c\u7528\u76f8\u540c\u7684\u4ee3\u7801\u5b9e\u73b0\u6240\u6709\u7684\u6307\u4ee4</li> </ul> </li> <li>\u6a21\u62dfY86-64\u7684\u6d41\u6c34\u7ebf\u5b9e\u73b0 - PIPE<ul> <li>\u7ed3\u5408\"pipe.hcl\"\u786c\u4ef6\u63cf\u8ff0\uff0c\u7528\u76f8\u540c\u7684\u4ee3\u7801\u5b9e\u73b0\u6240\u6709\u7684\u6307\u4ee4</li> </ul> </li> </ul> <p>\u4f8b\u5982\uff0c\u5728YIS\u4eff\u771f\u5668\u4e0a\u8fd0\u884c\u4e664.1.5\u7684\u4f8b\u5b50\uff0c\u53ef\u5f97\u5230\u540c\u6837\u7684\u7ed3\u679c\uff1a simulator&gt;./build/sim -y test/asum.yo<pre><code>...\nChanges to registers:\n%rax:   0x0000000000000000      0x0000abcdabcdabcd\n%rsp:   0x0000000000000000      0x0000000000000200\n%rdi:   0x0000000000000000      0x0000000000000038\n%r8:    0x0000000000000000      0x0000000000000008\n%r9:    0x0000000000000000      0x0000000000000001\n%r10:   0x0000000000000000      0x0000a000a000a000\nChanges to memory:\n0x01f0: 0x0000000000000000      0x0000000000000055\n0x01f8: 0x0000000000000000      0x0000000000000013\n</code></pre></p>"},{"location":"booknotes/csapp/05/","title":"\u4f18\u5316\u7a0b\u5e8f\u6027\u80fd","text":"<p>\u300a\u6df1\u5165\u7406\u89e3\u8ba1\u7b97\u673a\u7cfb\u7edf\u300b - Randal E. Bryant - \u7b2c\u4e09\u7248\uff0c\u7b2c\u4e94\u7ae0\u7684\u8bfb\u4e66\u7b14\u8bb0\uff0c\u672c\u6587\u4e2d\u7684\u6240\u6709\u4ee3\u7801\u53ef\u5728GitHub\u4ed3\u5e93\u4e2d\u627e\u5230</p>"},{"location":"booknotes/csapp/05/#_2","title":"\u7f16\u8bd1\u5668\u7684\u4f18\u5316\u80fd\u529b\u548c\u5c40\u9650\u6027","text":"<pre><code>long f();\n\nlong func1() {\n    return f() + f() + f() + f();\n}\n\nlong fun2() {\n    return 4 * f();\n}\n\n// \u5047\u5982f\u7684\u4ee3\u7801\u5982\u4e0b\uff0cfunc1\u548cfunc2\u7684\u884c\u4e3a\u5c06\u4e0d\u4e00\u81f4\nlong counter = 0;\nlong f() {\n    return counter++;\n}\n</code></pre> <p>\u4e0a\u9762\u7684\u4f8b\u5b50\u4e2d\uff0c\u7531\u4e8e<code>f()</code>\u51fd\u6570\u5b58\u5728\u526f\u4f5c\u7528\uff0c\u7f16\u8bd1\u5668\u4e0d\u4f1a\u5c06<code>func1</code>\u4f18\u5316\u6210<code>func2</code>\u3002\u9488\u5bf9\u6b64\u60c5\u51b5\uff0cGCC\u4f1a\u5c1d\u8bd5\u8fdb\u884c\u201c\u7528\u5185\u8054\u51fd\u6570\u66ff\u6362\u4f18\u5316\u51fd\u6570\u8c03\u7528\u201d\uff1a</p> <pre><code>// \u5c06\u51fd\u6570\u8c03\u7528\u66ff\u6362\u4e3a\u51fd\u6570\u4f53\uff0c\u5bf9func1\u8fdb\u884c\u4f18\u5316\nlong func1in() {\n    long t = counter++;\n    long t = counter++;\n    long t = counter++;\n    long t = counter++;\n    return t;\n}\n</code></pre> <p>GCC\u53ea\u5c1d\u8bd5\u5728\u5355\u4e2a\u6587\u4ef6\u4e2d\u5b9a\u4e49\u7684\u51fd\u6570\u7684\u5185\u8054\u3002\u8fd9\u610f\u5473\u7740\u5b83\u5c06\u65e0\u6cd5\u5e94\u7528\u4e8e\u5e38\u89c1\u7684\u60c5\u51b5\uff0c\u5373\u4e00\u7ec4\u5e93\u51fd\u6570\u5728\u4e00\u4e2a\u6587\u4ef6\u4e2d\u88ab\u5b9a\u4e49\uff0c\u5374\u88ab\u5176\u4ed6\u6587\u4ef6\u5185\u7684\u51fd\u6570\u6240\u8c03\u7528\u3002</p> <p>\u5f53\u6211\u4eec\u9700\u8981\u9700\u8981\u7528\u7b26\u53f7\u8c03\u8bd5\u5668\uff0c\u5bf9\u51fd\u6570\u8fdb\u884c\u8ffd\u8e2a\u6216\u8bbe\u7f6e\u65ad\u70b9\u65f6\uff0c\u6700\u597d\u964d\u4f4e\u4f18\u5316\u7b49\u7ea7\u4ee5\u963b\u6b62\u7f16\u8bd1\u5668\u6267\u884c\u5185\u8054\u66ff\u6362\u3002</p>"},{"location":"booknotes/csapp/05/#_3","title":"\u5faa\u73af\u4f18\u5316","text":"<p>\u4f8b\u5b50\"combine\"\u5bf9\u6bd4\u4e86\u4e0d\u540c\u5faa\u73af\u5b9e\u73b0\u7684\u8fd0\u884c\u65f6\u95f4\uff1a <pre><code>// \u5728\u5faa\u73af\u4f53\u4e2d\u8c03\u7528`vec_length`\nvoid combine1(vec_ptr v, data_t *dest)\n{\n    for (long i = 0; i &lt; vec_length(v); i++)\n    {\n        data_t val;\n        get_vec_element(v, i, &amp;val);\n        *dest = (*dest) + val;\n    }\n}\n\n// \u5229\u7528\u53d8\u91cflen\u51cf\u5c11`vec_length`\u7684\u8c03\u7528\u6b21\u6570\nvoid combine2(vec_ptr v, data_t *dest)\n{\n    long len = vec_length(v);\n    for (long i = 0; i &lt; len; i++)\n    {\n        data_t val;\n        get_vec_element(v, i, &amp;val);\n        *dest = (*dest) + val;\n    }\n}\n\n// \u5229\u7528`get_vec_start`\u51cf\u5c11`get_vec_element`\u7684\u8c03\u7528\u6b21\u6570\nvoid combine3(vec_ptr v, data_t *dest)\n{\n    long len = vec_length(v);\n    data_t *data = get_vec_start(v);\n    for (long i = 0; i &lt; len; i++)\n    {\n        *dest = *dest + data[i];\n    }\n}\n\n// \u5c06\u5faa\u73af\u7684\u7ed3\u679c\u7d2f\u79ef\u5728\u4e34\u65f6\u53d8\u91cfacc\u4e2d\nvoid combine4(vec_ptr v, data_t *dest)\n{\n    long len = vec_length(v);\n    data_t *data = get_vec_start(v);\n    data_t acc = *dest;\n    for (long i = 0; i &lt; len; i++)\n    {\n        acc = acc + data[i];\n    }\n    *dest = acc;\n}\n</code></pre></p> <p>\u4ece<code>combine1</code>\u5230<code>combine4</code>\uff0c\u6211\u4eec\u9010\u6b65\u964d\u4f4e\u4e86\u8fc7\u7a0b\u8c03\u7528\u7684\u5f00\u9500\u3002\u5728\u4e0d\u540c\u7684\u7f16\u8bd1\u5668\u4f18\u5316\u7b49\u7ea7\u4e0b\uff0c\u56db\u4e2a\u51fd\u6570\u7684\u8fd0\u884c\u65f6\u95f4\u5bf9\u6bd4\u5982\u4e0b\uff1a</p> <ul> <li><code>O0</code>\u4f18\u5316\u7b49\u7ea7<ul> <li><code>combine1/2</code>\u8fd0\u884c\u65f6\u95f4\u76f8\u8fd1</li> <li><code>combine3/4</code>\u8fd0\u884c\u65f6\u95f4\u76f8\u8fd1</li> <li><code>combine3/4</code>\u8fd0\u884c\u65f6\u95f4\u4f18\u4e8e<code>combine1/2</code></li> </ul> </li> <li><code>O1</code>\u4f18\u5316\u7b49\u7ea7<ul> <li><code>combine1/2/3</code>\u8fd0\u884c\u65f6\u95f4\u76f8\u8fd1</li> <li><code>combine4</code>\u8fd0\u884c\u65f6\u95f4\u4f18\u4e8e\u5176\u4ed6</li> </ul> </li> <li><code>O2</code>\u4f18\u5316\u7b49\u7ea7<ul> <li>\u56db\u4e2a\u51fd\u6570\u7684\u76f8\u5bf9\u8d8b\u52bf\u548c<code>O0</code>\u4f18\u5316\u7b49\u7ea7\u7c7b\u4f3c\uff0c\u4f46\u662f\u6240\u6709\u51fd\u6570\u8fd0\u884c\u65f6\u95f4\u90fd\u7f29\u77ed\u4e86</li> </ul> </li> </ul> <p>\u901a\u8fc7\u5bf9\u6bd4\u5b9e\u9a8c\u7ed3\u679c\uff0c\u53ef\u5f97\u51fa\u4ee5\u4e0b\u7ed3\u8bba\uff1a</p> <ul> <li>\u901a\u8fc7\u4e34\u65f6\u53d8\u91cf\u7d2f\u79ef\u6bcf\u6b21\u5faa\u73af\u7684\u7ed3\u679c\uff0c\u53ef\u51cf\u5c11\u5bf9\u5185\u5b58\u7684\u8bbf\u95ee\u6b21\u6570\uff0c\u4ece\u800c\u4f18\u5316\u8fd0\u884c\u65f6\u95f4</li> <li>\u7f16\u8bd1\u5668\u4f1a\u81ea\u884c\u4f18\u5316\u51fd\u6570\u8c03\u7528\u7684\u6b21\u6570(\u5982\uff1a\u901a\u8fc7\u5c06\u51fd\u6570\u5185\u8054)\uff0c\u56e0\u6b64\u53ef\u5c06\u6b64\u79cd\u4f18\u5316\u65b9\u5f0f\u4ea4\u7ed9\u7f16\u8bd1\u5668</li> </ul>"},{"location":"booknotes/csapp/05/#_4","title":"\u5faa\u73af\u5c55\u5f00\u5e76\u7d2f\u79ef\u5728\u591a\u4e2a\u503c\u4e2d","text":"<p><pre><code>// \u5faa\u73af\u5c55\u5f00\nvoid combine5(vec_ptr v, data_t *dest)\n{\n    long len = vec_length(v);\n    data_t *data = get_vec_start(v);\n    data_t acc = *dest;\n\n    long i = 0;\n    long len_floor = len - (len % 2);\n    // combine 2 elements at a time\n    for (; i &lt; len; i += 2)\n    {\n        acc = (acc + data[i]) + data[i+1];\n    }\n    // finish any remaining elements\n    for (; i &lt; len; i++)\n    {\n        acc += data[i];\n    }\n    *dest = acc;\n}\n\n// \u7d2f\u79ef\u5728acc0\u548cacc1\u4e24\u4e2a\u53d8\u91cf\u4e2d\nvoid combine6(vec_ptr v, data_t *dest)\n{\n    long len = vec_length(v);\n    data_t *data = get_vec_start(v);\n    data_t acc0 = *dest;\n    data_t acc1 = 0;\n\n    long i = 0;\n    long len_floor = len - (len % 2);\n    // combine 2 elements at a time\n    for (; i &lt; len_floor; i += 2)\n    {\n        acc0 += data[i];\n        acc1 += data[i+1];\n    }\n    // finish any remaining elements\n    for (; i &lt; len; i++)\n    {\n        acc0 += data[i];\n    }\n\n    *dest = acc0 + acc1;\n}\n\n// \u5148\u7ed3\u5408\uff0c\u540e\u7d2f\u79ef\nvoid combine7(vec_ptr v, data_t *dest)\n{\n    long len = vec_length(v);\n    data_t *data = get_vec_start(v);\n    data_t acc = *dest;\n\n    long i = 0;\n    long len_floor = len - (len % 2);\n    // combine 2 elements at a time\n    for (; i &lt; len; i += 2)\n    {\n        acc += (data[i] + data[i+1]);\n    }\n    // finish any remaining elements\n    for (; i &lt; len; i++)\n    {\n        acc += data[i];\n    }\n    *dest = acc;\n}\n</code></pre> \u5bf9\u6bd4\u5b9e\u9a8c\u7ed3\u679c\uff0c\u53ef\u53d1\u73b0\uff1a</p> <ul> <li><code>combine5</code>\u901a\u8fc7\u5faa\u73af\u5c55\u5f00\uff0c\u4e00\u6b21\u5faa\u73af\u7d2f\u79ef\u4e24\u4e2a\u53ea\u3002\u4f46\u662f\u7531\u4e8e\u5173\u952e\u8def\u5f84\u5e76\u6ca1\u6709\u53d8\u77ed\uff0c\u4f18\u5316\u6548\u679c\u5e76\u4e0d\u660e\u663e</li> <li><code>combine6</code>\u5728<code>combine5</code>\u7684\u57fa\u7840\u4e0a\u589e\u52a0\u4e86\u4e00\u4e2a\u4e34\u65f6\u53d8\u91cf\uff0c\u5c06\u5173\u952e\u8def\u5f84\u7f29\u77ed\u4e86\u4e00\u822c\uff0c\u8fd0\u884c\u65f6\u95f4\u7f29\u77ed\u660e\u663e</li> <li><code>combine7</code>\u867d\u7136\u6ca1\u6709\u589e\u52a0\u4e34\u65f6\u53d8\u91cf\uff0c\u4f46\u662f\u5728\u5faa\u73af\u4e2d\u53ea\u7d2f\u79ef\u4e00\u6b21\uff0c\u540c\u6837\u7f29\u77ed\u4e86\u5173\u952e\u8def\u5f84\uff0c\u63d0\u9ad8\u4e86\u6548\u7387</li> </ul> <p>\u603b\u4e4b\uff0c\u5faa\u73af\u5c55\u5f00\u548c\u5e76\u884c\u5730\u7d2f\u79ef\u5728\u591a\u4e2a\u503c\u4e2d\uff0c\u662f\u63d0\u9ad8\u7a0b\u5e8f\u6027\u80fd\u7684\u53ef\u9760\u65b9\u6cd5\u3002</p>"},{"location":"booknotes/csapp/05/#_5","title":"\u6027\u80fd\u9650\u5236\u56e0\u7d20","text":"<p>\u4e00\u4e2a\u7a0b\u5e8f\u7684\u6267\u884c\u65f6\u95f4\u4e0e\u5176\u201c\u5173\u952e\u8def\u5f84\u957f\u5ea6\u201d\u548c\u201c\u541e\u5410\u91cf\u754c\u9650\u201d\u6709\u5173\uff1a</p> <ul> <li>\u5173\u952e\u8def\u5f84<ul> <li>\u6307\u660e\u4e86\u6267\u884c\u8be5\u7a0b\u5e8f\u6240\u9700\u65f6\u95f4\u7684\u4e00\u4e2a\u57fa\u672c\u4e0b\u754c\u3002\u5982\u679c\u7a0b\u5e8f\u4e2d\u6709\u67d0\u6761\u6570\u636e\u76f8\u5173\u94fe\uff0c\u8fd9\u6761\u94fe\u4e0a\u7684\u6240\u6709\u5ef6\u8fdf\u4e4b\u548c\u7b49\u4e8e<code>T</code>\uff0c\u90a3\u4e48\u8fd9\u4e2a\u7a0b\u5e8f\u81f3\u5c11\u9700\u8981<code>T</code>\u4e2a\u5468\u671f\u624d\u80fd\u6267\u884c\u5b8c</li> </ul> </li> <li>\u541e\u5410\u91cf<ul> <li>\u5047\u8bbe\u4e00\u4e2a\u7a0b\u5e8f\u4e00\u5171\u9700\u8981N\u4e2a\u67d0\u79cd\u8fd0\u7b97\u7684\u8ba1\u7b97\uff0c\u800c\u5fae\u5904\u7406\u5668\u53ea\u6709C\u4e2a\u80fd\u6267\u884c\u8fd9\u4e2a\u64cd\u4f5c\u7684\u529f\u80fd\u5355\u5143\uff0c\u5e76\u4e14\u8fd9\u4e9b\u5355\u5143\u7684\u53d1\u5c04\u65f6\u95f4\u4e3aI\u3002\u90a3\u4e48\u8fd9\u4e2a\u7a0b\u5e8f\u7684\u6267\u884c\u81f3\u5c11\u9700\u8981<code>N*I/C</code>\u4e2a\u5468\u671f</li> </ul> </li> </ul>"},{"location":"booknotes/csapp/05/#_6","title":"\u5bc4\u5b58\u5668\u6ea2\u51fa","text":"<p>\u5982\u679c\u6211\u4eec\u7684\u5e76\u884c\u5ea6\u8d85\u8fc7\u4e86\u53ef\u7528\u7684\u5bc4\u5b58\u5668\u6570\u91cf\uff0c\u90a3\u4e48\u7f16\u8bd1\u5668\u4f1a\u8bc9\u8bf8\u5bc4\u5b58\u5668\u6ea2\u51fa\uff0c\u5c06\u67d0\u4e9b\u4e34\u65f6\u503c\u5b58\u653e\u5230\u5185\u5b58\u4e2d\uff0c\u4ece\u800c\u964d\u4f4e\u4e86\u8fd0\u884c\u6548\u7387\u3002</p>"},{"location":"booknotes/csapp/05/#_7","title":"\u5206\u652f\u9884\u6d4b\u9519\u8bef\u5904\u7f5a","text":"<p>\u4fdd\u8bc1\u5206\u652f\u9884\u6d4b\u5904\u7f5a\u4e0d\u4f1a\u963b\u788d\u7a0b\u5e8f\u6548\u7387\u7684\u901a\u7528\u539f\u5219\u6709\uff1a</p> <ul> <li>\u4e0d\u8981\u8fc7\u5206\u5173\u5fc3\u53ef\u9884\u6d4b\u7684\u5206\u652f<ul> <li>\u73b0\u4ee3\u5904\u7406\u5668\u4e2d\u7684\u5206\u652f\u9884\u6d4b\u903b\u8f91\u975e\u5e38\u5584\u4e8e\u9884\u6d4b\u5206\u652f\u3002\u4f8b\u5982\uff1a<ul> <li>\u4e0a\u4f8b\u4e2d\u7684<code>combine2</code>\u548c<code>combine3</code>\u8fd0\u884c\u65f6\u95f4\u76f8\u8fd1\uff0c\u539f\u56e0\u662f\u6bcf\u6b21\u8fed\u4ee3\u7684\u5224\u65ad\u8bed\u53e5\u9ad8\u5ea6\u53ef\u9884\u6d4b</li> <li>\u540c\u7406\uff0c\u8fb9\u754c\u68c0\u6d4b\u6240\u9700\u7684\u989d\u5916\u8ba1\u7b97\u5e76\u4e0d\u4f1a\u5bf9\u5173\u952e\u8def\u5f84\u4ea7\u751f\u592a\u5927\u7684\u5f71\u54cd</li> </ul> </li> </ul> </li> <li>\u4e66\u5199\u9002\u5408\u7528\u6761\u4ef6\u4f20\u9001\u5b9e\u73b0\u7684\u4ee3\u7801<ul> <li>\u5bf9\u4e8e\u672c\u8d28\u4e0a\u65e0\u6cd5\u9884\u6d4b\u7684\u60c5\u51b5(\u5982\u4e00\u4e2a\u6570\u662f\u6b63\u6570\u8fd8\u662f\u8d1f\u6570)\uff0c\u5982\u679c\u80fd\u4f7f\u7528\u6761\u4ef6\u6570\u636e\u4f20\u9001\u800c\u4e0d\u4f7f\u7528\u6761\u4ef6\u63a7\u5236\u8f6c\u79fb\u7684\u4ee3\u7801\uff0c\u53ef\u5927\u5927\u63d0\u9ad8\u6548\u7387\u3002\u4f8b\u5982\uff0c\u4e0b\u4f8b\u4e2d\u7684<code>minmax2</code>\u6bd4<code>minmax</code>\u6548\u7387\u66f4\u9ad8\uff1a <pre><code>void minmax(long a[], long b[], long n)\n{\n    for (long i = 0; i &lt; n; i++)\n    {\n        if (a[i] &gt; b[i])\n        {\n            long t = a[i];\n            a[i] = b[i];\n            b[i] = t;\n        }\n    }\n}\n\nvoid minmax2(long a[], long b[], long n)\n{\n    for (long i = 0; i &lt; n; i++)\n    {\n        long min = a[i] &lt; b[i] ? a[i] : b[i];\n        long max = a[i] &lt; b[i] ? b[i] : a[i];\n        a[i] = min;\n        b[i] = max;\n    }\n}\n</code></pre></li> </ul> </li> </ul>"},{"location":"booknotes/csapp/05/#_8","title":"\u603b\u7ed3","text":"<p>\u4f18\u5316\u7a0b\u5e8f\u7684\u57fa\u672c\u7b56\u7565\uff1a</p> <ul> <li>\u9ad8\u7ea7\u8bbe\u8ba1<ul> <li>\u907f\u514d\u4f7f\u7528\u6027\u80fd\u7cdf\u7cd5\u7684\u6570\u636e\u7ed3\u6784\u548c\u7b97\u6cd5</li> </ul> </li> <li>\u57fa\u672c\u7f16\u7801\u539f\u5219<ul> <li>\u6d88\u9664\u8fde\u7eed\u7684\u51fd\u6570\u8c03\u7528<ul> <li>\u5982\u679c\u53ef\u80fd\uff0c\u5c06\u8ba1\u7b97\u79fb\u52a8\u5230\u5faa\u73af\u5916</li> </ul> </li> <li>\u6d88\u9664\u4e0d\u5fc5\u8981\u7684\u5185\u5b58\u5f15\u7528<ul> <li>\u5f15\u5165\u4e34\u65f6\u53d8\u91cf\u4fdd\u5b58\u4e2d\u95f4\u7ed3\u679c\uff0c\u5728\u6700\u540e\u624d\u5c06\u7ed3\u679c\u653e\u5230\u5168\u5c40\u53d8\u91cf\u4e2d</li> </ul> </li> </ul> </li> <li>\u4f4e\u7ea7\u4f18\u5316<ul> <li>\u5c55\u5f00\u5faa\u73af\uff0c\u964d\u4f4e\u5f00\u9500</li> <li>\u901a\u8fc7\u4f7f\u7528\u591a\u4e2a\u79ef\u7d2f\u53d8\u91cf\u548c\u91cd\u65b0\u7ed3\u5408\u7b49\u6280\u672f\uff0c\u627e\u5230\u65b9\u6cd5\u63d0\u9ad8\u6307\u4ee4\u7ea7\u5e76\u884c</li> <li>\u91cd\u5199\u6761\u4ef6\u64cd\u4f5c\uff0c\u4f7f\u5f97\u7f16\u8bd1\u91c7\u7528\u6761\u4ef6\u6570\u636e\u4f20\u9001</li> </ul> </li> </ul>"},{"location":"booknotes/csapp/08/","title":"\u5f02\u5e38\u6d41\u63a7\u5236","text":"<p>\u300a\u6df1\u5165\u7406\u89e3\u8ba1\u7b97\u673a\u7cfb\u7edf\u300b - Randal E. Bryant - \u7b2c\u4e09\u7248\uff0c\u7b2c\u516b\u7ae0\u7684\u8bfb\u4e66\u7b14\u8bb0\uff0c\u672c\u6587\u4e2d\u7684\u6240\u6709\u4ee3\u7801\u53ef\u5728GitHub\u4ed3\u5e93\u4e2d\u627e\u5230</p> <p>\u5f02\u5e38\u63a7\u5236\u6d41(Exceptional Control Flow, ECF)\u8868\u793a\u7531\u975e\u5e38\u89c4\u7a0b\u5e8f\u6307\u4ee4(<code>ret</code>\uff0c<code>call</code>\u7b49)\u89e6\u53d1\u7684\u63a7\u5236\u6743\u8df3\u8f6c\uff0c\u5176\u53d1\u751f\u5728\u8ba1\u7b97\u673a\u7cfb\u7edf\u7684\u5404\u4e2a\u5c42\u6b21\uff1a</p> <ul> <li>\u786c\u4ef6\u5c42 - \u5f02\u5e38<ul> <li>\u786c\u4ef6\u68c0\u6d4b\u7684\u4e8b\u4ef6\u4f1a\u89e6\u53d1\u63a7\u5236\u7a81\u7136\u8f6c\u79fb\u5230\u5f02\u5e38\u5904\u7406\u7a0b\u5e8f</li> </ul> </li> <li>\u64cd\u4f5c\u7cfb\u7edf\u5c42 - \u7cfb\u7edf\u8c03\u7528<ul> <li>\u5185\u6838\u901a\u8fc7\u4e0a\u4e0b\u6587\u5207\u6362\u5c06\u63a7\u5236\u4ece\u4e00\u4e2a\u7528\u6237\u8fdb\u7a0b\u8f6c\u79fb\u5230\u53e6\u4e00\u4e2a\u7528\u6237\u8fdb\u7a0b</li> </ul> </li> <li>\u5e94\u7528\u5c42 - \u4fe1\u53f7<ul> <li>\u4fe1\u53f7\u63a5\u6536\u8fdb\u7a0b\u63a5\u6536\u5230\u4fe1\u53f7\u540e\uff0c\u4f1a\u5c06\u63a7\u5236\u7a81\u7136\u8f6c\u79fb\u5230\u5b83\u7684\u4e00\u4e2a\u4fe1\u53f7\u5904\u7406\u7a0b\u5e8f</li> </ul> </li> </ul>"},{"location":"booknotes/csapp/08/#_2","title":"\u5f02\u5e38","text":"<p>\u5f02\u5e38\u662f\u63a7\u5236\u6d41\u4e2d\u7684\u7a81\u53d8\uff0c\u4e00\u90e8\u5206\u7531\u786c\u4ef6\u5b9e\u73b0\uff0c\u4e00\u90e8\u5206\u7531\u64cd\u4f5c\u7cfb\u7edf\u5b9e\u73b0\u3002\u5f02\u5e38\u53d1\u751f\u7684\u8fc7\u7a0b\u5982\u4e0b\uff1a</p> <ul> <li>\u5904\u7406\u5668\u68c0\u6d4b\u5230\u6709\u4e8b\u4ef6\u53d1\u751f</li> <li>\u6839\u636e\u4e8b\u4ef6\u79cd\u7c7b\uff0c\u4ece\u5f02\u5e38\u8868\u4e2d\u9009\u62e9\u5bf9\u5e94\u7684\u5f02\u5e38\u5904\u7406\u7a0b\u5e8f\u5730\u5740\uff0c\u5e76\u8fdb\u884c\u8df3\u8f6c</li> <li>\u5f53\u5f02\u5e38\u5904\u7406\u7a0b\u5e8f\u5b8c\u6210\u540e\uff0c\u6839\u636e\u5f02\u5e38\u7c7b\u578b\uff0c\u4f1a\u53d1\u751f\u4ee5\u4e0b3\u79cd\u60c5\u51b5\uff1a<ul> <li>\u5c06\u63a7\u5236\u8fd4\u56de\u7ed9\u5f53\u524d\u6307\u4ee4\uff0c\u5373\u5f53\u4e8b\u4ef6\u53d1\u751f\u65f6\u6b63\u5728\u6267\u884c\u7684\u6307\u4ee4</li> <li>\u5c06\u63a7\u5236\u8fd4\u56de\u7ed9\u4e0b\u4e00\u6761\u6307\u4ee4\uff0c\u5373\u6ca1\u6709\u53d1\u751f\u5f02\u5e38\u5c06\u4f1a\u6267\u884c\u7684\u4e0b\u4e00\u6761\u6307\u4ee4</li> <li>\u7ec8\u6b62\u88ab\u7ec8\u7aef\u7684\u7a0b\u5e8f</li> </ul> </li> </ul> <p>\u5f02\u5e38\u8df3\u8f6c\u7684\u8fc7\u7a0b\u7c7b\u4f3c\u4e8e\u8fc7\u7a0b\u8c03\u7528\uff0c\u4f46\u4e5f\u6709\u4e00\u4e9b\u4e0d\u540c\u4e4b\u5904\uff1a</p> <ul> <li>\u5f02\u5e38\u8df3\u8f6c\u7684\u8fd4\u56de\u5730\u5740\u4f1a\u6839\u636e\u5f02\u5e38\u7c7b\u578b\u4e0d\u540c\u800c\u4e0d\u540c\uff0c\u53ef\u80fd\u662f\u5f53\u524d\u6307\u4ee4\uff0c\u4e5f\u53ef\u80fd\u662f\u4e0b\u4e00\u6761\u6307\u4ee4</li> <li>\u5904\u7406\u5668\u4e5f\u4f1a\u4fdd\u5b58\u73b0\u573a\uff0c\u4f46\u5982\u679c\u63a7\u5236\u662f\u4ece\u7528\u6237\u7a0b\u5e8f\u8f6c\u79fb\u5230\u5185\u6838\uff0c\u6240\u6709\u8fd9\u4e9b\u9879\u76ee\u90fd\u88ab\u538b\u5230\u5185\u6838\u6808\uff0c\u800c\u4e0d\u662f\u538b\u5230\u7528\u6237\u6808</li> </ul>"},{"location":"booknotes/csapp/08/#_3","title":"\u5f02\u5e38\u7684\u7c7b\u522b","text":"\u7c7b\u522b \u539f\u56e0 \u5f02\u6b65/\u540c\u6b65 \u8fd4\u56de\u884c\u4e3a \u4e2d\u65ad \u6765\u81eaI/O\u8bbe\u5907\u7684\u4fe1\u53f7 \u5f02\u6b65 \u603b\u662f\u8fd4\u56de\u5230\u4e0b\u4e00\u6761\u6307\u4ee4 \u9677\u9631 \u6709\u610f\u7684\u5f02\u5e38\uff0c\u5982\u7cfb\u7edf\u8c03\u7528 \u540c\u6b65 \u603b\u662f\u8fd4\u56de\u5230\u4e0b\u4e00\u6761\u6307\u4ee4 \u6545\u969c \u6f5c\u5728\u53ef\u6062\u590d\u7684\u9519\u8bef \u540c\u6b65 \u53ef\u80fd\u8fd4\u56de\u5230\u5f53\u524d\u6307\u4ee4 \u7ec8\u6b62 \u4e0d\u53ef\u6062\u590d\u7684\u9519\u8bef \u540c\u6b65 \u4e0d\u4f1a\u8fd4\u56de <ul> <li>\u5f02\u6b65/\u540c\u6b65<ul> <li>\u4e2d\u65ad\u662f\u6765\u81ea\u5904\u7406\u5668\u5916\u90e8\u7684I/O\u8bbe\u5907\u7684\u4fe1\u53f7\u7684\u7ed3\u679c\uff0c\u662f\u5f02\u6b65\u7684</li> <li>\u9664\u4e86\u4e2d\u65ad\uff0c\u5269\u4e0b\u7684\u5f02\u5e38\u7c7b\u578b\u90fd\u662f\u540c\u6b65\u53d1\u751f\u7684\uff0c\u662f\u6267\u884c\u5f53\u524d\u6307\u4ee4\u7684\u7ed3\u679c</li> </ul> </li> <li>\u7ec8\u6b62/\u8fd4\u56de<ul> <li>\u201c\u4e2d\u65ad\u201d\u548c\u201c\u9677\u9631\u201d\u603b\u4f1a\u8fd4\u56de\u5230\u4e0b\u4e00\u6761\u6307\u4ee4</li> <li>\u201c\u6545\u969c\u201d\u53ef\u80fd\u8fd4\u56de\u5230\u5f53\u524d\u6307\u4ee4\uff0c\u4e5f\u53ef\u80fd\u7ec8\u6b62\u7a0b\u5e8f</li> <li>\u201c\u7ec8\u6b62\u201d\u5f02\u5e38\u80af\u5b9a\u4f1a\u7ec8\u6b62\u7a0b\u5e8f</li> </ul> </li> </ul>"},{"location":"booknotes/csapp/08/#linux","title":"Linux\u6545\u969c","text":"<ul> <li>\u9664\u6cd5\u9519\u8bef<ul> <li>\u5f53\u8bd5\u56fe\u9664\u4ee5\u96f6\uff0c\u53d1\u751f\u9664\u6cd5\u9519\u8bef\uff0cLinux\u62a5\u544a\u4e3a\u201c\u6d6e\u70b9\u5f02\u5e38(Floating exception)\u201d\uff0c\u5e76\u7ec8\u6b62\u7a0b\u5e8f</li> </ul> </li> <li>\u4e00\u822c\u4fdd\u62a4\u6545\u969c<ul> <li>\u5f53\u5f15\u7528\u4e86\u4e00\u4e2a\u672a\u5b9a\u4e49\u7684\u865a\u62df\u5185\u5b58\u533a\u57df\uff0c\u6216\u8005\u8bd5\u56fe\u5199\u4e00\u4e2a\u53ea\u8bfb\u6bb5\uff0cLinux\u62a5\u544a\u4e3a\u201c\u6bb5\u6545\u969c(Segmentation fault)\u201d\uff0c\u5e76\u7ec8\u6b62\u7a0b\u5e8f</li> </ul> </li> <li>\u7f3a\u9875<ul> <li>\u5f53\u53d1\u751f\u7f3a\u9875\u6545\u969c\uff0c\u5f02\u5e38\u5904\u7406\u7a0b\u5e8f\u5c06\u865a\u62df\u5185\u5b58\u7684\u4e00\u4e2a\u9875\u9762\u6620\u5c04\u5230\u7269\u7406\u5185\u5b58\u7684\u4e00\u4e2a\u9875\u9762\uff0c\u7136\u540e\u91cd\u65b0\u6267\u884c\u8fd9\u6761\u4ea7\u751f\u6545\u969c\u7684\u6307\u4ee4</li> </ul> </li> </ul> <p>\u4f8b\u5b50\"div_zero_fault\"\u81ea\u5b9a\u4e49\u4e86\u201c\u9664\u6cd5\u9519\u8bef\u201d\u7684\u5904\u7406\u7a0b\u5e8f\u3002\u7c7b\u4f3c\u5730\uff0c\u4f8b\u5b50\"seg_fault\"\u81ea\u5b9a\u4e49\u4e86\u201c\u6bb5\u6545\u969c\u201d\u7684\u5904\u7406\u7a0b\u5e8f\u3002\u6545\u969c\u7684\u5f02\u5e38\u5904\u7406\u7a0b\u5e8f\u4f1a\u8fd4\u56de\u5230\u5f53\u524d\u6307\u4ee4\uff0c\u56e0\u6b64\u53ea\u8981\u5f02\u5e38\u5904\u7406\u7a0b\u5e8f\u4e0d\u4e3b\u52a8\u7ec8\u6b62\u7a0b\u5e8f\uff0c\u4f1a\u4e0d\u65ad\u88ab\u89e6\u53d1\u3002</p> <p>Divide by Zero Fault<pre><code>void sig_handler(int signo)\n{\n    static int num = 0;\n    if (signo == SIGFPE)\n    {\n        printf(\"Divide by zero fault happens %d times\\n\", num++);\n    }\n\n    const int SIGFPE_NUM = 5;\n    if (num == SIGFPE_NUM)\n    {\n        printf(\"Abort the program after %d divide by zero fault\\n\", num);\n        std::abort();\n    }\n}\n\nint main()\n{\n    signal(SIGFPE, sig_handler);\n\n    printf(\"Trigger divide by zero fault\\n\");\n    int a = 1;\n    int b = 0;\n    a = a / b;\n\n    return 0;\n}\n</code></pre> <pre><code>&gt; ./main\nTrigger divide by zero fault\nDivide by zero fault happens 0 times\nDivide by zero fault happens 1 times\nDivide by zero fault happens 2 times\nDivide by zero fault happens 3 times\nDivide by zero fault happens 4 times\nAbort the program after 5 divide by zero fault\nAborted (core dumped)\n</code></pre></p>"},{"location":"booknotes/csapp/08/#linux_1","title":"Linux\u9677\u9631(\u7cfb\u7edf\u8c03\u7528)","text":"<p>Linux\u63d0\u4f9b\u4e86\u51e0\u767e\u79cd\u7cfb\u7edf\u8c03\u7528\uff0c\u6bcf\u4e2a\u7cfb\u7edf\u8c03\u7528\u90fd\u6709\u4e00\u4e2a\u552f\u4e00\u7684\u6574\u6570\u53f7\uff0c\u5bf9\u5e94\u4e8e\u4e00\u4e2a\u5230\u5185\u6838\u4e2d\u7684\u504f\u79fb\u91cf(\u6ce8\u610f\uff1a\u8fd9\u4e2a\u8df3\u8f6c\u8868\u548c\u5f02\u5e38\u8868\u4e0d\u4e00\u6837)\uff0c\u8be6\u60c5\u53c2\u89c1\u7f51\u9875\u3002\u5728x86-64\u7cfb\u7edf\u4e0a\uff0c\u7cfb\u7edf\u8c03\u7528\u662f\u901a\u8fc7\u4e00\u6761\u79f0\u4e3a<code>syscall</code>\u7684\u9677\u9631\u6307\u4ee4\u6765\u63d0\u4f9b\u7684\u3002\u6240\u6709\u7cfb\u7edf\u8c03\u7528\u7684\u53c2\u6570\u90fd\u662f\u901a\u8fc7\u901a\u7528\u5bc4\u5b58\u5668\u800c\u4e0d\u662f\u6808\u4f20\u9012\u7684\u3002</p> <p>\u4f8b\u5b50\"write_syscall\"\u75284\u79cd\u65b9\u6cd5\u5728\u7ec8\u7aef\u6253\u5370\u201chello world\u201d\u5b57\u7b26\u4e32\u3002\u5176\u4e2d\uff0c\u6c47\u7f16\u4ee3\u7801\u5b9e\u73b0\u7684<code>asm_write</code>\u51fd\u6570\u5c55\u793a\u4e86<code>syscall</code>\u6307\u4ee4\u7684\u5de5\u4f5c\u60c5\u51b5\uff1a <pre><code>int asm_write(int fd, const void* buffer, size_t size)\n{\n   int ret = 0;\n\n   // write(rdi=fd, rsi=buffer, rdx=size);\n   //   write system call ID = 1 (rax)\n   asm(\"movl %1,%%edi \\n\\t\"\n       \"movq %2,%%rsi \\n\\t\"\n       \"movq %3,%%rdx \\n\\t\"\n       \"movq $1,%%rax \\n\\t\"\n       \"syscall       \\n\\t\"\n       \"movl %%eax,%0 \\n\\t\"\n       :\"=rm\"(ret)\n       :\"rm\"(fd),\"rm\"(buffer),\"rm\"(size));\n\n   return ret;\n}\n\nint main()\n{\n   printf(\"hello, world0\\n\");\n   write(1/*fileno(stdout)*/, \"hello, world1\\n\", 14);\n   syscall(SYS_write, 1, \"hello, world2\\n\", 14);\n   asm_write(1, \"hello, world3\\n\", 14);\n\n   return 0;\n}\n</code></pre> <pre><code>&gt; ./main\nhello, world0\nhello, world1\nhello, world2\nhello, world3\n</code></pre></p>"},{"location":"booknotes/csapp/08/#_4","title":"\u8fdb\u7a0b","text":"<p>\u8ba1\u7b97\u673a\u7cfb\u7edf\u4e2d\u903b\u8f91\u6d41\u6709\u8bb8\u591a\u4e0d\u540c\u7684\u5f62\u5f0f\uff0c\u4f8b\u5982\uff1a</p> <ul> <li>\u5f02\u5e38\u5904\u7406\u7a0b\u5e8f</li> <li>\u4fe1\u53f7\u5904\u7406\u7a0b\u5e8f</li> <li>\u8fdb\u7a0b</li> <li>\u7ebf\u7a0b</li> </ul>"},{"location":"booknotes/csapp/08/#_5","title":"\u52a0\u8f7d\u548c\u8fd0\u884c","text":"<p>\u5f53\u8fdb\u7a0b\u7684<code>main</code>\u51fd\u6570\u5f00\u59cb\u6267\u884c\u65f6\uff0c\u7528\u6237\u6808\u7684\u7ec4\u7ec7\u7ed3\u6784\u5982\u4e0a\u56fe\u6240\u793a\u3002\u4ece\u6808\u5e95\u5230\u6808\u9876\u4f9d\u6b21\u662f\uff1a</p> <ul> <li>\u53c2\u6570\u548c\u73af\u5883\u5b57\u7b26\u4e32</li> <li>\u4ee5<code>NULL</code>\u7ed3\u5c3e\u7684<code>envp[]</code>\u6307\u9488\u6570\u7ec4\uff0c\u6bcf\u4e2a\u6307\u9488\u6307\u5411\u4e00\u4e2a\u73af\u5883\u53d8\u91cf\u5b57\u7b26\u4e32</li> <li>\u4ee5<code>NULL</code>\u7ed3\u5c3e\u7684<code>argv[]</code>\u6307\u9488\u6570\u7ec4\uff0c\u6bcf\u4e2a\u6307\u9488\u6307\u5411\u4e00\u4e2a\u53c2\u6570\u5b57\u7b26\u4e32</li> <li>\u7cfb\u7edf\u542f\u52a8\u51fd\u6570<code>libc_start_main</code>\u7684\u6808\u5e27\uff0c\u51fd\u6570\u8c03\u7528\u6808\u7684\u7ed3\u6784\u53ef\u53c2\u8003\u300aDebug Hacks - \u8c03\u8bd5\u524d\u7684\u5fc5\u77e5\u5fc5\u4f1a\u300b</li> </ul> <p>\u4f8b\u5b50\"main_stack\"\u6253\u5370\u4e86\u53ef\u6267\u884c\u6587\u4ef6\u7684\u547d\u4ee4\u884c\u53c2\u6570\u548c\u73af\u5883\u53d8\u91cf\uff1a <pre><code>int main(int argc, char *argv[], char *envp[])\n{\n   printf(\"Command line arguments:\\n\");\n    int i = 0;\n    while(argv[i] != NULL)\n    {\n        printf(\"\\targv[%d]: %s\\n\", i, argv[i]);\n        i++;\n    }\n\n    printf(\"Environment variables:\\n\");\n    i = 0;\n    while(envp[i] != NULL)\n    {\n        printf(\"\\tenvp[%d]: %s\\n\", i, envp[i]);\n        i++;\n    }\n    return 0;\n}\n</code></pre> <pre><code>&gt; ./main arg1 arg2\nCommand line arguments:\n        argv[0]: ./main\n        argv[1]: arg1\n        argv[2]: arg2\nEnvironment variables:\n        envp[0]: ...\n</code></pre></p>"},{"location":"booknotes/csapp/08/#_6","title":"\u4e0a\u4e0b\u6587\u5207\u6362","text":"<p>\u64cd\u4f5c\u7cfb\u7edf\u5185\u6838\u4f7f\u7528\u4e00\u79cd\u79f0\u4e3a\u4e0a\u4e0b\u6587\u5207\u6362(context switch)\u7684\u8f83\u9ad8\u5c42\u5f62\u5f0f\u7684\u5f02\u5e38\u63a7\u5236\u6d41\u6765\u5b9e\u73b0\u591a\u4efb\u52a1\u3002\u4e0a\u4e0b\u6587\u5207\u6362\u673a\u5236\u662f\u5efa\u7acb\u5728\u4e4b\u524d\u7684\u90a3\u4e9b\u8f83\u4f4e\u5c42\u5f02\u5e38\u673a\u5236\u4e4b\u4e0a\u7684\u3002</p> <p>\u5185\u6838\u4e3a\u6bcf\u4e2a\u8fdb\u7a0b\u7ef4\u6301\u4e00\u4e2a\u4e0a\u4e0b\u6587\uff0c\u4e0a\u4e0b\u6587\u5c31\u662f\u5185\u6838\u91cd\u65b0\u542f\u52a8\u4e00\u4e2a\u88ab\u62a2\u5360\u7684\u8fdb\u7a0b\u6240\u9700\u7684\u72b6\u6001\u3002\u5305\u62ec\uff1a</p> <ul> <li>\u901a\u7528\u76ee\u7684\u5bc4\u5b58\u5668\u3001\u6d6e\u70b9\u5bc4\u5b58\u5668\u3001\u7a0b\u5e8f\u8ba1\u6570\u5668\u3001\u72b6\u6001\u5bc4\u5b58\u5668</li> <li>\u7528\u6237\u6808</li> <li>\u5185\u6838\u6808\u548c\u5404\u79cd\u5185\u6838\u6570\u636e\u7ed3\u6784<ul> <li>\u6bd4\u5982\u63cf\u8ff0\u5730\u5740\u7a7a\u95f4\u7684\u9875\u8868\u3001\u5305\u542b\u6709\u5173\u5f53\u524d\u8fdb\u7a0b\u4fe1\u606f\u7684\u8fdb\u7a0b\u8868\uff0c\u4ee5\u53ca\u5305\u542b\u8fdb\u7a0b\u5df2\u6253\u5f00\u6587\u4ef6\u7684\u4fe1\u606f\u7684\u6587\u4ef6\u8868</li> </ul> </li> </ul> <p>\u5728\u5185\u6838\u8c03\u5ea6\u4e86\u4e00\u4e2a\u65b0\u7684\u8fdb\u7a0b\u8fd0\u884c\u540e\uff0c\u5b83\u5c31\u62a2\u5360\u4e86\u5f53\u524d\u8fdb\u7a0b\uff0c\u5e76\u4f7f\u7528\u4e00\u79cd\u79f0\u4e3a\u4e0a\u4e0b\u6587\u5207\u6362\u7684\u673a\u5236\u6765\u5c06\u63a7\u5236\u8f6c\u79fb\u5230\u65b0\u7684\u8fdb\u7a0b\uff0c\u8fc7\u7a0b\u5982\u4e0b\uff1a</p> <ul> <li>\u4fdd\u5b58\u5f53\u524d\u8fdb\u7a0b\u7684\u4e0a\u4e0b\u6587</li> <li>\u6062\u590d\u67d0\u4e2a\u5148\u524d\u88ab\u62a2\u5360\u7684\u8fdb\u7a0b\u88ab\u4fdd\u5b58\u7684\u4e0a\u4e0b\u6587</li> <li>\u5c06\u63a7\u5236\u4f20\u9012\u7ed9\u8fd9\u4e2a\u65b0\u6062\u590d\u7684\u8fdb\u7a0b</li> </ul> <p>\u4e0a\u4e0b\u6587\u5207\u6362\u7531\u64cd\u4f5c\u7cfb\u7edf\u5185\u6838\u63a7\u5236\uff0c\u5e38\u89c1\u60c5\u51b5\u6709\uff1a</p> <ul> <li>\u5185\u6838\u540c\u6b65\u89e6\u53d1<ul> <li>\u5982\u679c\u7cfb\u7edf\u8c03\u7528\u56e0\u4e3a\u7b49\u5f85\u67d0\u4e2a\u4e8b\u4ef6\u800c\u963b\u585e\uff0c\u5185\u6838\u53ef\u4ee5\u8ba9\u5f53\u524d\u8fdb\u7a0b\u4f11\u7720\uff0c\u5207\u6362\u5230\u53e6\u4e00\u4e2a\u8fdb\u7a0b</li> <li><code>sleep</code>\u7cfb\u7edf\u8c03\u7528\uff0c\u5b83\u4f1a\u663e\u5f0f\u5730\u8bf7\u6c42\u8ba9\u8c03\u7528\u8fdb\u7a0b\u4f11\u7720\uff0c\u5207\u6362\u5230\u53e6\u4e00\u4e2a\u8fdb\u7a0b</li> </ul> </li> <li>\u4e2d\u65ad\u5f02\u6b65\u89e6\u53d1<ul> <li>\u6bcf\u6b21\u53d1\u751f\u5b9a\u65f6\u5668\u4e2d\u65ad\u65f6\uff0c\u5185\u6838\u5c31\u80fd\u5224\u5b9a\u5f53\u524d\u8fdb\u7a0b\u5df2\u7ecf\u8fd0\u884c\u4e86\u8db3\u591f\u957f\u7684\u4e8b\u4ef6\uff0c\u4ece\u800c\u5207\u6362\u5230\u53e6\u4e00\u4e2a\u8fdb\u7a0b</li> </ul> </li> </ul> <p></p> <p>\u4e0a\u56fe\u5c55\u793a\u4e86\u4e00\u5bf9\u8fdb\u7a0bA\u548cB\u4e4b\u95f4\u4e0a\u4e0b\u6587\u5207\u6362\u7684\u793a\u4f8b\u3002\u5728\u8fd9\u4e2a\u4f8b\u5b50\u4e2d\uff0c</p> <ul> <li>\u8fdb\u7a0bA\u521d\u59cb\u8fd0\u884c\u5728\u7528\u6237\u6a21\u5f0f</li> <li>\u901a\u8fc7\u7cfb\u7edf\u8c03\u7528<code>read</code>\u9677\u5165\u5230\u5185\u6838<ul> <li>\u5185\u6838\u4e2d\u7684\u9677\u9631\u5904\u7406\u7a0b\u5e8f\u8bf7\u6c42\u6765\u81ea\u78c1\u76d8\u63a7\u5236\u5668\u7684DMA\u4f20\u8f93\uff0c\u5e76\u8bbe\u7f6eDMA\u5b8c\u6210\u4e2d\u65ad</li> </ul> </li> <li>\u7531\u4e8e\u78c1\u76d8\u8bfb\u53d6\u9700\u8981\u8f83\u957f\u65f6\u95f4\uff0c\u5185\u6838\u6267\u884c\u4ece\u8fdb\u7a0bA\u5230\u8fdb\u7a0bB\u7684\u4e0a\u4e0b\u6587\u5207\u6362<ul> <li>\u5207\u6362\u524d\uff0c\u5185\u6838\u4ee3\u8868\u8fdb\u7a0bA\u5728\u5185\u6838\u6a21\u5f0f\u4e0b\u6267\u884c\u6307\u4ee4</li> <li>\u5207\u6362\u4e2d\uff0c\u5185\u6838\u5f00\u59cb\u4ee3\u8868\u8fdb\u7a0bB\u5728\u5185\u6838\u6a21\u5f0f\u4e0b\u6267\u884c\u6307\u4ee4</li> <li>\u5207\u6362\u540e\uff0c\u5185\u6838\u4ee3\u8868\u8fdb\u7a0bB\u5728\u7528\u6237\u6a21\u5f0f\u4e0b\u6267\u884c\u6307\u4ee4</li> </ul> </li> <li>\u8fdb\u7a0bB\u5728\u7528\u6237\u6a21\u5f0f\u4e0b\u8fd0\u884c\u4e00\u6bb5\u65f6\u95f4\uff0c\u76f4\u5230\u78c1\u76d8\u53d1\u51faDMA\u5b8c\u6210\u4e2d\u65ad\u4fe1\u53f7</li> <li>\u5185\u6838\u5224\u5b9a\u8fdb\u7a0bB\u5df2\u7ecf\u8fd0\u884c\u8db3\u591f\u957f\u7684\u65f6\u95f4\uff0c\u5c31\u6267\u884c\u4e00\u4e2a\u4ece\u8fdb\u7a0bB\u5230\u8fdb\u7a0bA\u7684\u4e0a\u4e0b\u6587\u5207\u6362<ul> <li>\u5c06\u63a7\u5236\u8fd4\u56de\u7ed9\u8fdb\u7a0bA\u4e2d\u7d27\u968f\u5728\u7cfb\u7edf\u8c03\u7528<code>read</code>\u4e4b\u540e\u7684\u90a3\u6761\u6307\u4ee4</li> </ul> </li> </ul>"},{"location":"booknotes/csapp/08/#_7","title":"\u4fe1\u53f7","text":"<p>Linux\u4fe1\u53f7\u662f\u4e00\u79cd\u66f4\u9ad8\u5c42\u7684\u8f6f\u4ef6\u5f62\u5f0f\u7684\u5f02\u5e38\u3002\u5e38\u89c1\u7684\u4fe1\u53f7\u6709\uff1a</p> <ul> <li>SIGFPE<ul> <li>\u5982\u679c\u4e00\u4e2a\u8fdb\u7a0b\u8bd5\u56fe\u9664\u4ee50\uff0c\u90a3\u4e48\u5185\u6838\u5c31\u53d1\u9001\u7ed9\u5b83\u4e00\u4e2aSIGFPE\u4fe1\u53f7(\u53f7\u78018)</li> </ul> </li> <li>SIGILL<ul> <li>\u5982\u679c\u4e00\u4e2a\u8fdb\u7a0b\u6267\u884c\u4e00\u6761\u975e\u6cd5\u6307\u4ee4\uff0c\u90a3\u4e48\u5185\u6838\u5c31\u53d1\u9001\u7ed9\u5b83\u4e00\u4e2aSIGILL\u4fe1\u53f7(\u53f7\u78014)</li> </ul> </li> <li>SIGSEGV<ul> <li>\u5982\u679c\u8fdb\u7a0b\u8fdb\u884c\u975e\u6cd5\u5185\u5b58\u5f15\u7528\uff0c\u5185\u6838\u5c31\u53d1\u9001\u5b83\u4e00\u4e2aSIGSEGV\u4fe1\u53f7(\u53f7\u780111)</li> </ul> </li> <li>SIGINT<ul> <li>\u5982\u679c\u5f53\u8fdb\u7a0b\u5728\u524d\u53f0\u8fd0\u884c\u65f6\uff0c\u4f60\u952e\u5165Ctrl+C\uff0c\u90a3\u4e48\u5185\u6838\u4f1a\u53d1\u9001\u4e00\u4e2aSIGINT\u4fe1\u53f7(\u53f7\u78012)\u7ed9\u8fd9\u4e2a\u524d\u53f0\u8fdb\u7a0b\u7ec4\u4e2d\u7684\u6bcf\u4e2a\u8fdb\u7a0b</li> </ul> </li> <li>SIGKILL<ul> <li>\u4e00\u4e2a\u8fdb\u7a0b\u53ef\u4ee5\u901a\u8fc7\u5411\u53e6\u4e00\u4e2a\u8fdb\u7a0b\u53d1\u9001\u4e00\u4e2aSIGINT\u4fe1\u53f7(\u53f7\u78019)\u5f3a\u5236\u7ec8\u6b62\u5b83</li> </ul> </li> <li>SIGCHLD<ul> <li>\u5f53\u4e00\u4e2a\u5b50\u8fdb\u7a0b\u7ec8\u6b62\u6216\u8005\u505c\u6b62\u65f6\uff0c\u5185\u6838\u4f1a\u53d1\u9001\u4e00\u4e2aSIGCHLD\u4fe1\u53f7(\u53f7\u780117)\u7ed9\u7236\u8fdb\u7a0b</li> </ul> </li> </ul> <p>\u4e0b\u8868\u5c55\u793a\u4e86\u6240\u6709\u4fe1\u53f7\u7684\u9ed8\u8ba4\u884c\u4e3a\u548c\u76f8\u5e94\u4e8b\u4ef6\uff1a</p> <p></p>"},{"location":"booknotes/csapp/08/#_8","title":"\u4fe1\u53f7\u672f\u8bed","text":"<ul> <li> <p>\u53d1\u9001\u4fe1\u53f7</p> <ul> <li>\u539f\u56e0\u6709\u4e24\u4e2a\uff1a<ul> <li>\u5185\u6838\u68c0\u6d4b\u5230\u4e00\u4e2a\u7cfb\u7edf\u4e8b\u4ef6\uff0c\u5982\u9664\u96f6\u9519\u8bef\u6216\u8005\u5b50\u8fdb\u7a0b\u7ec8\u6b62</li> <li>\u4e00\u4e2a\u8fdb\u7a0b\u8c03\u7528\u4e86<code>kill</code>\u51fd\u6570\uff0c\u663e\u5f0f\u5730\u8981\u6c42\u5185\u6838\u53d1\u9001\u4e00\u4e2a\u4fe1\u53f7\u7ed9\u76ee\u7684\u8fdb\u7a0b</li> </ul> </li> </ul> </li> <li> <p>\u63a5\u6536\u4fe1\u53f7</p> <ul> <li>\u8fdb\u7a0b\u53ef\u4ee5\u5ffd\u7565\u8fd9\u4e2a\u4fe1\u53f7\uff0c\u7ec8\u6b62\u6216\u8005\u901a\u8fc7\u6267\u884c\u4e00\u4e2a\u79f0\u4e3a\u4fe1\u53f7\u5904\u7406\u51fd\u6570(signal handler)\u7684\u7528\u6237\u5c42\u51fd\u6570\u6355\u83b7\u8fd9\u4e2a\u4fe1\u53f7</li> </ul> </li> <li> <p>\u5f85\u5904\u7406\u4fe1\u53f7</p> <ul> <li>\u4e00\u4e2a\u53d1\u51fa\u800c\u6ca1\u6709\u88ab\u63a5\u6536\u7684\u4fe1\u53f7</li> <li>\u4efb\u4f55\u65f6\u523b\uff0c\u4e00\u79cd\u7c7b\u578b\u81f3\u591a\u53ea\u4f1a\u6709\u4e00\u4e2a\u5f85\u5904\u7406\u4fe1\u53f7\u3002\u5982\u679c\u4e00\u4e2a\u8fdb\u7a0b\u6709\u4e00\u4e2a\u7c7b\u578b\u4e3ak\u7684\u5f85\u5904\u7406\u4fe1\u53f7\uff0c\u90a3\u4e48\u4efb\u4f55\u63a5\u4e0b\u6765\u53d1\u9001\u5230\u8fd9\u4e2a\u8fdb\u7a0b\u7684\u7c7b\u578b\u4e3ak\u7684\u4fe1\u53f7\u90fd\u4f1a\u88ab\u7b80\u5355\u5730\u4e22\u5f03</li> </ul> </li> </ul>"},{"location":"booknotes/csapp/08/#_9","title":"\u7f16\u5199\u4fe1\u53f7\u5904\u7406\u7a0b\u5e8f","text":"<p>\u5728\u7f16\u5199\u4fe1\u53f7\u5904\u7406\u7a0b\u5e8f\u65f6\uff0c\u9700\u8981\u5904\u7406\u4ee5\u4e0b\u51e0\u4e2a\u65b9\u9762\uff1a</p> <ul> <li>\u5904\u7406\u7a0b\u5e8f\u4e0e\u4e3b\u7a0b\u5e8f\u5e76\u53d1\u8fd0\u884c\uff0c\u5171\u4eab\u540c\u6837\u7684\u5168\u5c40\u53d8\u91cf\uff0c\u56e0\u6b64\u53ef\u80fd\u4e0e\u4e3b\u7a0b\u5e8f\u548c\u5176\u4ed6\u5904\u7406\u7a0b\u5e8f\u4e92\u76f8\u5e72\u6270</li> <li>\u5982\u4f55\u4ee5\u53ca\u4f55\u65f6\u63a5\u6536\u4fe1\u53f7\u7684\u89c4\u5219\u5e38\u5e38\u6709\u8fdd\u4eba\u7684\u76f4\u89c9</li> <li>\u4e0d\u540c\u7684\u7cfb\u7edf\u6709\u4e0d\u540c\u7684\u4fe1\u53f7\u5904\u7406\u8bed\u4e49</li> </ul> <p>\u4f8b\u5b50\"pending_sig\"\u5728\u7236\u8fdb\u7a0b\u4e2d\u6355\u83b7\u201cSIGCHLD\u201d\u4fe1\u53f7\uff0c\u5e76\u5229\u7528<code>waitpid</code>\u56de\u6536\u7ec8\u6b62\u7684\u5b50\u8fdb\u7a0b\u8d44\u6e90\uff0c\u4ee5\u9632\u6b62\u51fa\u73b0\u50f5\u5c38\u8fdb\u7a0b\uff1a</p> <p><pre><code>int setSignal(int signum, sighandler_t handler)\n{\n    struct sigaction action;\n\n    action.sa_handler = handler;\n    // sigaction\u51fd\u6570\u7684\u9ed8\u8ba4\u884c\u4e3a\u662f\uff1a\u89e6\u53d1\u5904\u7406\u51fd\u6570\u7684\u4fe1\u53f7\uff0c\u5728\u5904\u7406\u51fd\u6570\u6267\u884c\u8fc7\u7a0b\u4e2d\u662f\u88ab\u963b\u585e\u7684\n    sigemptyset(&amp;action.sa_mask);\n    // \u5982\u679c\u53ef\u80fd\uff0c\u5728\u5904\u7406\u51fd\u6570\u7ed3\u675f\u540e\u7ee7\u7eed\u6267\u884c\u88ab\u4e2d\u65ad\u7684\u7cfb\u7edf\u8c03\u7528\u3002\u5426\u5219\uff0c\u88ab\u4e2d\u65ad\u7684\u6162\u901f\u7cfb\u7edf\u8c03\u7528\n    // \u5728\u4fe1\u53f7\u5904\u7406\u7a0b\u5e8f\u8fd4\u56de\u65f6\u4e0d\u518d\u7ee7\u7eed\uff0c\u800c\u662f\u7acb\u5373\u8fd4\u56de\u7ed9\u7528\u6237\u4e00\u4e2a\u9519\u8bef\u6761\u4ef6\uff0c\u5e76\u5c06errno\u8bbe\u7f6e\u4e3aEINTR\n    action.sa_flags = SA_RESTART;\n\n    return sigaction(signum, &amp;action, NULL);\n}\n\nvoid handler(int sig)\n{\n    int childPID = waitpid(-1, NULL, 0);\n    printf(\"[Signal] Handle %d signal from child %d\\n\", sig, childPID);\n    // \u5ef6\u957f\u4fe1\u53f7\u5904\u7406\u65f6\u95f4\uff0c\u4ee5\u4ea7\u751f\u5f85\u5904\u7406\u4fe1\u53f7\n    sleep(1);\n}\n\nint main()\n{\n    setSignal(SIGCHLD, handler);\n\n    for (int i = 0; i &lt; 3; i++)\n    {\n        if (fork() == 0)\n        {\n            printf(\"[Child] Hello from child %d\\n\", (int)getpid());\n            return 0;\n        }\n    }\n\n    printf(\"[Parent] Processing\\n\");\n    ...\n}\n</code></pre> <pre><code>&gt; ./main\n[Child] Hello from child 47360\n[Parent] Processing\n[Child] Hello from child 47362\n[Signal] Handle 17 signal from child 47360\n[Child] Hello from child 47361\n[Signal] Handle 17 signal from child 47361\n^Z\n&gt; ps\n    PID TTY          TIME CMD\n   2427 pts/4    00:00:01 bash\n  47359 pts/4    00:00:00 main\n  47362 pts/4    00:00:00 main &lt;defunct&gt;\n  47399 pts/4    00:00:00 ps\n</code></pre></p> <p>\u4ece\u4f8b\u5b50\u7684\u8f93\u51fa\u4e2d\u6211\u4eec\u6ce8\u610f\u5230\uff0c\u5c3d\u7ba1\u5b50\u8fdb\u7a0b\u53d1\u9001\u4e863\u4e2a\u201cSIGCHLD\u201d\u4fe1\u53f7\u7ed9\u7236\u8fdb\u7a0b\uff0c\u4f46\u662f\u5176\u4e2d\u53ea\u6709\u4e24\u4e2a\u4fe1\u53f7\u88ab\u63a5\u6536\u4e86(\u5206\u522b\u6765\u81ea<code>PID-47360</code>\u548c<code>PID-47361</code>)\uff0c\u6765\u81ea<code>PID-47362</code>\u7684\u201cSIGCHLD\u201d\u4fe1\u53f7\u88ab\u4e22\u5f03\u4e86\u3002\u56e0\u6b64\u7236\u8fdb\u7a0b\u53ea\u56de\u6536\u4e86\u4e24\u4e2a\u5b50\u8fdb\u7a0b\u3002\u5b50\u8fdb\u7a0b\u201c47362\u201d\u53d8\u6210\u4e86ig\u50f5\u6b7b\u8fdb\u7a0b\u3002\u5176\u8fc7\u7a0b\u5982\u4e0b\uff1a</p> <ul> <li>\u7236\u8fdb\u7a0b\u63a5\u6536\u5e76\u6355\u83b7\u4e86\u7b2c\u4e00\u4e2a\u201cSIGCHL\u201d\u4fe1\u53f7</li> <li>\u5f53\u5904\u7406\u7a0b\u5e8f\u8fd8\u5728\u5904\u7406\u7b2c\u4e00\u4e2a\u4fe1\u53f7\u65f6\uff0c<ul> <li>\u7b2c\u4e8c\u4e2a\u4fe1\u53f7\u5c31\u4f20\u9001\u5e76\u6dfb\u52a0\u5230\u4e86\u5f85\u5904\u7406\u4fe1\u53f7\u96c6\u5408\u91cc</li> <li>\u540c\u65f6\uff0c\u7b2c\u4e09\u4e2a\u4fe1\u53f7\u4e5f\u5230\u8fbe\u4e86\uff0c\u56e0\u4e3a\u5df2\u7ecf\u6709\u4e00\u4e2a\u5f85\u5904\u7406\u7684\u201cSIGCHL\u201d\u4fe1\u53f7\uff0c\u7b2c\u4e09\u4e2a\u201cSIGCHL\u201d\u4fe1\u53f7\u76f4\u63a5\u88ab\u4e22\u5f03</li> </ul> </li> <li>\u6240\u4ee5\u867d\u7136\u5b50\u8fdb\u7a0b\u4e00\u5171\u53d1\u4e86\u4e09\u4e2a\u201cSIGCHL\u201d\u4fe1\u53f7\uff0c\u4f46\u662f\u7236\u8fdb\u7a0b\u53ea\u89e6\u53d1\u4e86\u4e24\u6b21\u4fe1\u53f7\u5904\u7406\u7a0b\u5e8f\uff0c\u4e5f\u5c31\u53ea\u56de\u6536\u4e86\u4e24\u4e2a\u5b50\u8fdb\u7a0b(\u54ea\u4e24\u4e2a\u5b50\u8fdb\u7a0b\u7531<code>waitpid</code>\u51b3\u5b9a)</li> </ul> <p>\u7531\u6b64\u5f97\u5230\u7684\u6559\u8bad\u662f\uff1a\u4e0d\u53ef\u4ee5\u7528\u4fe1\u53f7\u6765\u5bf9\u5176\u4ed6\u8fdb\u7a0b\u4e2d\u53d1\u751f\u7684\u4e8b\u4ef6\u8ba1\u6570\u3002</p> <p>\u4e3a\u4e86\u4fee\u590d\u4e0a\u9762\u7684\u95ee\u9898\uff0c\u53ef\u4fee\u6539\u4fe1\u53f7\u5904\u7406\u7a0b\u5e8f\uff0c\u8ba9\u4e00\u6b21\u5904\u7406\u56de\u6536\u5c3d\u53ef\u80fd\u591a\u7684\u50f5\u6b7b\u8fdb\u7a0b\u3002\u53ef\u53c2\u8003\u4f8b\u5b50\"pending_sig2\"\uff1a</p> <pre><code>void handler(int sig)\n{\n    int childPID = 0;\n    while((childPID = waitpid(-1, NULL, 0)) &gt; 0)\n    {\n        printf(\"[Signal] Handle %d signal from child %d\\n\", sig, childPID);\n    }\n    // extend the time of signal handler\n    sleep(1);\n}\n</code></pre>"},{"location":"booknotes/csapp/08/#_10","title":"\u540c\u6b65\u6d41\u4ee5\u907f\u514d\u5e76\u53d1\u9519\u8bef","text":"<p>\u4fe1\u53f7\u5904\u7406\u7a0b\u5e8f\u548c\u5176\u4ed6\u8fdb\u7a0b\u662f\u5e76\u53d1\u8fd0\u884c\u7684\uff0c\u5f53\u5bf9\u67d0\u4e00\u5168\u5c40\u7684\u53d8\u91cf\u8fdb\u884c\u64cd\u4f5c\u7684\u65f6\u5019\uff0c\u9700\u8981\u8003\u8651\u64cd\u4f5c\u7684\u4e92\u65a5\u6027\u548c\u987a\u5e8f\u6027\u3002</p> <p>\u4f8b\u5b50\"sig_mask\"\u5728\u4e3b\u7a0b\u5e8f\u4e2d\u5411\u5217\u8868\u4e2d\u6dfb\u52a0\u5b50\u8fdb\u7a0b\u53f7\uff0c\u5728\u4fe1\u53f7\u5904\u7406\u7a0b\u5e8f\u4e2d\u4ece\u5217\u8868\u4e2d\u5220\u9664\u5b50\u8fdb\u7a0b\u53f7\u3002\u56e0\u6b64\u9700\u8981\u4fdd\u8bc1\uff1a</p> <ul> <li><code>addjob</code>\u548c<code>deletejob</code>\u4e0d\u80fd\u540c\u65f6\u88ab\u8c03\u7528</li> <li>\u5bf9\u4e8e\u540c\u4e00\u4e2a\u5b50\u8fdb\u7a0bPID\uff0c\u5e94\u5148<code>addjob</code>\uff0c\u518d\u5728\u7ec8\u6b62\u65f6<code>deletejob</code></li> </ul> <p><pre><code>void handler(int sig)\n{\n    sigset_t mask_all, mask_recover;\n    sigfillset(&amp;mask_all);\n    int pid = 0;\n    while ((pid = waitpid(-1, NULL, 0)) &gt; 0)\n    {\n        // \u5728\u64cd\u4f5c\u5217\u8868\u524d\u5c06\u6240\u6709\u4fe1\u53f7\u5c4f\u853d\uff0c\u9632\u6b62\u201cdeletejob\u201d\u88ab\u5e76\u53d1\u6267\u884c\n        sigprocmask(SIG_BLOCK, &amp;mask_all, &amp;mask_recover);\n        deletejob(pid);\n        sigprocmask(SIG_SETMASK, &amp;mask_recover, NULL);\n    }\n}\n\nint main(int argc, char **argv)\n{\n    sigset_t mask_all, mask_recover;\n    sigfillset(&amp;mask_all);\n\n    sigset_t mask_chld;\n    sigemptyset(&amp;mask_chld);\n    sigaddset(&amp;mask_chld, SIGCHLD);\n\n    setSignal(SIGCHLD, handler);\n    initjobs();\n\n    for (int i = 0; i &lt; 3; i++)\n    {\n        // \u5c4f\u853d\u201cSIGCHLD\u201d\u4fe1\u53f7\uff0c\u9632\u6b62\u5b50\u8fdb\u7a0b\u8fc7\u65e9\u7ed3\u675f\uff0c\u5bfc\u81f4\u201cdeletejob\u201d\u5148\u4e8e\u201caddjob\u201d\u88ab\u8c03\u7528\n        sigprocmask(SIG_BLOCK, &amp;mask_chld, &amp;mask_recover);\n        int pid = fork();\n        if (pid == 0)\n        {\n            // \u5728\u5b50\u8fdb\u7a0b\u4e2d\u6062\u590d\u201cSIGCHLD\u201d\u4fe1\u53f7\uff0c\u56e0\u4e3a\u5b50\u8fdb\u7a0b\u5bf9\u4fe1\u53f7\u7684\u8bbe\u7f6e\u662f\u7ee7\u627f\u4e0e\u7236\u8fdb\u7a0b\u7684\n            sigprocmask(SIG_SETMASK, &amp;mask_recover, NULL);\n            printf(\"[Child] Hello from child %d\\n\", (int)getpid());\n            return 0;\n        }\n        // \u5728\u64cd\u4f5c\u5217\u8868\u524d\u5c06\u6240\u6709\u4fe1\u53f7\u5c4f\u853d\uff0c\u9632\u6b62\u201caddjob\u201d\u548c\u201cdeletejob\u201d\u88ab\u5e76\u53d1\u6267\u884c\n        sigprocmask(SIG_BLOCK, &amp;mask_all, NULL);\n        addjob(pid);\n        sigprocmask(SIG_SETMASK, &amp;mask_recover, NULL);\n    }\n\n    printf(\"[Parent] Processing\\n\");\n    ...\n}\n</code></pre> <pre><code>&gt; ./main \n[Global] Init jobs\n[Global] Add 51694 PID to jobs\n[Global] Add 51695 PID to jobs\n[Global] Add 51696 PID to jobs\n[Parent] Processing\n[Child] Hello from child 51696\n[Global] Remove 51696 PID from jobs\n[Child] Hello from child 51695\n[Global] Remove 51695 PID from jobs\n[Child] Hello from child 51694\n[Global] Remove 51694 PID from jobs\n</code></pre></p>"},{"location":"booknotes/csapp/08/#_11","title":"\u975e\u672c\u5730\u8df3\u8f6c","text":"<p>C\u8bed\u8a00\u63d0\u4f9b\u4e86\u4e00\u79cd\u7528\u6237\u7ea7\u5f02\u5e38\u63a7\u5236\u6d41\u5f62\u5f0f\uff0c\u79f0\u4e3a\u975e\u672c\u5730\u8df3\u8f6c(nonlocal jump)\uff0c\u5b83\u5c06\u63a7\u5236\u76f4\u63a5\u4ece\u4e00\u5171\u51fd\u6570\u8f6c\u79fb\u5230\u53e6\u4e00\u4e2a\u5f53\u524d\u6b63\u5728\u6267\u884c\u7684\u51fd\u6570\uff0c\u800c\u4e0d\u9700\u8981\u8b66\u544a\u6b63\u5e38\u7684\u8c03\u7528-\u8fd4\u56de\u5e8f\u5217\u3002\u5e38\u89c4\u4ee3\u7801\u7531<code>setjum</code>\u548c<code>longjmp</code>\u51fd\u6570\u5b8c\u6210\u975e\u672c\u5730\u8df3\u8f6c\u3002\u5728\u4fe1\u53f7\u5904\u7406\u7a0b\u5e8f\u4e2d\u7531<code>sigsetjmp</code>\u548c<code>siglongjmp</code>\u51fd\u6570\u5b8c\u6210\u975e\u672c\u5730\u8df3\u8f6c\u3002</p> <ul> <li><code>setjmp</code>/<code>sigsetjmp</code>\u51fd\u6570\u5728env\u7f13\u51b2\u533a\u4e2d\u4fdd\u5b58\u5f53\u524d\u8c03\u7528\u73af\u5883\uff0c\u4ee5\u4f9b\u540e\u9762\u7684<code>longjmp</code>/<code>siglongjmp</code>\u4f7f\u7528\uff0c\u5e76\u8fd4\u56de0\uff0c\u8fd4\u56de\u503c\u4e0d\u80fd\u88ab\u8d4b\u503c\u7ed9\u53d8\u91cf\uff0c\u53ea\u80fd\u7528\u5728<code>switch</code>\u6216\u6761\u4ef6\u8bed\u53e5\u4e2d</li> <li><code>longjmp</code>/<code>siglongjmp</code>\u51fd\u6570\u4eceenv\u7f13\u51b2\u533a\u4e2d\u6062\u590d\u8c03\u7528\u73af\u5883\uff0c\u7136\u540e\u89e6\u53d1\u4ee5\u4f9b\u4ece\u6700\u8fd1\u5f02\u5e38\u521d\u59cb\u5316env\u7684<code>setjmp</code>\u8c03\u7528\u7684\u8fd4\u56de\uff0c\u4e14\u5e26\u6709\u975e\u96f6\u7684\u8fd4\u56de\u503c</li> </ul> <p>\u4f8b\u5b50\"setjmp\"\u5b9e\u73b0\u4e86\u7c7b\u4f3c<code>C++</code>\u4e2d\u7684<code>exception</code>\u529f\u80fd\uff0c\u5f53<code>foo</code>\u51fd\u6570\u51fa\u9519\u65f6\uff0c\u8df3\u8fc7<code>bar</code>\u51fd\u6570\uff0c\u76f4\u63a5\u5728<code>main</code>\u4e2d\u6355\u83b7\u5230\u51fa\u9519\u4fe1\u606f\uff1a</p> <p><pre><code>jmp_buf buf;\n\nvoid foo(void)\n{\n    if (error)\n        longjmp(buf, ERROR);\n}\n\nvoid bar(void)\n{\n    foo();\n    printf(\"End bar\\n\");\n}\n\nint main()\n{\n    switch (setjmp(buf))\n    {\n    case 0:\n        bar();\n        break;\n    case ERROR:\n        printf(\"Detected an error condition in foo\\n\");\n        break;\n    default:\n        printf(\"Unknown error condition in foo\\n\");\n    }\n\n    return 0;\n}\n</code></pre> <pre><code>&gt; ./main \nDetected an error condition in foo\n</code></pre></p> <p>\u4f8b\u5b50\"sigsetjmp\"\u4f7f\u201cSIGINT\u201d\u4fe1\u53f7\u5904\u7406\u7a0b\u5e8f\u5206\u652f\u5230\u4e00\u4e2a\u7279\u6b8a\u7684\u4ee3\u7801\u4f4d\u7f6e\uff0c\u800c\u4e0d\u662f\u8fd4\u56de\u5230\u88ab\u4fe1\u53f7\u5230\u8fbe\u4e2d\u65ad\u4e86\u7684\u6307\u4ee4\u7684\u4f4d\u7f6e\u3002\u5f53\u7528\u6237\u5728\u952e\u76d8\u4e0a\u952e\u5165\u201cCtrl+C\u201d\u65f6\uff0c\u8fd9\u4e2a\u7a0b\u5e8f\u7528\u4fe1\u53f7\u548c\u975e\u672c\u5730\u8df3\u8f6c\u5b9e\u73b0\u4e86\u8f6f\u91cd\u542f\u3002</p> <p><pre><code>sigjmp_buf buf;\n\nvoid handler(int sig)\n{\n   siglongjmp(buf, SIG_JMP_VAL);\n}\n\nint main()\n{\n    switch (sigsetjmp(buf, SIG_JMP_VAL))\n    {\n    case 0:\n        setSignal(SIGINT, handler);\n        printf(\"starting\\n\");\n        break;\n    case SIG_JMP_VAL:\n        printf(\"restarting\\n\");\n        break;\n    default:\n        printf(\"Unknown error condition in foo\\n\");\n    }\n\n    while (1)\n    {\n        sleep(1);\n        printf(\"processing...\\n\");\n    }\n\n    return 0;\n}\n</code></pre> <pre><code>&gt; .main\nstarting\nprocessing...\n^Crestarting\nprocessing...\n...\n</code></pre></p>"},{"location":"booknotes/csapp/09/","title":"\u865a\u62df\u5185\u5b58","text":"<p>\u300a\u6df1\u5165\u7406\u89e3\u8ba1\u7b97\u673a\u7cfb\u7edf\u300b - Randal E. Bryant - \u7b2c\u4e09\u7248\uff0c\u7b2c\u4e5d\u7ae0\u7684\u8bfb\u4e66\u7b14\u8bb0\uff0c\u672c\u6587\u4e2d\u7684\u6240\u6709\u4ee3\u7801\u53ef\u5728GitHub\u4ed3\u5e93\u4e2d\u627e\u5230</p>"},{"location":"booknotes/csapp/09/#_2","title":"\u7269\u7406\u548c\u865a\u62df\u5bfb\u5740","text":"<p>\u4e0a\u56fe\u663e\u5f0f\u4e86\uff0c\u73b0\u4ee3\u5904\u7406\u5668\u4f7f\u7528\u865a\u62df\u5730\u5740(virtual addressing)\u7684\u5bfb\u5740\u5f62\u5f0f\u3002CPU\u82af\u7247\u4e0a\u7684\u5185\u5b58\u7ba1\u7406\u5355\u5143(Memory Management Unit, MMU)\u5229\u7528\u5b58\u653e\u5728\u4e3b\u5b58\u4e2d\u7684\u67e5\u8be2\u8868\u6765\u52a8\u6001\u7ffb\u8bd1\u865a\u62df\u5730\u5740\uff0c\u8be5\u8868\u7684\u5185\u5bb9\u7531\u64cd\u4f5c\u7cfb\u7edf\u7ba1\u7406\u3002</p>"},{"location":"booknotes/csapp/09/#_3","title":"\u865a\u62df\u5185\u5b58\u4f5c\u4e3a\u7f13\u5b58\u7684\u5de5\u5177","text":"<p>VM\u7cfb\u7edf\u901a\u8fc7\u5c06\u865a\u62df\u5185\u5b58\u5206\u5272\u4e3a\u79f0\u4e3a\u865a\u62df\u9875(Virtual Page, VP)\u7684\u5927\u5c0f\u56fa\u5b9a\u7684\u5757\u6765\u5904\u7406\u8fd9\u4e2a\u95ee\u9898\u3002\u7c7b\u4f3c\u5730\uff0c\u7269\u7406\u5185\u5b58\u88ab\u5206\u5272\u4e3a\u76f8\u540c\u5927\u5c0f\u7684\u7269\u7406\u9875(Physical Pge, PP)\u3002\u4efb\u610f\u65f6\u523b\uff0c\u865a\u62df\u9875\u9762\u7684\u96c6\u5408\u90fd\u5206\u4e3a\u4e09\u4e2a\u4e0d\u76f8\u4ea4\u7684\u5b50\u96c6\uff1a</p> <ul> <li>\u672a\u5206\u914d\u7684</li> <li>\u7f13\u5b58\u7684</li> <li>\u672a\u7f13\u5b58\u7684</li> </ul>"},{"location":"booknotes/csapp/09/#_4","title":"\u9875\u8868","text":"<p>\u865a\u62df\u5185\u5b58\u7cfb\u7edf\u5fc5\u987b\u6709\u67d0\u79cd\u65b9\u6cd5\u6765\u5224\u5b9a\u4e00\u4e2a\u5df2\u5206\u914d\u7684\u865a\u62df\u9875\u662f\u5426\u7f13\u5b58\u5728DRAM\u4e2d\u7684\u67d0\u4e2a\u5730\u65b9\uff1a</p> <ul> <li>\u5982\u679c\u5df2\u5728\u7269\u7406\u9875\u4e2d\u7f13\u5b58\uff0c\u7cfb\u7edf\u8fd8\u5fc5\u987b\u786e\u5b9a\u8fd9\u4e2a\u865a\u62df\u9875\u5b58\u653e\u5728\u54ea\u4e2a\u7269\u7406\u9875\u4e2d</li> <li>\u5982\u679c\u672a\u5728\u7269\u7406\u9875\u4e2d\u7f13\u5b58\uff0c\u7cfb\u7edf\u8fd8\u5fc5\u987b\u5224\u65ad\u8fd9\u4e2a\u865a\u62df\u9875\u5b58\u653e\u5728\u78c1\u76d8\u7684\u54ea\u4e2a\u4f4d\u7f6e\uff0c\u5728\u7269\u7406\u5185\u5b58\u4e2d\u9009\u62e9\u4e00\u4e2a\u727a\u7272\u9875\uff0c\u5e76\u5c06\u865a\u62df\u9875\u4ece\u78c1\u76d8\u590d\u5236\u5230DRAM\u4e2d\uff0c\u4ee5\u66ff\u6362\u8fd9\u4e2a\u727a\u7272\u9875</li> </ul> <p>\u4e0a\u8ff0\u529f\u80fd\u662f\u7531\u8f6f\u786c\u4ef6\u8054\u5408\u63d0\u4f9b\u7684\uff0c\u5305\u62ec\u64cd\u4f5c\u7cfb\u7edf\u8f6f\u4ef6\u3001MMU\u4e2d\u7684\u5730\u5740\u7ffb\u8bd1\u786c\u4ef6\u548c\u4e00\u4e2a\u5b58\u653e\u5728\u7269\u7406\u5185\u5b58\u4e2d\u53eb\u505a\u9875\u8868(page table)\u7684\u6570\u636e\u7ed3\u6784\u3002</p> <p>\u4e0b\u56fe\u5c55\u793a\u4e86\u4e00\u4e2a\u9875\u8868\u7684\u57fa\u672c\u7ec4\u7ec7\u7ed3\u6784\u3002\u9875\u8868\u5c31\u662f\u4e00\u4e2a\u9875\u8868\u6761\u76ee(Page Table Entry, PTE)\u7684\u6570\u7ec4\u3002PTE\u7531\u4e00\u4e2a\u6709\u6548\u4f4d\u548c\u4e00\u4e2an\u4f4d\u5730\u5740\u5b57\u6bb5\u7ec4\u6210\uff0c\u6709\u6548\u4f4d\u8868\u660e\u4e86\u8be5\u865a\u62df\u9875\u5f53\u524d\u662f\u5426\u88ab\u7f13\u5b58\u5728DRAM\u4e2d\uff1a</p> <ul> <li>\u5982\u679c\u8bbe\u7f6e\u4e86\u6709\u6548\u4f4d\uff0c<ul> <li>\u90a3\u4e48\u5730\u5740\u5b57\u6bb5\u5c31\u8868\u793aDRAM\u4e2d\u76f8\u5e94\u7684\u7269\u7406\u9875\u7684\u8d77\u59cb\u4f4d\u7f6e\uff0c\u8fd9\u4e2a\u7269\u7406\u9875\u4e2d\u7f13\u5b58\u4e86\u8be5\u865a\u62df\u9875</li> </ul> </li> <li>\u5982\u679c\u6ca1\u6709\u8bbe\u7f6e\u6709\u6548\u4f4d\uff0c<ul> <li>\u90a3\u4e48\u4e00\u4e2a\u7a7a\u5730\u5740\u8868\u793a\u8fd9\u4e2a\u865a\u62df\u9875\u8fd8\u672a\u88ab\u5206\u914d</li> <li>\u5426\u5219\uff0c\u8fd9\u4e2a\u5730\u5740\u5c31\u6307\u5411\u8be5\u865a\u62df\u9875\u5728\u78c1\u76d8\u4e0a\u7684\u8d77\u59cb\u4f4d\u7f6e</li> </ul> </li> </ul> <p></p> <p>\u4e0a\u56fe\u5c55\u793a\u4e86\u4e00\u4e2a\u67098\u4e2a\u865a\u62df\u4e5f\u548c4\u4e2a\u7269\u7406\u9875\u7684\u7cfb\u7edf\u7684\u9875\u8868\uff1a</p> <ul> <li>\u56db\u4e2a\u865a\u62df\u9875(VP1\u3001VP2\u3001VP4\u548cVP7)\u5f53\u524d\u88ab\u7f13\u5b58\u5728DRAM\u4e2d</li> <li>\u4e24\u4e2a\u9875(VP0\u548cVP5)\u8fd8\u672a\u88ab\u5206\u914d</li> <li>\u5269\u4e0b\u7684\u9875(VP3\u548cVP6)\u5df2\u7ecf\u88ab\u5206\u914d\u4e86\uff0c\u4f46\u662f\u5f53\u524d\u8fd8\u672a\u7f13\u5b58\uff0cPTE\u4e2d\u7684\u5730\u5740\u6307\u5411\u78c1\u76d8\u4e0a\u7684\u67d0\u4e2a\u4f4d\u7f6e</li> </ul>"},{"location":"booknotes/csapp/09/#_5","title":"\u9875\u547d\u4e2d","text":"<p>\u4e0a\u56fe\u4e2d\uff0cCPU\u60f3\u8981\u8bfb\u865a\u62df\u5185\u5b58\u201cVP2\u201d\u4e2d\u7684\u5185\u5bb9\uff0c\u56e0\u4e3a\u8bbe\u7f6e\u4e86\u6709\u6548\u4f4d\uff0cMMU\u53ef\u4ee5\u76f4\u63a5\u5c06\u865a\u62df\u5730\u5740\u8f6c\u6362\u4e3a\u7269\u7406\u5730\u5740\uff0c\u4ece\u800c\u83b7\u53d6\u6240\u9700\u5185\u5bb9\u3002</p>"},{"location":"booknotes/csapp/09/#_6","title":"\u7f3a\u9875","text":"<p>\u4e0b\u56fe\u4e2d\uff0cCPU\u60f3\u8981\u8bfb\u865a\u62df\u5185\u5b58\u201cVP3\u201d\u4e2d\u7684\u5185\u5bb9\uff0c\u201cVP3\u201d\u5e76\u6ca1\u6709\u88ab\u7f13\u5b58\uff0c\u56e0\u6b64\u4f1a\u89e6\u53d1\u4e00\u4e2a\u7f3a\u9875\u5f02\u5e38\uff0c\u5df2\u5b8c\u6210\u5bf9\u201cVP3\u201d\u7684\u7f13\u5b58\u3002</p> <p></p> <p>\u7f3a\u9875\u5f02\u5e38\u4f1a\u8c03\u7528\u5185\u6838\u4e2d\u7684\u7f3a\u9875\u5f02\u5e38\u5904\u7406\u7a0b\u5e8f\uff0c</p> <ul> <li>\u5982\u679c\u4e3b\u5b58\u7a7a\u95f4\u4ee5\u6ee1\uff0c\u4f1a\u9009\u62e9\u4e00\u4e2a\u727a\u7272\u9875\uff0c\u4ee5\u817e\u51fa\u7a7a\u95f4\u7f13\u5b58\u201cVP3\u201d<ul> <li>\u56fe\u4e2d\u7684\u727a\u7272\u9875\u5c31\u662f\u5728\u201cPP3\u201d\u4e2d\u7684\u201cVP4\u201d\u3002\u5982\u679c\u201cVP4\u201d\u5df2\u7ecf\u88ab\u4fee\u6539\uff0c\u5185\u6838\u4f1a\u5c06\u5b83\u590d\u5236\u56de\u78c1\u76d8\u3002\u65e0\u8bba\u54ea\u79cd\u60c5\u51b5\uff0c\u5185\u6838\u90fd\u4f1a\u4fee\u6539\u201cVP4\u201d\u7684\u9875\u8868\u6761\u76ee\uff0c\u4ee5\u8868\u660e\u201cVP4\u201d\u5df2\u4e0d\u5728\u88ab\u7f13\u5b58\u5728\u4e3b\u5b58\u4e2d\u4e86</li> </ul> </li> <li>\u63a5\u4e0b\u6765\uff0c\u5185\u6838\u4ece\u78c1\u76d8\u590d\u5236\u201cVP3\u201d\u5230\u5185\u5b58\u4e2d\u7684\u201cPP3\u201d\uff0c\u5e76\u66f4\u65b0\u201cPTE3\u201d</li> </ul> <p>\u7f3a\u9875\u5f02\u5e38\u5904\u7406\u7a0b\u5e8f\u8fd4\u56de\u540e\uff0c\u4f1a\u91cd\u65b0\u6267\u884c\u5148\u524d\u5bfc\u81f4\u7f3a\u9875\u7684\u6307\u4ee4\uff0c\u6b64\u65f6PTE\u5df2\u7ecf\u8bbe\u7f6e\u4e86\u6709\u6548\u4f1a\uff0cMMU\u53ef\u4ee5\u6b63\u5e38\u7ffb\u8bd1\u865a\u62df\u5730\u5740\uff0c\u4ece\u800c\u53ef\u4ee5\u4ece\u5b9e\u9645\u7269\u7406\u5730\u5740\u4e2d\u83b7\u53d6\u6240\u9700\u5185\u5bb9\u3002</p>"},{"location":"booknotes/csapp/09/#_7","title":"\u5206\u914d\u9875\u9762","text":"<p>\u5f53\u64cd\u4f5c\u7cfb\u7edf\u5206\u914d\u4e00\u4e2a\u65b0\u7684\u865a\u62df\u5185\u5b58\u9875\u65f6\uff0c\u4f1a\u4e0e\u4e00\u4e2a\u78c1\u76d8\u4e0a\u7684\u5bf9\u8c61\u5173\u8054\u8d77\u6765(\u5982\u4e0b\u56fe\u4e2d\u7684\u201cVP5\u201d\uff0c\u8fd9\u4e2a\u9875\u9762\u53ef\u4ee5\u662f\u7cfb\u7edf\u4e2d\u7684\u666e\u901a\u6587\u4ef6\uff0c\u4e5f\u53ef\u4ee5\u662f\u4e00\u4e2a\u533f\u540d\u6587\u4ef6)\uff0c\u7136\u540e\u66f4\u65b0PTE\u5bf9\u5e94\u6761\u76ee(\u5982\u4e0b\u56fe\u4e2d\u7684\u201cPTE5\u201d)\uff0c\u4f7f\u5b83\u6307\u5411\u8fd9\u4e2a\u65b0\u521b\u5efa\u7684\u9875\u9762\u3002</p> <p></p>"},{"location":"booknotes/csapp/09/#_8","title":"\u5730\u5740\u7ffb\u8bd1","text":"<p>\u4e0b\u56fe\u603b\u7ed3\u4e86\u5b8c\u6574\u7684\u201cCore i7\u201d\u5730\u5740\u7ffb\u8bd1\u8fc7\u7a0b\uff0c\u5c55\u793a\u4e86\u4eceCPU\u4ea7\u751f\u865a\u62df\u5730\u5740\u7684\u65f6\u523b\u4e00\u76f4\u5230\u6765\u81ea\u5185\u5b58\u7684\u6570\u636e\u5b57\u5230\u8fbeCPU\u7684\u8fc7\u7a0b\u3002\u4e3a\u4e86\u52a0\u901f\u4ece\u5185\u5b58\u4e2d\u83b7\u53d6\u6570\u636e\uff0c\u201cCore i7\u201d\u91c7\u7528\u4e86\uff1a</p> <ul> <li>TLB(Translation Lookaside Buffer)<ul> <li>\u865a\u62df\u5730\u5740\u7f13\u5b58\uff0c\u7528\u4e8e\u5feb\u901f\u5f97\u5230\u7269\u7406\u5730\u5740<ul> <li>\u6839\u636e\u865a\u62df\u9875\u53f7VPN\uff0c\u5feb\u901f\u83b7\u53d6\u7f13\u5b58\u7684\u7269\u7406\u9875\u53f7PPN</li> </ul> </li> </ul> </li> <li>\u591a\u7ea7\u9875\u8868<ul> <li>\u7528\u4e8e\u51cf\u5c11\u5185\u5b58\u4e2d\u9875\u8868\u7684\u5927\u5c0f\uff0c\u56e0\u4e3a<ul> <li>\u5982\u679c\u4e0a\u7ea7\u9875\u8868\u4e2d\u7684PTE\u662f\u7a7a\u7684\uff0c\u90a3\u4e48\u76f8\u5e94\u7684\u4e0b\u4e00\u7ea7\u9875\u8868\u5c31\u4e0d\u4f1a\u5b58\u5728</li> <li>\u53ea\u6709\u4e00\u7ea7\u9875\u8868\u624d\u603b\u662f\u9700\u8981\u5728\u4e3b\u5b58\u4e2d\uff0c\u5176\u4ed6\u9875\u8868\u53ef\u6309\u9700\u8f7d\u5165\u4e3b\u5b58</li> </ul> </li> </ul> </li> <li>\u9ad8\u901f\u7f13\u5b58L1/L2/L3<ul> <li>\u76f8\u5bf9\u4e3b\u5b58\uff0c\u6709\u66f4\u5feb\u7684\u8bbf\u95ee\u901f\u5ea6\uff0c\u4f46\u5176\u4ef7\u683c\u66f4\u9ad8\uff0c\u5bb9\u91cf\u66f4\u5c0f\uff0c\u56e0\u6b64\u9700\u8981\u548c\u4e3b\u5b58\u914d\u5408\u4f7f\u7528</li> </ul> </li> </ul> <p></p>"},{"location":"booknotes/csapp/09/#linux","title":"Linux\u865a\u62df\u5185\u5b58\u7cfb\u7edf","text":"<p>\u5982\u4e0a\u56fe\u6240\u793a\uff0cLinux\u4e3a\u6bcf\u4e2a\u8fdb\u7a0b\u7ef4\u62a4\u4e86\u4e00\u4e2a\u5355\u72ec\u7684\u865a\u62df\u5730\u5740\u7a7a\u95f4\uff0c\u5305\u62ec\uff1a</p> <ul> <li>\u5185\u6838\u865a\u62df\u5185\u5b58<ul> <li>\u6bcf\u4e2a\u8fdb\u7a0b\u90fd\u4e0d\u540c\u7684\u90e8\u5206<ul> <li>\u4e0e\u8fdb\u7a0b\u76f8\u5173\u7684\u6570\u636e\u7ed3\u6784\uff0c\u6bd4\u5982\uff0c\u9875\u8868\u3001\u5185\u6838\u5728\u8fdb\u7a0b\u7684\u4e0a\u4e0b\u6587\u4e2d\u6267\u884c\u4ee3\u7801\u65f6\u4f7f\u7528\u7684\u6808</li> </ul> </li> <li>\u6bcf\u4e2a\u8fdb\u7a0b\u90fd\u76f8\u540c\u7684\u90e8\u5206<ul> <li>\u5185\u6838\u4ee3\u7801\u548c\u5168\u5c40\u6570\u636e\u7ed3\u6784\u88ab\u6bcf\u4e2a\u8fdb\u7a0b\u5171\u4eab</li> <li>\u4e00\u6bb5\u8fde\u7eed\u7684\u7269\u7406\u5185\u5b58\u88ab\u6620\u5c04\u540e\uff0c\u6bcf\u4e2a\u8fdb\u7a0b\u90fd\u53ef\u4ee5\u65b9\u4fbf\u5bf9\u5176\u8fdb\u884c\u8bbf\u95ee\uff0c\u6bd4\u5982\uff0c\u5bf9\u67d0\u4e9b\u8bbe\u5907\u7684I/O\u64cd\u4f5c</li> </ul> </li> </ul> </li> <li>\u8fdb\u7a0b\u865a\u62df\u5185\u5b58<ul> <li>\u5185\u5b58\u88ab\u7ec4\u7ec7\u6210\u4e00\u4e9b\u533a\u57df(\u4e5f\u53eb\u6bb5)\u7684\u96c6\u5408\uff0c\u6bcf\u4e2a\u5b58\u5728\u7684\u865a\u62df\u9875\u9762\u90fd\u4fdd\u5b58\u5728\u67d0\u4e2a\u533a\u57df\u4e2d</li> <li>\u4e0d\u5c5e\u4e8e\u4efb\u4f55\u533a\u57df\u7684\u865a\u62df\u9875\u662f\u4e0d\u5b58\u5728\u7684(\u56fe\u4e2d\u7684\u84dd\u8272\u90e8\u5206)\uff0c\u5e76\u4e14\u4e0d\u80fd\u88ab\u8fdb\u7a0b\u56e0\u5f15\u7528\u3002\u5185\u6838\u4e0d\u7528\u8bb0\u5f55\u8fd9\u4e9b\u4e0d\u5b58\u5728\u7684\u865a\u62df\u9875\uff0c\u56e0\u6b64\u8fd9\u6837\u7684\u9875\u4e5f\u4e0d\u5360\u7528\u5185\u5b58\u3001\u78c1\u76d8\u6216\u8005\u5185\u6838\u672c\u8eab\u4e2d\u7684\u4efb\u4f55\u989d\u5916\u8d44\u6e90</li> </ul> </li> </ul>"},{"location":"booknotes/csapp/09/#_9","title":"\u865a\u62df\u5185\u5b58\u7684\u6570\u636e\u7ed3\u6784","text":"<p>\u4e0a\u56fe\u5c55\u793a\u4e86\u4e00\u4e2a\u8fdb\u7a0b\u4e2d\u865a\u62df\u5185\u5b58\u533a\u57df\u7684\u5185\u6838\u6570\u636e\u7ed3\u6784\u3002\u5185\u6838\u4e3a\u7cfb\u7edf\u4e2d\u7684\u6bcf\u4e2a\u8fdb\u7a0b\u7ef4\u62a4\u4e86\u4e00\u4e2a\u5355\u72ec\u7684\u4efb\u52a1\u7ed3\u6784<code>task_struct</code>\u3002\u4efb\u52a1\u7ed3\u6784\u4e2d\u7684\u5143\u7d20\u5305\u542b\u6216\u8005\u6307\u5411\u5185\u6838\u8fd0\u884c\u8be5\u8fdb\u7a0b\u6240\u9700\u8981\u7684\u6240\u6709\u4fe1\u606f(\u4f8b\u5982\uff0cPID\u3001\u6307\u5411\u7528\u6237\u6808\u7684\u6307\u9488\u3001\u53ef\u6267\u884c\u76ee\u6807\u6587\u4ef6\u7684\u540d\u5b57\uff0c\u4ee5\u53ca\u7a0b\u5e8f\u8ba1\u6570\u5668\u7b49)\u3002</p> <p>\u4efb\u52a1\u7ed3\u6784\u4e2d\u7684\u4e00\u4e2a\u6761\u76ee\u6307\u5411<code>mm_struct</code>\uff0c\u5b83\u63cf\u8ff0\u4e86\u865a\u62df\u5185\u5b58\u7684\u5f53\u524d\u72b6\u6001\u3002\u5176\u4e2d\uff0c<code>pgd</code>\u6307\u5411\u7b2c\u4e00\u7ea7\u9875\u8868(\u9875\u5168\u5c40\u76ee\u5f55)\u7684\u57fa\u5740\uff0c\u800c<code>mmap</code>\u6307\u5411\u4e00\u4e2a<code>vm_area_structs</code>\u7684\u94fe\u8868\uff0c\u5176\u4e2d\u6bcf\u4e2a<code>vm_area_structs</code>\u90fd\u63cf\u8ff0\u4e86\u5f53\u524d\u865a\u62df\u5730\u5740\u7a7a\u95f4\u7684\u4e00\u4e2a\u533a\u57df\u3002\u4e00\u4e2a\u5177\u4f53\u533a\u57df\u7684\u7ed3\u6784\u5305\u542b\u4e0b\u9762\u7684\u5b57\u6bb5\uff1a</p> <ul> <li><code>vm_start</code>\uff1a\u6307\u5411\u8fd9\u4e2a\u533a\u57df\u7684\u8d77\u59cb\u5904</li> <li><code>vm_end</code>\uff1a\u6307\u5411\u8fd9\u4e2a\u533a\u57df\u7684\u7ed3\u675f\u5904</li> <li><code>vm_prot</code>\uff1a\u63cf\u8ff0\u8fd9\u4e2a\u533a\u57df\u5185\u5305\u542b\u7684\u6240\u6709\u9875\u7684\u8bfb\u5199\u8bb8\u53ef\u6743\u9650</li> <li><code>vm_flags</code>\uff1a\u63cf\u8ff0\u8fd9\u4e2a\u533a\u57df\u5185\u7684\u9875\u9762\u662f\u4e0e\u5176\u4ed6\u8fdb\u7a0b\u5171\u4eab\u7684\uff0c\u8fd8\u662f\u8fd9\u4e2a\u8fdb\u7a0b\u79c1\u6709\u7684</li> <li><code>vm_next</code>\uff1a\u6307\u5411\u94fe\u8868\u4e2d\u4e0b\u4e00\u4e2a\u533a\u57df\u7ed3\u6784</li> </ul>"},{"location":"booknotes/csapp/09/#linux_1","title":"Linux\u7f3a\u9875\u5f02\u5e38\u5904\u7406","text":"<p>\u5047\u8bbeMMU\u5728\u8bd5\u56fe\u7ffb\u8bd1\u67d0\u4e2a\u865a\u62df\u5730\u5740A\u65f6\uff0c\u89e6\u53d1\u4e86\u4e00\u4e2a\u7f3a\u9875\u3002\u8fd9\u4e2a\u5f02\u5e38\u5bfc\u81f4\u63a7\u5236\u8f6c\u79fb\u5230\u5185\u6838\u7684\u7f3a\u9875\u5904\u7406\u7a0b\u5e8f\uff0c\u6267\u884c\u4ee5\u4e0b\u6b65\u9aa4\uff1a</p> <ul> <li>\u5224\u65ad\u865a\u62df\u5730\u5740A\u662f\u5426\u5408\u6cd5<ul> <li>\u641c\u7d22\u533a\u57df\u7ed3\u6784\u7684\u94fe\u8868<code>vm_area_structs</code>\uff0c\u628aA\u548c\u6bcf\u4e2a\u533a\u57df\u4e2d\u7684<code>vm_start</code>\u548c<code>vm_end</code>\u505a\u6bd4\u8f83\u3002\u5982\u679c\u8fc7\u4e0d\u5408\u6cd5\uff0c\u5c31\u89e6\u53d1\u4e00\u4e2a\u6bb5\u9519\u8bef\"segmentation fault\"\uff0c\u5373\u4e0b\u56fe\u4e2d\u7684\u60c5\u51b51</li> </ul> </li> <li>\u5224\u65ad\u8bd5\u56fe\u8fdb\u884c\u7684\u5185\u5b58\u8bbf\u95ee\u662f\u5426\u5408\u6cd5(\u6709\u6743\u9650)<ul> <li>\u865a\u62df\u5185\u5b58\u4f5c\u4e3a\u5185\u5b58\u4fdd\u62a4\u7684\u5de5\u5177\uff0c\u5728PTE\u4e0a\u6dfb\u52a0\u4e86\u4e00\u4e9b\u989d\u5916\u7684\u8bb8\u53ef\u4f4d(SUP/READ/WRITE)\u3002\u5728\u5730\u5740\u7ffb\u8bd1\u8fc7\u7a0b\u4e2d\uff0c\u5982\u679c\u6307\u4ee4\u8fdd\u53cd\u4e86\u8fd9\u4e9b\u8bb8\u53ef\uff0c\u4f1a\u89e6\u53d1\u4e00\u822c\u4fdd\u62a4\u6545\u969c\uff0cLinux\u5c06\u8fd9\u79cd\u5f02\u5e38\u4e5f\u62a5\u544a\u4e3a\u6bb5\u9519\u8bef\"segmentation fault\"\uff0c\u5373\u4e0b\u56fe\u4e2d\u7684\u60c5\u51b52</li> </ul> </li> <li>\u5bf9\u5408\u6cd5\u7684\u865a\u62df\u5730\u5740\u8fdb\u884c\u5408\u6cd5\u7684\u64cd\u4f5c\uff0c\u5185\u6838\u4f1a\u6362\u5165\u65b0\u7684\u9875\u9762\u5e76\u66f4\u65b0\u9875\u8868(\u53ef\u80fd\u8981\u6362\u51fa\u727a\u7272\u9875\u9762)\uff0c\u5373\u4e0b\u56fe\u4e2d\u7684\u60c5\u51b53</li> <li>\u7f3a\u9875\u5904\u7406\u7a0b\u5e8f\u8fd4\u56de\uff0c\u5e76\u91cd\u65b0\u6267\u884c\u5f15\u8d77\u7f3a\u9875\u7684\u6307\u4ee4\uff0c\u6b64\u65f6MMU\u80fd\u6b63\u5e38\u7ffb\u8bd1A\uff0c\u800c\u4e0d\u4f1a\u518d\u4ea7\u751f\u7f3a\u9875\u4e2d\u65ad</li> </ul> <p></p>"},{"location":"booknotes/csapp/09/#_10","title":"\u5185\u5b58\u6620\u5c04","text":"<p>Linux\u901a\u8fc7\u5c06\u4e00\u4e2a\u865a\u62df\u5185\u5b58\u533a\u57df\u4e0e\u4e00\u4e2a\u78c1\u76d8\u4e0a\u7684\u5bf9\u8c61\u5173\u8054\u8d77\u6765\uff0c\u4ee5\u521d\u59cb\u5316\u8fd9\u4e2a\u865a\u62df\u5185\u5b58\u533a\u57df\u7684\u5185\u5bb9\uff0c\u8fd9\u4e2a\u8fc7\u7a0b\u79f0\u4e3a\u5185\u5b58\u6620\u5c04(memory mapping)\u3002\u865a\u62df\u5185\u5b58\u533a\u57df\u53ef\u4ee5\u6620\u5c04\u5230\u4e24\u79cd\u7c7b\u578b\u7684\u5bf9\u8c61\u4e2d\u7684\u4e00\u79cd\uff1a</p> <ul> <li>Linux\u6587\u4ef6\u7cfb\u7edf\u4e2d\u7684\u666e\u901a\u6587\u4ef6<ul> <li>\u4e00\u4e2a\u533a\u57df\u53ef\u4ee5\u6620\u5c04\u5230\u4e00\u4e2a\u666e\u901a\u78c1\u76d8\u6587\u4ef6\u7684\u8fde\u7eed\u90e8\u5206</li> </ul> </li> <li>\u533f\u540d\u6587\u4ef6<ul> <li>\u4e00\u4e2a\u533a\u57df\u4e5f\u53ef\u4ee5\u6620\u5c04\u5230\u4e00\u4e2a\u533f\u540d\u6587\u4ef6\uff0c\u533f\u540d\u6587\u4ef6\u662f\u7531\u5185\u6838\u521b\u5efa\u7684\uff0c\u5305\u542b\u7684\u5168\u662f\u4e8c\u8fdb\u5236\u96f6</li> <li>\u5728\u78c1\u76d8\u548c\u5185\u5b58\u4e4b\u95f4\u5e76\u6ca1\u6709\u5b9e\u9645\u7684\u6570\u636e\u4f20\u9001</li> </ul> </li> </ul> <p>\u65e0\u8bba\u5728\u54ea\u79cd\u60c5\u51b5\u4e2d\uff0c\u4e00\u65e6\u4e00\u4e2a\u865a\u62df\u9875\u9762\u88ab\u521d\u59cb\u5316\u4e86\uff0c\u5b83\u5c31\u5728\u4e00\u4e2a\u7531\u5185\u6838\u7ef4\u62a4\u7684\u4e13\u95e8\u7684\u4ea4\u6362\u6587\u4ef6(swap file)\u4e4b\u95f4\u6362\u6765\u6362\u53bb\u3002\u4ea4\u6362\u6587\u4ef6\u4e5f\u53eb\u505a\u4ea4\u6362\u7a7a\u95f4(swap space)\u6216\u4ea4\u6362\u533a\u57df(swap area)\u3002\u5728\u4efb\u4f55\u65f6\u523b\uff0c\u4ea4\u6362\u7a7a\u95f4\u90fd\u9650\u5236\u7740\u5f53\u524d\u8fd0\u884c\u7740\u7684\u8fdb\u7a0b\u80fd\u591f\u5206\u914d\u7684\u865a\u62df\u9875\u9762\u7684\u603b\u6570\u3002</p>"},{"location":"booknotes/csapp/09/#_11","title":"\u5171\u4eab\u5bf9\u8c61","text":"<p>\u5982\u679c\u4e00\u4e2a\u8fdb\u7a0b\u5c06\u4e00\u4e2a\u5171\u4eab\u5bf9\u8c61\u6620\u5c04\u5230\u5b83\u7684\u865a\u62df\u5730\u5740\u7a7a\u95f4\u7684\u4e00\u4e2a\u533a\u57df\u5185\uff0c\u90a3\u4e48\u8fd9\u4e2a\u8fdb\u7a0b\u5bf9\u8fd9\u4e2a\u533a\u57df\u7684\u4efb\u4f55\u5199\u64cd\u4f5c\uff0c\u5bf9\u4e8e\u90a3\u4e9b\u4e5f\u628a\u8fd9\u4e2a\u5171\u4eab\u5bf9\u8c61\u6620\u5c04\u5230\u4ed6\u4eec\u865a\u62df\u5185\u5b58\u7684\u5176\u4ed6\u8fdb\u7a0b\u800c\u8a00\uff0c\u4e5f\u662f\u53ef\u89c1\u7684\u3002\u800c\u4e14\uff0c\u8fd9\u4e9b\u53d8\u5316\u4e5f\u53cd\u6620\u5728\u78c1\u76d8\u4e0a\u7684\u539f\u59cb\u5bf9\u8c61\u4e2d\u3002</p> <p></p> <p>\u4e0a\u56fe\u4e2d\uff0c\u8fdb\u7a0b1\u5c06\u4e00\u4e2a\u5171\u4eab\u5bf9\u8c61\u6620\u5c04\u5230\u5b83\u7684\u865a\u62df\u5185\u5b58\u7684\u4e00\u4e2a\u533a\u57df\u4e2d\u3002\u8fdb\u7a0b2\u5c06\u540c\u4e00\u4e2a\u5171\u4eab\u5bf9\u8c61\u6620\u5c04\u5230\u5b83\u7684\u5730\u5740\u7a7a\u95f4\u3002\u56e0\u4e3a\u6bcf\u4e2a\u5bf9\u8c61\u90fd\u6709\u4e00\u4e2a\u552f\u4e00\u7684\u6587\u4ef6\u540d\uff0c\u5185\u6838\u53ef\u4ee5\u8fc5\u901f\u5730\u5224\u5b9a\u8fdb\u7a0b1\u5df2\u7ecf\u6620\u5c04\u4e86\u8fd9\u4e2a\u5bf9\u8c61\uff0c\u800c\u4e14\u53ef\u4ee5\u4f7f\u8fdb\u7a0b2\u4e2d\u7684\u9875\u8868\u6761\u76ee\u6307\u5411\u76f8\u540c\u7684\u7269\u7406\u9875\u9762\u3002\u56fe\u4e2d\u7684\u7269\u7406\u9875\u9762\u663e\u793a\u4e3a\u8fde\u7eed\u7684\uff0c\u4f46\u662f\u5728\u4e00\u822c\u60c5\u51b5\u4e0b\u5f53\u7136\u4e0d\u662f\u8fd9\u6837\u7684\u3002</p>"},{"location":"booknotes/csapp/09/#_12","title":"\u79c1\u6709\u5bf9\u8c61","text":"<p>\u5bf9\u4e00\u4e2a\u6620\u5c04\u5230\u79c1\u6709\u5bf9\u8c61\u7684\u533a\u57df\u505a\u7684\u6539\u53d8\uff0c\u5bf9\u5176\u4ed6\u8fdb\u7a0b\u6765\u8bf4\u662f\u4e0d\u53ef\u89c1\u7684\uff0c\u5e76\u4e14\u8fdb\u7a0b\u5bf9\u8fd9\u4e2a\u533a\u57df\u6240\u505a\u7684\u4efb\u4f55\u5199\u64cd\u4f5c\u90fd\u4e0d\u4f1a\u53cd\u6620\u5728\u78c1\u76d8\u4e0a\u7684\u5bf9\u8c61\u4e2d\u3002</p> <p></p> <p>\u4e0a\u56fe\u4e2d\uff0c\u4e24\u4e2a\u8fdb\u7a0b\u5c06\u4e00\u4e2a\u79c1\u6709\u5bf9\u8c61\u6620\u5c04\u5230\u4ed6\u4eec\u865a\u62df\u5185\u5b58\u7684\u4e0d\u540c\u533a\u57df\uff0c\u4f46\u5171\u4eab\u8fd9\u4e2a\u5bf9\u8c61\u540c\u4e00\u4e2a\u7269\u7406\u526f\u672c\u3002\u5bf9\u4e8e\u6bcf\u4e2a\u6620\u5c04\u79c1\u6709\u5bf9\u8c61\u7684\u8fdb\u7a0b\uff0c\u76f8\u5e94\u79c1\u6709\u533a\u57df\u7684\u9875\u8868\u6761\u76ee\u90fd\u88ab\u6807\u8bb0\u4e3a\u53ea\u8bfb\uff0c\u5e76\u4e14\u533a\u57df\u7ed3\u6784\u88ab\u6807\u8bb0\u4e3a\u79c1\u6709\u7684\u5199\u65f6\u590d\u5236\u3002\u53ea\u8981\u6ca1\u6709\u8fdb\u7a0b\u8bd5\u56fe\u5199\u5b83\u81ea\u5df1\u7684\u79c1\u6709\u533a\u57df\uff0c\u5b83\u4eec\u5c31\u53ef\u4ee5\u7ee7\u7eed\u5171\u4eab\u7269\u7406\u5185\u5b58\u4e2d\u5bf9\u8c61\u7684\u4e00\u4e2a\u5355\u72ec\u526f\u672c\u3002\u7136\u800c\uff0c\u53ea\u8981\u6709\u4e00\u4e2a\u8fdb\u7a0b\u8bd5\u56fe\u5199\u79c1\u6709\u533a\u57df\u5185\u7684\u67d0\u4e2a\u9875\u9762\uff0c\u90a3\u4e48\u8fd9\u4e2a\u5199\u64cd\u4f5c\u5c31\u4f1a\u89e6\u53d1\u4e00\u4e2a\u4fdd\u62a4\u6545\u969c\u3002</p> <p>\u5f53\u6545\u969c\u5904\u7406\u7a0b\u5e8f\u6ce8\u610f\u5230\u4fdd\u62a4\u5f02\u5e38\u662f\u7531\u4e8e\u8fdb\u7a0b\u8bd5\u56fe\u5199\u79c1\u6709\u7684\u5199\u65f6\u590d\u5236\u533a\u57df\u4e2d\u7684\u4e00\u4e2a\u9875\u9762\u800c\u5f15\u8d77\u7684\uff0c\u5b83\u5c31\u4f1a\u5728\u7269\u7406\u5185\u5b58\u4e2d\u521b\u5efa\u8fd9\u4e2a\u9875\u9762\u7684\u4e00\u4e2a\u65b0\u526f\u672c\uff0c\u66f4\u65b0\u9875\u9762\u6761\u76ee\u6307\u5411\u8fd9\u4e2a\u65b0\u7684\u526f\u672c\uff0c\u7136\u540e\u6062\u590d\u8fd9\u4e2a\u9875\u9762\u7684\u53ef\u5199\u6743\u9650\uff0c\u5982\u4e0a\u56fe\u6240\u793a\u3002\u5f53\u6545\u969c\u5904\u7406\u7a0b\u5e8f\u8fd4\u56de\u65f6\uff0cCPU\u91cd\u65b0\u6267\u884c\u8fd9\u4e2a\u5199\u64cd\u4f5c\uff0c\u73b0\u5728\u5728\u65b0\u521b\u5efa\u7684\u9875\u9762\u4e0a\u8fd9\u4e2a\u5199\u64cd\u4f5c\u5c31\u53ef\u4ee5\u6b63\u5e38\u6267\u884c\u4e86\u3002</p>"},{"location":"booknotes/csapp/09/#fork","title":"fork\u51fd\u6570\u7684\u5185\u5b58\u6620\u5c04","text":"<p>\u5f53<code>fork</code>\u51fd\u6570\u88ab\u5f53\u524d\u8fdb\u7a0b\u8c03\u7528\u65f6\uff0c</p> <ul> <li>\u5185\u6838\u4e3a\u65b0\u8fdb\u7a0b\u521b\u5efa\u5404\u79cd\u6570\u636e\u7ed3\u6784\uff0c\u5305\u62ec\u5f53\u524d\u8fdb\u7a0b\u7684<code>mm_struct</code>\u3001\u533a\u57df\u7ed3\u6784\u548c\u9875\u8868\u7684\u539f\u6837\u526f\u672c<ul> <li>\u5185\u6838\u5c06\u4e24\u4e2a\u8fdb\u7a0b\u4e2d\u7684\u6bcf\u4e2a\u9875\u9762(\u79c1\u6709\u5bf9\u8c61)\u90fd\u6807\u8bb0\u4e3a\u53ea\u8bfb\uff0c\u5e76\u5c06\u4e24\u4e2a\u8fdb\u7a0b\u4e2d\u7684\u6bcf\u4e2a\u533a\u57df\u7ed3\u6784\u90fd\u6807\u8bb0\u4e3a\u79c1\u6709\u7684\u5199\u65f6\u590d\u5236</li> </ul> </li> </ul> <p>\u5f53<code>fork</code>\u5728\u65b0\u8fdb\u7a0b\u4e2d\u8fd4\u56de\u65f6\uff0c</p> <ul> <li>\u65b0\u8fdb\u7a0b\u73b0\u5728\u7684\u865a\u62df\u5185\u5b58\u521a\u597d\u548c\u8c03\u7528<code>fork</code>\u65f6\u5b58\u5728\u7684\u865a\u62df\u5185\u5b58\u76f8\u540c</li> </ul> <p>\u5f53\u8fd9\u4e24\u4e2a\u8fdb\u7a0b\u4e2d\u7684\u4efb\u4f55\u4e00\u4e2a\u540e\u6765\u8fdb\u884c\u5199\u64cd\u4f5c\u65f6\uff0c\u5199\u65f6\u590d\u5236\u5c31\u4f1a\u521b\u5efa\u65b0\u9875\u9762\u3002\u56e0\u6b64\uff0c\u4e5f\u5c31\u4e3a\u6bcf\u4e2a\u8fdb\u7a0b\u4fdd\u6301\u4e86\u79c1\u6709\u5730\u5740\u7a7a\u95f4\u7684\u62bd\u8c61\u6982\u5ff5</p>"},{"location":"booknotes/csapp/09/#execve","title":"execve\u51fd\u6570\u7684\u5185\u5b58\u6620\u5c04","text":"<p><code>execve</code>\u51fd\u6570\u5728\u5f53\u524d\u8fdb\u7a0b\u4e2d\u52a0\u8f7d\u5e76\u8fd0\u884c\u5305\u542b\u5728\u53ef\u6267\u884c\u76ee\u6807\u6587\u4ef6<code>a.out</code>\u4e2d\u7684\u7a0b\u5e8f\uff0c\u7528<code>a.out</code>\u7a0b\u5e8f\u6709\u6548\u5730\u66ff\u4ee3\u4e86\u5f53\u524d\u7684\u7a0b\u5e8f\u3002\u52a0\u8f7d\u5e76\u8fd0\u884c<code>a.out</code>\u9700\u8981\u4ee5\u4e0b\u51e0\u4e2a\u6b65\u9aa4\uff1a</p> <ul> <li>\u5220\u9664\u5df2\u5b58\u5728\u7684\u7528\u6237\u533a\u57df</li> <li>\u6620\u5c04\u79c1\u6709\u533a\u57df<ul> <li>\u4e3a\u65b0\u7a0b\u5e8f\u7684\u4ee3\u7801\u3001\u6570\u636e\u3001bss\u548c\u6808\u533a\u57df\u521b\u5efa\u65b0\u7684\u533a\u57df\u7ed3\u6784\uff0c\u5982\u4e0b\u56fe\u6240\u793a<ul> <li>\u4ee3\u7801\u548c\u6570\u636e\u533a\u88ab\u6620\u5c04\u4e3a<code>a.out</code>\u6587\u4ef6\u4e2d\u7684<code>.text</code>\u548c<code>.data</code>\u533a</li> <li>bss\u533a\u57df\u65f6\u8bf7\u6c42\u4e8c\u8fdb\u5236\u96f6\u7684\uff0c\u6620\u5c04\u5230\u533f\u540d\u6587\u4ef6\uff0c\u5176\u5927\u5c0f\u5305\u542b\u5728<code>a.out</code>\u4e2d</li> <li>\u6808\u548c\u5806\u533a\u57df\u4e5f\u662f\u8bf7\u6c42\u4e8c\u8fdb\u5236\u96f6\u7684\uff0c\u521d\u59cb\u957f\u5ea6\u4e3a\u96f6</li> </ul> </li> </ul> </li> <li>\u6620\u5c04\u5171\u4eab\u533a\u57df<ul> <li>\u5982\u679c<code>a.out</code>\u7a0b\u5e8f\u4e0e\u5171\u4eab\u5bf9\u8c61\u94fe\u63a5\uff0c\u90a3\u4e48\u8fd9\u4e9b\u5bf9\u8c61\u4f1a\u6620\u5c04\u5230\u5171\u4eab\u533a\u57df\u5185</li> </ul> </li> <li>\u8bbe\u7f6e\u7a0b\u5e8f\u8ba1\u6570\u5668PC<ul> <li>\u6307\u5411\u4ee3\u7801\u533a\u57df\u7684\u5165\u53e3\u70b9\uff0c\u4e0b\u4e00\u6b21\u8c03\u5ea6\u8fd9\u4e2a\u8fdb\u7a0b\u65f6\uff0c\u5c06\u4ece\u8fd9\u4e2a\u5165\u53e3\u70b9\u5f00\u59cb\u6267\u884c\uff0c\u6309\u9700\u6362\u5165\u4ee3\u7801\u548c\u6570\u636e\u9875\u9762</li> </ul> </li> </ul> <p></p>"},{"location":"booknotes/csapp/09/#mmap","title":"mmap\u51fd\u6570\u5185\u7684\u5b58\u6620\u5c04","text":"<pre><code>#include &lt;unistd.h&gt;\n#include &lt;sys/mman.h&gt;\n\nvoid *mmap(void *start, size_t length, int prot, int flags, int fd, off_t offset);\n</code></pre> <p>\u5982\u4e0a<code>mmap</code>\u7684\u51fd\u6570\u7b7e\u540d\u6240\u793a\uff0c<code>mmap</code>\u51fd\u6570\u8981\u6c42\u5185\u6838\u521b\u5efa\u4e00\u4e2a\u65b0\u7684\u865a\u62df\u5185\u5b58\u533a\u57df\uff0c\u6700\u597d\u662f\u4ece\u5730\u5740<code>start</code>\u5f00\u59cb\u7684\u4e00\u4e2a\u533a\u57df\uff0c\u5e76\u5c06\u6587\u4ef6\u63cf\u8ff0\u7b26<code>fd</code>\u6307\u5b9a\u7684\u5bf9\u8c61\u7684\u4e00\u4e2a\u8fde\u7eed\u7684\u7247(chunk)\u6620\u5c04\u5230\u8fd9\u4e2a\u65b0\u7684\u533a\u57df\u3002\u8fde\u7eed\u7684\u5bf9\u8c61\u7247\u5927\u5c0f\u4e3a<code>length</code>\u5b57\u8282\uff0c\u4ece\u8ddd\u6587\u4ef6\u5f00\u59cb\u5904\u504f\u79fb\u91cf\u4e3a<code>offset</code>\u5b57\u8282\u7684\u5730\u65b9\u5f00\u59cb\u3002<code>start</code>\u5730\u5740\u4ec5\u4ec5\u662f\u4e00\u4e2a\u6697\u793a\uff0c\u901a\u5e38\u88ab\u5b9a\u4e49\u4e3a<code>NULL</code>\u3002\u4e0b\u56fe\u63cf\u8ff0\u4e86\u8fd9\u4e9b\u53c2\u6570\u7684\u610f\u4e49\uff1a</p> <p></p> <p>\u53c2\u6570<code>prot</code>\u5305\u542b\u63cf\u8ff0\u65b0\u6620\u5c04\u7684\u865a\u62df\u5185\u5b58\u533a\u57df\u7684\u8bbf\u95ee\u6743\u9650\uff1a</p> <ul> <li><code>PROT_EXEC</code>\uff1a\u53ef\u88abCPU\u6267\u884c</li> <li><code>PROT_READ</code>\uff1a\u53ef\u8bfb</li> <li><code>PROT_WRITE</code>\uff1a\u53ef\u5199</li> <li><code>PROT_NONE</code>\uff1a\u4e0d\u80fd\u88ab\u8bbf\u95ee</li> </ul> <p>\u53c2\u6570<code>flags</code>\u7531\u63cf\u8ff0\u88ab\u6620\u5c04\u5bf9\u8c61\u7c7b\u578b\u7684\u4f4d\u7ec4\u6210\uff1a</p> <ul> <li><code>MAP_ANON</code>\uff1a\u88ab\u6620\u5c04\u7684\u5bf9\u8c61\u662f\u4e00\u4e2a\u533f\u540d\u5bf9\u8c61\uff0c\u76f8\u5e94\u7684\u865a\u62df\u9875\u8bf7\u6c42\u4e8c\u8fdb\u5236\u96f6</li> <li><code>MAP_PRIVATE</code>\uff1a\u88ab\u6620\u5c04\u7684\u5bf9\u8c61\u662f\u4e00\u4e2a\u79c1\u6709\u7684\u3001\u5199\u65f6\u590d\u5236\u7684\u5bf9\u8c61</li> <li><code>MAP_SHARED</code>\uff1a\u88ab\u6620\u5c04\u7684\u5bf9\u8c61\u662f\u4e00\u4e2a\u5171\u4eab\u5bf9\u8c61</li> </ul>"},{"location":"booknotes/csapp/09/#_13","title":"\u52a8\u6001\u5185\u5b58\u5206\u914d","text":"<p>\u867d\u7136\u53ef\u4ee5\u4f7f\u7528\u4f4e\u7ea7\u7684<code>mmap</code>\u548c<code>munmap</code>\u51fd\u6570\u6765\u521b\u5efa\u548c\u5220\u9664\u865a\u62df\u5185\u5b58\u7684\u533a\u57df\uff0c\u4f46C\u7a0b\u5e8f\u5458\u8fd8\u662f\u4f1a\u89c9\u5f97\u5f53\u8fd0\u884c\u65f6\u9700\u8981\u989d\u5916\u865a\u62df\u5185\u5b58\u65f6\uff0c\u7528\u52a8\u6001\u5185\u5b58\u5206\u914d\u5668(dynamic memory allocator)\u66f4\u65b9\u4fbf\uff0c\u4e5f\u6709\u66f4\u597d\u7684\u53ef\u79fb\u690d\u6027\u3002</p> <p></p> <p>\u5982\u4e0a\u56fe\u6240\u793a\uff0c\u52a8\u6001\u5185\u5b58\u5206\u914d\u5668\u7ef4\u62a4\u7740\u4e00\u4e2a\u8fdb\u7a0b\u7684\u865a\u62df\u5185\u5b58\u533a\u57df\uff0c\u79f0\u4e3a\u5806(heap)\u3002\u5bf9\u4e8e\u6bcf\u4e2a\u8fdb\u7a0b\uff0c\u5185\u6838\u7ef4\u62a4\u7740\u4e00\u4e2a\u53d8\u91cf<code>brk</code>\uff0c\u5b83\u6307\u5411\u5806\u7684\u9876\u90e8\u3002</p> <p>\u5206\u914d\u5668\u5c06\u5806\u89c6\u4e3a\u4e00\u7ec4\u4e0d\u540c\u5927\u5c0f\u7684\u5757(block)\u7684\u96c6\u5408\u6765\u7ef4\u62a4\u3002\u6bcf\u4e2a\u5757\u5c31\u662f\u4e00\u4e2a\u8fde\u7eed\u7684\u865a\u62df\u5185\u5b58\u7247(chunk)\uff0c\u8981\u4e48\u662f\u5df2\u5206\u914d\u7684\uff0c\u8981\u4e48\u662f\u7a7a\u95f2\u7684\u3002\u5df2\u5206\u914d\u7684\u5757\u663e\u5f0f\u5730\u4fdd\u7559\u4e3a\u4f9b\u5e94\u7528\u7a0b\u5e8f\u4f7f\u7528\u3002\u7a7a\u95f2\u5757\u53ef\u7528\u6765\u5206\u914d\u3002\u4e00\u4e2a\u5df2\u5206\u914d\u7684\u5757\u4fdd\u6301\u5df2\u5206\u914d\u72b6\u6001\uff0c\u76f4\u5230\u5b83\u88ab\u91ca\u653e\uff0c\u8fd9\u79cd\u91ca\u653e\u8981\u4e48\u662f\u5e94\u7528\u7a0b\u5e8f\u663e\u5f0f\u6267\u884c\u7684\uff0c\u8981\u4e48\u662f\u5185\u5b58\u5206\u914d\u5668\u81ea\u8eab\u9690\u5f0f\u6267\u884c\u7684\u3002</p> <p>\u5206\u914d\u5668\u6309\u91ca\u653e\u65b9\u5f0f\u7684\u4e0d\u540c\uff0c\u5206\u4e3a\uff1a</p> <ul> <li>\u663e\u5f0f\u5206\u914d\u5668(explicit allocator)<ul> <li>\u8981\u6c42\u5e94\u7528\u663e\u5f0f\u91ca\u653e\u4efb\u4f55\u5df2\u5206\u914d\u7684\u5757</li> <li>C\u7a0b\u5e8f\u7684<code>malloc</code>/<code>free</code>\uff0cC++\u7a0b\u5e8f\u7684<code>new</code>/<code>delete</code></li> </ul> </li> <li>\u9690\u5f0f\u5206\u914d\u5668(implicit allocator)\uff0c\u4e5f\u53eb\u5783\u573e\u6536\u96c6\u5668(garbage collection)<ul> <li>\u8981\u6c42\u5206\u914d\u5668\u68c0\u6d4b\u4e00\u4e2a\u5df2\u5206\u914d\u5757\u4f55\u65f6\u4e0d\u518d\u88ab\u7a0b\u5e8f\u4f7f\u7528\uff0c\u90a3\u4e48\u5c31\u91ca\u653e\u8fd9\u4e2a\u5757</li> <li><code>Lisp</code>\u3001<code>ML</code>\u4ee5\u53ca<code>Jave</code>\u4e4b\u7c7b\u7684\u9ad8\u7ea7\u8bed\u8a00\u90fd\u4f9d\u8d56\u5783\u573e\u6536\u96c6\u6765\u91ca\u653e\u5df2\u5206\u914d\u7684\u5757</li> </ul> </li> </ul> <p>\u4e00\u4e2a\u5b9e\u9645\u7684\u5206\u914d\u5668\u8981\u5728\u541e\u5410\u91cf\u548c\u5229\u7528\u7387\u4e4b\u95f4\u628a\u63e1\u597d\u5e73\u8861\uff0c\u5fc5\u987b\u8003\u8651\u4ee5\u4e0b\u51e0\u4e2a\u95ee\u9898\uff1a</p> <ul> <li>\u7a7a\u95f2\u5757\u7ec4\u7ec7\uff1a\u5982\u4f55\u8bb0\u5f55\u7a7a\u95f2\u5757\uff1f</li> <li>\u653e\u7f6e\uff1a\u5982\u4f55\u9009\u62e9\u4e00\u4e2a\u5408\u9002\u7684\u7a7a\u95f2\u5757\u6765\u653e\u7f6e\u4e00\u4e2a\u65b0\u7684\u5206\u914d\u5757\uff1f</li> <li>\u5206\u5272\uff1a\u5728\u5c06\u4e00\u4e2a\u65b0\u5206\u914d\u7684\u5757\u653e\u7f6e\u5230\u67d0\u4e2a\u7a7a\u95f2\u5757\u4e4b\u540e\uff0c\u5982\u4f55\u5904\u7406\u8fd9\u4e2a\u7a7a\u95f2\u5757\u4e2d\u7684\u5269\u4f59\u90e8\u5206\uff1f</li> <li>\u5408\u5e76\uff1a\u5982\u4f55\u5904\u7406\u4e00\u4e2a\u521a\u521a\u88ab\u91ca\u653e\u7684\u5757\uff1f</li> </ul>"},{"location":"booknotes/csapp/09/#_14","title":"\u7a7a\u95f2\u5757\u7ec4\u7ec7","text":""},{"location":"booknotes/csapp/09/#_15","title":"\u9690\u5f0f\u7a7a\u95f2\u94fe\u8868","text":"<p>\u5982\u4e0a\u56fe\u6240\u793a\uff0c\u4e00\u4e2a\u5757\u7531\u5934\u90e8\u3001\u6709\u6548\u8f7d\u8377\u548c\u586b\u5145\u7ec4\u6210\u3002\u5934\u90e8\u7f16\u7801\u4e86\u5f53\u524d\u5757\u7684\u5927\u5c0f(\u5305\u62ec\u5934\u90e8\u548c\u6240\u6709\u7684\u586b\u5145)\uff0c\u4ee5\u53ca\u5f53\u524d\u5757\u662f\u5426\u5df2\u5206\u914d\u3002</p> <p>\u56e0\u4e3a\u7a7a\u95f2\u5757\u662f\u901a\u8fc7\u5934\u90e8\u4e2d\u7684\u5927\u5c0f\u5b57\u6bb5\u9690\u542b\u5730\u94fe\u63a5\u7740\u7684\uff0c\u6240\u4ee5\u8fd9\u79cd\u7ed3\u6784\u79f0\u4e3a\u9690\u5f0f\u7a7a\u95f2\u94fe\u8868\u3002\u5982\u4e0b\u56fe\u6240\u793a\uff0c\u5206\u914d\u5668\u53ef\u4ee5\u901a\u8fc7\u904d\u5386\u5806\u4e2d\u6240\u6709\u7684\u5757\uff0c\u4ece\u800c\u95f4\u63a5\u5730\u904d\u5386\u6574\u4e2a\u7a7a\u95f2\u5757\u7684\u96c6\u5408\u3002\u6ce8\u610f\uff0c\u6211\u4eec\u9700\u8981\u67d0\u79cd\u7279\u6b8a\u6807\u8bb0\u7684\u7ed3\u675f\u5757\uff0c\u56fe\u4e2d\u5c31\u8bbe\u7f6e\u4e86\u4e00\u4e2a\u5df2\u5206\u914d\u800c\u5927\u5c0f\u4e3a\u96f6\u7684\u7ec8\u6b62\u5934\u90e8\u3002</p> <p></p> <p>\u9690\u5f0f\u7a7a\u95f2\u94fe\u8868\u7684\u4f18\u70b9\u662f\u7b80\u5355\uff0c\u4f46\u7f3a\u70b9\u662f\u6548\u7387\u4f4e\uff0c\u4efb\u4f55\u64cd\u4f5c\u7684\u5f00\u9500\u90fd\u4e0e\u5806\u4e2d\u5df2\u5206\u914d\u548c\u7a7a\u95f2\u5757\u7684\u603b\u6570\u5448\u7ebf\u6027\u5173\u7cfb\u3002</p>"},{"location":"booknotes/csapp/09/#_16","title":"\u663e\u5f0f\u7a7a\u95f2\u94fe\u8868","text":"<p>\u663e\u5f0f\u7a7a\u95f2\u94fe\u8868\u5c06\u7a7a\u95f2\u5757\u7ec4\u7ec7\u4e3a\u67d0\u79cd\u5f62\u5f0f\u7684\u663e\u5f0f\u6570\u636e\u7ed3\u6784\u3002\u56e0\u4e3a\u7a0b\u5e8f\u4e0d\u9700\u8981\u7a7a\u95f2\u5757\u7684\u4e3b\u4f53\uff0c\u56e0\u6b64\u53ef\u5728\u6bcf\u4e2a\u7a7a\u95f2\u5757\u4e2d\u52a0\u5165\u4e00\u4e2a<code>pred</code>\u524d\u9a71\u548c<code>succ</code>\u540e\u7ee7\u6307\u9488\uff0c\u5c06\u6240\u6709\u7a7a\u95f2\u5757\u7ec4\u7ec7\u6210\u4e00\u4e2a\u663e\u5f0f\u7684\u53cc\u5411\u94fe\u8868\uff0c\u5982\u4e0b\u56fe\u6240\u793a\uff1a</p> <p></p> <p>\u663e\u5f0f\u7a7a\u95f2\u94fe\u8868\u4f7f\u9996\u6b21\u9002\u914d\u7684\u5206\u914d\u65f6\u95f4\u4ece\u5757\u603b\u6570\u7684\u7ebf\u6027\u65f6\u95f4\u51cf\u5c11\u5230\u4e86\u7a7a\u95f2\u5757\u6570\u91cf\u7684\u7ebf\u6027\u65f6\u95f4\u3002\u4e0d\u8fc7\uff0c\u91ca\u653e\u4e00\u4e2a\u5757\u7684\u65f6\u95f4\u53ef\u4ee5\u662f\u7ebf\u6027\u7684\uff0c\u4e5f\u53ef\u80fd\u662f\u4e2a\u5e38\u6570\uff0c\u8fd9\u53d6\u51b3\u4e8e\u6211\u4eec\u6240\u9009\u62e9\u7684\u7a7a\u95f2\u94fe\u8868\u4e2d\u5757\u7684\u6392\u5e8f\u7b56\u7565\u3002</p> <p>\u663e\u5f0f\u94fe\u8868\u7684\u7f3a\u70b9\u662f\u7a7a\u95f2\u5757\u5fc5\u987b\u8db3\u591f\u5927\uff0c\u4ee5\u5305\u542b\u6240\u6709\u9700\u8981\u7684\u6307\u9488\uff0c\u4ee5\u53ca\u5934\u90e8\u548c\u53ef\u80fd\u7684\u811a\u90e8\u3002\u8fd9\u5c31\u5bfc\u81f4\u4e86\u66f4\u5927\u7684\u6700\u5c0f\u5757\u5927\u5c0f\uff0c\u4e5f\u6f5c\u5728\u5730\u63d0\u9ad8\u4e86\u5185\u90e8\u788e\u7247\u7684\u7a0b\u5ea6\u3002</p>"},{"location":"booknotes/csapp/09/#_17","title":"\u5206\u79bb\u7684\u7a7a\u95f2\u94fe\u8868","text":"<p>\u5355\u5411\u7a7a\u95f2\u5757\u94fe\u8868\u7684\u5206\u914d\u9700\u8981\u4e0e\u7a7a\u95f2\u5757\u6570\u91cf\u5448\u7ebf\u6027\u5173\u7cfb\u3002\u4e3a\u4e86\u51cf\u5c11\u5206\u914d\u65f6\u95f4\uff0c\u53ef\u7ef4\u62a4\u591a\u4e2a\u7a7a\u95f2\u94fe\u8868\uff0c\u5176\u4e2d\u6bcf\u4e2a\u94fe\u8868\u4e2d\u7684\u5757\u6709\u5927\u81f4\u76f8\u7b49\u7684\u5927\u5c0f\u3002\u8fd9\u79cd\u65b9\u6cd5\u79f0\u4e3a\u5206\u79bb\u5b58\u50a8(segregated storage)\u3002\u5e38\u89c1\u7684\u4e24\u79cd\u5206\u79bb\u65b9\u6cd5\u6709\uff1a</p> <ul> <li>\u7b80\u5355\u5206\u79bb\u5b58\u50a8(simple segregated storage)<ul> <li>\u6bcf\u4e2a\u7a7a\u95f2\u94fe\u8868\u5305\u542b\u5927\u5c0f\u76f8\u7b49\u7684\u5757</li> </ul> </li> <li>\u5206\u79bb\u9002\u914d(segregated fit)<ul> <li>\u6bcf\u4e2a\u7a7a\u95f2\u94fe\u8868\u5305\u542b\u6f5c\u5728\u7684\u5927\u5c0f\u4e0d\u540c\u7684\u5757\uff0c\u4f8b\u5982\u4f19\u4f34\u7cfb\u7edf(buddy system)\uff0c\u5757\u5927\u5c0f\u6309\u71672\u7684\u5e42\u5212\u5206</li> </ul> </li> </ul>"},{"location":"booknotes/csapp/09/#_18","title":"\u653e\u7f6e","text":"<p>\u5f53\u8bf7\u6c42\u4e00\u4e2ak\u5b57\u8282\u7684\u5757\u65f6\uff0c\u67e5\u627e\u4e00\u4e2a\u8db3\u591f\u5927\u7684\u53ef\u4ee5\u653e\u7f6e\u6240\u8bf7\u6c42\u5757\u7684\u7a7a\u95f2\u5757\u6709\u591a\u79cd\u7b56\u7565\uff1a</p> <ul> <li>\u9996\u6b21\u9002\u914d<ul> <li>\u4ece\u5934\u5f00\u59cb\u641c\u7d22\u7a7a\u95f2\u94fe\u8868\uff0c\u9009\u62e9\u7b2c\u4e00\u4e2a\u5408\u9002\u7684\u7a7a\u95f2\u5757</li> <li>\u7f3a\u70b9\u662f\uff1a\u5728\u9760\u8fd1\u94fe\u8868\u8d77\u59cb\u5904\u7559\u4e0b\u5c0f\u7a7a\u95f2\u5757\u7684\u201c\u788e\u7247\u201d</li> </ul> </li> <li>\u4e0b\u4e00\u6b21\u9002\u914d<ul> <li>\u4ece\u4e0a\u4e00\u6b21\u67e5\u8be2\u7ed3\u675f\u7684\u5730\u65b9\u5f00\u59cb\u641c\u7d22\uff0c\u9009\u62e9\u7b2c\u4e00\u4e2a\u5408\u9002\u7684\u7a7a\u95f2\u5757</li> <li>\u7f3a\u70b9\u662f\uff1a\u5229\u7528\u7387\u8981\u6bd4\u9996\u6b21\u9002\u914d\u4f4e</li> </ul> </li> <li>\u6700\u4f73\u9002\u914d<ul> <li>\u68c0\u67e5\u6240\u6709\u7a7a\u95f2\u5757\uff0c\u9009\u62e9\u6240\u9700\u8bf7\u6c42\u5927\u5c0f\u7684\u6700\u5c0f\u7a7a\u95f2\u5757</li> <li>\u7f3a\u70b9\u662f\uff1a\u6548\u7387\u4f4e</li> </ul> </li> </ul>"},{"location":"booknotes/csapp/09/#_19","title":"\u5206\u5272","text":"<p>\u5206\u914d\u5668\u627e\u5230\u4e00\u4e2a\u5339\u914d\u7684\u7a7a\u95f2\u5757\u540e\uff0c\u9700\u8981\u9009\u62e9\u5206\u914d\u8fd9\u4e2a\u7a7a\u95f2\u5757\u4e2d\u591a\u5c11\u7a7a\u95f4\uff1a</p> <ul> <li>\u9009\u62e9\u6574\u4e2a\u7a7a\u95f2\u5757<ul> <li>\u4f18\u70b9\u662f\uff1a\u7b80\u5355\u800c\u5feb\u6377</li> <li>\u7f3a\u70b9\u662f\uff1a\u4f1a\u9020\u6210\u5185\u90e8\u788e\u7247</li> </ul> </li> <li>\u9009\u62e9\u5c06\u8fd9\u4e2a\u7a7a\u95f2\u5757\u5206\u5272\u4e3a\u4e24\u90e8\u5206<ul> <li>\u7b2c\u4e00\u90e8\u5206\u53d8\u6210\u5206\u914d\u5757</li> <li>\u5269\u4e0b\u7684\u53d8\u6210\u4e00\u4e2a\u65b0\u7684\u7a7a\u95f2\u5757</li> </ul> </li> </ul>"},{"location":"booknotes/csapp/09/#_20","title":"\u5408\u5e76","text":"<p>\u5206\u914d\u5668\u91ca\u653e\u4e00\u4e2a\u5df2\u5206\u914d\u5757\u65f6\uff0c\u53ef\u80fd\u6709\u5176\u4ed6\u7a7a\u95f2\u5757\u4e0e\u8fd9\u4e2a\u65b0\u91ca\u653e\u7684\u7a7a\u95f2\u5757\u76f8\u90bb\uff0c\u90a3\u4e48\u5206\u914d\u5668\u5fc5\u987b\u9009\u62e9\u5982\u4f55\u5408\u5e76\u76f8\u90bb\u7684\u7a7a\u95f2\u5757\uff1a</p> <ul> <li>\u7acb\u5373\u5408\u5e76<ul> <li>\u7f3a\u70b9\u662f\uff1a\u4f1a\u4ea7\u751f\u4e00\u79cd\u5f62\u5f0f\u7684\u6296\u52a8\uff0c\u6709\u53ef\u80fd\u51fa\u73b0\u5757\u53cd\u590d\u5730\u5408\u5e76\uff0c\u7136\u540e\u9a6c\u4e0a\u5206\u5272</li> </ul> </li> <li>\u63a8\u8fdf\u5408\u5e76<ul> <li>\u5feb\u901f\u7684\u5206\u914d\u5668\u901a\u5e38\u4f1a\u9009\u62e9\u67d0\u79cd\u5f62\u5f0f\u7684\u63a8\u8fdf\u5408\u5e76</li> </ul> </li> </ul> <p>\u5206\u914d\u5668\u5982\u4f55\u5b9e\u73b0\u5408\u5e76\uff1f\u5bf9\u4e8e\u524d\u9762\u7684\u9690\u5f0f\u7a7a\u95f2\u94fe\u8868\u7ed3\u6784\uff0c\u6211\u4eec\u5fc5\u987b\u641c\u7d22\u6574\u4e2a\u94fe\u8868\uff0c\u4ee5\u5408\u5e76\u7a7a\u95f2\u5757\u3002\u4e3a\u4e86\u63d0\u9ad8\u5408\u5e76\u7684\u6548\u7387\uff0c\u53ef\u4ee5\u5728\u6bcf\u4e2a\u5757\u7684\u7ed3\u5c3e\u5904\u6dfb\u52a0\u4e00\u4e2a\u811a\u90e8(\u5982\u4e0b\u56fe)\uff0c\u5176\u4e2d\u811a\u90e8\u5c31\u662f\u5934\u90e8\u7684\u4e00\u4e2a\u526f\u672c\u3002\u8fd9\u6837\u6211\u4eec\u5c31\u53ef\u4ee5\u901a\u8fc7\u68c0\u67e5\u524d\u4e00\u4e2a\u5757\u7684\u811a\u90e8\u548c\u540e\u4e00\u4e2a\u5757\u7684\u5934\u90e8\uff0c\u5feb\u901f\u5b8c\u6210\u5408\u5e76\u7684\u64cd\u4f5c\u3002</p> <p></p>"},{"location":"booknotes/csapp/10/","title":"\u7cfb\u7edf\u7ea7I/O","text":"<p>\u300a\u6df1\u5165\u7406\u89e3\u8ba1\u7b97\u673a\u7cfb\u7edf\u300b - Randal E. Bryant - \u7b2c\u4e09\u7248 \u7b2c\u5341\u7ae0\uff0c\u4ee5\u53ca\u300aLinux/UNIX \u7cfb\u7edf\u7f16\u7a0b\u624b\u518c\u300b - Michael Kerrisk \u6587\u4ef6\u7cfb\u7edf\u76f8\u5173\u7ae0\u8282\uff084\uff0c5\uff0c13~18\uff09\u7684\u8bfb\u4e66\u7b14\u8bb0\uff0c\u672c\u6587\u4e2d\u7684\u6240\u6709\u4ee3\u7801\u53ef\u5728GitHub\u4ed3\u5e93\u4e2d\u627e\u5230</p>"},{"location":"booknotes/csapp/10/#_1","title":"\u865a\u62df\u6587\u4ef6\u7cfb\u7edf","text":"<p>\u5728Linux\u7cfb\u7edf\u4e2d\u57fa\u672c\u4e0a\u628a\u6240\u6709\u5185\u5bb9\u90fd\u770b\u4f5c\u6587\u4ef6\uff0c\u9664\u4e86\u6211\u4eec\u666e\u901a\u610f\u4e49\u7406\u89e3\u7684\u6587\u4ef6\u4e4b\u5916\uff0c\u76ee\u5f55\u3001\u5b57\u7b26\u8bbe\u5907\u3001\u5757\u8bbe\u5907\u3001FIFO\u6216\u7ba1\u9053\u3001\u5957\u63a5\u5b57\u3001\u7b26\u53f7\u94fe\u63a5\u7b49\u90fd\u88ab\u89c6\u4e3a\u662f\u4e00\u4e2a\u201c\u6587\u4ef6\u201d\u3002</p> <p></p> <p>\u5982\u4e0a\u56fe\u6240\u793a\uff0c\u865a\u62df\u6587\u4ef6\u7cfb\u7edf(VFS)VFS\u662f\u4e00\u4e2a\u62bd\u8c61\u5c42\uff0c\u5176\u5411\u4e0a\u63d0\u4f9b\u4e86\u7edf\u4e00\u7684\u6587\u4ef6\u8bbf\u95ee\u63a5\u53e3\uff0c\u800c\u5411\u4e0b\u5219\u517c\u5bb9\u4e86\u5404\u79cd\u4e0d\u540c\u7684\u6587\u4ef6\u7cfb\u7edf\u3002\u4e0d\u4ec5\u4ec5\u662f\u8bf8\u5982Ext2\u3001Ext4\u3001XFS\u548cBtrfs\u7b49\u5e38\u89c4\u610f\u4e49\u4e0a\u7684\u6587\u4ef6\u7cfb\u7edf\uff0c\u8fd8\u5305\u62ec\u4f2a\u6587\u4ef6\u7cfb\u7edf\u548c\u8bbe\u5907\u7b49\u7b49\u3002\u53e6\u5916\uff0cVFS\u5b9e\u73b0\u4e86\u4e00\u90e8\u5206\u516c\u5171\u7684\u529f\u80fd\uff0c\u4f8b\u5982\uff1a\u9875\u7f13\u5b58\u548cinode\u7f13\u5b58\u7b49\uff0c\u4ece\u800c\u907f\u514d\u591a\u4e2a\u6587\u4ef6\u7cfb\u7edf\u91cd\u590d\u5b9e\u73b0\u7684\u95ee\u9898\u3002</p> <p>Linux\u4e0a\u6240\u6709\u6587\u4ef6\u7cfb\u7edf\u4e2d\u7684\u6587\u4ef6\u90fd\u4f4d\u4e8e\u5355\u6839\u76ee\u5f55\u6811\u4e0b\uff0c\u6811\u6839\u5c31\u662f\u6839\u76ee\u5f55<code>/</code>\u3002\u5176\u4ed6\u7684\u6587\u4ef6\u7cfb\u7edf\u90fd\u6302\u8f7d\u5728\u6839\u76ee\u5f55\u4e0b\u3002<code>mount device directory</code>\u547d\u4ee4\u4f1a\u5c06\u540d\u4e3a<code>device</code>\u7684\u6587\u4ef6\u7cfb\u7edf\u6302\u63a5\u5230\u76ee\u5f55\u5c42\u7ea7\u4e2d\u7531<code>directory</code>\u6240\u6307\u5b9a\u7684\u76ee\u5f55\uff0c\u5373\u6587\u4ef6\u7cfb\u7edf\u7684\u6302\u8f7d\u70b9\u3002<code>mount</code>\u547d\u4ee4\u53ef\u4ee5\u5217\u51fa\u5f53\u524d\u5df2\u6302\u8f7d\u7684\u6587\u4ef6\u7cfb\u7edf\uff0c\u4f8b\u5982\uff1a <pre><code>&gt; mount\nproc on /proc type proc (rw)\nsysfs on /sys type sysfs (rw)\ntmpfs on /run type tmpfs (rw)\nudev on /dev type devtmpfs (rw)\n/dev/sda6 on / type ext4 (rw)\n/dev/sda8 on /home type ext3 (rw,acl,user_xattr)\n/dev/sda1 on /windows/C type vfat (rw,noexec,nosuid,nodev)\n/dev/sda9 on /home/mtk/test type reiserfs (rw)\n</code></pre></p> <p></p> <p>\u9664\u4e86\u4e0a\u56fe\u4e2d\u9a7b\u7559\u5728\u78c1\u76d8\u4e0a\u7684\u6587\u4ef6\u7cfb\u7edf\uff0cLinux\u540c\u6837\u652f\u6301\u9a7b\u7559\u4e8e\u5185\u5b58\u4e2d\u7684\u865a\u62df\u6587\u4ef6\u7cfb\u7edf\uff1aproc\uff0csysfs\uff0ctmpfs\uff0cdevtmpfs\u7b49\u3002<code>/proc/filesystems</code>\u53ef\u4ee5\u67e5\u770b\u5f53\u524d\u4e3a\u5185\u6838\u6240\u77e5\u7684\u6587\u4ef6\u7cfb\u7edf\u7c7b\u578b\u3002</p>"},{"location":"booknotes/csapp/10/#_2","title":"\u5e38\u89c4\u6587\u4ef6\u7cfb\u7edf","text":"<p>\u5e38\u89c4\u6587\u4ef6\u7cfb\u7edf\u662f\u5bf9\u5e38\u89c4\u6587\u4ef6\u548c\u76ee\u5f55\u7684\u7ec4\u7ec7\u96c6\u5408\uff0c\u7531<code>mkfs</code>\u547d\u4ee4\u521b\u5efa\uff0c\u5176\u7c7b\u578b\u6709\uff1a</p> <ul> <li>\u4f20\u7edf\u7684ext2\u6587\u4ef6\u7cfb\u7edf</li> <li>\u5404\u79cd\u539f\u59cbUNIX\u6587\u4ef6\u7cfb\u7edf\uff0c\u5982\uff0cMinix\u3001System V\u4ee5\u53caBSD\u6587\u4ef6\u7cfb\u7edf</li> <li>\u5fae\u8f6f\u7684FAT\u3001FAT32\u4ee5\u53caNTFS\u6587\u4ef6\u7cfb\u7edf</li> <li>ISO 9660 CD-ROM\u6587\u4ef6\u7cfb\u7edf</li> <li>Apple Macintosh\u7684HFS</li> <li>\u4e00\u7cfb\u5217\u7f51\u7edc\u6587\u4ef6\u7cfb\u7edf\uff0c\u5982\uff0cSUN\u7684NFS\u3001IBM\u548c\u5fae\u8f6f\u7684SMB\u3001Novell\u7684NCP\u7b49</li> <li>\u4e00\u7cfb\u5217\u65e5\u5fd7\u6587\u4ef6\u7cfb\u7edf\uff0c\u5305\u62ecext3\u3001ext4\u3001Reiserfs\u3001JFS\u3001XFS\u4ee5\u53caBtrfs\u7b49<ul> <li>\u7cfb\u7edf\u5d29\u6e83\u91cd\u542f\u540e\uff0c\u4f1a\u5229\u7528\u65e5\u5fd7\u91cd\u505a\u4efb\u4f55\u4e0d\u5b8c\u6574\u7684\u66f4\u65b0\uff0c\u6062\u590d\u6587\u4ef6\u7cfb\u7edf\u7684\u4e00\u81f4\u6027\u72b6\u6001</li> </ul> </li> </ul>"},{"location":"booknotes/csapp/10/#_3","title":"\u78c1\u76d8\u548c\u5206\u533a","text":"<p>\u5e38\u89c4\u6587\u4ef6\u548c\u76ee\u5f55\u901a\u5e38\u90fd\u5b58\u653e\u5728\u78c1\u76d8\u8bbe\u5907\u91cc(\u6bd4\u5982\uff0cCD-ROM\u3001flash\u5185\u5b58\u5361\u4ee5\u53ca\u865a\u62df\u78c1\u76d8\u7b49)\u3002\u6bcf\u5757\u78c1\u76d8\u88ab\u5212\u5206\u4e3a\u4e00\u4e2a\u6216\u591a\u4e2a\u5206\u533a\u3002\u5185\u6838\u5c06\u6bcf\u4e2a\u5206\u533a\u89c6\u4e3a\u4f4d\u4e8e<code>/dev</code>\u8def\u5f84\u4e0b\u7684\u5355\u72ec\u8bbe\u5907\u3002\u78c1\u76d8\u5206\u533a\u4e00\u822c\u5b58\u653e\u4e09\u79cd\u4fe1\u606f\uff1a</p> <ul> <li>\u6587\u4ef6\u7cfb\u7edf<ul> <li>\u7528\u6765\u5b58\u653e\u5e38\u89c4\u6587\u4ef6</li> </ul> </li> <li>\u6570\u636e\u533a\u57df<ul> <li>\u53ef\u505a\u4e3a\u88f8\u8bbe\u5907\u5bf9\u5176\u8fdb\u884c\u8bbf\u95ee\uff0c\u5982\u6570\u636e\u5e93\u7ba1\u7406\u7cfb\u7edf\u5c31\u4f7f\u7528\u4e86\u8be5\u6280\u672f</li> </ul> </li> <li>\u4ea4\u6362\u533a\u57df<ul> <li>\u4f9b\u5185\u6838\u7684\u5185\u5b58\u7ba1\u7406\u4f7f\u7528\uff0c\u5982Linux\u7cfb\u7edf\u4e2d\u7684<code>/proc/swaps</code>\u53ef\u67e5\u770b\u5df2\u6fc0\u6d3b\u7684\u4ea4\u6362\u533a\u57df\u4fe1\u606f</li> </ul> </li> </ul> <p></p> <p>\u4e0a\u56fe\u663e\u793a\u4e86\u78c1\u76d8\u5206\u533a\u548c\u6587\u4ef6\u7cfb\u7edf\u4e4b\u95f4\u7684\u5173\u7cfb\u3002\u6587\u4ef6\u7cfb\u7edf\u7531\u4ee5\u4e0b\u51e0\u90e8\u5206\u7ec4\u6210\uff1a</p> <ul> <li>\u5f15\u5bfc\u5757<ul> <li>\u4f4d\u4e8e\u6587\u4ef6\u7cfb\u7edf\u9996\u90e8\uff0c\u53ea\u5305\u542b\u7528\u6765\u5f15\u5bfc\u64cd\u4f5c\u7cfb\u7edf\u7684\u4fe1\u606f</li> </ul> </li> <li>\u8d85\u7ea7\u5757<ul> <li>\u5305\u542b\u4e0e\u6587\u4ef6\u7cfb\u7edf\u6709\u5173\u7684\u53c2\u6570\u4fe1\u606f\uff0c\u5982\uff1a<ul> <li>i\u8282\u70b9\u8868\u5bb9\u91cf</li> <li>\u6587\u4ef6\u7cfb\u7edf\u4e2d\u903b\u8f91\u5757\u7684\u5927\u5c0f</li> <li>\u4ee5\u903b\u8f91\u5757\u8ba1\uff0c\u6587\u4ef6\u7cfb\u7edf\u7684\u5927\u5c0f</li> </ul> </li> </ul> </li> <li>i\u8282\u70b9\u8868<ul> <li>\u6587\u4ef6\u7cfb\u7edf\u4e2d\u7684\u6bcf\u4e2a\u6587\u4ef6\u6216\u76ee\u5f55\u5728i\u8282\u70b9\u8868\u4e2d\u90fd\u5bf9\u5e94\u7740\u552f\u4e00\u4e00\u6761\u8bb0\u5f55\uff0c\u8fd9\u6761\u8bb0\u5f55\u767b\u8bb0\u4e86\u5173\u4e4e\u6587\u4ef6\u7684\u5404\u79cd\u4fe1\u606f</li> </ul> </li> <li>\u6570\u636e\u5757<ul> <li>\u7528\u4e8e\u5b58\u653e\u6570\u636e</li> </ul> </li> </ul>"},{"location":"booknotes/csapp/10/#i","title":"i\u8282\u70b9","text":"<p>\u6bcf\u4e2a\u6587\u4ef6\u90fd\u5728i\u8282\u70b9\u8868\u4e2d\u6709\u81ea\u5df1\u7684i\u8282\u70b9(\u7d22\u5f15\u8282\u70b9\u7684\u7b80\u79f0)\uff0ci\u8282\u70b9\u7531\u6570\u5b57\u6807\u8bc6\uff0c\u53ef\u901a\u8fc7<code>ls -li</code>\u547d\u4ee4\u67e5\u770b\u3002i\u8282\u70b9\u7ef4\u62a4\u6587\u4ef6\u7684\u5c5e\u6027\u4fe1\u606f\uff0c\u5305\u62ec\uff1a</p> <ul> <li>\u6587\u4ef6\u7c7b\u578b<ul> <li>\u53ef\u901a\u8fc7<code>ls -l</code>\u6700\u9996\u90e8\u7684\u5b57\u6bcd\u83b7\u5f97</li> </ul> </li> <li>\u8bbf\u95ee\u6743\u9650</li> <li>\u6307\u5411\u6587\u4ef6\u7684\u786c\u94fe\u63a5\u6570<ul> <li>\u53ef\u901a\u8fc7<code>ls -l</code>\u7b2c\u4e8c\u5217\u7684\u6570\u5b57\u83b7\u5f97</li> </ul> </li> <li>\u6587\u4ef6\u5c5e\u4e3b/\u7ec4</li> <li>\u6587\u4ef6\u7684\u5927\u5c0f</li> <li>\u65f6\u95f4\u6233</li> <li>\u5b9e\u9645\u5206\u914d\u7ed9\u6587\u4ef6\u7684\u5757\u6570\u91cf<ul> <li>\u53ef\u901a\u8fc7<code>ls -s</code>\u547d\u4ee4\u83b7\u5f97</li> </ul> </li> <li>\u6307\u5411\u6587\u4ef6\u6570\u636e\u5757\u7684\u6307\u9488</li> </ul> <p></p> <p>\u4e0a\u56fe\u663e\u793a\u4e86ext2\u6587\u4ef6\u7cfb\u7edf\u7684i\u8282\u70b9\u7ed3\u6784\u3002\u6bcf\u4e2ai\u8282\u70b9\u5305\u542b15\u4e2a\u6307\u9488\u3002\u5176\u4e2d\uff0c\u524d12\u4e2a\u6307\u9488\u6307\u5411\u6587\u4ef6\u524d12\u4e2a\u5757\u5728\u6570\u636e\u5757\u4e2d\u7684\u4f4d\u7f6e\u3002\u63a5\u4e0b\u6765\uff0c\u662f\u4e00\u4e2a\u6307\u5411\u6307\u9488\u5757\u7684\u6307\u9488\uff0c\u63d0\u4f9b\u4e86\u6587\u4ef6\u7684\u7b2c13\u4e2a\u4ee5\u53ca\u540e\u7eed\u6570\u636e\u5757\u7684\u4f4d\u7f6e\u3002\u6307\u9488\u5757\u4e2d\u6307\u9488\u7684\u6570\u91cf\u53d6\u51b3\u4e8e\u6587\u4ef6\u7cfb\u7edf\u4e2d\u5757\u7684\u5927\u5c0f\uff0c\u53ef\u80fd\u5728256(\u5757\u5bb9\u91cf\u4e3a1024\u5b57\u8282) ~ 1024(\u5757\u5bb9\u91cf\u4e3a4096\u5b57\u8282)\u4e4b\u95f4\u3002</p> <p>\u53cc\u91cd\u95f4\u63a5\u6307\u9488\u4ee5\u53ca\u4e09\u91cd\u95f4\u63a5\u6307\u9488\uff0c\u6ee1\u8db3\u4e86\u66f4\u5927\u6587\u4ef6\u7684\u9700\u6c42\u3002\u4f8b\u5982\uff0c\u5bf9\u4e8e\u5927\u5c0f\u4e3a4096\u5b57\u8282\u7684\u5757\u800c\u8a00\uff0c\u6587\u4ef6\u5927\u5c0f\u53ef\u7565\u9ad8\u4e8e<code>1024*1024*1024*4096</code>\u5b57\u8282(4TB)\u3002\u8fd9\u662f\u7531\u4e09\u91cd\u95f4\u63a5\u6307\u9488\u6240\u6307\u5411\u7684\u8303\u56f4\u51b3\u5b9a\u7684\uff0c\u76f4\u63a5\u3001\u95f4\u63a5\u6216\u53cc\u91cd\u95f4\u63a5\u6307\u9488\u7684\u8303\u56f4\u76f8\u5bf9\u6765\u8bf4\uff0c\u5c31\u5fae\u4e0d\u8db3\u9053\u4e86\u3002</p>"},{"location":"booknotes/csapp/10/#_4","title":"\u5171\u4eab\u6587\u4ef6","text":"<p>Linux\u5185\u6838\u7528\u4e09\u4e2a\u76f8\u5173\u7684\u6570\u636e\u7ed3\u6784\u6765\u8868\u793a\u6253\u5f00\u7684\u6587\u4ef6\uff1a</p> <ul> <li>\u8fdb\u7a0b\u7ea7\u7684\u6587\u4ef6\u63cf\u8ff0\u7b26\u8868(open file descriptor)<ul> <li>\u8be5\u8868\u7684\u6bcf\u4e00\u6761\u76ee\u90fd\u8bb0\u5f55\u4e86\u5bf9\u6253\u5f00\u6587\u4ef6\u53e5\u67c4\u7684\u5f15\u7528</li> </ul> </li> <li>\u7cfb\u7edf\u7ea7\u7684\u6253\u5f00\u6587\u4ef6\u8868(open file table)<ul> <li>\u8be5\u8868\u7684\u6bcf\u4e2a\u6761\u76ee\u79f0\u4e3a\u6253\u5f00\u6587\u4ef6\u53e5\u67c4\uff0c\u5b58\u50a8\u4e86\u4e00\u4e2a\u4e0e\u6253\u5f00\u6587\u4ef6\u76f8\u5173\u7684\u5168\u90e8\u4fe1\u606f\uff0c\u5305\u62ec\uff1a<ul> <li>\u6587\u4ef6\u504f\u79fb\u91cf</li> <li>\u6253\u5f00\u6587\u4ef6\u65f6\u6240\u4f7f\u7528\u7684\u72b6\u6001\u6807\u5fd7</li> <li>\u5bf9\u8be5\u6587\u4ef6i-node\u5bf9\u8c61\u7684\u5f15\u7528</li> </ul> </li> </ul> </li> <li>\u6587\u4ef6\u7cfb\u7edf\u7684i-node\u8868<ul> <li>\u6bcf\u4e2a\u6587\u4ef6\u7684i-node\u4fe1\u606f\u5305\u62ec\uff1a<ul> <li>\u6587\u4ef6\u7c7b\u578b\u548c\u8bbf\u95ee\u6743\u9650</li> <li>\u6587\u4ef6\u7684\u5176\u4ed6\u5c5e\u6027\uff0c\u5305\u62ec\u6587\u4ef6\u5927\u5c0f\u3001\u65f6\u95f4\u6233\u7b49\u4fe1\u606f</li> </ul> </li> </ul> </li> </ul> <p>\u4e0b\u56fe\u663e\u793a\u4e86\u6587\u4ef6\u63cf\u8ff0\u7b26\u3001\u6253\u5f00\u7684\u6587\u4ef6\u53e5\u67c4\u4ee5\u53cai-node\u4e4b\u95f4\u7684\u5173\u7cfb\u3002</p> <p></p> <ul> <li>\u4e00\u4e2a\u8fdb\u7a0b\u4e2d\u591a\u4e2a\u6587\u4ef6\u63cf\u8ff0\u7b26\u6307\u5411\u540c\u4e00\u4e2a\u6253\u5f00\u7684\u6587\u4ef6\u53e5\u67c4<ul> <li>\u5982\u56fe\u4e2d\uff0c\u8fdb\u7a0bA\u7684<code>fd1</code>\u548c<code>fd20</code></li> <li>\u53ef\u80fd\u662f\u901a\u8fc7\u8c03\u7528<code>dup()</code>\u3001<code>dup2()</code>\u6216<code>fcntl(...,F_DUPFD,...)</code>\u5f62\u6210\u7684\uff0c\u53c2\u8003\u4f8b\u5b50fd_share</li> </ul> </li> <li>\u591a\u4e2a\u8fdb\u7a0b\u4e2d\u503c\u76f8\u540c\u7684\u6587\u4ef6\u63cf\u8ff0\u7b26\u6307\u5411\u540c\u4e00\u4e2a\u6253\u5f00\u7684\u6587\u4ef6\u53e5\u67c4<ul> <li>\u5982\u56fe\u4e2d\uff0c\u8fdb\u7a0bA\u7684<code>fd2</code>\u548c\u8fdb\u7a0bB\u7684<code>fd2</code></li> <li>\u53ef\u80fd\u662f\u5728\u8c03\u7528<code>fork()</code>\u540e\u5f62\u6210\u7684\uff0c\u53c2\u8003\u4f8b\u5b50fd_fork</li> </ul> </li> <li>\u4e0d\u540c\u7684\u6253\u5f00\u6587\u4ef6\u53e5\u67c4\u6307\u5411i-node\u8868\u4e2d\u7684\u76f8\u540c\u6761\u76ee<ul> <li>\u5982\u56fe\u4e2d\uff0c\u6253\u5f00\u6587\u4ef6\u8868\u7684i-node\u6307\u9488<code>1976</code></li> <li>\u53ef\u80fd\u662f\u5bf9\u540c\u4e00\u4e2a\u6587\u4ef6\u53d1\u8d77<code>open()</code>\u8c03\u7528\u540e\u5f62\u6210\u7684\uff0c\u53c2\u8003\u4f8b\u5b50fd_open</li> </ul> </li> </ul> <p>\u7531\u4e0a\u56fe\u53ef\u77e5\uff0c\u5bf9\u4e8e\u6307\u5411\u540c\u4e00\u6253\u5f00\u6587\u4ef6\u53e5\u67c4\u7684\u591a\u4e2a\u6587\u4ef6\u63cf\u8ff0\u7b26\uff0c\u5b83\u4eec\u5171\u4eab\u540c\u4e00\u6587\u4ef6\u504f\u79fb\u91cf\uff0c\u6253\u5f00\u7684\u6587\u4ef6\u6807\u5fd7\u7b49\u5c5e\u6027\u3002\u5982\u679c\u5176\u4e2d\u4e00\u4e2a\u6587\u4ef6\u63cf\u8ff0\u7b26\u4fee\u6539\u4e86\u4e0a\u8ff0\u6587\u4ef6\u5c5e\u6027\uff0c\u4f1a\u5f71\u54cd\u5176\u4ed6\u6587\u4ef6\u63cf\u8ff0\u7b26\uff0c\u9664\u4e86\u6587\u4ef6\u63cf\u8ff0\u7b26\u6807\u5fd7(close-on-exec\u6807\u5fd7)\uff0c\u8fd9\u4e00\u6807\u5fd7\u662f\u6587\u4ef6\u63cf\u8ff0\u7b26\u6240\u79c1\u6709\u7684\u3002</p>"},{"location":"booknotes/cxydzwxy/compile/","title":"\u7f16\u8bd1","text":"<p>\u300a\u7a0b\u5e8f\u5458\u7684\u81ea\u6211\u4fee\u517b--\u94fe\u63a5\u3001\u88c5\u8f7d\u4e0e\u5e93\u300b - \u4fde\u7532\u5b50\uff0c\u77f3\u51e1\uff0c\u6f58\u7231\u6c11\uff0c\u7b2c\u4e8c\u3001\u4e09\u7ae0\u7684\u8bfb\u4e66\u7b14\u8bb0\uff1b\u4ee5\u53ca\u300a\u6df1\u5165\u7406\u89e3\u8ba1\u7b97\u673a\u7cfb\u7edf\u300b - Randal E. Bryant - \u7b2c\u4e09\u7248\uff0c\u7b2c7.6.1\u7ae0\u8282\u7684\u8bfb\u4e66\u7b14\u8bb0\u3002\u672c\u6587\u4e2d\u7684\u6240\u6709\u4ee3\u7801\u53ef\u5728GitHub\u4ed3\u5e93\u4e2d\u627e\u5230</p>"},{"location":"booknotes/cxydzwxy/compile/#_2","title":"\u751f\u6210\u4e00\u4e2a\u53ef\u6267\u884c\u6587\u4ef6","text":"<p>C\u8bed\u8a00\u751f\u6210\u4e00\u4e2a\u53ef\u6267\u884c\u6587\u4ef6\u9700\u89814\u4e2a\u6b65\u9aa4\uff1a</p> <ul> <li>\u9884\u5904\u7406(Preprocessing)</li> <li>\u7f16\u8bd1(Compilation)</li> <li>\u6c47\u7f16(Assembly)</li> <li>\u94fe\u63a5(Linking)</li> </ul> <p>\u4e0b\u9762\u4ee5HelloWorld\u4e3a\u4f8b\uff0c\u5206\u522b\u4ecb\u7ecd\u5404\u6b65\u9aa4\u505a\u4e86\u4ec0\u4e48\u4e8b\u60c5\u3002</p>"},{"location":"booknotes/cxydzwxy/compile/#_3","title":"\u9884\u7f16\u8bd1","text":"<p>\u9884\u7f16\u8bd1\u8fc7\u7a0b\u901a\u8fc7<code>gcc -E main.c -o main.i</code>\u547d\u4ee4\uff0c\u5904\u7406\u6e90\u4ee3\u7801\u4e2d\u4ee5<code>#</code>\u5f00\u5934\u7684\u9884\u7f16\u8bd1\u6307\u4ee4\u3002\u4e3b\u8981\u89c4\u5219\u5982\u4e0b\uff1a</p> <ul> <li>\u5c55\u5f00\u5b8f\u548c\u5934\u6587\u4ef6</li> <li>\u5220\u9664\u6ce8\u91ca</li> <li>\u6dfb\u52a0\u884c\u53f7\u548c\u6587\u4ef6\u540d\u6807\u8bc6\uff0c\u4ee5\u4fbf\u7f16\u8bd1\u5668\u4ea7\u751f\u8c03\u8bd5\u7528\u7684\u884c\u53f7\u4fe1\u606f\uff0c\u4f8b\u5982<code># 2 \"main.c\" 2</code>\uff0c\u8868\u793amain.c\u7684\u7b2c\u4e8c\u884c<ul> <li>\u6587\u4ef6\u540d\u540e\u9762\u7684\u6570\u5b57\u4ee3\u8868\u4e0d\u540c\u7684\u610f\u601d\uff0c\u53c2\u8003GCC\u624b\u518c<ul> <li><code>1</code>\uff0c\u8868\u793a\u65b0\u6587\u4ef6\u7684\u5f00\u59cb</li> <li><code>2</code>\uff0c\u8868\u793a\u8fd4\u56de\u6b64\u6587\u4ef6</li> <li><code>3</code>\uff0c\u8868\u793a\u63a5\u4e0b\u6765\u7684\u5185\u5bb9\u6765\u81ea\u7cfb\u7edf\u5934\u6587\u4ef6\uff0c\u67d0\u4e9b\u8b66\u544a\u5c06\u88ab\u5ffd\u7565</li> <li><code>4</code>\uff0c\u8868\u793a\u63a5\u4e0b\u6765\u7684\u5185\u5bb9\u6309C\u4ee3\u7801\u5904\u7406\uff0c\u5373\u88ab<code>extern \"C\"</code>\u4fee\u9970</li> </ul> </li> </ul> </li> </ul>"},{"location":"booknotes/cxydzwxy/compile/#_4","title":"\u7f16\u8bd1","text":"<p>\u7f16\u8bd1\u8fc7\u7a0b\u5c31\u662f\u628a\u9884\u5904\u7406\u5b8c\u7684\u6587\u4ef6\u8fdb\u884c\u4e00\u7cfb\u5217\u8bcd\u6cd5\u5206\u6790\u3001\u8bed\u6cd5\u5206\u6790\u3001\u8bed\u4e49\u5206\u6790\u4ee5\u53ca\u4f18\u5316\u540e\u4ea7\u751f\u76f8\u5e94\u7684\u6c47\u7f16\u4ee3\u7801\u6587\u4ef6\uff0c\u5176\u547d\u4ee4\u662f\uff1a<code>gcc -S main.i -o main.s</code>\u3002</p>"},{"location":"booknotes/cxydzwxy/compile/#_5","title":"\u6c47\u7f16","text":"<p>\u6c47\u7f16\u5668\u5c06\u6c47\u7f16\u4ee3\u7801\u8f6c\u53d8\u6210\u673a\u5668\u53ef\u6267\u884c\u7684\u6307\u4ee4\uff0c\u79f0\u4e3a\u76ee\u6807\u6587\u4ef6(Object File)\u3002\u6211\u4eec\u53ef\u4ee5\u8c03\u7528\u6c47\u7f16\u5668<code>as</code>\u5b8c\u6210\uff0c\u4e5f\u53ef\u4ee5\u901a\u8fc7GCC\u547d\u4ee4\u5b8c\u6210\u3002</p> <ul> <li><code>as main.s -o main.o</code></li> <li><code>gcc -c main.s -o main.o</code></li> </ul>"},{"location":"booknotes/cxydzwxy/compile/#_6","title":"\u94fe\u63a5","text":"<p>GCC\u547d\u4ee4<code>gcc main.o -o main</code>\uff0c\u901a\u8fc7\u94fe\u63a5\u5668\uff0c\u5c06\u591a\u4e2a\u76ee\u6807\u6587\u4ef6\u94fe\u63a5\u6210\u4e00\u4e2a\u53ef\u6267\u884c\u6587\u4ef6\u3002\u6b64\u547d\u4ee4\u5e95\u5c42\u662f\u4f9d\u8d56\u94fe\u63a5\u5668<code>ld</code>\u5b8c\u6210\u7684\uff0c\u5176\u5b8c\u6574\u547d\u4ee4\u5982\u4e0b\uff1a <pre><code>ld -static /usr/lib/x86_64-linux-gnu/crt1.o /usr/lib/x86_64-linux-gnu/crti.o /usr/lib/gcc/x86_64-linux-gnu/9/crtbeginT.o \\\n   -L/usr/lib/gcc/x86_64-linux-gnu/9 -L/usr/lib -L/lib main.o --start-group -lgcc -lgcc_eh -lc --end-group /usr/lib/gcc/x86_64-linux-gnu/9/crtend.o /usr/lib/x86_64-linux-gnu/crtn.o \\\n   -o main\n</code></pre></p>"},{"location":"booknotes/cxydzwxy/compile/#_7","title":"\u76ee\u6807\u6587\u4ef6","text":"<p>\u76ee\u6807\u6587\u4ef6\u5c31\u662f\u6e90\u4ee3\u7801\u7f16\u8bd1\u540e\u4f46\u672a\u8fdb\u884c\u94fe\u63a5\u7684\u90a3\u4e9b\u4e2d\u95f4\u6587\u4ef6\uff0c\u5b83\u8ddf\u53ef\u6267\u884c\u6587\u4ef6\u7684\u5185\u5bb9\u4e0e\u7ed3\u6784\u662f\u5f88\u76f8\u4f3c\u7684\u3002\u53ea\u662f\u8fd8\u6ca1\u6709\u7ecf\u8fc7\u94fe\u63a5\u7684\u8fc7\u7a0b\uff0c\u5176\u4e2d\u53ef\u80fd\u6709\u4e9b\u7b26\u53f7\u6216\u6709\u4e9b\u5730\u5740\u8fd8\u6ca1\u6709\u8c03\u6574\u3002</p> <p>Linux\u7684ELF(Executable Linkable Format)\u662f\u4e00\u79cd\u53ef\u6267\u884c\u6587\u4ef6\u7684\u683c\u5f0f\u3002\u9664\u4e86\u76ee\u6807\u6587\u4ef6(.o)\uff0c\u52a8\u6001\u94fe\u63a5\u5e93(.so)\u3001\u9759\u6001\u94fe\u63a5\u5e93(.a)\u548c\u53ef\u6267\u884c\u6587\u4ef6(.out)\u90fd\u662f\u6309\u7167\u8fd9\u79cd\u683c\u5f0f\u5b58\u50a8\u7684\u3002</p> ELF\u6587\u4ef6\u7c7b\u578b \u8bf4\u660e \u5b9e\u4f8b \u53ef\u91cd\u5b9a\u4f4d\u6587\u4ef6 (Relocatable File) \u8fd9\u7c7b\u6587\u4ef6\u5305\u542b\u4e86\u4ee3\u7801\u548c\u6570\u636e\uff0c\u53ef\u4ee5\u88ab\u7528\u6765\u94fe\u63a5\u6210\u53ef\u6267\u884c\u6587\u4ef6\u6216\u5171\u4eab\u76ee\u6807\u6587\u4ef6\uff0c\u9759\u6001\u94fe\u63a5\u5e93\u4e5f\u53ef\u4ee5\u5f52\u4e3a\u8fd9\u4e00\u7c7b .o, .a \u53ef\u6267\u884c\u6587\u4ef6 (Executable File) \u8fd9\u7c7b\u6587\u4ef6\u5305\u542b\u4e86\u53ef\u4ee5\u76f4\u63a5\u6267\u884c\u7684\u7a0b\u5e8f\uff0c\u5b83\u7684\u4ee3\u8868\u5c31\u662fELF\u53ef\u6267\u884c\u6587\u4ef6 /bin/bash \u76ee\u6807\u5171\u4eab\u6587\u4ef6 (Shared Object File) \u8fd9\u79cd\u6587\u4ef6\u5305\u542b\u4e86\u4ee3\u7801\u548c\u6570\u636e\uff0c\u901a\u8fc7\u94fe\u63a5\u5668\u53ef\u4ee5\u548c\u5176\u4ed6\u53ef\u91cd\u5b9a\u4f4d\u6587\u4ef6\u4ea7\u751f\u65b0\u7684\u76ee\u6807\u6587\u4ef6\u3002\u6216\u8005\u548c\u53ef\u6267\u884c\u6587\u4ef6\u7ed3\u5408\uff0c\u4f5c\u4e3a\u8fdb\u7a0b\u6620\u50cf\u7684\u4e00\u90e8\u5206\u6765\u8fd0\u884c .so \u6838\u5fc3\u8f6c\u50a8\u6587\u4ef6 (Core Dump File) \u5f53\u8fdb\u7a0b\u610f\u5916\u7ec8\u6b62\u65f6\uff0c\u7cfb\u7edf\u53ef\u4ee5\u5c06\u8be5\u8fdb\u7a0b\u7684\u5730\u5740\u7a7a\u95f4\u7684\u5185\u5bb9\u53ca\u7ec8\u6b62\u65f6\u7684\u4e00\u4e9b\u5176\u4ed6\u4fe1\u606f\u8f6c\u50a8\u5230\u6838\u5fc3\u8f6c\u50a8\u6587\u4ef6 core dump"},{"location":"booknotes/cxydzwxy/compile/#_8","title":"\u76ee\u6807\u6587\u4ef6\u4e2d\u7684\u6bb5","text":"<p>\u76ee\u6807\u6587\u4ef6\u4ee5\u6bb5(Segment/Section)\u7684\u65b9\u5f0f\uff0c\u5c06\u4e0d\u540c\u5c5e\u6027\u7684\u4fe1\u606f\u7ec4\u7ec7\u8d77\u6765\u3002\u4f8b\u5982\uff0c\u6e90\u4ee3\u7801\u7f16\u8bd1\u540e\u7684\u673a\u5668\u6307\u4ee4\u7ecf\u5e38\u653e\u5728<code>.text</code>\u4ee3\u7801\u6bb5(Code Section)\u4e2d\uff0c\u800c\u5168\u5c40\u53d8\u91cf\u548c\u5c40\u90e8\u9759\u6001\u53d8\u91cf\u7ecf\u5e38\u653e\u5728\u6570\u636e\u6bb5<code>.data</code>(Data Section)\u3002</p> <p>\u4ee5\u4e0b\u9762\u7684\u4ee3\u7801\u4e3a\u4f8b\uff0c\u8ba9\u6211\u4eec\u6765\u770b\u770b\u76ee\u6807\u6587\u4ef6\u7684\u5185\u5bb9\u3002</p> <pre><code>int global_init_var = 84;   // .data section\nint global_uninit_var;      // .bss section\n\nvoid func1(int i)           // .text section\n{\n   printf(\"%d\\n\", i);\n}\n\nint main(void)              // .text section\n{\n   static int static_var = 85;      // .data section\n   static int static_var2;          // .bss section\n\n   int a = 1;\n   int b;\n   func1(static_var + static_var2 + a + b);\n\n   return 0; \n}\n</code></pre> <ul> <li><code>.text</code>\u6bb5<ul> <li>\u4ee3\u7801\u6bb5\uff0c\u5b58\u50a8\u6267\u884c\u4ee3\u7801\uff0c\u5982\uff1a<code>main</code>\u51fd\u6570\uff0c<code>func1</code>\u51fd\u6570</li> </ul> </li> <li><code>.data</code>\u6bb5<ul> <li>\u6570\u636e\u6bb5\uff0c\u5b58\u50a8\u4ee5\u521d\u59cb\u5316\u7684\u5168\u5c40/\u5c40\u90e8\u53d8\u91cf\uff0c\u5982\uff1a<code>global_init_var</code>\uff0c<code>static_var</code></li> </ul> </li> <li><code>.bss</code>\u6bb5\uff08Block Started by Symbol\uff09<ul> <li>\u672a\u521d\u59cb\u5316\u7684\u5168\u5c40/\u5c40\u90e8\u53d8\u91cf\u9ed8\u8ba4\u503c\u90fd\u662f0\uff0c\u4e3a\u4e86\u8282\u7701\u7a7a\u95f4\uff0c\u5e76\u6ca1\u6709\u653e\u5165\u6570\u636e\u6bb5\uff0c\u800c\u662f\u5728<code>.bss</code>\u6bb5\u4e2d\u9884\u7559\u4e86\u4f4d\u7f6e\uff0c<code>.bss</code>\u6bb5\u4e0d\u5360\u636e\u4efb\u4f55\u7a7a\u95f4</li> </ul> </li> <li><code>.rodata</code>\u6bb5<ul> <li>\u53ea\u8bfb\u6570\u636e\u6bb5\uff0c\u5b58\u50a8\u53ea\u8bfb\u53d8\u91cf\uff0c\u4f8b\u5982\uff1a<code>%d\\n</code>\u5b57\u7b26\u4e32</li> </ul> </li> </ul> <p>\u901a\u8fc7<code>objdump</code>\u5de5\u5177\u53ef\u4ee5\u67e5\u770b\u76ee\u6807\u6587\u4ef6\u7684\u5185\u5bb9\uff0c<code>objdump -h main.o</code>\u6253\u5370\"main.o\"\u7684\u5404\u6bb5\u7684\u9996\u90e8\u4fe1\u606f\u5982\u4e0b: <pre><code>$ objdump -h main.o\n\nmain.o:     file format elf64-x86-64\n\nSections:\nIdx Name          Size      VMA               LMA               File off  Algn\n  0 .text         00000064  0000000000000000  0000000000000000  00000040  2**0\n                  CONTENTS, ALLOC, LOAD, RELOC, READONLY, CODE\n  1 .data         00000008  0000000000000000  0000000000000000  000000a4  2**2\n                  CONTENTS, ALLOC, LOAD, DATA\n  2 .bss          00000008  0000000000000000  0000000000000000  000000ac  2**2\n                  ALLOC\n  3 .rodata       00000004  0000000000000000  0000000000000000  000000ac  2**0\n                  CONTENTS, ALLOC, LOAD, READONLY, DATA\n  4 .comment      0000002c  0000000000000000  0000000000000000  000000b0  2**0\n                  CONTENTS, READONLY\n  5 .note.GNU-stack 00000000  0000000000000000  0000000000000000  000000dc  2**0\n                  CONTENTS, READONLY\n  6 .note.gnu.property 00000020  0000000000000000  0000000000000000  000000e0  2**3\n                  CONTENTS, ALLOC, LOAD, READONLY, DATA\n  7 .eh_frame     00000058  0000000000000000  0000000000000000  00000100  2**3\n                  CONTENTS, ALLOC, LOAD, RELOC, READONLY, DATA\n</code></pre></p> <p></p> <p>\u6839\u636e<code>objdump</code>\u7ed3\u679c\uff0c\u53ef\u5f97\u5230\u76ee\u6807\u6587\u4ef6\"main.o\"\u7684\u7ed3\u6784(\u5982\u4e0a\u56fe)\u3002\u6bcf\u4e2a\u6bb5\u7684\u7b2c2\u884c\u8868\u793a\u6bb5\u5c5e\u6027\uff0c\u5982\"CONTENTS\"\u8868\u793a\u8be5\u6bb5\u662f\u5426\u5728\u6587\u4ef6\u4e2d\u5b58\u5728\u3002</p>"},{"location":"booknotes/cxydzwxy/compile/#_9","title":"\u4ee3\u7801\u6bb5","text":"<p>\u901a\u8fc7<code>objdump -s -d main.o</code>\u53ef\u5f97\u5230\u5404\u6bb5\u7684\u5185\u5bb9\uff0c\u5e76\u6253\u5370\u53cd\u6c47\u7f16\u5185\u5bb9\u3002\u4f8b\u5982\uff0c\u4e0b\u9762\u5c31\u662f\u5927\u5c0f\u4e3a0x64\u7684<code>.text</code>\u6bb5\u7684\u4e8c\u8fdb\u5236\u7f16\u7801\u3002\u901a\u8fc7\u53cd\u6c47\u7f16\u53ef\u77e5\uff0c\u8fd9\u4e9b\u4e8c\u8fdb\u5236\u7f16\u7801\u5c31\u662f<code>func1</code>\u548c<code>main</code>\u51fd\u6570\u7684\u6307\u4ee4\u3002 <pre><code>Contents of section .text:\n 0000 f30f1efa 554889e5 4883ec10 897dfc8b  ....UH..H....}..\n 0010 45fc89c6 488d0500 00000048 89c7b800  E...H......H....\n 0020 000000e8 00000000 90c9c3f3 0f1efa55  ...............U\n 0030 4889e548 83ec10c7 45f80100 00008b15  H..H....E.......\n 0040 00000000 8b050000 000001c2 8b45f801  .............E..\n 0050 c28b45fc 01d089c7 e8000000 00b80000  ..E.............\n 0060 0000c9c3\n</code></pre></p>"},{"location":"booknotes/cxydzwxy/compile/#_10","title":"\u6570\u636e\u6bb5\u548c\u53ea\u8bfb\u6570\u636e\u6bb5","text":"<pre><code>Contents of section .data:\n 0000 54000000 55000000                    T...U...        \nContents of section .rodata:\n 0000 25640a00 \n</code></pre> <p><code>.data</code>\u6bb5\u4fdd\u5b58\u5df2\u7ecf\u521d\u59cb\u5316\u7684\u5168\u5c40/\u5c40\u90e8\u9759\u6001\u53d8\u91cf\uff0c\u5982\u4f8b\u5b50\u4e2d\u7684\uff1a<code>global_init_var</code>\u548c<code>static_var</code>\u3002\u5b83\u4eec\u7684\u503c\u5206\u522b\u662f84\u548c85\uff0c\u5bf9\u5e94\u4e8e\u4e0a\u9762\u768454000000\u548c55000000\u3002\u5728\u5c0f\u7aef\u6a21\u5f0f\u4e0b\uff0c\u4f4e\u5b57\u8282\u4fdd\u5b58\u5728\u4f4e\u5730\u5740\u4e2d\uff0c\u56e0\u6b640x54\uff0c0x00\uff0c0x00\uff0c0x00\u7684\u5b58\u653e\u987a\u5e8f\u4ee3\u8868\u7684\u662f\u6574\u578b\u503c84\u3002</p> <p><code>.rodata</code>\u6bb5\u4fdd\u5b58\u53ea\u8bfb\u6570\u636e\uff0c\u5982\u4f8b\u5b50\u4e2d\u7684\u5b57\u7b26\u4e32\uff1a<code>%d\\n</code>\uff0c\u4e09\u4e2a\u5b57\u7b26\u7684ASCII\u7801\u5206\u522b\u662f\uff1a0x25\uff0c0x64\uff0c0x0A\uff0c\u5bf9\u5e94\u4e8e\u4e0a\u9762\u768425640a00\u3002</p>"},{"location":"booknotes/cxydzwxy/compile/#_11","title":"\u5176\u4ed6\u6bb5","text":"\u5e38\u7528\u6bb5\u540d \u8bf4\u660e .comment \u5b58\u653e\u7684\u662f\u7f16\u8bd1\u5668\u7248\u672c\u4fe1\u606f\uff0c\u6bd4\u5982\u5b57\u7b26\u4e32\uff1a\"GCC: (Ubuntu 11.1.0-1ubuntu1~20.04) 11.1.0\" .debug \u8c03\u8bd5\u4fe1\u606f\uff0c\u5728\u7f16\u8bd1\u7684\u65f6\u5019\u52a0\u4e0a-g\uff0c\u53ef\u4ee5\u51fa\u73b0\u76f8\u5173\u6bb5 .dynamic \u52a8\u6001\u94fe\u63a5\u4fe1\u606f .hash \u7b26\u53f7\u54c8\u5e0c\u8868 .line \u8c03\u8bd5\u65f6\u7684\u884c\u53f7\u8868 .note \u989d\u5916\u7684\u7f16\u8bd1\u4fe1\u606f\uff0c\u6bd4\u5982\u7a0b\u5e8f\u7684\u516c\u53f8\u540d\u3001\u53d1\u5e03\u7248\u672c\u53f7\u7b49 .strtab String Table\u5b57\u7b26\u4e32\u8868\uff0c\u7528\u4e8e\u5b58\u50a8ELF\u6587\u4ef6\u4e2d\u7528\u5230\u7684\u5404\u79cd\u5b57\u7b26\u4e32 .symtab Symbol Table\u7b26\u53f7\u8868\uff0c\u5305\u62ec\uff1a\u5168\u5c40\u51fd\u6570\u548c\u53d8\u91cf(\u672c\u6a21\u5757\u5b9a\u4e49/\u5f15\u7528\u7684)\uff0c\u5c40\u90e8\u9759\u6001\u51fd\u6570\u548c\u53d8\u91cf .shstrtab Section String Table\u6bb5\u540d\u8868 .plt .got \u52a8\u6001\u94fe\u63a5\u7684\u8df3\u8f6c\u8868\u548c\u5168\u5c40\u5165\u53e3\u8868 .init .fini \u7a0b\u5e8f\u521d\u59cb\u5316\u4e0e\u7ec8\u7ed3\u4ee3\u7801\u6bb5\uff0c\u51fa\u73b0\u5728C++\u4ee3\u7801\u4e2d"},{"location":"booknotes/cxydzwxy/compile/#_12","title":"\u81ea\u5b9a\u4e49\u6bb5","text":"<p>\u5728\u5168\u5c40\u53d8\u91cf\u6216\u51fd\u6570\u4e4b\u524d\u52a0\u4e0a<code>__attribute__((section(\"name\")))</code>\u5c5e\u6027\u5c31\u53ef\u4ee5\u628a\u76f8\u5e94\u7684\u53d8\u91cf\u6216\u51fd\u6570\u653e\u5230\u4ee5\"name\"\u4f5c\u4e3a\u6bb5\u540d\u7684\u6bb5\u4e2d\u3002\u5982\uff1a <pre><code>// \u5c06`global`\u5168\u5c40\u53d8\u91cf\u653e\u5165\"FOO\"\u6bb5\u540d\u4e2d\n__attribute__((section(\"FOO\"))) int global = 42;\n// \u5c06`foo`\u51fd\u6570\u653e\u5165\"BAR\"\u6bb5\u540d\u4e2d\n__attribute__((section(\"BAR\"))) void foo()\n{\n}\n</code></pre></p>"},{"location":"booknotes/cxydzwxy/compile/#elf","title":"ELF\u6587\u4ef6\u7ed3\u6784","text":"<p>\u524d\u9762\u6211\u4eec\u901a\u8fc7<code>objdump</code>\u5de5\u5177\uff0c\u5927\u81f4\u4e86\u89e3\u4e86\u76ee\u6807\u6587\u4ef6\u4e2d\u5e38\u89c1\u7684\u6bb5\u3002\u63a5\u4e0b\u6765\u6211\u4eec\u6765\u8be6\u7ec6\u5730\u770b\u770bELF\u76ee\u6807\u6587\u4ef6\u7684\u7ed3\u6784\u3002ELF\u76ee\u6807\u6587\u4ef6\u4e3b\u8981\u5305\u62ec\uff1a</p> <ul> <li>ELF\u6587\u4ef6\u5934(ELF Header)<ul> <li>\u5728\u6587\u4ef6\u6700\u524d\u90e8\uff0c\u63cf\u8ff0\u6574\u4e2a\u6587\u4ef6\u7684\u57fa\u672c\u5c5e\u6027\uff0c\u6bd4\u5982ELF\u6587\u4ef6\u7248\u672c\u3001\u76ee\u6807\u673a\u5668\u578b\u53f7\u3001\u7a0b\u5e8f\u5165\u53e3\u5730\u5740\u7b49</li> </ul> </li> <li>\u5404\u4e2a\u6bb5\u7684\u5185\u5bb9<ul> <li>ELF\u6587\u4ef6\u7684\u4e3b\u4f53\u5185\u5bb9</li> </ul> </li> <li>\u6bb5\u8868(Section Header)<ul> <li>\u63cf\u8ff0\u4e86ELF\u6587\u4ef6\u5305\u542b\u7684\u6240\u6709\u6bb5\u7684\u4fe1\u606f\uff0c\u6bd4\u5982\u6bcf\u4e2a\u6bb5\u7684\u6bb5\u540d\u3001\u6bb5\u7684\u957f\u5ea6\u3001\u5728\u6587\u4ef6\u4e2d\u7684\u504f\u79fb\u3001\u8bfb\u5199\u6743\u9650\u53ca\u6bb5\u7684\u5176\u4ed6\u5c5e\u6027</li> </ul> </li> </ul> <p><code>readelf -h main.o</code>\u547d\u4ee4\u4f1a\u8bfb\u53d6\"main.o\"\u7684ELF\u6587\u4ef6\u5934\uff0c\u5e76\u6253\u5370\u5982\u4e0b\u4fe1\u606f\uff1a <pre><code>ELF Header:\n  Magic:   7f 45 4c 46 02 01 01 00 00 00 00 00 00 00 00 00 \n  Class:                             ELF64\n  Data:                              2's complement, little endian\n  Version:                           1 (current)\n  OS/ABI:                            UNIX - System V\n  ABI Version:                       0\n  Type:                              REL (Relocatable file)\n  Machine:                           Advanced Micro Devices X86-64\n  Version:                           0x1\n  Entry point address:               0x0\n  Start of program headers:          0 (bytes into file)\n  Start of section headers:          1176 (bytes into file)\n  Flags:                             0x0\n  Size of this header:               64 (bytes)\n  Size of program headers:           0 (bytes)\n  Number of program headers:         0\n  Size of section headers:           64 (bytes)\n  Number of section headers:         14\n  Section header string table index: 13\n</code></pre></p> <p><code>readelf -S main.o</code>\u547d\u4ee4\u4f1a\u8bfb\u53d6\"main.o\"\u7684\u6bb5\u8868\uff0c\u5e76\u6253\u5370\u5982\u4e0b\u4fe1\u606f\uff1a <pre><code>There are 14 section headers, starting at offset 0x498:\n\nSection Headers:\n  [Nr] Name              Type             Address           Offset\n       Size              EntSize          Flags  Link  Info  Align\n  [ 0]                   NULL             0000000000000000  00000000\n       0000000000000000  0000000000000000           0     0     0\n  [ 1] .text             PROGBITS         0000000000000000  00000040\n       0000000000000064  0000000000000000  AX       0     0     1\n  [ 2] .rela.text        RELA             0000000000000000  00000378\n       0000000000000078  0000000000000018   I      11     1     8\n  [ 3] .data             PROGBITS         0000000000000000  000000a4\n       0000000000000008  0000000000000000  WA       0     0     4\n  [ 4] .bss              NOBITS           0000000000000000  000000ac\n       0000000000000008  0000000000000000  WA       0     0     4\n  [ 5] .rodata           PROGBITS         0000000000000000  000000ac\n       0000000000000004  0000000000000000   A       0     0     1\n  [ 6] .comment          PROGBITS         0000000000000000  000000b0\n       000000000000002c  0000000000000001  MS       0     0     1\n  [ 7] .note.GNU-stack   PROGBITS         0000000000000000  000000dc\n       0000000000000000  0000000000000000           0     0     1\n  [ 8] .note.gnu.propert NOTE             0000000000000000  000000e0\n       0000000000000020  0000000000000000   A       0     0     8\n  [ 9] .eh_frame         PROGBITS         0000000000000000  00000100\n       0000000000000058  0000000000000000   A       0     0     8\n  [10] .rela.eh_frame    RELA             0000000000000000  000003f0\n       0000000000000030  0000000000000018   I      11     9     8\n  [11] .symtab           SYMTAB           0000000000000000  00000158\n       00000000000001b0  0000000000000018          12    12     8\n  [12] .strtab           STRTAB           0000000000000000  00000308\n       000000000000006d  0000000000000000           0     0     1\n  [13] .shstrtab         STRTAB           0000000000000000  00000420\n       0000000000000074  0000000000000000           0     0     1\nKey to Flags:\n  W (write), A (alloc), X (execute), M (merge), S (strings), I (info),\n  L (link order), O (extra OS processing required), G (group), T (TLS),\n  C (compressed), x (unknown), o (OS specific), E (exclude),\n  l (large), p (processor specific)\n</code></pre></p> <p>\u7ed3\u5408\u4e0a\u9762\u6253\u5370\u7684\u4fe1\u606f\uff0c\u6211\u4eec\u53ef\u4ee5\u753b\u51fa\"main.o\"\u6587\u4ef6\u7684\u7ed3\u6784\u5982\u4e0b:</p> <p></p>"},{"location":"booknotes/cxydzwxy/compile/#-","title":"\u94fe\u63a5\u7684\u63a5\u53e3--\u7b26\u53f7","text":"<p>\u6bcf\u4e2a\u76ee\u6807\u6587\u4ef6\u90fd\u4f1a\u6709\u4e00\u4e2a\u76f8\u5e94\u7684\u7b26\u53f7\u8868(Symbol Table)\uff0c\u8bb0\u5f55\u4e86\u76ee\u6807\u6587\u4ef6\u4e2d\u6240\u7528\u5230\u7684\u6240\u6709\u7b26\u53f7\u3002\u7b26\u53f7\u9664\u4e86\u662f\u5e38\u89c1\u7684\u51fd\u6570\u548c\u53d8\u91cf\u5916\uff0c\u8fd8\u6709\u53ef\u80fd\u662f\u5176\u4ed6\u7c7b\u578b\u3002\u901a\u8fc7<code>nm</code>\u5de5\u5177\u53ef\u4ee5\u67e5\u770b\u76ee\u6807\u6587\u4ef6\u4e2d\u7684\u7b26\u53f7\u3002</p> <pre><code>$ nm main.o\n0000000000000000 T func1                    # T, in text section\n0000000000000000 D global_init_var          # D, in data section\n                 U _GLOBAL_OFFSET_TABLE_    # U, undefined\n0000000000000000 B global_uninit_var        # B, in BSS data section\n000000000000002b T main\n                 U printf\n0000000000000004 d static_var.1             # d, in data section\n0000000000000004 b static_var2.0            # b, in BSS data section\n</code></pre> <ul> <li>\u5e38\u89c1\u7684\u7b26\u53f7\u7c7b\u578b<ul> <li>\u5185\u90e8\u5168\u5c40\u7b26\u53f7 - \u5b9a\u4e49\u5728\u672c\u76ee\u6807\u6587\u4ef6\u7684\u5168\u5c40\u7b26\u53f7\uff0c\u53ef\u4ee5\u88ab\u5176\u4ed6\u76ee\u6807\u6587\u4ef6\u5f15\u7528</li> <li>\u5916\u90e8\u5168\u5c40\u7b26\u53f7 - \u5728\u672c\u76ee\u6807\u6587\u4ef6\u4e2d\u5f15\u7528\u7684\u5168\u5c40\u7b26\u53f7\uff0c\u5374\u6ca1\u6709\u5b9a\u4e49\u5728\u672c\u76ee\u6807\u6587\u4ef6</li> <li>\u6bb5\u540d - \u7531\u7f16\u8bd1\u5668\u4ea7\u751f\uff0c\u5b83\u7684\u503c\u5c31\u662f\u8be5\u6bb5\u7684\u8d77\u59cb\u5730\u5740</li> <li>\u5c40\u90e8\u7b26\u53f7 - \u53ea\u5728\u7f16\u8bd1\u5355\u5143\u5185\u90e8\u53ef\u89c1</li> <li>\u884c\u53f7\u4fe1\u606f - \u76ee\u6807\u6587\u4ef6\u6307\u4ee4\u4e0e\u6e90\u4ee3\u7801\u884c\u7684\u5bf9\u5e94\u5173\u7cfb</li> </ul> </li> </ul>"},{"location":"booknotes/cxydzwxy/compile/#_13","title":"\u7279\u6b8a\u7b26\u53f7","text":"<p>\u5f53\u7528ld\u4f5c\u4e3a\u94fe\u63a5\u5668\u4ea7\u751f\u53ef\u6267\u884c\u6587\u4ef6\u65f6\uff0c\u5b83\u4f1a\u4e3a\u6211\u4eec\u5b9a\u4e49\u5f88\u591a\u7279\u6b8a\u7684\u7b26\u53f7\uff0c\u4f8b\u5982\uff1a</p> <ul> <li>__executable_start - \u7a0b\u5e8f\u7684\u8d77\u59cb\u5730\u5740</li> <li>etext, _etext, __etext - \u4ee3\u7801\u6bb5\u7ed3\u675f\u5730\u5740</li> <li>edata, _edata - \u6570\u636e\u6bb5\u7ed3\u675f\u5730\u5740</li> <li>end, _end - \u7a0b\u5e8f\u7ed3\u675f\u5730\u5740</li> </ul> <p>\u901a\u8fc7GDB\u8c03\u8bd5\u76f8\u5173\u4ee3\u7801\uff0c\u53ef\u5f97\u5230\u5982\u4e0b\u4fe1\u606f\u3002\u5176\u4e2d\uff0c\u8d77\u59cb\u5730\u5740<code>0x555555554000</code>\u548c\u7ed3\u675f\u5730\u5740<code>0x555555558018</code>\uff0c\u5206\u522b\u6620\u5c04\u5728\u4e86\u76f8\u5e94\u7684\u865a\u62df\u5730\u5740\u7a7a\u95f4\u4e2d\u3002 <pre><code>Mapped address spaces:\n\n        Start Addr           End Addr       Size     Offset objfile\n    0x555555554000     0x555555555000     0x1000        0x0 /home/yuxiangw/GitHub/learning_book/docs/booknotes/cxydzwxy/compile/code/ld_sym/main\n    0x555555555000     0x555555556000     0x1000     0x1000 /home/yuxiangw/GitHub/learning_book/docs/booknotes/cxydzwxy/compile/code/ld_sym/main\n    0x555555556000     0x555555557000     0x1000     0x2000 /home/yuxiangw/GitHub/learning_book/docs/booknotes/cxydzwxy/compile/code/ld_sym/main\n    0x555555557000     0x555555558000     0x1000     0x2000 /home/yuxiangw/GitHub/learning_book/docs/booknotes/cxydzwxy/compile/code/ld_sym/main\n    0x555555558000     0x555555559000     0x1000     0x3000 /home/yuxiangw/GitHub/learning_book/docs/booknotes/cxydzwxy/compile/code/ld_sym/main\n\nExecutable Start 0x555555554000\nText End 0x555555555285 0x555555555285 0x555555555285\nData End 0x555555558010 0x555555558010\nExecutable End 0x555555558018 0x555555558018\n</code></pre></p>"},{"location":"booknotes/cxydzwxy/compile/#c","title":"C++\u7b26\u53f7\u4fee\u9970","text":"<p>\u4e3a\u4e86\u652f\u6301C++\u51fd\u6570\u91cd\u8f7d\uff0c\u547d\u540d\u7a7a\u95f4\u7b49\u590d\u6742\u7684\u7279\u6027\uff0c\u4eba\u4eec\u53d1\u660e\u4e86\u7b26\u53f7\u4fee\u9970(Name Decoration)\u548c\u7b26\u53f7\u6539\u7f16(Name Mangling)\u673a\u5236\u3002</p> \u51fd\u6570\u7b7e\u540d \u4fee\u9970\u540e\u540d\u79f0(\u7b26\u53f7\u540d) int func(int) _Z4funci float func(float) _Z4funcf int C::func(int) _ZN1C4funcEi int C::C2::func(int) _ZN1C2C24funcEi int N::func(int) _ZN1N4funcEi int N::C::func(int) _ZN1N1C4funcEi <p>\u4e0a\u8868\u663e\u793a\u4e86\u4ee3\u7801\u4e2d\uff0c\u4e0d\u540c\u51fd\u6570\u7684\u7b26\u53f7\u540d\u3002\u4ee5<code>_Z</code>\u5f00\u5934\uff0c\u540e\u9762\u7d27\u8ddf<code>N</code>\uff0c\u7136\u540e\u662f\u5404\u540d\u79f0\u7a7a\u95f4\u548c\u7c7b\u7684\u540d\u5b57\uff0c\u6bcf\u4e2a\u540d\u5b57\u524d\u662f\u540d\u5b57\u5b57\u7b26\u4e32\u957f\u5ea6\uff0c\u518d\u4ee5<code>E</code>\u7ed3\u5c3e\u3002\u53c2\u6570\u5217\u8868\u7d27\u8ddf\u5728<code>E</code>\u540e\u9762\u3002<code>c++filt</code>\u5de5\u5177\u53ef\u4ee5\u7528\u6765\u89e3\u6790\u88ab\u4fee\u9970\u8fc7\u7684\u540d\u79f0\u3002</p>"},{"location":"booknotes/cxydzwxy/compile/#extern-c","title":"extern \"C\"","text":"<p>C++\u7528<code>extern \"C\"</code>\u5173\u952e\u5b57\u6765\u58f0\u660e\u6216\u5b9a\u4e49\u4e00\u4e2aC\u7684\u7b26\u53f7\u3002\u4fee\u9970\u540e\uff0cC++\u7684\u540d\u79f0\u4fee\u9970\u673a\u5236\u5c06\u4e0d\u4f1a\u8d77\u4f5c\u7528\u3002\u5e38\u89c1\u7684\u5199\u6cd5\u5982\u4e0b:</p> <pre><code>#ifdef __cplusplus\nextern \"C\" {\n#endif\n\nvoid *memset (void *, int, size_t);\n\n#ifdef __cplusplus\n}\n#endif\n</code></pre>"},{"location":"booknotes/cxydzwxy/compile/#_14","title":"\u5f31\u7b26\u53f7\u4e0e\u5f3a\u7b26\u53f7","text":"<p>\u6211\u4eec\u7ecf\u5e38\u4f1a\u9047\u5230\u7b26\u53f7\u91cd\u5b9a\u4e49\u7684\u9519\u8bef\u3002\u4f8b\u5982\uff0c\u76ee\u6807\u6587\u4ef6A\u548c\u76ee\u6807\u6587\u4ef6B\u90fd\u5b9a\u4e49\u4e86\u4e00\u4e2a\u5168\u5c40\u53d8\u91cfglobal\uff0c\u5219\u94fe\u63a5\u65f6\u4f1a\u62a5\u9519\uff1a <pre><code>b.o: multiple definition of `global`\na.o: first defined here\n</code></pre></p> <p>\u7b26\u53f7\u7684\u5b9a\u4e49\u5206\u4e3a\u5f3a\u7b26\u53f7(Strong Symbol)\u5b9a\u4e49\u548c\u5f31\u7b26\u53f7(Weak Symbol)\u5b9a\u4e49\u3002\u901a\u8fc7GCC\u4fee\u9970\u7b26<code>__attribute__((weak))</code>\u53ef\u4ee5\u5b9a\u4e49\u5f31\u7b26\u53f7\uff0c\u5305\u62ec\u5f31\u5168\u5c40\u53d8\u91cf\u548c\u5f31\u51fd\u6570\u3002</p> <p>\u4f8b\u5982\uff0c\"weak.c\"\u5b9a\u4e49\u4e86\u5f31\u53d8\u91cf<code>bar</code>\u548c\u5f31\u51fd\u6570<code>foo</code>\uff1a <pre><code>int __attribute__((weak)) bar = 3;\n\nvoid __attribute__((weak)) foo(int a, int b)\n{\n   printf(\"weak version foo(%d, %d) with bar %d, sizeof(bar) = %zu\\n\", a, b, bar, sizeof(bar));\n}\n</code></pre> \"strong.c\"\u5b9a\u4e49\u4e86\u5f3a\u53d8\u91cf<code>bar</code>\u548c\u5f3a\u51fd\u6570<code>foo</code>\uff1a <pre><code>#include &lt;stdio.h&gt;\n\nlong bar = 100;\n\nvoid foo(int a, int b)\n{\n   printf(\"strong version foo(%d, %d) with bar %ld, sizeof(bar) = %zu\\n\", a, b, bar, sizeof(bar));\n}\n</code></pre></p> <p>Linux\u94fe\u63a5\u5668\u4f7f\u7528\u5982\u4e0b\u89c4\u5219\u5904\u7406\u591a\u91cd\u5b9a\u4e49\u7684\u7b26\u53f7\uff1a</p> <ul> <li>\u89c4\u52191\uff1a\u4e0d\u5141\u8bb8\u6709\u591a\u4e2a\u540c\u540d\u7684\u5f3a\u7b26\u53f7</li> <li>\u89c4\u52192\uff1a\u5982\u679c\u6709\u4e00\u4e2a\u5f3a\u7b26\u53f7\u548c\u591a\u4e2a\u5f31\u7b26\u53f7\u540c\u540d\uff0c\u90a3\u4e48\u9009\u62e9\u5f3a\u7b26\u53f7</li> <li>\u89c4\u52193\uff1a\u5982\u679c\u6709\u591a\u4e2a\u5f31\u7b26\u53f7\u540c\u540d\uff0c\u90a3\u4e48\u4ece\u8fd9\u4e9b\u5f31\u7b26\u53f7\u4e2d\u4efb\u610f\u9009\u62e9\u4e00\u4e2a</li> </ul> <pre><code># strong.o\u4e2d\u5f3a\u7c7b\u578b\u7684`bar`\u53d8\u91cf\u548c`foo`\u51fd\u6570\n&gt; nm strong.o | egrep 'bar|foo'\n0000000000000000 D bar   # The symbol is in the initialized data section.\n0000000000000000 T foo   # The symbol is in the text (code) section.\n&gt; readelf -s strong.o | egrep 'bar|foo'\n    73: 0000000000000000     8 OBJECT  GLOBAL DEFAULT   22 bar\n    74: 0000000000000000    62 FUNC    GLOBAL DEFAULT   20 foo\n\n# weak.o\u4e2d\u5f31\u7c7b\u578b\u7684`bar`\u53d8\u91cf\u548c`foo`\u51fd\u6570\n&gt; nm weak.o | egrep 'bar|foo'\n0000000000000000 V bar   # The symbol is a weak object.\n0000000000000000 W foo   # The symbol is a weak symbol\n&gt; readelf -s weak.o | egrep 'bar|foo'\n    73: 0000000000000000     4 OBJECT  WEAK   DEFAULT   22 bar\n    74: 0000000000000000    61 FUNC    WEAK   DEFAULT   20 foo\n\n# program1\u53ea\u5305\u542b\u4e86weak.o\n&gt; nm program1 | egrep 'bar|foo'\n0000000000004010 V bar\n0000000000001167 W foo\n&gt; readelf -s program1 | egrep 'bar|foo'\n    57: 0000000000004010     4 OBJECT  WEAK   DEFAULT   25 bar\n    66: 0000000000001167    61 FUNC    WEAK   DEFAULT   16 foo\n\n# program1\u540c\u65f6\u5305\u542b\u4e86weak.o\u548cstrong.o\n&gt; nm program2 | egrep 'bar|foo'\n0000000000004018 D bar\n00000000000011a4 T foo\n&gt; readelf -s program2 | egrep 'bar|foo'\n    58: 0000000000004018     8 OBJECT  GLOBAL DEFAULT   25 bar\n    67: 00000000000011a4    62 FUNC    GLOBAL DEFAULT   16 foo\n</code></pre>"},{"location":"booknotes/cxydzwxy/compile/#common","title":"COMMON\u7b26\u53f7","text":"<p>\u5f53\u7f16\u8bd1\u5668\u5728\u7f16\u8bd1\u67d0\u4e2a\u6a21\u5757\u65f6\uff0c\u9047\u5230\u4e00\u4e2a\u5f31\u5168\u5c40\u7b26\u53f7\uff0c\u6bd4\u5982\u8bf4<code>x</code>\uff0c\u5b83\u5e76\u4e0d\u77e5\u9053\u5176\u4ed6\u6a21\u5757\u662f\u5426\u4e5f\u5b9a\u4e49\u4e86<code>x</code>\u3002\u5982\u679c\u662f\uff0c\u5b83\u65e0\u6cd5\u9884\u6d4b\u94fe\u63a5\u5668\u8be5\u4f7f\u7528<code>x</code>\u591a\u91cd\u5b9a\u4e49\u4e2d\u7684\u54ea\u4e00\u4e2a\u3002\u6240\u4ee5\u7f16\u8bd1\u5668\u628a<code>x</code>\u5206\u914d\u6210<code>COMMON</code>\uff0c\u628a\u51b3\u5b9a\u6743\u7559\u7ed9\u94fe\u63a5\u5668\u3002\u53e6\u4e00\u65b9\u9762\uff0c\u5982\u679c<code>x</code>\u88ab\u660e\u786e\u521d\u59cb\u5316\uff0c\u90a3\u4e48\u5b83\u662f\u4e00\u4e2a\u5f3a\u7b26\u53f7\uff0c\u6240\u4ee5\u7f16\u8bd1\u5668\u53ef\u7528\u5f88\u81ea\u4fe1\u5730\u5c06\u5b83\u5206\u914d\u6210<code>.data</code>(\u521d\u59cb\u5316\u4e3a\u975e\u96f6)\u6216<code>.bss</code>(\u521d\u59cb\u5316\u4e3a\u96f6)\u3002\u7c7b\u4f3c\u5730\uff0c\u5bf9\u4e8e\u9759\u6001\u7b26\u53f7\uff0c\u7f16\u8bd1\u5668\u53ef\u4ee5\u81ea\u4fe1\u5730\u628a\u5b83\u4eec\u5206\u914d\u6210<code>.data</code>\u6216<code>.bss</code>\u3002</p> <p>\u4f8b\u5b50\"common\"\u7f16\u8bd1\u4e86\u4e24\u4e2a\u6a21\u5757<code>main.o</code>\u548c<code>f.o</code>\uff0c\u5176\u4e2d\uff1a</p> <ul> <li><code>f.o</code>\u5b9a\u4e49\u4e86\u5f31\u7b26\u53f7<code>x</code>\uff0c\u5b58\u4e8e<code>COMMON</code>\u6bb5</li> <li><code>main.o</code>\u5b9a\u4e49\u4e86\u5f3a\u7b26\u53f7<code>x</code>\u3001<code>y</code>\u3001<code>z</code>\u548c<code>v</code><ul> <li><code>x</code>\u3001<code>y</code>\u3001<code>z</code>\u88ab\u521d\u59cb\u5316\u4e3a\u975e\u96f6\uff0c\u56e0\u6b64\u5b58\u4e8e<code>.data</code>\u6bb5</li> <li><code>v</code>\u88ab\u521d\u59cb\u5316\u4e3a\u96f6\uff0c\u56e0\u6b64\u5b58\u4e8e<code>.bss</code>\u6bb5</li> </ul> </li> </ul> <pre><code>&gt; readelf -s f.o\n  ...\n  73: 0000000000000008     8 OBJECT  GLOBAL DEFAULT  COM x\n\n&gt; readelf -s main.o\n  ...\n  73: 0000000000000000     4 OBJECT  GLOBAL DEFAULT   22 x\n  74: 0000000000000004     4 OBJECT  GLOBAL DEFAULT   22 y\n  75: 0000000000000008     4 OBJECT  GLOBAL DEFAULT   22 z\n  76: 0000000000000000     4 OBJECT  GLOBAL DEFAULT   23 v\n\n&gt; readelf -S main.o\n  ...\n  [22] .data             PROGBITS         0000000000000000  000001d4\n       000000000000000c  0000000000000000  WA       0     0     4\n  [23] .bss              NOBITS           0000000000000000  000001e0\n       0000000000000004  0000000000000000  WA       0     0     4\n</code></pre> <p><code>f.c</code>\u5b9a\u4e49\u7684<code>x</code>\u662f<code>double</code>\u7c7b\u578b\uff0c\u800c<code>main.c</code>\u5b9a\u4e49\u7684<code>x</code>\u662f<code>int</code>\u7c7b\u578b\uff0c\u8fd9\u5728\u94fe\u63a5\u65f6\u4f1a\u89e6\u53d1\u8b66\u544a\u3002\u5e76\u4e14\u5728\u8fd0\u884c\u65f6\uff0c<code>f</code>\u51fd\u6570\u5bf9<code>x</code>\u7684\u5199\u64cd\u4f5c\uff0c\u4f1a\u5f71\u54cd<code>y</code>\u7684\u503c\uff1a <pre><code>&gt; gcc  main.o f.o -o main\n/usr/bin/ld: warning: alignment 4 of symbol `x' in main.o is smaller than 8 in f.o\n\n&gt; ./main\n[main] &amp;x=0x0x55892d153010, sizeof(x)=4\n[main] &amp;y=0x0x55892d153014, sizeof(y)=4\n[main] &amp;z=0x0x55892d153018, sizeof(z)=4\n[main] &amp;v=0x0x55892d153020, sizeof(v)=4\n[main] before f(), x = 0x1, y = 0x2, z = 0x3\n[f] &amp;x=0x0x55892d153010, sizeof(x)=8\n[f] x = -0.000000\n[main] after f(), x = 0x0, y = 0x80000000, z = 0x3\n</code></pre></p>"},{"location":"booknotes/cxydzwxy/compile/#_15","title":"\u8c03\u8bd5\u4fe1\u606f","text":"<p>\u5982\u679c\u6211\u4eec\u5728GCC\u7f16\u8bd1\u65f6\u52a0\u4e0a<code>-g</code>\u53c2\u6570\uff0c\u5728\u4ea7\u751f\u7684\u76ee\u6807\u6587\u4ef6\u91cc\u5c31\u4f1a\u52a0\u4e0a\u8c03\u8bd5\u4fe1\u606f\uff0c\u4f1a\u591a\u51fa\u5f88\u591a\"debug\"\u76f8\u5173\u7684\u6bb5\u3002\u4f8b\u5982\uff0c\"main.c\"\u7684\u8c03\u5f0f\u4fe1\u606f\u6bb5\u5982\u4e0b\uff1a <pre><code>  [28] .debug_aranges    PROGBITS         0000000000000000  0000303b\n       0000000000000030  0000000000000000           0     0     1\n  [29] .debug_info       PROGBITS         0000000000000000  0000306b\n       00000000000000bc  0000000000000000           0     0     1\n  [30] .debug_abbrev     PROGBITS         0000000000000000  00003127\n       0000000000000088  0000000000000000           0     0     1\n  [31] .debug_line       PROGBITS         0000000000000000  000031af\n       000000000000005f  0000000000000000           0     0     1\n  [32] .debug_str        PROGBITS         0000000000000000  0000320e\n       0000000000000136  0000000000000001  MS       0     0     1\n</code></pre></p> <p><code>strip</code>\u5de5\u5177\u53ef\u4ee5\u5220\u9664\u4e0a\u8ff0\u8c03\u8bd5\u4fe1\u606f\uff0c\u540c\u65f6<code>strip</code>\u8fd8\u4f1a\u5220\u9664<code>.symtab</code>\u6bb5\u548c<code>.strtab</code>\u6bb5\uff0c\u4ee5\u8282\u7701\u7a7a\u95f4\u3002\u56e0\u6b64\uff0c<code>strip</code>\u540e\u7684\u76ee\u6807\u6587\u4ef6\u5c06\u65e0\u6cd5\u4f7f\u7528<code>readelf -s</code>\u67e5\u770b\u7b26\u53f7\u8868\uff0c\u540c\u65f6\u4e5f\u65e0\u6cd5\u4f7f\u7528GDB\u6253\u65ad\u70b9\u3002\u4f46\u662f\uff0c\u53ea\u662f\u6ca1\u6709\u8c03\u8bd5\u4fe1\u606f\u7684\u76ee\u6807\u6587\u4ef6\u662f\u5305\u542b\u7b26\u53f7\u8868\u7684\uff0c\u5e76\u53ef\u4ee5\u901a\u8fc7GDB\u6253\u65ad\u70b9\u3002</p>"},{"location":"booknotes/cxydzwxy/concurrency/","title":"\u5e76\u53d1","text":"<p>\u300a\u7a0b\u5e8f\u5458\u7684\u81ea\u6211\u4fee\u517b--\u94fe\u63a5\u3001\u88c5\u8f7d\u4e0e\u5e93\u300b - \u4fde\u7532\u5b50\uff0c\u77f3\u51e1\uff0c\u6f58\u7231\u6c11\uff0c\u7b2c\u4e00\u7ae0\u7684\u8bfb\u4e66\u7b14\u8bb0\uff0c\u672c\u6587\u4e2d\u7684\u6240\u6709\u4ee3\u7801\u53ef\u5728GitHub\u4ed3\u5e93\u4e2d\u627e\u5230</p>"},{"location":"booknotes/cxydzwxy/concurrency/#_2","title":"\u8fdb\u7a0b\u4e0e\u7ebf\u7a0b","text":"<p>\u7ebf\u7a0b\uff0c\u53c8\u79f0\u4e3a\u8f7b\u91cf\u7ea7\u8fdb\u7a0b(Lightweight Process, LWP)\uff0c\u662f\u7a0b\u5e8f\u6267\u884c\u6d41\u7684\u6700\u5c0f\u5355\u5143\u3002\u5982\u4e0b\u56fe\u6240\u793a\uff0c\u4e00\u4e2a\u7ebf\u7a0b\u6709\u4ee5\u4e0b\u51e0\u4e2a\u90e8\u5206\u7ec4\u6210\uff1a</p> <ul> <li>\u7ebf\u7a0bID</li> <li>\u5f53\u524d\u6307\u4ee4\u6307\u9488PC</li> <li>\u5bc4\u5b58\u5668\u96c6\u5408</li> <li>\u6808</li> </ul> <p>\u4e00\u4e2a\u8fdb\u7a0b\u7531\u4e00\u4e2a\u5230\u591a\u4e2a\u7ebf\u7a0b\u7ec4\u6210\uff0c\u5404\u7ebf\u7a0b\u4e4b\u95f4\u5171\u4eab\u4e00\u4e9b\u8d44\u6e90\uff0c\u5305\u62ec\uff1a</p> <ul> <li>\u7a0b\u5e8f\u7684\u5185\u5b58\u7a7a\u95f4\uff0c\u5982\u4ee3\u7801\u6bb5\u3001\u6570\u636e\u6bb5\u3001\u5806\u7b49</li> <li>\u8fdb\u7a0b\u7ea7\u7684\u8d44\u6e90\uff0c\u5982\u6253\u5f00\u7684\u6587\u4ef6\u63cf\u8ff0\u7b26\uff0c\u4fe1\u53f7\u7b49</li> </ul> <p></p> <p>\u7ebf\u7a0b\u7684\u8bbf\u95ee\u975e\u5e38\u81ea\u7531\uff0c\u5b83\u53ef\u4ee5\u8bbf\u95ee\u5185\u5b58\u91cc\u7684\u6240\u6709\u6570\u636e\uff0c\u9664\u4e86\u5c11\u6570\u79c1\u6709\u7684\u53d8\u91cf\uff0c\u5982\u4e0b\u8868\u6240\u793a\uff1a</p> \u7ebf\u7a0b\u79c1\u6709 \u7ebf\u7a0b\u4e4b\u95f4\u5171\u4eab(\u8fdb\u7a0b\u6240\u6709) 1.\u5c40\u90e8\u53d8\u91cf 2.\u51fd\u6570\u7684\u53c2\u6570 3.TLS\u6570\u636e 1.\u5168\u5c40\u53d8\u91cf 2.\u5806\u4e0a\u7684\u6570\u636e 3.\u51fd\u6570\u91cc\u7684\u9759\u6001\u53d8\u91cf 4.\u7a0b\u5e8f\u4ee3\u7801\uff0c\u4efb\u4f55\u7ebf\u7a0b\u90fd\u6709\u6743\u529b\u8bfb\u53d6\u5e76\u6267\u884c\u4efb\u4f55\u4ee3\u7801 5.\u6253\u5f00\u7684\u6587\u4ef6\uff0cA\u7ebf\u7a0b\u6253\u5f00\u7684\u6587\u4ef6\u53ef\u4ee5\u7531B\u7ebf\u7a0b\u8bfb\u5199 <p>\u4eceLinux\u5185\u6838\u89d2\u5ea6\uff0c\u8fdb\u7a0b\u548c\u7ebf\u7a0b\u7684\u533a\u522b\u4ec5\u4ec5\u662f\u53ef\u8bbf\u95ee\u7684\u8d44\u6e90\u4e0d\u540c\uff0c\u5176\u81ea\u8eab\u7684\u7ed3\u6784\u662f\u7c7b\u4f3c\u7684\uff0c\u90fd\u662f\u4e00\u4e2a\u4efb\u52a1\uff0c\u8be6\u60c5\u53ef\u53c2\u8003\u6587\u6863\u3002\u5728Linux\u4e0b\uff0c\u4ee5\u4e0b\u65b9\u6cd5\u53ef\u4ee5\u521b\u5efa\u4e00\u4e2a\u65b0\u7684\u4efb\u52a1\uff1a</p> \u7cfb\u7edf\u8c03\u7528 \u4f5c\u7528 fork \u590d\u5236\u5f53\u524d\u8fdb\u7a0b\uff0c\u6587\u4ef6\u9501\u548c\u6302\u8d77\u7684\u4fe1\u53f7\u4e0d\u4f1a\u88ab\u590d\u5236 exec \u4f7f\u7528\u65b0\u7684\u53ef\u6267\u884c\u6620\u50cf\u8986\u76d6\u5f53\u524d\u53ef\u6267\u884c\u6620\u50cf clone \u521b\u5efa\u65b0\u4efb\u52a1\u5e76\u4ece\u6307\u5b9a\u4f4d\u7f6e\u5f00\u59cb\u6267\u884c\uff0c\u6839\u636e\u53c2\u6570\u9009\u9879\u7684\u4e0d\u540c\uff0c\u65e2\u53ef\u7528\u4e8e\u521b\u5efa\u8fdb\u7a0b\uff0c\u4e5f\u53ef\u7528\u4e8e\u521b\u5efa\u7ebf\u7a0b"},{"location":"booknotes/cxydzwxy/concurrency/#_3","title":"\u5199\u65f6\u590d\u5236","text":"<p>Linux\u4ea7\u751f\u4e00\u4e2a\u65b0\u4efb\u52a1\u7684\u901f\u5ea6\u662f\u975e\u5e38\u5feb\u7684\uff0c\u56e0\u4e3a\u65b0\u4efb\u52a1\u4e0d\u662f\u590d\u5236\u539f\u4efb\u52a1\u7684\u5185\u5b58\u7a7a\u95f4\uff0c\u800c\u662f\u548c\u539f\u4efb\u52a1\u4e00\u8d77\u5171\u4eab\u4e00\u4e2a\u5199\u65f6\u590d\u5236(Copy on Write, COW)\u7684\u5185\u5b58\u7a7a\u95f4\u3002\u6240\u8c13\u5199\u65f6\u590d\u5236\uff0c\u6307\u7684\u662f\u4e24\u4e2a\u4efb\u52a1\u53ef\u4ee5\u540c\u65f6\u81ea\u7531\u5730\u8bfb\u53d6\u5185\u5b58\uff0c\u4f46\u4efb\u610f\u4e00\u4e2a\u4efb\u52a1\u8bd5\u56fe\u5bf9\u5185\u5b58\u8fdb\u884c\u4fee\u6539\u65f6\uff0c\u5185\u5b58\u5c31\u4f1a\u590d\u5236\u4e00\u4efd\u63d0\u4f9b\u7ed9\u4fee\u6539\u65b9\u5355\u72ec\u4f7f\u7528\uff0c\u4ee5\u514d\u5f71\u54cd\u5230\u5176\u4ed6\u7684\u4efb\u52a1\u4f7f\u7528\u3002</p> <p>\u4f8b\u5982\uff0c\u8fdb\u7a0bA\u521b\u5efa\u4e86\u8fdb\u7a0bB\uff0c\u6700\u521d\u5b83\u4eec\u5171\u4eab\u76f8\u540c\u7684\u5185\u5b58\u9875\u3002\u7531\u4e8e\u521b\u5efa\u524d\u540e\u5185\u5b58\u5e76\u6ca1\u6709\u53d8\u5316\uff0c\u6240\u4ee5\u8fdb\u7a0bB\u7684\u521b\u5efa\u975e\u5e38\u8fc5\u901f\u3002</p> <p></p> <p>\u6b64\u65f6\uff0c\u8fdb\u7a0bA\u9700\u8981\u4fee\u6539\u9875\u9762Z\u4e2d\u7684\u5185\u5bb9\uff0c\u4e00\u4e2a\u65b0\u7684\u9875\u9762Z\u7684\u62f7\u8d1d\u4f1a\u88ab\u521b\u5efa\uff0c\u8fdb\u7a0bA\u5c31\u5355\u72ec\u62e5\u6709\u6b64\u9875\u9762\u3002\u4ece\u800c\uff0c\u8fdb\u7a0bA\u5bf9\u9875\u9762Z\u7684\u4efb\u4f55\u4fee\u6539\u90fd\u4e0d\u4f1a\u5f71\u54cd\u8fdb\u7a0bB\u3002\u8be6\u60c5\u53ef\u53c2\u8003\u6587\u6863\u3002</p> <p></p>"},{"location":"booknotes/cxydzwxy/concurrency/#fork","title":"fork\u8fdb\u7a0b","text":"<p>\u4f8b\u5b50\"fork\"\u5229\u7528\u7cfb\u7edf\u8c03\u7528<code>fork</code>\u521b\u5efa\u4e86\u4e00\u4e2a\u65b0\u8fdb\u7a0b\uff1a <pre><code>pid_t pid = fork();\n</code></pre></p> <p><code>fork</code>\u51fa\u7684\u5b50\u8fdb\u7a0b\u548c\u7236\u8fdb\u7a0b\u5404\u81ea\u62e5\u6709\u4e0d\u540c\u7684PID\uff0c\u5e76\u4e14\u4e0d\u5171\u4eab\u53d8\u91cf\uff0c\u56e0\u6b64\u5b50\u8fdb\u7a0b\u5bf9<code>buf</code>\u7684\u4fee\u6539\u4e0d\u4f1a\u5f71\u54cd\u7236\u8fdb\u7a0b\u7684\u5185\u5bb9\uff1a <pre><code>&gt; ./main \n[PID 57469, TID 57469] Child sees buf = \"hello from parent\"\n[PID 57468, TID 57468] Child exited with status 0, buf = \"hello from parent\"\n</code></pre></p>"},{"location":"booknotes/cxydzwxy/concurrency/#clone","title":"clone\u8fdb\u7a0b","text":"<p>\u4f8b\u5b50\"clone\"\u5229\u7528\u7cfb\u7edf\u8c03\u7528<code>clone</code>\u521b\u5efa\u4e86\u4e00\u4e2a\u65b0\u8fdb\u7a0b\uff1a</p> <pre><code>unsigned long flags = 0;\nif (argc &gt; 1 &amp;&amp; !strcmp(argv[1], \"vm\"))\n{\n    flags |= CLONE_VM;\n}\n\nclone(child_func, stack + STACK_SIZE, flags | SIGCHLD, buf)\n</code></pre> <p>\u7a0b\u5e8f\u9ed8\u8ba4\u8bbe\u7f6e\u4e86<code>SIGCHLD</code>\u9009\u9879\uff0c\u56e0\u6b64\u7236\u8fdb\u7a0b\u53ef\u4ee5\u6536\u5230\u5b50\u8fdb\u7a0b\u7ed3\u675f\u7684\u4fe1\u606f\uff0c\u4ece\u800c\u7b49\u5230\u5b50\u8fdb\u7a0b\u7ed3\u675f\u518d\u9000\u51fa\u3002\u7a0b\u5e8f\u53ef\u4ee5\u9009\u62e9\u662f\u5426\u8bbe\u7f6e<code>CLONE_VM</code>\u9009\u9879\u3002\u5982\u679c\u8bbe\u7f6e\u4e86<code>CLONE_VM</code>\uff0c\u5219\u4e24\u4e2a\u8fdb\u7a0b\u5171\u4eab\u5185\u5b58\u7a7a\u95f4\u3002\u56e0\u6b64\uff0c\u5b50\u8fdb\u7a0b\u5bf9<code>buf</code>\u7684\u4fee\u6539\uff0c\u5728\u7236\u8fdb\u7a0b\u4e2d\u53ef\u89c1\uff0c\u6253\u5370\u7ed3\u679c\u5982\u4e0b\uff1a</p> <pre><code>&gt; ./main \n[PID 55486, TID 55486] Child sees buf = \"hello from parent\"\n[PID 55485, TID 55485] Child exited with status 0, buf = \"hello from parent\"\n\n&gt; ./main vm\n[PID 55517, TID 55517] Child sees buf = \"hello from parent\"\n[PID 55516, TID 55516] Child exited with status 0, buf = \"hello from child\"\n</code></pre>"},{"location":"booknotes/cxydzwxy/concurrency/#clone_1","title":"clone\u7ebf\u7a0b","text":"<p>\u4f8b\u5b50\"clone_thread\"\u521b\u5efa\u4e86\u4e00\u4e2a\u65b0\u7ebf\u7a0b\uff1a</p> <pre><code>clone(&amp;func, (char *)child_stack + STACK_SIZE, CLONE_THREAD | CLONE_SIGHAND | CLONE_FS | CLONE_VM | CLONE_FILES, NULL);\n</code></pre> <p><code>CLONE_THREAD</code>\u9009\u9879\u521b\u5efa\u7684\u65b0\u4efb\u52a1\u548c\u8c03\u7528\u8fdb\u7a0b\u62e5\u6709\u76f8\u540c\u7684PID\uff0c\u56e0\u6b64\u5b83\u66f4\u50cf\u4e00\u4e2a\u7ebf\u7a0b\uff0c\u53ef\u4ee5\u76f4\u63a5\u5728\u65b0\u4efb\u52a1\u4e0a\u6253GDB\u7684\u65ad\u70b9(\u65e0\u987b<code>set follow-fork-mode child</code>)\u3002\u65e0\u8bba\u662f\u67e5\u770b<code>/proc/self/status</code>\u4fe1\u606f\uff0c\u8fd8\u662f\u6253\u5370PID\u548cTID\uff0c\u90fd\u663e\u793a\u65b0\u5efa\u7684\u4efb\u52a1\u66f4\u63a5\u8fd1\u4e00\u4e2a\u7ebf\u7a0b\uff0c\u800c\u4e0d\u662f\u8fdb\u7a0b\uff1a <pre><code>&gt; ./main\nThis process pid: 56244, tid: 56244\nCreating new thread...\nDone! Thread pid: 56245\nLooking into /proc/self/status...\n...\nTgid:   56244\nNgid:   0\nPid:    56244\nPPid:   47895\n...\n[PID 56244, TID 56245] Terminating func...\n[PID 56244, TID 56244] Parent process end\n</code></pre></p>"},{"location":"booknotes/cxydzwxy/concurrency/#nptl","title":"\u7ebf\u7a0b\u5e93NPTL","text":"<p>NPTL(Native POSIX Threads Library)\u7ebf\u7a0b\u5e93\u63d0\u4f9b\u4e86\u7ebf\u7a0b\u76f8\u5173\u7684\u5404\u79cdAPI\uff0c\u65b9\u4fbf\u7528\u6237\u8fdb\u884c\u7ebf\u7a0b\u7684\u521b\u5efa\u3001\u540c\u6b65\u3001\u9500\u6bc1\u7b49\u3002 <pre><code>#include &lt;pthread.h&gt;\n\n// \u521b\u5efa\u7ebf\u7a0b\n//  thread - \u7ebf\u7a0b\u6807\u8bc6\uff0c\u7528\u4e8e\u540e\u7eed\u5bf9\u7ebf\u7a0b\u7684\u64cd\u4f5c\n//  attr - \u7ebf\u7a0b\u5c5e\u6027\uff0cNULL\u8868\u793a\u9ed8\u8ba4\u5c5e\u6027\uff0c\u53ef\u7ed3\u5408pthread_attr_init()\u7b49\u5c5e\u6027\u51fd\u6570\u914d\u7f6e\u81ea\u5b9a\u4e49\u5c5e\u6027\u503c\nint pthread_create(pthread_t* thread, const pthread_attr_t* attr, void*(*stat_routine)(void*), void* arg);\n\n// \u540c\u6b65\u7ebf\u7a0b\n//  retval - \u76ee\u6807\u7ebf\u7a0b\u8fd4\u56de\u7684\u9000\u51fa\u4fe1\u606f\nint pthread_join(pthread_t thread, void** retval);\n\n// \u7ed3\u675f\u7ebf\u7a0b\n//  retval - \u5411\u7ebf\u7a0b\u8c03\u7528\u8005\u4f20\u9012\u7684\u9000\u51fa\u4fe1\u606f\u6307\u9488\nvoid pthread_exit(void* retval);\n</code></pre></p> <p>\u4f8b\u5b50\"nptl_thread\"\u5c55\u793a\u4e86\u5982\u4f55\u901a\u8fc7NPTL\u7ebf\u7a0b\u5e93\u521b\u5efa\u7ebf\u7a0b\uff0c\u5411\u7ebf\u7a0b\u4f20\u9012\u53c2\u6570\uff0c\u5e76\u63a5\u6536\u7ebf\u7a0b\u8fd4\u56de\u7684\u7ed3\u679c\uff1a <pre><code>struct thread_info\n{                       /* Used as argument to thread_start() */\n   pthread_t thread_id; /* ID returned by pthread_create() */\n   int thread_num;      /* Application-defined thread # */\n   int ret;             /* Return value */\n};\n\nvoid *thread_start(void *arg)\n{\n   struct thread_info *tinfo = arg;\n\n   printf(\"[Thread_%d, num_%ld] Thread processing done\\n\", tinfo-&gt;thread_num, tinfo-&gt;thread_id);\n   tinfo-&gt;ret = tinfo-&gt;thread_num;\n   pthread_exit(&amp;tinfo-&gt;ret);\n}\n\nint main(void)\n{\n    ...\n    for (int tnum = 0; tnum &lt; NUM_THREADS; tnum++)\n    {\n        tinfo[tnum].thread_num = tnum + 1;\n        pthread_create(&amp;tinfo[tnum].thread_id, NULL, &amp;thread_start, &amp;tinfo[tnum]);\n    }\n\n    void *res;\n    for (int tnum = 0; tnum &lt; NUM_THREADS; tnum++)\n    {\n        pthread_join(tinfo[tnum].thread_id, &amp;res);\n        printf(\"Joined with thread %d; Return value from thread is [%d]\\n\",\n                tinfo[tnum].thread_num, *(int *)res);\n        // free res if the res is allocated by the thread\n    }\n    ...\n}\n</code></pre> <pre><code>&gt; ./main \n[Thread_2, num_140071691572992] Thread processing done\n[Thread_1, num_140071699965696] Thread processing done\nJoined with thread 1; Return value from thread is [1]\nJoined with thread 2; Return value from thread is [2]\n</code></pre></p>"},{"location":"booknotes/cxydzwxy/concurrency/#_4","title":"\u7ebf\u7a0b\u95f4\u540c\u6b65","text":""},{"location":"booknotes/cxydzwxy/concurrency/#mutex","title":"\u4e92\u65a5\u91cf(Mutex)","text":"<p>\u4e92\u65a5\u91cf\u662f\u6700\u5e38\u89c1\u7684\u7ebf\u7a0b\u540c\u6b65\u673a\u5236\uff0c\u8d44\u6e90\u4ec5\u540c\u65f6\u5141\u8bb8\u4e00\u4e2a\u7ebf\u7a0b\u8bbf\u95ee\uff0c\u5e76\u4e14\u83b7\u53d6\u548c\u91ca\u653e\u4e92\u65a5\u91cf\u7684\u7ebf\u7a0b\u5fc5\u987b\u662f\u540c\u4e00\u4e2a\u7ebf\u7a0b\u3002NPTL\u7ebf\u7a0b\u5e93\u63d0\u4f9b\u4e86\u5982\u4e0b\u5bf9\u4e92\u65a5\u91cf\u64cd\u4f5c\u7684API\uff1a</p> <pre><code>// \u521d\u59cb\u5316\u4e92\u65a5\u91cf\n//  mutex - \u4e00\u4e2a\u53ef\u5168\u5c40\u8bbf\u95ee\u7684`pthread_mutex_t`\u4e92\u65a5\u91cf\n//  mutexattr - \u4e92\u65a5\u91cf\u5c5e\u6027\uff0cNULL\u8868\u793a\u9ed8\u8ba4\u5c5e\u6027\uff0c\u53ef\u7ed3\u5408pthread_mutexattr_init()\u7b49\u5c5e\u6027\u51fd\u6570\u914d\u7f6e\u81ea\u5b9a\u4e49\u5c5e\u6027\n//              \u4f8b\u5982\uff0c\u9ed8\u8ba4\u60c5\u51b5\u4e0b\uff0c\u4e92\u65a5\u91cf\u662f\u4e0d\u80fd\u8de8\u8fdb\u7a0b\u5171\u4eab\u7684\uff0c\u901a\u8fc7pthread_mutexattr_setpshared()\u53ef\u8bbe\u7f6e\u8de8\u8fdb\u7a0b\u5171\u4eab\u4e92\u65a5\u91cf\nint pthread_mutex_init(pthread_mutex_t* mutex, const pthread_mutexattr_t* mutexattr);\n\n// \u9500\u6bc1\u4e92\u65a5\u91cf\nint pthread_mutex_destroy(pthread_mutex_t* mutex);\n\n// \u83b7\u53d6/\u91ca\u653e\u4e92\u65a5\u91cf\nint pthread_mutex_lock(pthread_mutex_t* mutex);\nint pthread_mutex_trylock(pthread_mutex_t* mutex);\nint pthread_mutex_unlock(pthread_mutex_t* mutex);\n</code></pre> <p>\u4f8b\u5b50\"con_th/mutex\"\u5229\u7528\u4e92\u65a5\u91cf\uff0c\u540c\u6b65\u4e86\u4e24\u4e2a\u7ebf\u7a0b\u7684\u6267\u884c\u987a\u5e8f\uff1a <pre><code>pthread_mutex_t lock;\n\nvoid *thread_start(void *arg)\n{\n   pthread_mutex_lock(&amp;lock);\n\n   pthread_t id = pthread_self();\n   printf(\"[Thread %ld] Critical section start...\\n\", id);\n   sleep(1);\n   printf(\"[Thread %ld] Critical section end...\\n\", id);\n\n   pthread_mutex_unlock(&amp;lock);\n\n   return NULL;\n}\n\nint main(void)\n{\n   pthread_mutex_init(&amp;lock, NULL);\n\n   pthread_t t1, t2;\n   pthread_create(&amp;t1, NULL, thread_start, NULL);\n   pthread_create(&amp;t2, NULL, thread_start, NULL);\n\n   pthread_join(t1, NULL);\n   pthread_join(t2, NULL);\n\n   pthread_mutex_destroy(&amp;lock);\n\n   return 0;\n}\n</code></pre> <pre><code>&gt; ./main \n[Thread 139968003606272] Critical section start...\n[Thread 139968003606272] Critical section end...\n[Thread 139968011998976] Critical section start...\n[Thread 139968011998976] Critical section end...\n</code></pre></p>"},{"location":"booknotes/cxydzwxy/concurrency/#semaphore","title":"\u4fe1\u53f7\u91cf(Semaphore)","text":"<p>\u76f8\u8f83\u4e8e\u4e92\u65a5\u91cf\uff0c\u4fe1\u53f7\u91cf\u66f4\u52a0\u7075\u6d3b\u3002\u4fe1\u53f7\u91cf\u5206\u4e3a\uff1a</p> <ul> <li>\u4e8c\u5143\u4fe1\u53f7\u91cf (Binary Semaphore)<ul> <li>\u521d\u59cb\u503c\u4e3a1\u7684\u4fe1\u53f7\u91cf\uff0c\u53ea\u6709\u5360\u7528/\u975e\u5360\u7528\u4e24\u79cd\u72b6\u6001\uff0c\u4e0d\u540c\u4e8e\u4e92\u65a5\u91cf\u7684\u5730\u65b9\u662f\uff1a\u4fe1\u53f7\u91cf\u7684\u83b7\u53d6\u548c\u91ca\u653e\u4e0d\u8981\u6c42\u662f\u540c\u4e00\u4e2a\u7ebf\u7a0b</li> </ul> </li> <li>\u591a\u6e90\u4fe1\u53f7\u91cf (Counting Semaphore)<ul> <li>\u4e00\u4e2a\u521d\u59cb\u503c\u4e3aN\u7684\u4fe1\u53f7\u91cf\uff0c\u5141\u8bb8N\u4e2a\u7ebf\u7a0b\u5e76\u53d1\u8bbf\u95ee</li> </ul> </li> </ul> <p>POSIX\u6807\u51c6\u89c4\u5b9a\u4e86\u64cd\u4f5c\u4fe1\u53f7\u91cf\u7684\u4e00\u7ec4\u63a5\u53e3\uff0c\u5982\u4e0b\uff1a <pre><code>#include &lt;semaphore.h&gt;\n// \u521d\u59cb\u5316\u4e00\u4e2a\u672a\u547d\u540d\u7684\u4fe1\u53f7\u91cf\n//  sem - \u4e00\u4e2a\u53ef\u4ee5\u5168\u5c40\u8bbf\u95ee\u7684\u4fe1\u53f7\u91cf\n//  pshared - 0\u8868\u793a\u4e2a\u4fe1\u53f7\u91cf\u662f\u5f53\u524d\u8fdb\u7a0b\u7684\u5c40\u90e8\u4fe1\u53f7\u91cf\uff0c\u5426\u5219\u8be5\u4fe1\u53f7\u91cf\u5c31\u53ef\u4ee5\u5728\u591a\u4e2a\u8fdb\u7a0b\u4e4b\u95f4\u5171\u4eab\n//            \u548c\u4e92\u65a5\u91cf\u4e00\u6837\uff0c\u4fe1\u53f7\u91cf\u4e5f\u53ef\u4ee5\u914d\u7f6e\u4e3a\u8fdb\u7a0b\u95f4\u5171\u4eab\uff0c\u540c\u65f6\u8981\u6c42\u4fe1\u53f7\u91cf\u8981\u4f4d\u4e8e\u5171\u4eab\u5185\u5b58\u4e2d\n//  value - \u4fe1\u53f7\u91cf\u7684\u521d\u59cb\u503c\uff0c1\u8868\u793a\u4e8c\u5143\u4fe1\u53f7\u91cf\nint sem_init(sem_t* sem, int pshared, unsigned int value);\n\n// \u9500\u6bc1\u4fe1\u53f7\u91cf\nint sem_destroy(sem_t* sem);\n\n// \u4ee5\u539f\u5b50\u64cd\u4f5c\u7684\u65b9\u5f0f\u5c06\u4fe1\u53f7\u91cf\u7684\u503c\u51cf1\uff0c\u5982\u679c\u4fe1\u53f7\u91cf\u7684\u503c\u4e3a0\uff0c\u5219\u963b\u585e\nint sem_wait(sem_t* sem);\n// \u4e0d\u963b\u585e\uff0c\u5982\u679c\u4fe1\u53f7\u91cf\u4e3a0\uff0c\u8fd4\u56de-1\uff0c\u5e76\u8bbe\u7f6eerrno\u4e3aEAGAIN\nint sem_trywait(sem_t* sem);\n\n// \u4ee5\u539f\u5b50\u64cd\u4f5c\u7684\u65b9\u5f0f\u5c06\u4fe1\u53f7\u91cf\u7684\u503c\u52a01\nint sem_post(sem_t* sem);\n</code></pre></p> <p>\u4f8b\u5b50\"con_th/binary_sem\"\u5229\u7528\u4e8c\u5143\u4fe1\u53f7\u91cf\uff0c\u540c\u6b65\u4e86\u4e24\u4e2a\u7ebf\u7a0b\u7684\u6267\u884c\u987a\u5e8f\uff0c\u6548\u679c\u548c\u201c\u4e92\u65a5\u91cf\u201d\u7684\u4f8b\u5b50\u76f8\u540c\uff1a</p> <p><pre><code>sem_t sem;\n\nvoid *thread_start(void *arg)\n{\n   sem_wait(&amp;sem);\n\n   pthread_t id = pthread_self();\n   printf(\"[Thread %ld] Critical section start...\\n\", id);\n   sleep(1);\n   printf(\"[Thread %ld] Critical section end...\\n\", id);\n\n   sem_post(&amp;sem);\n   return NULL;\n}\n\nint main(void)\n{\n   sem_init(&amp;sem, 0, 1);\n   pthread_t t1, t2;\n   pthread_create(&amp;t1, NULL, thread_start, NULL);\n   pthread_create(&amp;t2, NULL, thread_start, NULL);\n   pthread_join(t1, NULL);\n   pthread_join(t2, NULL);\n   sem_destroy(&amp;sem);\n\n   return 0;\n}\n</code></pre> <pre><code>&gt; ./main \n[Thread 140373155976960] Critical section start...\n[Thread 140373155976960] Critical section end...\n[Thread 140373164369664] Critical section start...\n[Thread 140373164369664] Critical section end...\n</code></pre></p> <p>\u4f8b\u5b50\"con_th/counting_sem\"\u5229\u7528\u591a\u5143\u4fe1\u53f7\u91cf\uff0c\u5b9e\u73b0\u4e86\u201c\u751f\u4ea7\u8005/\u6d88\u8d39\u8005\u201d\u6a21\u578b\uff0c\u8be6\u60c5\u53ef\u53c2\u8003\u4ee3\u7801\uff0c\u8fd9\u91cc\u4e0d\u505a\u7ec6\u8ff0\u3002</p>"},{"location":"booknotes/cxydzwxy/concurrency/#condition-variable","title":"\u6761\u4ef6\u53d8\u91cf(Condition Variable)","text":"<p>\u6761\u4ef6\u53d8\u91cf\u7c7b\u4f3c\u4e8e\u4e00\u4e2a\u6805\u680f\u3002\u5bf9\u4e8e\u6761\u4ef6\u53d8\u91cf\uff0c\u7ebf\u7a0b\u53ef\u4ee5\u6709\u4e24\u79cd\u64cd\u4f5c\uff1a</p> <ul> <li>\u7b49\u5f85\u6761\u4ef6\u53d8\u91cf<ul> <li>\u4e00\u4e2a\u6761\u4ef6\u53d8\u91cf\u53ef\u4ee5\u88ab\u591a\u4e2a\u7ebf\u7a0b\u7b49\u5f85</li> </ul> </li> <li>\u5524\u9192\u6761\u4ef6\u53d8\u91cf<ul> <li>\u67d0\u4e2a\u6216\u6240\u6709\u7b49\u5f85\u6b64\u6761\u4ef6\u53d8\u91cf\u7684\u7ebf\u7a0b\u90fd\u4f1a\u88ab\u5524\u9192\u5e76\u7ee7\u7eed\u8fd0\u884c</li> </ul> </li> </ul> <p>\u6761\u4ef6\u53d8\u91cf\u9700\u8981\u4e92\u65a5\u91cf\u7684\u914d\u5408\u4f7f\u7528\uff0c\u4fdd\u8bc1\u7b49\u5f85/\u5524\u9192\u6761\u4ef6\u53d8\u91cf\u7684\u52a8\u4f5c\u662f\u4e92\u65a5\u7684\u3002\u56e0\u6b64\uff0c\u6761\u4ef6\u53d8\u91cf\u53ef\u4ee5\u8ba9\u8bb8\u591a\u7ebf\u7a0b\u4e00\u8d77\u7b49\u5f85\u67d0\u4e2a\u4e8b\u4ef6\u7684\u53d1\u751f\uff0c\u5f53\u4e8b\u4ef6\u53d1\u751f\u65f6\uff0c\u6240\u6709\u7684\u7ebf\u7a0b\u53ef\u4ee5\u4e00\u8d77\u6062\u590d\u6267\u884c\u3002</p> <pre><code>#include &lt;pthread.h&gt;\n\n// \u521d\u59cb\u6761\u4ef6\u53d8\u91cf\n//  cond - \u4e00\u4e2a\u53ef\u4ee5\u5168\u5c40\u8bbf\u95ee\u7684`pthread_cond_t`\u6761\u4ef6\u53d8\u91cf\n//  cond_attr - \u6761\u4ef6\u53d8\u91cf\u5c5e\u6027\uff0cNULL\u8868\u793a\u9ed8\u8ba4\u5c5e\u6027\uff0c\u548c\u4e92\u65a5\u91cf\u7c7b\u4f3c\uff0c\u4e5f\u6709\u76f8\u5173\u51fd\u6570\u914d\u7f6e\u5c5e\u6027\nint pthread_cond_init(pthread_cond_t* cond, const pthread_condattr_t* cond_attr);\n\n// \u9500\u6bc1\u6761\u4ef6\u53d8\u91cf\nint pthread_cond_destroy(pthread_cond_t* cond);\n\n// \u4ee5\u5e7f\u64ad\u7684\u65b9\u5f0f\u5524\u9192\u6240\u6709\u7684\u7b49\u5f85\u76ee\u6807\u6761\u4ef6\u53d8\u91cf\u7684\u7ebf\u7a0b\nint pthread_cond_broadcast(pthread_cond_t* cond);\n// \u7528\u4e8e\u5524\u9192\u4e00\u4e2a\u7b49\u5f85\u76ee\u6807\u6761\u4ef6\u53d8\u91cf\u7684\u7ebf\u7a0b\uff0c\u81f3\u4e8e\u54ea\u4e2a\u7ebf\u7a0b\u88ab\u5524\u9192\uff0c\u53d6\u51b3\u4e8e\u7ebf\u7a0b\u7684\u4f18\u5148\u7ea7\u548c\u8c03\u5ea6\u7b56\u7565\nint pthread_cond_signal(pthread_cond_t* cond);\n\n// \u7528\u4e8e\u7b49\u5f85\u76ee\u6807\u6761\u4ef6\u53d8\u91cf\uff0cmutex\u7528\u4e8e\u4fdd\u62a4\u6761\u4ef6\u53d8\u91cf\u7684\u4e92\u65a5\u91cf\n// \u5728\u8c03\u7528\u524d\uff0c\u5fc5\u987b\u786e\u4fdd\u4e92\u65a5\u91cfmutex\u5df2\u7ecf\u52a0\u9501\u3002\u5728\u51fd\u6570\u6267\u884c\u65f6\uff0c\u9650\u628a\u8c03\u7528\u7ebf\u7a0b\u7ffb\u5165\u6761\u4ef6\u53d8\u91cf\u7684\u7b49\u5f85\u961f\u5217\u4e2d\uff0c\u7136\u540e\u5c06\u4e92\u65a5\u91cf\u89e3\u9501\n// \u5f53\u51fd\u6570\u6210\u529f\u8fd4\u56de\u65f6\uff0c\u4e92\u65a5\u91cf\u5c06\u518d\u6b21\u88ab\u4e0a\u9501\nint pthread_cond_wait(pthread_cond_t* cond, pthread_mutex_t* mutex);\n</code></pre> <p>\u4f8b\u5b50\"con_th/cond\"\u5229\u7528\u6761\u4ef6\u53d8\u91cf\uff0c\u7528\u4e00\u4e2a\u7ebf\u7a0b\u89e6\u53d1\u53e6\u5916\u4e24\u4e2a\u7ebf\u7a0b\u5f00\u59cb\u8fd0\u884c\uff1a</p> <p><pre><code>pthread_mutex_t lock;\npthread_cond_t cond;\nint started = 0;\n\nvoid *thread_run(void *arg)\n{\n   pthread_mutex_lock(&amp;lock);\n\n   pthread_t id = pthread_self();\n   printf(\"[Thread %ld] Entered..\\n\", id);\n\n   if (!started)\n      pthread_cond_wait(&amp;cond, &amp;lock);\n\n   printf(\"[Thread %ld] Just Exiting...\\n\", id);\n\n   pthread_mutex_unlock(&amp;lock);\n\n   return NULL;\n}\n\nvoid *thread_trigger(void *arg)\n{\n   pthread_mutex_lock(&amp;lock);\n\n   pthread_t id = pthread_self();\n   printf(\"[Thread %ld] Start Trigger...\\n\", id);\n   started = 1;\n   pthread_cond_broadcast(&amp;cond);\n   printf(\"[Thread %ld] End Trigger...\\n\", id);\n\n   pthread_mutex_unlock(&amp;lock);\n   return NULL;\n}\n\nint main(void)\n{\n   pthread_mutex_init(&amp;lock, NULL);\n   pthread_cond_init(&amp;cond, NULL);\n\n   pthread_t run_t0, run_t1;\n   pthread_t trigger_t;\n   pthread_create(&amp;run_t0, NULL, thread_run, NULL);\n   pthread_create(&amp;run_t1, NULL, thread_run, NULL);\n   sleep(1);\n   pthread_create(&amp;trigger_t, NULL, thread_trigger, NULL);\n\n   pthread_join(trigger_t, NULL);\n   pthread_join(run_t0, NULL);\n   pthread_join(run_t1, NULL);\n\n   pthread_cond_destroy(&amp;cond);\n   pthread_mutex_destroy(&amp;lock);\n\n   return 0;\n}\n</code></pre> <pre><code>&gt; ./main \n[Thread 139980016891648] Entered..\n[Thread 139980025284352] Entered..\n[Thread 139980008498944] Start Trigger...\n[Thread 139980008498944] End Trigger...\n[Thread 139980016891648] Just Exiting...\n[Thread 139980025284352] Just Exiting...\n</code></pre></p>"},{"location":"booknotes/cxydzwxy/concurrency/#_5","title":"\u8fdb\u7a0b\u95f4\u540c\u6b65","text":"<p>\u524d\u9762\u7ebf\u7a0b\u540c\u6b65\u7684\u65b9\u6cd5(\u4e92\u65a5\u91cf\uff0c\u4fe1\u53f7\u91cf\uff0c\u6761\u4ef6\u53d8\u91cf)\uff0c\u90fd\u662fPOSIX\u6807\u51c6\u63d0\u4f9b\u7684API\u3002\u5b83\u4eec\u4e0d\u4ec5\u53ef\u4ee5\u4f5c\u7528\u4e8e\u7ebf\u7a0b\uff0c\u4e5f\u53ef\u4ee5\u5e94\u7528\u4e8e\u8fdb\u7a0b\uff0c\u53ef\u53c2\u8003\u4e0b\u9762\u7684\u4f8b\u5b50\uff1a</p> <ul> <li>\u4e92\u65a5\u91cf\"mutex_posix\"</li> <li>\u4fe1\u53f7\u91cf\"sem_posix\"</li> <li>\u6761\u4ef6\u53d8\u91cf\"cond_posix\"</li> </ul>"},{"location":"booknotes/cxydzwxy/concurrency/#mutex_1","title":"\u4e92\u65a5\u91cf(Mutex)","text":"<p>POSIX\u63d0\u4f9b\u4e86\u5bf9\u8fdb\u7a0b\u4e92\u65a5\u91cf\u7684\u64cd\u4f5c\uff0c\u8981\u4f7f\u4e92\u65a5\u91cf\u5728\u8fdb\u7a0b\u4e2d\u751f\u6548\uff0c\u9700\u8981\u6ee1\u8db3\u4e24\u70b9\uff1a</p> <ul> <li>\u4e92\u65a5\u91cf\u9700\u8981\u5b9a\u4e49\u5728\u8fdb\u7a0b\u95f4\u80fd\u5171\u4eab\u7684\u4f4d\u7f6e\uff0c\u5982\u5171\u4eab\u5185\u5b58\u4e2d</li> <li>\u4e92\u65a5\u91cf\u5c5e\u6027\u9700\u8981\u914d\u7f6e\u4e3a<code>PTHREAD_PROCESS_SHARED</code>(1)\uff0c\u9ed8\u8ba4\u662f<code>PTHREAD_PROCESS_PRIVATE</code>(0)</li> </ul> <p>\u4f8b\u5b50\"con_proc/mutex_posix\"\u5229\u7528\u4e92\u65a5\u91cf\uff0c\u540c\u6b65\u4e86\u4e24\u4e2a\u8fdb\u7a0b\u7684\u6267\u884c\u987a\u5e8f\uff1a <pre><code>// 1.\u5728\u533f\u540d\u5171\u4eab\u5185\u5b58\u4e0a\u521b\u5efa\u4e92\u65a5\u91cf\nshm_lock = (pthread_mutex_t*) mmap(NULL, sizeof(pthread_mutex_t), PROT_READ | PROT_WRITE, MAP_SHARED | MAP_ANON, -1, 0);\n\n// 2.\u914d\u7f6e\u4e92\u65a5\u91cf\u7684\u5c5e\u6027\u4e3aPTHREAD_PROCESS_SHARED\npthread_mutexattr_t attr;\npthread_mutexattr_init(&amp;attr);\npthread_mutexattr_setpshared(&amp;attr, PTHREAD_PROCESS_SHARED);\npthread_mutex_init(shm_lock, &amp;attr);\npthread_mutexattr_destroy(&amp;attr);\n</code></pre></p>"},{"location":"booknotes/cxydzwxy/concurrency/#semaphore_1","title":"\u4fe1\u53f7\u91cf(Semaphore)","text":"<p>POSIX\u63d0\u4f9b\u4e86\u5bf9\u8fdb\u7a0b\u4fe1\u53f7\u91cf\u7684\u64cd\u4f5c\uff0c\u8981\u4f7f\u4fe1\u53f7\u91cf\u5728\u8fdb\u7a0b\u4e2d\u751f\u6548\uff0c\u548c\u4e92\u65a5\u91cf\u4e00\u6837\uff0c\u4e5f\u9700\u8981\u6ee1\u8db3\u4e24\u70b9\uff1a</p> <ul> <li>\u4fe1\u53f7\u91cf\u9700\u8981\u5b9a\u4e49\u5728\u8fdb\u7a0b\u95f4\u80fd\u5171\u4eab\u7684\u4f4d\u7f6e\uff0c\u5982\u5171\u4eab\u5185\u5b58\u4e2d</li> <li>\u521d\u59cb\u5316\u4fe1\u53f7\u91cf\u65f6\uff0c<code>pshared</code>\u9009\u9879\u8bbe\u7f6e\u4e3a1</li> </ul> <p>\u4f8b\u5b50\"con_proc/sem_posix\"\u5229\u7528\u4e8c\u5143\u4fe1\u53f7\u91cf\uff0c\u540c\u6b65\u4e86\u4e24\u4e2a\u8fdb\u7a0b\u7684\u6267\u884c\u987a\u5e8f\uff0c\u6548\u679c\u548c\u201c\u4e92\u65a5\u91cf\u201d\u7684\u4f8b\u5b50\u76f8\u540c\uff1a <pre><code>// 1.\u5728\u533f\u540d\u5171\u4eab\u5185\u5b58\u4e0a\u521b\u5efa\u4fe1\u53f7\u91cf\nsem = (sem_t *)mmap(NULL, sizeof(sem_t), PROT_READ | PROT_WRITE, MAP_ANONYMOUS | MAP_SHARED, -1, 0);\n\n// 2.\u521d\u59cb\u5316\u4fe1\u53f7\u91cf\uff0c\u7b2c\u4e8c\u4e2a\u53c2\u6570\u662f`pshared`\uff0c\u5c06\u5176\u8bbe\u7f6e\u4e3a1\u5c31\u53ef\u5728\u8fdb\u7a0b\u95f4\u5171\u4eab\u4fe1\u53f7\u91cf\nsem_init(sem, 1, 1);\n</code></pre></p>"},{"location":"booknotes/cxydzwxy/concurrency/#condition-variable_1","title":"\u6761\u4ef6\u53d8\u91cf(Condition Variable)","text":"<p>POSIX\u63d0\u4f9b\u4e86\u5bf9\u8fdb\u7a0b\u6761\u4ef6\u53d8\u91cf\u7684\u64cd\u4f5c\uff0c\u8981\u4f7f\u6761\u4ef6\u53d8\u91cf\u5728\u8fdb\u7a0b\u4e2d\u751f\u6548\uff0c\u548c\u4e92\u65a5\u91cf\u4e00\u6837\uff0c\u4e5f\u9700\u8981\u6ee1\u8db3\u4e24\u70b9\uff1a</p> <ul> <li>\u6761\u4ef6\u53d8\u91cf\u9700\u8981\u5b9a\u4e49\u5728\u8fdb\u7a0b\u95f4\u80fd\u5171\u4eab\u7684\u4f4d\u7f6e\uff0c\u5982\u5171\u4eab\u5185\u5b58\u4e2d</li> <li>\u6761\u4ef6\u53d8\u91cf\u5c5e\u6027\u9700\u8981\u914d\u7f6e\u4e3a<code>PTHREAD_PROCESS_SHARED</code>(1)\uff0c\u9ed8\u8ba4\u662f<code>PTHREAD_PROCESS_PRIVATE</code>(0)</li> </ul> <p>\u4f8b\u5b50\"con_proc/cond_posix\"\u5229\u7528\u4e86\u6761\u4ef6\u53d8\u91cf\uff0c\u7528\u4e3b\u8fdb\u7a0b\u89e6\u53d1\u53e6\u5916\u4e24\u4e2a\u5b50\u8fdb\u7a0b\u5f00\u59cb\u8fd0\u884c\uff1a <pre><code>// 1.\u5728\u533f\u540d\u5171\u4eab\u5185\u5b58\u4e0a\u521b\u5efa\u6761\u4ef6\u53d8\u91cf\nshm_cond = (pthread_cond_t*) mmap(NULL, sizeof(pthread_cond_t), PROT_READ | PROT_WRITE, MAP_SHARED | MAP_ANON, -1, 0);\n\n// 2.\u914d\u7f6e\u6761\u4ef6\u53d8\u91cf\u7684\u5c5e\u6027\u4e3aPTHREAD_PROCESS_SHARED\npthread_condattr_t cond_attr;\npthread_condattr_init(&amp;cond_attr);\npthread_condattr_setpshared(&amp;cond_attr, PTHREAD_PROCESS_SHARED);\npthread_cond_init(shm_cond, &amp;cond_attr);\npthread_condattr_destroy(&amp;cond_attr);\n</code></pre></p>"},{"location":"booknotes/cxydzwxy/concurrency/#_6","title":"\u4e09\u79cd\u8fdb\u7a0b\u95f4\u901a\u4fe1\u65b9\u6cd5","text":"<p>Linux\u7cfb\u7edf\u7684\u8fdb\u7a0b\u95f4\u901a\u4fe1\u6709\u4e24\u79cd\u7c7b\u578b\uff0c\u5206\u522b\u662f\"POSIX\"\u548c\"System V\"\uff0c\u4e14\u63d0\u4f9b\u4e86\u4e09\u79cd\u5e38\u89c1\u7684\u8fdb\u7a0b\u901a\u4fe1\u7684\u65b9\u6cd5\uff1a</p> <ul> <li>\u4fe1\u53f7\u91cf</li> <li>\u5171\u4eab\u5185\u5b58</li> <li>\u6d88\u606f\u961f\u5217</li> </ul> <p>\u4e0b\u8868\u5c55\u793a\u4e86\"POSIX\"\u548c\"System V\"\u7684\u533a\u522b\uff0c\u8be6\u60c5\u53c2\u8003\u6587\u6863\uff1a</p> IPC System V POSIX \u63cf\u8ff0 1983\u5e74\u7531AT&amp;T\u521b\u5efa\uff0c\u5305\u62ec\u4e09\u79cdIPC\u673a\u5236\uff1a\u5171\u4eab\u5185\u5b58\uff0c\u6d88\u606f\u961f\u5217\u548c\u4fe1\u53f7\u91cf \u7531IEEE\u5236\u5b9a\uff0c\u4e5f\u5305\u62ec\u4e86\u8fd9\u4e09\u79cdIPC\u673a\u5236 \u4fe1\u53f7\u91cf <code>semget()</code>, <code>semop()</code>, <code>semctl()</code> \u5177\u540d: <code>sem_open()</code>, <code>sem_close()</code>, <code>sem_post()</code>, <code>sem_wait()</code> \u533f\u540d: <code>sem_init()</code>, <code>sem_destroy()</code>, <code>sem_post()</code>, <code>sem_wait()</code> \u5171\u4eab\u5185\u5b58 <code>shmget()</code>, <code>shmat()</code>, <code>shmdt()</code>, <code>shmctl()</code> <code>shm_open()</code>, <code>mmap()</code>, <code>shm_unlink()</code> \u6d88\u606f\u961f\u5217 <code>msgget()</code>, <code>msgsnd()</code>, <code>msgrcv()</code>, <code>msgctl()</code> <code>mq_open()</code>, <code>mq_send()</code>, <code>mq_receive()</code>, <code>mq_unlink()</code> \u4e92\u65a5\u91cf \u65e0 <code>pthread_mutex_lock()</code>, <code>pthread_mutex_unlock()</code> \u6761\u4ef6\u53d8\u91cf \u65e0 <code>pthread_cond_wait()</code>, <code>pthread_cond_broadcast()</code>\uff0c <code>pthread_cond_signal()</code>"},{"location":"booknotes/cxydzwxy/concurrency/#semaphore_2","title":"\u4fe1\u53f7\u91cf(Semaphore)","text":""},{"location":"booknotes/cxydzwxy/concurrency/#posix","title":"POSIX","text":"<p>\"POSIX\"\u63d0\u4f9b\u4e86\u4e24\u7ec4API\u64cd\u4f5c\u4fe1\u53f7\u91cf\uff1a</p> <ul> <li>\u533f\u540d\u4fe1\u53f7\u91cf\uff0c\u53c2\u8003\u524d\u9762\u7684\u4f8b\u5b50\"con_proc/sem_posix\"</li> <li>\u5177\u540d\u4fe1\u53f7\u91cf\uff0cAPI\u5982\u4e0b\uff1a</li> </ul> <pre><code>#include &lt;semaphore.h&gt;\n\n// \u521b\u5efa/\u6253\u5f00\u4fe1\u53f7\u91cf\"name\"\n//  name - \u4fe1\u53f7\u91cf\u540d\u79f0\uff0c\u4fe1\u53f7\u91cf\u4f1a\u521b\u5efa\u4e3a\uff1a/dev/shm/sem.&lt;name&gt;\n//  oflag, mode - \u548c\u521b\u5efa\u6587\u4ef6\u65f6\u7684\u9009\u9879\u76f8\u540c\n//  value - \u4fe1\u53f7\u91cf\u7684\u521d\u59cb\u503c\nsem_t *sem_open(const char *name, int oflag, mode_t mode, unsigned int value);\n// \u5173\u95ed\u4fe1\u53f7\u91cf\uff0c\u8fdb\u7a0b\u5c06\u91ca\u653e\u4fe1\u53f7\u91cf\nint sem_close(sem_t *sem);\n\n// \u91ca\u653e\u4fe1\u53f7\u91cf\nint sem_post(sem_t *sem);\n// \u83b7\u53d6\u4fe1\u53f7\u91cf\nint sem_wait(sem_t *sem);\n\n// \u83b7\u53d6\u4fe1\u53f7\u91cf\u7684\u503c\nint sem_getvalue(sem_t *restrict sem, int *restrict sval);\n\n// \u5220\u9664\u4fe1\u53f7\u91cf\n//  name - \u4fe1\u53f7\u91cf\u540d\u79f0\uff0c/dev/shm\u6587\u4ef6\u5939\u4e2d\u5bf9\u5e94\u7684\u6587\u4ef6\u88ab\u5220\u9664\nint sem_unlink(const char *name);\n</code></pre> <p>\u4f8b\u5b50\"con_proc/sem_named_posix\"\u5229\u7528\u5177\u540d\u4fe1\u53f7\u91cf\uff0c\u540c\u6b65\u4e86\u4e24\u4e2a\u8fdb\u7a0b\u7684\u6267\u884c\u987a\u5e8f\uff0c\u6548\u679c\u548c\u524d\u9762\u7684\u4f8b\u5b50\u76f8\u540c\u3002\u5982\u679c\u6ca1\u6709\u8c03\u7528<code>sem_unlink()</code>\u5220\u9664\u5171\u4eab\u7684\u5177\u540d\u4fe1\u53f7\u91cf\uff0c\u5728<code>/dev/shm</code>\u76ee\u5f55\u4e0b\uff0c\u4f1a\u7559\u5b58\u4e00\u4e2a<code>sem.</code>\u5f00\u5934\u7684\u6587\u4ef6\uff1a <pre><code>#define FILE_PATH \"/sem_test\"\n\nvoid child_process()\n{\n   sem_t *sem = sem_open(FILE_PATH, O_RDWR);\n   sem_wait(sem);\n\n   printf(\"[Child PID %d] Critical section start...\\n\", getpid());\n   sleep(1);\n   printf(\"[Child PID %d] Critical section end...\\n\", getpid());\n\n   sem_post(sem);\n   sem_close(sem);\n}\n\nvoid parent_process()\n{\n   sem_t *sem = sem_open(FILE_PATH, O_RDWR);\n   sem_wait(sem);\n\n   printf(\"[Parent PID %d] Critical section start...\\n\", getpid());\n   sleep(1);\n   printf(\"[Parent PID %d] Critical section end...\\n\", getpid());\n\n   sem_post(sem);\n   sem_close(sem);\n}\n\nint main()\n{\n   // create /dev/shm/sem.sem_test\n   sem_t *sem = sem_open(FILE_PATH, O_RDWR | O_CREAT, 0644, 1);\n   assert(sem != SEM_FAILED);\n\n   int val = 0;\n   sem_getvalue(sem, &amp;val);\n   printf(\"sem value = %d\\n\", val);\n\n   sem_close(sem);\n\n   pid_t pid = fork();\n   if (pid == 0)\n   {\n      child_process();\n      return 0;\n   }\n\n   assert(pid &gt; 0);\n   parent_process();\n   wait(NULL);\n\n   // remove /dev/shm/sem.sem_test\n   // sem_unlink(FILE_PATH);\n   return 0;\n}\n</code></pre> <pre><code>&gt; ./main\nsem value = 1\n[Parent PID 131519] Critical section start...\n[Parent PID 131519] Critical section end...\n[Child PID 131520] Critical section start...\n[Child PID 131520] Critical section end...\n\n&gt; ls -l /dev/shm\n-rw-r--r-- 1 yuxiangw yuxiangw  32 5\u6708  10 17:20 sem.sem_test\n</code></pre></p>"},{"location":"booknotes/cxydzwxy/concurrency/#system-v","title":"System V","text":"<p>\"System V\"\u63d0\u4f9b\u4e86\u4e00\u7ec4API\uff0c\u7528\u4e8e\u64cd\u4f5c\u591a\u4e2a\u4fe1\u53f7\u91cf(\u4fe1\u53f7\u91cf\u96c6)\uff1a <pre><code>#include &lt;sys/sem.h&gt;\n\n// \u521b\u5efa/\u83b7\u53d6\u4e00\u4e2a\u4fe1\u53f7\u91cf\u96c6\n//  key - \u5168\u5c40\u552f\u4e00\u7684\u6807\u8bc6\uff0c\u53ef\u901a\u8fc7`ftok()`\u7cfb\u7edf\u8c03\u7528\u751f\u6210\n//  num_sems - \u6307\u5b9a\u4fe1\u53f7\u91cf\u96c6\u4e2d\uff0c\u4fe1\u53f7\u7684\u6570\u76ee\n//  sem_flags - \u9664\u4e86\u5e38\u89c4\u7684\u6743\u9650\u8bbe\u7f6e\u5916\uff0c\u8fd8\u53ef\u4ee5\u8bbe\u7f6eIPC_CREAT\uff0c\u8868\u793a\u521b\u5efa\u65b0\u7684\u4fe1\u53f7\u96c6\n//  \u8fd4\u56de\u4fe1\u53f7\u91cf\u96c6\u7684\u6807\u8bc6\u7b26\nint semget(key_t key, int num_sems, int sem_flags);\n\n// \u83b7\u53d6/\u91ca\u653e\u4fe1\u53f7\u91cf\n//  sem_id - semget()\u8fd4\u56de\u7684\u6807\u8bc6\n//  sem_ops - \u5bf9\u4fe1\u53f7\u96c6\u7684\u64cd\u4f5c\n//  num_sem_ops - sem_ops\u4e2d\u5143\u7d20\u7684\u4e2a\u6570\nint semop(int sem_id, struct sembuf* sem_ops, size_t num_sem_ops);\nstruct sembuf\n{\n    unsigned short int sem_num; // \u4fe1\u53f7\u91cf\u96c6\u4e2d\u7684\u4fe1\u53f7\u91cf\u7684\u7f16\u53f7\uff0c0\u8868\u793a\u4fe1\u53f7\u91cf\u96c6\u4e2d\u7684\u7b2c\u4e00\u4e2a\u4fe1\u53f7\u91cf\n    short int sem_op;           // \u6539\u53d8\u4fe1\u53f7\u91cf\u7684\u503c\uff0c\u5927\u4e8e\u96f6\u8868\u793a\u91ca\u653esem_op\u4e2a\u4fe1\u53f7\u91cf\uff0c\u53cd\u4e4b\u8981\u83b7\u53d6\u4fe1\u53f7\u91cf\n    short int sem_flg;          // IPC_NOWAIT - \u65e0\u8bba\u64cd\u4f5c\u662f\u5426\u6210\u529f\uff0c\u7acb\u5373\u8fd4\u56de\n                                // SEM_UNDO - \u5f53\u8fdb\u7a0b\u9000\u51fa\u65f6\u53d6\u6d88\u6b63\u5728\u8fdb\u7a0b\u7684semop\u64cd\u4f5c\n};\n\n// \u7528\u547d\u4ee4\u63a7\u5236\u4fe1\u53f7\u91cf\u96c6\n//  IPC_RMID\u547d\u4ee4 - \u79fb\u9664\u4fe1\u53f7\u91cf\u96c6\nint semctl(int sem_id, int sem_num, int command, ...);\n// \u547d\u4ee4\u53c2\u6570\nunion semun\n{\n    int val;                // \u7528\u4e8eSETVAL\u547d\u4ee4\n    struct semid_ds* buf;   // \u7528\u4e8eIPC_STAT\u548cIPC_SET\u547d\u4ee4\n    unsigned short* array;  // \u7528\u4e8eGETALL\u548cSETALL\u547d\u4ee4\n    struct seminfo* __buf;  // \u7528\u4e8eIPC_INFO\u547d\u4ee4\n};\n\n// \u4fe1\u53f7\u91cf\u521b\u5efa\u7684\u5185\u6838\u7ed3\u6784\nstruct semid_ds\n{\n   struct ipc_perm sem_perm; // \u4fe1\u53f7\u91cf\u7684\u64cd\u4f5c\u6743\u9650\n   unsigned long int sem_nsems; // \u8be5\u4fe1\u53f7\u91cf\u96c6\u4e2d\u7684\u4fe1\u53f7\u91cf\u6570\u76ee\n   time_t sem_otime; // \u6700\u540e\u4e00\u6b21\u8c03\u7528semop\u7684\u65f6\u95f4\n   time_t sem_ctime; // \u6700\u540e\u4e00\u6b21\u8c03\u7528semctl\u7684\u65f6\u95f4\n};\n</code></pre></p> <p>\u4f8b\u5b50\"con_proc/sem_systemv\"\u5229\u7528\"System V\"\u7684\u4fe1\u53f7\u91cf\u96c6\u64cd\u4f5c\uff0c\u540c\u6b65\u4e86\u4e24\u4e2a\u8fdb\u7a0b\u7684\u6267\u884c\u987a\u5e8f\uff0c\u6548\u679c\u548c\u4e0a\u9762POSIX\u7684\u4f8b\u5b50\u76f8\u540c\u3002\u53ef\u901a\u8fc7<code>ipcs -s</code>\u67e5\u770b\u7cfb\u7edf\u7531\"System V\"\u521b\u5efa\u7684\u4fe1\u53f7\u91cf\u96c6\uff0c\u4e5f\u53ef\u4ee5\u901a\u8fc7\u6253\u5370<code>/proc/sysvipc/sem</code>\u67e5\u770b\u4fe1\u53f7\u91cf\u96c6\uff1a <pre><code>#define PATHNAME \".\" // the file must refer to an existing, accessible file\n#define PROJ_ID 'a'\n\n// semun is not defined in \"sys/sem.h\"\nunion semun\n{\n   int val;              /* used for SETVAL only */\n   struct semid_ds *buf; /* used for IPC_STAT and IPC_SET */\n   ushort *array;        /* used for GETALL and SETALL */\n   struct seminfo* __buf;\n};\n\n// op\u4e3a-1\u65f6\u6267\u884cP\u64cd\u4f5c\uff0cop\u4e3a1\u65f6\u6267\u884cV\u64cd\u4f5c\nvoid pv(int sem_id, int op)\n{\n   struct sembuf sem_b;\n   sem_b.sem_num = 0;\n   sem_b.sem_op = op;\n   sem_b.sem_flg = SEM_UNDO;\n   semop(sem_id, &amp;sem_b, 1);\n}\n\nvoid child_process()\n{\n   key_t key = ftok(PATHNAME, PROJ_ID);\n   int semid = semget(key, 1, 0666);\n   assert(semid != -1);\n\n   pv(semid, -1);\n\n   printf(\"[Child PID %d] Critical section start...\\n\", getpid());\n   sleep(1);\n   printf(\"[Child PID %d] Critical section end...\\n\", getpid());\n\n   pv(semid, 1);\n}\n\nvoid parent_process()\n{\n   key_t key = ftok(PATHNAME, PROJ_ID);\n   int semid = semget(key, 1, 0666);\n   assert(semid != -1);\n\n   pv(semid, -1);\n\n   printf(\"[Parent PID %d] Critical section start...\\n\", getpid());\n   sleep(1);\n   printf(\"[Parent PID %d] Critical section end...\\n\", getpid());\n\n   pv(semid, 1);\n}\n\nint main()\n{\n   // \u521b\u5efa/\u6253\u5f00\u4fe1\u53f7\u91cf\u96c6(PATHNAME, PROJ_ID)\n   key_t key = ftok(PATHNAME, PROJ_ID);\n   assert(key != -1);\n   int semid = semget(key, 1, 0666 | IPC_CREAT);\n   assert(semid != -1);\n\n   printf(\"sem key (0x%x), sem id (%d) is created\\n\", key, semid);\n\n   // \u8bbe\u7f6e\u4fe1\u53f7\u91cf\u7684\u503c\u4e3a1\n   union semun arg;\n   arg.val = 1;\n   semctl(semid, 0, SETVAL, arg);\n\n   pid_t pid = fork();\n   if (pid == 0)\n   {\n      child_process();\n      return 0;\n   }\n   parent_process();\n   wait(NULL);\n\n   // \u5220\u9664\u4fe1\u53f7\u91cf\u96c6\n   // semctl(semid, 0, IPC_RMID, arg);\n\n   return 0;\n}\n</code></pre> <pre><code>&gt; ./main\nsem key (0x61050964), sem id (6) is created\n[Parent PID 137766] Critical section start...\n[Parent PID 137766] Critical section end...\n[Child PID 137767] Critical section start...\n[Child PID 137767] Critical section end...\n\n&gt; ipcs -s\n------ Semaphore Arrays --------\nkey        semid      owner      perms      nsems     \n0x61050964 6          yuxiangw   666        1\n\n&gt; ipcs -s -i 6\nSemaphore Array semid=6\nuid=1000         gid=1000        cuid=1000       cgid=1000\nmode=0666, access_perms=0666\nnsems = 1\notime = Tue May 10 12:16:39 2022  \nctime = Tue May 10 12:16:37 2022  \nsemnum     value      ncount     zcount     pid       \n0          1          0          0          138697  \n\n&gt; cat /proc/sysvipc/sem \n       key      semid perms      nsems   uid   gid  cuid  cgid      otime      ctime\n1627720036          6   666          1  1000  1000  1000  1000 1652156199 1652156197\n</code></pre></p>"},{"location":"booknotes/cxydzwxy/concurrency/#shared-memory","title":"\u5171\u4eab\u5185\u5b58(Shared memory)","text":""},{"location":"booknotes/cxydzwxy/concurrency/#posix_1","title":"POSIX","text":"<p>\"POSIX\"\u63d0\u4f9b\u4e86<code>shm_open()</code>\u548c<code>shm_unlink()</code>\uff0c\u7528\u4e8e\u521b\u5efa/\u5220\u9664\u5171\u4eab\u5185\u5b58\u3002\u518d\u7ed3\u5408<code>mmap()</code>\uff0c\u5c06\u5171\u4eab\u5185\u5b58\u6620\u5c04\u5230\u7528\u6237\u7a7a\u95f4\uff0c\u5c31\u53ef\u4ee5\u5b9e\u73b0\u5728\u4e0d\u540c\u8fdb\u7a0b\u95f4\u5171\u4eab\u5185\u5b58\u4e86\u3002</p> <pre><code>#include &lt;sys/mman.h&gt;\n\n// \u521b\u5efa/\u6253\u5f00\u5171\u4eab\u5185\u5b58\"name\"\n//  name - \u5171\u4eab\u5185\u5b58\u540d\u79f0\uff0c\u4f1a\u521b\u5efa\uff1a/dev/shm/&lt;name&gt;\n//  oflag, mode - \u548c\u521b\u5efa\u6587\u4ef6\u65f6\u7684\u9009\u9879\u76f8\u540c\n//  \u8fd4\u56de\u6587\u4ef6\u63cf\u8ff0\u7b26\nint shm_open(const char *name, int oflag, mode_t mode);\n\n// \u5220\u9664\u5171\u4eab\u5185\u5b58\nint shm_unlink(const char *name);\n\n// \u5229\u7528ftruncate\u4fee\u6539\u5171\u4eab\u5185\u5b58\u7684\u5927\u5c0f\nint ftruncate(int fd, off_t length);\n\n// \u5229\u7528mmap\u8bbf\u95ee\u5171\u4eab\u5185\u5b58\nvoid *mmap(void *addr, size_t length, int prot, int flags, int fd, off_t offset);\nint munmap(void *addr, size_t length);\n</code></pre> <p>\u4f8b\u5b50\"con_proc/shm_posix\"\u5229\u7528\"POSIX\"\u7684\u5171\u4eab\u5185\u5b58\u64cd\u4f5c\uff0c\u5728\u5b50\u8fdb\u7a0b\u4e2d\u6210\u529f\u8bfb\u53d6\u4e86\u7236\u8fdb\u7a0b\u5411\u5171\u4eab\u5185\u5b58\u4e2d\u5199\u5165\u7684\"Hello World\"\uff1a</p> <p><pre><code>#define FILE_PATH \"/my_shm_test\"\n#define FILE_SIZE 512\nconst char buf[] = \"Hello World\";\n\nvoid read_data()\n{\n   int fd = shm_open(FILE_PATH, O_RDONLY, S_IRUSR | S_IWUSR);\n\n   struct stat st;\n   fstat(fd, &amp;st);\n   const size_t shm_size = st.st_size;\n   printf(\"The size of shard memory is %zu bytes\\n\", shm_size);\n\n   void *addr = mmap(NULL, shm_size, PROT_READ, MAP_SHARED, fd, 0);\n   char data[shm_size];\n   memcpy(data, addr, shm_size);\n   printf(\"Read from shared memory: \\\"%s\\\"\\n\", data);\n   munmap(addr, FILE_SIZE);\n\n   // shm_unlink(FILE_PATH);\n}\n\nint main(int argc, char *argv[])\n{\n   int fd = shm_open(FILE_PATH, O_RDWR | O_CREAT, S_IRUSR | S_IWUSR);\n   ftruncate(fd, FILE_SIZE);\n\n   void *addr = mmap(NULL, FILE_SIZE, PROT_WRITE, MAP_SHARED, fd, 0);\n   memcpy(addr, buf, sizeof(buf));\n   munmap(addr, FILE_SIZE);\n\n   pid_t pid = fork();\n   if (pid == 0)\n   {\n      read_data();\n      return 0;\n   }\n\n   wait(NULL);\n\n   // shm_unlink(FILE_PATH);\n   return 0;\n}\n</code></pre> <pre><code>&gt; ./main \nThe size of shard memory is 512 bytes\nRead from shared memory: \"Hello World\"\n\n# \u5171\u4eab\u5185\u5b58\u7684\u5927\u5c0f\u4e3a512\u5b57\u8282\n&gt; ll /dev/shm/my_shm_test \n-rw------- 1 yuxiangw yuxiangw 512 5\u6708  10 12:51 /dev/shm/my_shm_test\n\n# \u5171\u4eab\u5185\u5b58\u7684\u5185\u5bb9\u4e3a\"Hello World\"\n&gt; cat /dev/shm/my_shm_test\nHello World\n</code></pre></p>"},{"location":"booknotes/cxydzwxy/concurrency/#system-v_1","title":"System V","text":"<p>\"System V\"\u4e5f\u63d0\u4f9b\u4e86\u4e00\u7ec4API\uff0c\u7528\u4e8e\u64cd\u4f5c\u5171\u4eab\u5185\u5b58\uff1a <pre><code>#include &lt;sys/shm.h&gt;\n\n// \u521b\u5efa/\u83b7\u53d6\u4e00\u4e2a\u5171\u4eab\u5185\u5b58\n//  key - \u5168\u5c40\u552f\u4e00\u7684\u6807\u8bc6\uff0c\u53ef\u901a\u8fc7`ftok()`\u7cfb\u7edf\u8c03\u7528\u751f\u6210\n//  size - \u5171\u4eab\u5185\u5b58\u5927\u5c0f\uff0c\u5982\u679c\u5171\u4eab\u5185\u5b58\u5df2\u7ecf\u5b58\u5728\uff0c\u8fd9\u4e2a\u53c2\u6570\u65e0\u6548\n//  shmflg - \u9664\u4e86\u5e38\u89c4\u7684\u6743\u9650\u8bbe\u7f6e\u5916\uff0c\u8fd8\u53ef\u4ee5\u8bbe\u7f6eIPC_CREAT\uff0c\u8868\u793a\u521b\u5efa\u65b0\u7684\u5171\u4eab\u5185\u5b58\n//  \u8fd4\u56de\u5171\u4eab\u5185\u5b58\u7684\u6807\u8bc6\u7b26\nint shmget(key_t key, size_t size, int shmflg);\n\n// \u6620\u5c04\u5171\u4eab\u5185\u5b58\u5230\u7528\u6237\u7a7a\u95f4\n//  shmid - shmget()\u8fd4\u56de\u7684\u6807\u8bc6\n//  shmaddr - \u5982\u679c\u4e3aNULL\uff0c\u7531\u64cd\u4f5c\u7cfb\u7edf\u9009\u62e9\u88ab\u5173\u8054\u7684\u5730\u5740\n//  shmflg - \u53ef\u914d\u7f6e\u662f\u5426\u53ea\u8bfb\u7b49\n//  \u8fd4\u56de\u88ab\u5173\u8054\u5230\u7684\u5730\u5740\nvoid *shmat(int shmid, const void *shmaddr, int shmflg);\n\n// \u5c06\u5171\u4eab\u5185\u5b58\u4ece\u8fdb\u7a0b\u5730\u5740\u7a7a\u95f4\u5206\u79bb\nint shmdt(const void* shm_addr);\n\n// \u7528\u547d\u4ee4\u63a7\u5236\u4fe1\u53f7\u91cf\u96c6\n//  IPC_RMID\u547d\u4ee4 - \u79fb\u9664\u5171\u4eab\u5185\u5b58\n//  IPC_STAT\u547d\u4ee4 - \u83b7\u53d6\u5171\u4eab\u5185\u5b58\u4fe1\u606f`shmid_ds`\uff0c\u5982\u5185\u5b58\u5927\u5c0f\nint shmctl(int shm_id, int command, struct shmid_ds* buf);\n\n// \u5171\u4eab\u5185\u5b58\u521b\u5efa\u7684\u5185\u6838\u6570\u636e\u7ed3\u6784\nstruct shmid_ds\n{\n   struct ipc_perm shm_perm;   // \u64cd\u4f5c\u6743\u9650\n   size_t shm_segsz;           // \u5171\u4eab\u5185\u5b58\u5927\u5c0f\n   __time_t shm_atime;         // \u6700\u540e\u4e00\u6b21\u8c03\u7528shmat\u7684\u65f6\u95f4\n   __time_t shm_dtime;         // \u6700\u540e\u4e00\u6b21\u8c03\u7528shmdt\u7684\u65f6\u95f4\n   __time_t shm_ctime;         // \u6700\u540e\u4e00\u6b21\u8c03\u7528shmctl\u7684\u65f6\u95f4\n   __pid_t shm_cpid;           // \u521b\u5efa\u8005PID\n   __pid_t shm_lpid;           // \u6700\u540e\u4e00\u6b21\u6267\u884cshmat\u6216shmdt\u64cd\u4f5c\u7684\u8fdb\u7a0b\u7684PID\n   shmatt_t shm_nattach;       // \u76ee\u524d\u5173\u8054\u5230\u6b64\u5171\u4eab\u5185\u5b58\u7684\u8fdb\u7a0b\u6570\u91cf\n};\n</code></pre></p> <p>\u4f8b\u5b50\"con_proc/shm_systemv\"\u5229\u7528\"System V\"\u7684\u5171\u4eab\u5185\u5b58\u64cd\u4f5c\uff0c\u5728\u5b50\u8fdb\u7a0b\u4e2d\u6210\u529f\u8bfb\u53d6\u4e86\u7236\u8fdb\u7a0b\u5411\u5171\u4eab\u5185\u5b58\u4e2d\u5199\u5165\u7684\"Hello World\"\uff0c\u540c\u6837\u4e5f\u53ef\u4ee5\u7528\u7528<code>ipcs -m</code>\u547d\u4ee4\u67e5\u770b\u7cfb\u7edf\u7531\"System V\"\u521b\u5efa\u7684\u5171\u4eab\u5185\u5b58\uff0c\u4e5f\u53ef\u4ee5\u901a\u8fc7\u6253\u5370<code>/proc/sysvipc/shm</code>\u67e5\u5171\u4eab\u5185\u5b58\uff1a</p> <p><pre><code>#define PATHNAME \".\"\n#define PROJ_ID 'a'\n\n#define SHMSZ 27\nconst char buf[] = \"Hello World\";\n\nvoid read_data()\n{\n   key_t key = ftok(PATHNAME, PROJ_ID);\n   int shmid = shmget(key, 0, 0444);\n\n   struct shmid_ds buf;\n   int res = shmctl(shmid, IPC_STAT, &amp;buf);\n   const size_t shm_size = buf.shm_segsz;\n   printf(\"The size of shard memory is %zu bytes\\n\", shm_size);\n\n   void *addr = shmat(shmid, NULL, 0);\n   char data[shm_size];\n   memcpy(data, addr, shm_size);\n   printf(\"Read from shared memory: \\\"%s\\\"\\n\", data);\n   shmdt(addr);\n}\n\nint main(void)\n{\n   key_t key = ftok(PATHNAME, PROJ_ID);\n   assert(key != -1);\n   int shmid = shmget(key, SHMSZ, 0666 | IPC_CREAT);\n   assert(shmid != -1);\n   printf(\"shm key (0x%x), shm id (%d) is created\\n\", key, shmid);\n\n   void *addr = shmat(shmid, NULL, 0);\n   memcpy(addr, buf, sizeof(buf));\n\n   pid_t pid = fork();\n   if (pid == 0)\n   {\n      read_data();\n      return 0;\n   }\n\n   assert(pid &gt; 0);\n   wait(NULL);\n\n   int rc = shmdt(addr);\n   // shmctl(shmid, IPC_RMID, NULL);\n\n   return 0;\n}\n</code></pre> <pre><code>&gt; ./main \nshm key (0x61050984), shm id (18) is created\nThe size of shard memory is 27 bytes\nRead from shared memory: \"Hello World\"\n\n&gt; ipcs -m -i 18\nShared memory Segment shmid=18\nuid=1000        gid=1000        cuid=1000       cgid=1000\nmode=0666       access_perms=0666\nbytes=27        lpid=147243     cpid=144649     nattch=0\natt_time=Tue May 10 13:40:48 2022  \ndet_time=Tue May 10 13:40:48 2022  \nchange_time=Tue May 10 13:17:19 2022 \n</code></pre></p>"},{"location":"booknotes/cxydzwxy/concurrency/#message-queues","title":"\u6d88\u606f\u961f\u5217(Message Queues)","text":""},{"location":"booknotes/cxydzwxy/concurrency/#posix_2","title":"POSIX","text":"<p>\"POSIX\"\u63d0\u4f9b\u4e86\u4e00\u7ec4\u64cd\u4f5c\u6d88\u606f\u961f\u5217\u7684API\uff1a <pre><code>#include &lt;mqueue.h&gt;\n\n// \u521b\u5efa/\u6253\u5f00\u6d88\u606f\u961f\u5217\n//  name - \u6d88\u606f\u961f\u5217\u540d\u79f0\uff0c\u4f1a\u5728\u7cfb\u7edf\u4e2d\u521b\u5efa\uff1a/dev/mqueue/&lt;name&gt;\n//  oflag, mode - \u548c\u521b\u5efa\u6587\u4ef6\u65f6\u7684\u9009\u9879\u76f8\u540c\n//  attr - \u6d88\u606f\u961f\u5217\u5c5e\u6027\uff0c\u5305\u62ec\u6700\u5927\u6d88\u606f\u6570\uff0c\u6700\u5927\u6d88\u606f\u957f\u5ea6\u7b49\u3002\u5982\u679c\u662fNULL\uff0c\u4f7f\u7528\u9ed8\u8ba4\u5c5e\u6027\n//  \u8fd4\u56de\u6d88\u606f\u961f\u5217\u6807\u8bc6\nmqd_t mq_open(const char *name, int oflag, mode_t mode, struct mq_attr *attr);\n\n// \u83b7\u53d6\u6d88\u606f\u961f\u5217\u5c5e\u6027\nint mq_getattr(mqd_t mqdes, struct mq_attr *attr);\n// \u6d88\u606f\u961f\u5217\u5c5e\u6027\u5185\u5bb9\nstruct mq_attr {\n   long mq_flags;       /* Flags: 0 or O_NONBLOCK */\n   long mq_maxmsg;      /* Max. # of messages on queue */\n   long mq_msgsize;     /* Max. message size (bytes) */\n   long mq_curmsgs;     /* # of messages currently in queue */\n};\n\n// \u53d1\u9001\u6d88\u606f\u81f3\u6d88\u606f\u961f\u5217\n//  mqdes - mq_open()\u8fd4\u56de\u7684\u6807\u8bc6\n//  msg_ptr, msg_len - \u53d1\u9001\u7aef\u7f13\u5b58\u6307\u9488\u548c\u5927\u5c0f\uff0cmsg_len\u957f\u5ea6\u4e0d\u80fd\u5927\u4e8e\u6d88\u606f\u961f\u5217\u5c5e\u6027\u4e2d\u7684\u6700\u5927\u6d88\u606f\u957f\u5ea6`mq_msgsize`\n//  msg_prio - \u53d1\u9001\u4f18\u5148\u7ea7\nint mq_send(mqd_t mqdes, const char *msg_ptr, size_t msg_len, unsigned int msg_prio);\n\n// \u4ece\u6d88\u606f\u961f\u5217\u63a5\u6536\u6d88\u606f\n//  mqdes - mq_open()\u8fd4\u56de\u7684\u6807\u8bc6\n//  msg_ptr, msg_len - \u63a5\u6536\u7aef\u7f13\u5b58\u6307\u9488\u548c\u5927\u5c0f\uff0cmsg_len\u957f\u5ea6\u4e0d\u80fd\u5c0f\u4e8e\u6d88\u606f\u961f\u5217\u5c5e\u6027\u4e2d\u7684\u6700\u5927\u6d88\u606f\u957f\u5ea6`mq_msgsize`\n//  msg_prio - \u63a5\u6536\u4f18\u5148\u7ea7\nssize_t mq_receive(mqd_t mqdes, char *msg_ptr, size_t msg_len, unsigned int *msg_prio);\n\n// \u5173\u95ed\u6d88\u606f\u961f\u5217\nint mq_close(mqd_t mqdes);\n\n// \u5220\u9664\u6d88\u606f\u961f\u5217\nint mq_unlink(const char *name);\n\n// \u6ce8\u518c\u4e00\u6b21\u52a8\u4f5c\uff0c\u5728\u6d88\u606f\u961f\u5217\u4e0d\u4e3a\u7a7a\u65f6\u88ab\u89e6\u53d1\uff0c\u53ef\u53c2\u8003\u4f8b\u5b50\uff1a./code/con_proc/msg_posix/mq_notify.c\nint mq_notify(mqd_t mqdes, const struct sigevent *sevp);\n</code></pre></p> <p>\u4f8b\u5b50\"con_proc/msg_posix\"\u5229\u7528\"POSIX\"\u7684\u6d88\u606f\u961f\u5217\u64cd\u4f5c\uff0c\u5728\u5b50\u8fdb\u7a0b\u4e2d\u6210\u529f\u8bfb\u53d6\u4e86\u7236\u8fdb\u7a0b\u5411\u6d88\u606f\u961f\u5217\u4f20\u5165\u7684\"Hello World\"\uff0c\u53ef\u901a\u8fc7<code>cat /dev/mqueue/&lt;name&gt;</code>\u67e5\u770b\u6d88\u606f\u961f\u5217\u7684\u4fe1\u606f\uff1a <pre><code>#define QUEUE_NAME \"/my_msq_test\"\n#define MAX_SIZE 1024\nconst char buf[] = \"Hello World\";\n\nvoid read_data()\n{\n   mqd_t mq = mq_open(QUEUE_NAME, O_RDONLY);\n\n   struct mq_attr attr;\n   mq_getattr(mq, &amp;attr);\n   char rcvbuf[attr.mq_msgsize];\n   int bytes = mq_receive(mq, rcvbuf, attr.mq_msgsize, NULL);\n\n   printf(\"Number of bytes of the messages in the queue is %d\\n\", bytes);\n   printf(\"Read from message queue: %s\\n\", rcvbuf);\n\n  mq_close(mq);\n}\n\nint main(int argc, char *argv[])\n{\n   mqd_t mq = mq_open(QUEUE_NAME, O_CREAT | O_RDWR, 0644, NULL);\n   printf(\"msq(%d) /dev/mqueue%s is created\\n\", mq, QUEUE_NAME);\n\n   mq_send(mq, buf, sizeof(buf), 0);\n   mq_close(mq);\n\n   pid_t pid = fork();\n   if (pid == 0)\n   {\n      read_data();\n      return 0;\n   }\n\n   wait(NULL);\n   // mq_unlink(QUEUE_NAME);\n   return 0;\n}\n</code></pre> <pre><code>&gt; ./main \nmsq(3) /dev/mqueue/my_msq_test is created\nNumber of bytes of the messages in the queue is 12\nRead from message queue: Hello World\n\n&gt; cat /dev/mqueue/my_msq_test \nQSIZE:0          NOTIFY:0     SIGNO:0     NOTIFY_PID:0\n</code></pre></p>"},{"location":"booknotes/cxydzwxy/concurrency/#system-v_2","title":"System V","text":"<p>\"System V\"\u4e5f\u63d0\u4f9b\u4e86\u4e00\u7ec4API\uff0c\u7528\u4e8e\u64cd\u4f5c\u6d88\u606f\u961f\u5217\uff1a <pre><code>#include &lt;sys/msg.h&gt;\n\n// \u521b\u5efa/\u83b7\u53d6\u4e00\u4e2a\u6d88\u606f\u961f\u5217\n//  key - \u5168\u5c40\u552f\u4e00\u7684\u6807\u8bc6\uff0c\u53ef\u901a\u8fc7`ftok()`\u7cfb\u7edf\u8c03\u7528\u751f\u6210\n//  msgflg - \u9664\u4e86\u5e38\u89c4\u7684\u6743\u9650\u8bbe\u7f6e\u5916\uff0c\u8fd8\u53ef\u4ee5\u8bbe\u7f6eIPC_CREAT\uff0c\u8868\u793a\u521b\u5efa\u65b0\u7684\u5171\u6d88\u606f\u961f\u5217\n//  \u8fd4\u56de\u6d88\u606f\u961f\u5217\u7684\u6807\u8bc6\u7b26\nint msgget(key_t key, int msgflg);\n\n// \u53d1\u9001\u6d88\u606f\u81f3\u6d88\u606f\u961f\u5217\n//  msqid - msgget()\u8fd4\u56de\u7684\u6807\u8bc6\n//  msg_ptr - \u6307\u5411\u51c6\u5907\u53d1\u9001\u7684\u6d88\u606f\uff0c\u6307\u9488\u7c7b\u578b\u5fc5\u987b\u5305\u542b\u6d88\u606f\u7c7b\u578b\uff0c\u5982\u4e0b\uff1a\n//    struct msgbuf\n//    {\n//      long mtype;           // \u6d88\u606f\u7c7b\u578b\uff0c\u8981\u6c42\u5927\u4e8e\u96f6\uff0c\u5728\u63a5\u6536\u7684\u65f6\u5019\u7528\u5230\n//      char mtext[MAXSIZE];  // \u6d88\u606f\u6570\u636e\u7f13\u5b58\n//    };\n//  msg_sz - \u6d88\u606f\u6570\u636e\u90e8\u5206(mtext)\u7684\u957f\u5ea6\n//  msgflg - \u63a7\u5236\u53d1\u9001\u884c\u4e3a\uff0c\u5982\u679c\u6ca1\u6709\u6307\u5b9a`IPC_NOWAIT`\uff0c\u961f\u5217\u6ee1\u4e86\uff0c\u6b64\u51fd\u6570\u963b\u585e\nint msgsnd(int msqid, const void* msg_ptr, size_t msg_sz, int msgflg);\n\n// \u4ece\u6d88\u606f\u961f\u5217\u63a5\u6536\u6d88\u606f\n//  msqid - msgget()\u8fd4\u56de\u7684\u6807\u8bc6\n//  msg_ptr - \u7528\u4e8e\u5b58\u50a8\u63a5\u6536\u7684\u6d88\u606f\n//  msg_sz - \u6307\u7684\u662f\u6d88\u606f\u6570\u636e\u90e8\u5206\u7684\u957f\u5ea6\n//  msgtype - \u6307\u5b9a\u63a5\u6536\u4f55\u79cd\u7c7b\u578b\u7684\u6d88\u606f\uff0c\n//    \u7b49\u4e8e0\uff0c\u8bfb\u53d6\u6d88\u606f\u961f\u5217\u4e2d\u7684\u7b2c\u4e00\u4e2a\u6d88\u606f\n//    \u5927\u4e8e0\uff0c\u8bfb\u53d6\u6d88\u606f\u961f\u5217\u4e2d\u7b2c\u4e00\u4e2a\u7c7b\u578b\u4e3a`msgtype`\u7684\u6d88\u606f\n//    \u5c0f\u4e8e0\uff0c\u8bfb\u53d6\u6d88\u606f\u961f\u5217\u4e2d\u7b2c\u4e00\u4e2a\u7c7b\u578b\u503c\u6bd4`msgtype`\u7684\u7edd\u5bf9\u503c\u5c0f\u7684\u6d88\u606f\n//  msgflg - \u63a7\u5236\u51fd\u6570\u884c\u4e3a\n//    IPC_NOWAIT\uff1a\u5982\u679c\u6d88\u606f\u961f\u5217\u4e2d\u6ca1\u6709\u6d88\u606f\uff0c\u7acb\u5373\u8fd4\u56de\u5e76\u8bbe\u7f6eerrno\u4e3aENOMSG\n//    MSG_EXCEPT\uff1a\u5982\u679cmsgtype\u5927\u4e8e0\uff0c\u5219\u63a5\u6536\u6d88\u606f\u961f\u5217\u4e2d\u7b2c\u4e00\u4e2a\u975emsgtype\u7c7b\u578b\u7684\u6d88\u606f\n//    MSG_NOERROR\uff1a\u5982\u679c\u6d88\u606f\u6570\u636e\u90e8\u5206\u7684\u957f\u5ea6\u8d85\u8fc7\u4e86msg_sz\uff0c\u5c31\u5c06\u5b83\u622a\u65ad\nint msgrcv(int msqid, void* msg_ptr, size_t msg_sz, long int msgtype, int msgflg);\n\n// \u7528\u547d\u4ee4\u63a7\u5236\u6d88\u606f\u961f\u5217\n//  IPC_RMID\u547d\u4ee4 - \u79fb\u9664\u6d88\u606f\u961f\u5217\n//  IPC_STAT\u547d\u4ee4 - \u83b7\u53d6\u6d88\u606f\u961f\u5217\u4fe1\u606f`msqid_ds`\uff0c\u5982\u6d88\u606f\u961f\u5217\u4e2d\u5df2\u6709\u7684\u5b57\u8282\u6570\nint msgctl(int msqid, int command, struct msqid_ds* buf);\n\n// \u6d88\u606f\u961f\u5217\u521b\u5efa\u7684\u5185\u6838\u6570\u636e\u7ed3\u6784\nstruct msqid_ds\n{\n   struct ipc_perm msg_perm;   // \u64cd\u4f5c\u6743\u9650\n   time_t msg_stime;           // \u6700\u540e\u4e00\u6b21\u8c03\u7528msgsnd\u7684\u65f6\u95f4\n   time_t msg_rtime;           // \u6700\u540e\u4e00\u6b21\u8c03\u7528msgrcv\u7684\u65f6\u95f4\n   time_t msg_ctime;           // \u6700\u540e\u4e00\u6b21\u88ab\u4fee\u6539\u7684\u65f6\u95f4\n   unsigned long __msg_cbytes; // \u6d88\u606f\u961f\u5217\u4e2d\u5df2\u6709\u7684\u5b57\u8282\u6570\n   msgqnum_t msg_qnum;         // \u6d88\u606f\u961f\u5217\u4e2d\u5df2\u6709\u7684\u6d88\u606f\u6570\n   msglen_t msg_qbytes;        // \u6d88\u606f\u961f\u5217\u5141\u8bb8\u7684\u6700\u5927\u5b57\u8282\u6570\n   pid_t msg_lspid;            // \u6700\u540e\u6267\u884cmsgsnd\u7684\u8fdb\u7a0b\u7684PID\n   pit_t msg_lrpid;            // \u6700\u540e\u6267\u884cmsgrcv\u7684\u8fdb\u7a0b\u7684PID\n};\n</code></pre> \u4f8b\u5b50\"con_proc/msg_systemv\"\u5229\u7528\"System V\"\u7684\u6d88\u606f\u961f\u5217\u64cd\u4f5c\uff0c\u5728\u5b50\u8fdb\u7a0b\u4e2d\u6210\u529f\u8bfb\u53d6\u4e86\u7236\u8fdb\u7a0b\u5411\u6d88\u606f\u961f\u5217\u4f20\u5165\u7684\"Hello World\"\uff0c\u53ef\u901a\u8fc7<code>ipcs -q</code>\u67e5\u770b\u7cfb\u7edf\u7531\"System V\"\u521b\u5efa\u7684\u6d88\u606f\u961f\u5217\uff0c\u4e5f\u53ef\u4ee5\u901a\u8fc7\u6253\u5370<code>/proc/sysvipc/msg</code>\u67e5\u770b\u6d88\u606f\u961f\u5217\uff1a <pre><code>#define PATHNAME \".\"\n#define PROJ_ID 'a'\n#define MAXSIZE 128\n\n#define USER_MESSAGE_TYPE 1\ntypedef struct my_msgbuf\n{\n   long mtype;\n   char mtext[MAXSIZE];\n} my_msgbuf;\n\nvoid read_msg()\n{\n   key_t key = ftok(PATHNAME, PROJ_ID);\n   int msqid = msgget(key, 0444);\n\n   struct msqid_ds buf;\n   msgctl(msqid, IPC_STAT, &amp;buf);\n   printf(\"Number of messages in the queue is %lu\\n\", buf.msg_qnum);\n   const size_t data_bytes = buf.__msg_cbytes;\n   printf(\"Number of bytes of the messages in the queue is %zu\\n\", data_bytes);\n\n   struct my_msgbuf rcvbuffer;\n   msgrcv(msqid, &amp;rcvbuffer, data_bytes, USER_MESSAGE_TYPE, 0);\n   printf(\"Read from message queue (message type %ld): %s\\n\", rcvbuffer.mtype, rcvbuffer.mtext);\n   return;\n}\n\nint main()\n{\n   key_t key = ftok(PATHNAME, PROJ_ID);\n   int msqid = msgget(key, IPC_CREAT | 0666);\n   printf(\"msq key(0x%x), msq id(%d) is created\\n\", key, msqid);\n\n   my_msgbuf sbuf;\n   sbuf.mtype = USER_MESSAGE_TYPE;\n   const char data[] = \"Hello World\";\n   memcpy(sbuf.mtext, data, sizeof(data));\n   msgsnd(msqid, &amp;sbuf, sizeof(data), IPC_NOWAIT);\n\n   pid_t pid = fork();\n   if (pid == 0)\n   {\n      read_msg();\n      return 0;\n   }\n\n   wait(NULL);\n   // msgctl(msqid, IPC_RMID, NULL);\n   return 0;\n}\n</code></pre> <pre><code>&gt; ./main \nmsq key(0x61050989), msq id(12) is created\nNumber of messages in the queue is 1\nNumber of bytes of the messages in the queue is 12\nRead from message queue (message type 1): Hello World\n\n&gt; ipcs -q\n------ Message Queues --------\nkey        msqid      owner      perms      used-bytes   messages    \n0x61050989 12         yuxiangw   666        0            0\n\n&gt; ipcs -q -i 12\nMessage Queue msqid=12\nuid=1000        gid=1000        cuid=1000       cgid=1000       mode=0666\ncbytes=0        qbytes=16384    qnum=0  lspid=158821    lrpid=158822\nsend_time=Tue May 10 19:28:57 2022  \nrcv_time=Tue May 10 19:28:57 2022  \nchange_time=Tue May 10 16:42:06 2022\n\n&gt; cat /proc/sysvipc/msg \n       key      msqid perms      cbytes       qnum lspid lrpid   uid   gid  cuid  cgid      stime      rtime      ctime\n1627720073         12   666           0          0 158821 158822  1000  1000  1000  1000 1652182137 1652182137 1652172126\n</code></pre></p>"},{"location":"booknotes/cxydzwxy/concurrency/#_7","title":"\u5176\u4ed6\u8fdb\u7a0b\u95f4\u901a\u4fe1\u65b9\u6cd5","text":""},{"location":"booknotes/cxydzwxy/concurrency/#file-lock","title":"\u6587\u4ef6\u9501(File Lock)","text":"<p>\u6587\u4ef6\u9501\u63d0\u4f9b\u4e86\u53e6\u4e00\u79cd\u8fdb\u7a0b\u95f4\u540c\u6b65\u7684\u65b9\u6cd5\uff1a <pre><code>// \u83b7\u53d6/\u91ca\u653e\u6587\u4ef6\u9501\n//  fd - \u6253\u5f00\u7684\u6587\u4ef6\u63cf\u8ff0\u7b26\n//  operation - \u64cd\u4f5c\u7c7b\u578b\uff1a\n//    LOCK_SH: \u5171\u4eab\u9501\uff0c\u591a\u4e2a\u8fdb\u7a0b\u53ef\u4ee5\u4f7f\u7528\u540c\u4e00\u628a\u9501\uff0c\u5e38\u88ab\u7528\u4f5c\u8bfb\u5171\u4eab\u9501\n//    LOCK_EX: \u6392\u4ed6\u9501\uff0c\u540c\u65f6\u53ea\u5141\u8bb8\u4e00\u4e2a\u8fdb\u7a0b\u4f7f\u7528\uff0c\u5e38\u88ab\u7528\u4f5c\u5199\u9501\n//    LOCK_UN: \u91ca\u653e\u9501\nint flock(int fd, int operation);\n</code></pre></p> <p>\u4f8b\u5b50\"flock\"\u5229\u7528<code>flock()</code>\u540c\u6b65\u4e86\u4e24\u4e2a\u8fdb\u7a0b\u7684\u6267\u884c\u987a\u5e8f\uff1a <pre><code>#define LOCK_FILE \"lock_file.lock\"\n\nvoid child_start()\n{\n   int fd = open(LOCK_FILE, O_RDONLY);\n   flock(fd, LOCK_EX);\n\n   printf(\"Child process has started\\n\");\n   sleep(1);\n   printf(\"Child process has finished\\n\");\n\n   flock(fd, LOCK_UN);\n   close(fd);\n}\n\nvoid parent_start()\n{\n   int fd = open(LOCK_FILE, O_RDONLY);\n   flock(fd, LOCK_EX);\n\n   printf(\"Parent process has started\\n\");\n   sleep(1);\n   printf(\"Parent process has finished\\n\");\n\n   flock(fd, LOCK_UN);\n   close(fd);\n}\n\nint main(void)\n{\n   // \u521b\u5efa\u4e00\u4e2a\u666e\u901a\u6587\u4ef6\n   int fd = open(LOCK_FILE, O_RDONLY | O_CREAT, 0666);\n   close(fd);\n\n   pid_t pid = fork();\n   if (pid == 0)\n   {\n      child_start();\n      return 0;\n   }\n   parent_start();\n   wait(NULL);\n   return 0;\n}\n</code></pre> <pre><code>&gt; ./main \nChild process has started\nChild process has finished\nParent process has started\nParent process has finished\n</code></pre></p>"},{"location":"booknotes/cxydzwxy/concurrency/#pipe","title":"\u7ba1\u9053(Pipe)","text":"<pre><code>#include &lt;unistd.h&gt;\n\nint pipe(int fd[2]);\n</code></pre> <p><code>pipe()</code>\u51fd\u6570\u53ef\u4ee5\u521b\u5efa\u4e00\u4e2a\u7ba1\u9053\uff0c\u4ee5\u5b9e\u73b0\u8fdb\u7a0b\u95f4\u901a\u4fe1\u3002\u4e00\u4e2a\u7ba1\u9053\u5305\u62ec\u4e24\u4e2a\u6587\u4ef6\u63cf\u8ff0\u7b26\uff1a</p> <ul> <li><code>fd[0]</code>\u8bfb\u6587\u4ef6\u63cf\u8ff0\u7b26</li> <li>\u5982\u679c\u6240\u6709\u8fdb\u7a0b\u7684\u7ba1\u9053\u5199\u6587\u4ef6\u63cf\u8ff0\u7b26\u88ab\u5173\u95ed\uff0c<code>read</code>\u8bfb\u6587\u4ef6\u63cf\u8ff0\u7b26\u8fd4\u56de\u96f6\u3002\u5426\u5219\u9ed8\u8ba4\u60c5\u51b5\u4e0b\uff0c\u5982\u679c\u7ba1\u9053\u4e3a\u7a7a\u4f1a\u4e00\u76f4\u963b\u585e</li> <li><code>fd[1]</code>\u5199\u6587\u4ef6\u63cf\u8ff0\u7b26</li> <li>\u5982\u679c\u6240\u6709\u8fdb\u7a0b\u7684\u7ba1\u9053\u8bfb\u6587\u4ef6\u63cf\u8ff0\u7b26\u88ab\u5173\u95ed\uff0c<code>write</code>\u5199\u6587\u4ef6\u63cf\u8ff0\u7b26\u4f1a\u89e6\u53d1<code>SIGPIPE</code>\u4fe1\u53f7</li> </ul> <p>\u4f8b\u5b50\"pipe\"\u521b\u5efa\u4e86\u4e00\u4e2a\u7ba1\u9053\uff0c\u4e00\u4e2a\u8fdb\u7a0b\u5f80\u7ba1\u9053\u4e2d\u5199\u5165\u6570\u636e\uff0c\u53e6\u4e00\u4e2a\u8fdb\u7a0b\u4ece\u7ba1\u9053\u4e2d\u8bfb\u51fa\u6570\u636e\uff1a</p> <p><pre><code>#define MSGSIZE 16\nconst char *msg1 = \"hello, world #1\";\nconst char *msg2 = \"hello, world #2\";\n\nvoid write_data(int write_fd)\n{\n   printf(\"Parent Task Starts\\n\");\n\n   // write will trigger SIGPIPE signal if all read fd is closed\n   int nbytes = write(write_fd, msg1, MSGSIZE);\n   printf(\"parent process wrote %d bytes to child process: %s\\n\", nbytes, msg1);\n   nbytes = write(write_fd, msg2, MSGSIZE);\n   printf(\"parent process wrote %d bytes to child process: %s\\n\", nbytes, msg2);\n\n   printf(\"Parent Task Ends\\n\");\n}\n\nvoid read_data(int read_fd)\n{\n   printf(\"Child Task Starts\\n\");\n\n   char inbuf[MSGSIZE];\n   int nbytes = 0;\n\n   // read will return zero if all write fd is closed\n   while ((nbytes = read(read_fd, inbuf, MSGSIZE)) &gt; 0)\n      printf(\"child process read %d bytes to from parent process: %s\\n\", nbytes, inbuf);\n\n   printf(\"Child Task Ends\\n\");\n}\n\nint main(int argc, char **argv)\n{\n   int fd[2];\n   pipe(fd);\n   int read_fd = fd[0];\n   int write_fd = fd[1];\n\n   pid_t pid = fork();\n   if (pid == 0)\n   {\n      close(write_fd);\n\n      read_data(read_fd);\n      close(read_fd);\n      return 0;\n   }\n\n   close(read_fd);\n   sleep(1);\n\n   write_data(write_fd);\n   close(write_fd);\n\n   wait(NULL);\n   return 0;\n}\n</code></pre> <pre><code>&gt; ./main \nChild Task Starts\nParent Task Starts\nparent process wrote 16 bytes to child process: hello, world #1\nparent process wrote 16 bytes to child process: hello, world #2\nParent Task Ends\nchild process read 16 bytes to from parent process: hello, world #1\nchild process read 16 bytes to from parent process: hello, world #2\nChild Task Ends\n</code></pre></p>"},{"location":"booknotes/cxydzwxy/link/dynamic/","title":"\u52a8\u6001\u94fe\u63a5","text":"<p>\u300a\u7a0b\u5e8f\u5458\u7684\u81ea\u6211\u4fee\u517b--\u94fe\u63a5\u3001\u88c5\u8f7d\u4e0e\u5e93\u300b - \u4fde\u7532\u5b50\uff0c\u77f3\u51e1\uff0c\u6f58\u7231\u6c11\uff0c\u7b2c\u4e03\u3001\u516b\u7ae0\u7684\u8bfb\u4e66\u7b14\u8bb0\uff0c\u672c\u6587\u4e2d\u7684\u6240\u6709\u4ee3\u7801\u53ef\u5728GitHub\u4ed3\u5e93\u4e2d\u627e\u5230</p>"},{"location":"booknotes/cxydzwxy/link/dynamic/#_2","title":"\u57fa\u672c\u5b9e\u73b0","text":"<p>\u5728Linux\u7cfb\u7edf\u4e2d\uff0cELF\u52a8\u6001\u94fe\u63a5\u6587\u4ef6\u88ab\u79f0\u4e3a\u52a8\u6001\u5171\u4eab\u5bf9\u8c61(DSO, Dynamic Shared Objects)\uff0c\u7b80\u79f0\u5171\u4eab\u5bf9\u8c61\uff0c\u5b83\u4eec\u4e00\u822c\u90fd\u662f\u4ee5\".so\"\u4e3a\u6269\u5c55\u540d\u7684\u4e00\u4e9b\u6587\u4ef6\u3002</p> <p>\u7a0b\u5e8f\u548c\u52a8\u6001\u94fe\u63a5\u5e93\u4e4b\u95f4\u7684\u94fe\u63a5\u5de5\u4f5c\u662f\u7531\u52a8\u6001\u94fe\u63a5\u5668\u5b8c\u6210\u7684\u3002\u4e0d\u540c\u4e8e\u9759\u6001\u94fe\u63a5\u5668\uff0c\u52a8\u6001\u94fe\u63a5\u5668\u628a\u94fe\u63a5\u8fc7\u7a0b\u4ece\u7a0b\u5e8f\u88c5\u8f7d\u524d\u63a8\u8fdf\u5230\u4e86\u88c5\u8f7d\u7684\u65f6\u5019\u3002\u8fd9\u79cd\u65b9\u6cd5\u79f0\u4e3a\u5ef6\u8fdf\u7ed1\u5b9a(Lazy Binding)\uff0c\u867d\u7136\u635f\u5931\u4e86\u4e00\u4e9b\u8fd0\u884c\u65f6\u7684\u6027\u80fd\uff0c\u4f46\u662f\u63d0\u9ad8\u4e86\u7075\u6d3b\u6027\u3002</p>"},{"location":"booknotes/cxydzwxy/link/dynamic/#_3","title":"\u7b80\u5355\u7684\u4f8b\u5b50","text":"<p>\u4f8b\u5b50\"simple\"\u4e2d\u7684\u4e24\u4e2a\u53ef\u6267\u884c\u6587\u4ef6<code>program1</code>\u548c<code>program2</code>\u90fd\u52a8\u6001\u94fe\u63a5\u5230\u4e86\u52a8\u6001\u5171\u4eab\u5bf9\u8c61<code>libfoo.so</code>\u3002\u5f53\u7a0b\u5e8f\u6a21\u5757<code>program1.c</code>\u88ab\u7f16\u8bd1\u6210<code>program1.o</code>\u65f6\uff0c\u7f16\u8bd1\u5668\u4e0d\u77e5\u9053<code>foobar()</code>\u51fd\u6570\u7684\u5730\u5740\u3002\u5f53\u94fe\u63a5\u5668\u5c06<code>program1.o</code>\u94fe\u63a5\u6210\u53ef\u6267\u884c\u6587\u4ef6\u65f6\uff0c\u901a\u8fc7\u51fd\u6570\u7b26\u53f7\u4fe1\u606f\uff0c\u94fe\u63a5\u5668\u53ef\u5224\u65ad<code>foobar()</code>\u7684\u6027\u8d28\uff0c</p> <ul> <li>\u5982\u679c<code>foobar()</code>\u662f\u4e00\u4e2a\u5b9a\u4e49\u5728\u5176\u4ed6\u9759\u6001\u76ee\u6807\u6a21\u5757\u4e2d\u7684\u51fd\u6570\uff0c\u90a3\u4e48\u94fe\u63a5\u5668\u5c06\u4f1a\u6309\u7167\u9759\u6001\u94fe\u63a5\u7684\u89c4\u5219\uff0c\u5c06<code>program1.o</code>\u4e2d\u7684foobar\u5730\u5740\u5f15\u7528\u91cd\u5b9a\u4f4d</li> <li>\u5982\u679c<code>foobar()</code>\u662f\u4e00\u4e2a\u5b9a\u4e49\u5728\u67d0\u4e2a\u52a8\u6001\u5171\u4eab\u5bf9\u8c61\u4e2d\u7684\u51fd\u6570\uff0c\u90a3\u4e48\u94fe\u63a5\u5668\u5c31\u4f1a\u5c06\u8fd9\u4e2a\u7b26\u53f7\u7684\u5f15\u7528\u6807\u8bb0\u4f4d\u4e00\u4e2a\u52a8\u6001\u94fe\u63a5\u7684\u7b26\u53f7\uff0c\u4e0d\u5bf9\u5b83\u8fdb\u884c\u5730\u5740\u91cd\u5b9a\u4f4d\uff0c\u628a\u8fd9\u4e2a\u8fc7\u7a0b\u7559\u5230\u88c5\u8f7d\u65f6\u518d\u8fdb\u884c</li> </ul> <p>\u901a\u8fc7GDB\u547d\u4ee4<code>i proc mapping</code>\uff0c\u53ef\u5f97\u5230\u8fdb\u7a0b<code>program1</code>\u7684\u865a\u62df\u5730\u5740\u6620\u5c04\uff0c\u5176\u5206\u522b\u94fe\u63a5\u4e86<code>libc-2.31.so</code>\uff0c<code>libfoo.so</code>\u548c<code>ld-2.31.so</code>\u4e09\u4e2a\u52a8\u6001\u94fe\u63a5\u5e93\u3002 <pre><code>        Start Addr           End Addr       Size     Offset objfile\n    0x555555554000     0x555555555000     0x1000        0x0 /home/yuxiangw/GitHub/learning_book/docs/booknotes/cxydzwxy/compile_link/dynamic_link/code/simple/program1\n    0x555555555000     0x555555556000     0x1000     0x1000 /home/yuxiangw/GitHub/learning_book/docs/booknotes/cxydzwxy/compile_link/dynamic_link/code/simple/program1\n    0x555555556000     0x555555557000     0x1000     0x2000 /home/yuxiangw/GitHub/learning_book/docs/booknotes/cxydzwxy/compile_link/dynamic_link/code/simple/program1\n    0x555555557000     0x555555558000     0x1000     0x2000 /home/yuxiangw/GitHub/learning_book/docs/booknotes/cxydzwxy/compile_link/dynamic_link/code/simple/program1\n    0x555555558000     0x555555559000     0x1000     0x3000 /home/yuxiangw/GitHub/learning_book/docs/booknotes/cxydzwxy/compile_link/dynamic_link/code/simple/program1\n    0x7ffff7db7000     0x7ffff7dba000     0x3000        0x0 \n    0x7ffff7dba000     0x7ffff7ddf000    0x25000        0x0 /usr/lib/x86_64-linux-gnu/libc-2.31.so\n    0x7ffff7ddf000     0x7ffff7f57000   0x178000    0x25000 /usr/lib/x86_64-linux-gnu/libc-2.31.so\n    0x7ffff7f57000     0x7ffff7fa1000    0x4a000   0x19d000 /usr/lib/x86_64-linux-gnu/libc-2.31.so\n    0x7ffff7fa1000     0x7ffff7fa2000     0x1000   0x1e7000 /usr/lib/x86_64-linux-gnu/libc-2.31.so\n    0x7ffff7fa2000     0x7ffff7fa5000     0x3000   0x1e7000 /usr/lib/x86_64-linux-gnu/libc-2.31.so\n    0x7ffff7fa5000     0x7ffff7fa8000     0x3000   0x1ea000 /usr/lib/x86_64-linux-gnu/libc-2.31.so\n    0x7ffff7fa8000     0x7ffff7fac000     0x4000        0x0 \n    0x7ffff7fc2000     0x7ffff7fc3000     0x1000        0x0 /home/yuxiangw/GitHub/learning_book/docs/booknotes/cxydzwxy/compile_link/dynamic_link/code/simple/libfoo.so\n    0x7ffff7fc3000     0x7ffff7fc4000     0x1000     0x1000 /home/yuxiangw/GitHub/learning_book/docs/booknotes/cxydzwxy/compile_link/dynamic_link/code/simple/libfoo.so\n    0x7ffff7fc4000     0x7ffff7fc5000     0x1000     0x2000 /home/yuxiangw/GitHub/learning_book/docs/booknotes/cxydzwxy/compile_link/dynamic_link/code/simple/libfoo.so\n    0x7ffff7fc5000     0x7ffff7fc6000     0x1000     0x2000 /home/yuxiangw/GitHub/learning_book/docs/booknotes/cxydzwxy/compile_link/dynamic_link/code/simple/libfoo.so\n    0x7ffff7fc6000     0x7ffff7fc7000     0x1000     0x3000 /home/yuxiangw/GitHub/learning_book/docs/booknotes/cxydzwxy/compile_link/dynamic_link/code/simple/libfoo.so\n    0x7ffff7fc7000     0x7ffff7fc9000     0x2000        0x0 \n    0x7ffff7fc9000     0x7ffff7fcd000     0x4000        0x0 [vvar]\n    0x7ffff7fcd000     0x7ffff7fcf000     0x2000        0x0 [vdso]\n    0x7ffff7fcf000     0x7ffff7fd0000     0x1000        0x0 /usr/lib/x86_64-linux-gnu/ld-2.31.so\n    0x7ffff7fd0000     0x7ffff7ff3000    0x23000     0x1000 /usr/lib/x86_64-linux-gnu/ld-2.31.so\n    0x7ffff7ff3000     0x7ffff7ffb000     0x8000    0x24000 /usr/lib/x86_64-linux-gnu/ld-2.31.so\n    0x7ffff7ffc000     0x7ffff7ffd000     0x1000    0x2c000 /usr/lib/x86_64-linux-gnu/ld-2.31.so\n    0x7ffff7ffd000     0x7ffff7ffe000     0x1000    0x2d000 /usr/lib/x86_64-linux-gnu/ld-2.31.so\n    0x7ffff7ffe000     0x7ffff7fff000     0x1000        0x0 \n    0x7ffffffde000     0x7ffffffff000    0x21000        0x0 [stack]\n0xffffffffff600000 0xffffffffff601000     0x1000        0x0 [vsyscall]\n</code></pre></p>"},{"location":"booknotes/cxydzwxy/link/dynamic/#_4","title":"\u91cd\u5b9a\u4f4d","text":""},{"location":"booknotes/cxydzwxy/link/dynamic/#_5","title":"\u88c5\u8f7d\u65f6\u91cd\u5b9a\u4f4d","text":"<p>\u5982\u679c\u52a8\u6001\u6a21\u5757\u4e2d\u6709\u7edd\u5bf9\u5730\u5740\u5f15\u7528\uff0c\u7531\u4e8e\u6211\u4eec\u65e0\u6cd5\u5728\u94fe\u63a5\u65f6\u77e5\u9053\u52a8\u6001\u5e93\u7684\u88c5\u8f7d\u5730\u5740\uff0c\u56e0\u6b64\u9700\u91c7\u7528\u88c5\u8f7d\u65f6\u91cd\u5b9a\u4f4d(Load Time Relocation)\u6280\u672f\uff0c\u5728\u52a8\u6001\u5e93\u88c5\u8f7d\u7684\u65f6\u5019\uff0c\u4fee\u6539\u5176\u7edd\u5bf9\u5730\u5740\u5f15\u7528\uff0c\u4ee5\u4fdd\u8bc1\u5730\u5740\u7684\u6b63\u786e\u6027\u3002</p> <p>\u4f8b\u5982\uff0c\u4e00\u4e2a\u52a8\u6001\u5e93\u5728\u7f16\u8bd1\u65f6\u5047\u8bbe\u88c5\u8f7d\u76ee\u6807\u5730\u5740\u662f0x1000\uff0c\u4f46\u5b9e\u9645\u88c5\u8f7d\u5730\u5740\u662f0x4000\uff0c\u90a3\u4e48\u52a8\u6001\u5e93\u4e2d\u6240\u6709\u7edd\u5bf9\u5730\u5740\u5f15\u7528\u90fd\u9700\u8981\u52a0\u4e0a0x3000\u7684\u504f\u79fb\u91cf\u3002</p>"},{"location":"booknotes/cxydzwxy/link/dynamic/#_6","title":"\u5730\u5740\u65e0\u5173\u4ee3\u7801","text":"<p>\u88c5\u8f7d\u65f6\u91cd\u5b9a\u4f4d\u6280\u672f\u7684\u6700\u5927\u7f3a\u70b9\u662f\uff0c\u9700\u8981\u6839\u636e\u88c5\u8f7d\u5730\u5740\u7684\u4e0d\u540c\uff0c\u5728\u88c5\u8f7d\u65f6\u4fee\u6539\u6307\u4ee4\u3002</p> <p>\u5730\u5740\u65e0\u5173\u4ee3\u7801(PIC, Position-independent Code)\u89e3\u51b3\u4e86\u6b64\u95ee\u9898\u3002\u5176\u57fa\u672c\u601d\u60f3\u662f\u628a\u6307\u4ee4\u4e2d\u90a3\u4e9b\u9700\u8981\u88ab\u4fee\u6539\u7684\u90e8\u5206\u5206\u79bb\u51fa\u6765\uff0c\u8ddf\u6570\u636e\u90e8\u5206\u653e\u5728\u4e00\u8d77\u3002\u591a\u4e2a\u8fdb\u7a0b\u4e4b\u95f4\u5171\u4eab\u4e0d\u53d8\u7684\u6307\u4ee4\u90e8\u5206\uff0c\u800c\u5404\u81ea\u62e5\u6709\u53ef\u53d8\u6570\u636e\u90e8\u5206\u3002GCC\u7f16\u8bd1\u65f6\uff0c<code>-fPIC</code>\u7f16\u8bd1\u9009\u9879\u6307\u5b9a\u4e86\u7f16\u8bd1\u51fa\u7684\u4ee3\u7801\u4e3a\u5730\u5740\u65e0\u5173\u4ee3\u7801\uff0c\u5728\u7f16\u8bd1\u52a8\u6001\u5171\u4eab\u5e93\u65f6\uff0c\u9700\u8981\u52a0\u4e0a\u6b64\u9009\u9879\u3002</p> <p>\u6211\u4eec\u628a\u5171\u4eab\u5bf9\u8c61\u6a21\u5757\u4e2d\u7684\u5730\u5740\u5f15\u7528\u6309\u7167\u662f\u5426\u8de8\u6a21\u5757\u5206\u6210\uff1a\u6a21\u5757\u5185\u90e8\u5f15\u7528\u548c\u6a21\u5757\u5916\u90e8\u5f15\u7528\uff0c\u6309\u7167\u4e0d\u540c\u7684\u5f15\u7528\u65b9\u5f0f\u53c8\u53ef\u5206\u4e3a\u6307\u4ee4\u5f15\u7528\u548c\u6570\u636e\u8bbf\u95ee\uff0c\u5b58\u5728\u5982\u4e0b\u6240\u793a\u7684\u56db\u79cd\u60c5\u51b5\uff1a <pre><code>static int a;\nextern int b;\nextern void ext();\n\nvoid bar()\n{\n    a = 1; // \u6a21\u5757\u5185\u90e8\u6570\u636e\u8bbf\u95ee\n    b = 2; // \u6a21\u5757\u95f4\u6570\u636e\u8bbf\u95ee\n}\n\nvoid foo()\n{\n    bar(); // \u6a21\u5757\u5185\u90e8\u8c03\u7528\u6216\u8df3\u8f6c\n    ext(); // \u6a21\u5757\u95f4\u8c03\u7528\u6216\u8df3\u8f6c\n}\n</code></pre></p> <p>\u7531\u4e8e\u7f16\u8bd1\u5668\u7684\u4f18\u5316\u4f5c\u7528\uff0c\u6211\u4eec\u9700\u8981\u901a\u8fc7\u95f4\u63a5\u4f9d\u8d56\u7684\u4f8b\u5b50\"secondary_dep\"\u624d\u80fd\u8fbe\u5230\u6a21\u5757\u95f4\u6570\u636e\u8bbf\u95ee\u7684\u6548\u679c\u3002\u5982\u679c\u662f\u76f4\u63a5\u4f9d\u8d56\u7684\u4f8b\u5b50\"direct_dep\"\uff0c\u90fd\u88ab\u4f18\u5316\u6210\u4e86\u6a21\u5757\u5185\u7684\u6570\u636e\u8bbf\u95ee\u3002</p> <ul> <li>\u5b9e\u4f8b\"secondary_dep\" - \u6a21\u5757\u5185\u6570\u636e\u8bbf\u95ee<code>a</code>\u548c\u6a21\u5757\u95f4\u6570\u636e\u8bbf\u95ee<code>b</code><ul> <li>\u5bf9\u4e8e\u6a21\u5757\u5185\u6570\u636e\u8bbf\u95ee\uff0c\u76f4\u63a5\u7528\u76f8\u5bf9\u5730\u5740\u5373\u53ef\u5f97\u5230\u5b58\u50a8\u4f4d\u7f6e\u3002\u4f8b\u5982\uff0c\u53d8\u91cf<code>a</code>\u7684\u5730\u5740<code>0x7ffff7fc603c</code>\u5728<code>bar</code>\u51fd\u6570\u4e2d\u76f4\u63a5\u88ab\u5f15\u7528</li> <li>\u5bf9\u4e8e\u6a21\u5757\u95f4\u6570\u636e\u8bbf\u95ee\uff0c\u9700\u8981\u5168\u5c40\u504f\u79fb\u8868(Global Offset Table, GOT)\u7684\u5e2e\u52a9\u3002\u4f8b\u5982\uff0c<code>b</code>\u771f\u6b63\u7684\u5730\u5740\u662f<code>0x7ffff7db902c</code>\uff0c\u8be5\u5730\u5740\u5b58\u4e8eGOT\u5730\u5740<code>0x7ffff7fc5fe0</code>\u4e2d\uff0c<code>bar</code>\u51fd\u6570\u5f15\u7528\u7684\u65f6GOT\u5730\u5740<code>0x7ffff7fc5fe0</code> <pre><code>(gdb) disas bar\nDump of assembler code for function bar:\n    0x00007ffff7fc3159 &lt;+0&gt;:     endbr64 \n    0x00007ffff7fc315d &lt;+4&gt;:     push   %rbp\n    0x00007ffff7fc315e &lt;+5&gt;:     mov    %rsp,%rbp\n    0x00007ffff7fc3161 &lt;+8&gt;:     movl   $0x1,0x2ed1(%rip)        # 0x7ffff7fc603c &lt;a&gt;\n    0x00007ffff7fc316b &lt;+18&gt;:    mov    0x2e6e(%rip),%rax        # 0x7ffff7fc5fe0\n    0x00007ffff7fc3172 &lt;+25&gt;:    movl   $0x2,(%rax)\n\n# \u6253\u5370\u53d8\u91cfa\u7684\u5730\u57400x7ffff7fc603c\u5185\u5bb9\n(gdb) p/x *0x7ffff7fc603c\n$1 = 0x1\n(gdb) info sym &amp;a\na in section .bss of ./libouter.so\n# \u53d8\u91cfa\u65e0\u987b\u7ecf\u8fc7GOT\u6620\u5c04\n(gdb) p/x &amp;a\n$2 = 0x7ffff7fc603c\n\n# \u6253\u5370\u53d8\u91cfb\u7684GOT\u5730\u57400x7ffff7fc5fe0\u5185\u5bb9\n(gdb) p/x *(uint64_t *)0x7ffff7fc5fe0\n$3 = 0x7ffff7db902c\n(gdb) info sym &amp;b\nb in section .bss of ./libinner.so\n# \u53d8\u91cfb\u7684\u5730\u5740\u548cGOT\u5730\u57400x7ffff7fc5fe0\u7684\u5185\u5bb9\u76f8\u540c\n(gdb) p/x &amp;b\n$4 = 0x7ffff7db902c\n</code></pre></li> </ul> </li> <li>\u5b9e\u4f8b\"direct_dep\" - \u6a21\u5757\u5185\u8c03\u7528<code>bar</code>\u548c\u6a21\u5757\u95f4\u8c03\u7528<code>ext</code><ul> <li>\u6a21\u5757\u5185\u51fd\u6570<code>bar</code>\u76f4\u63a5\u4f7f\u7528\u771f\u5b9e\u7684\u5730\u5740</li> <li>\u6a21\u5757\u95f4\u51fd\u6570<code>ext</code>\u7684\u8c03\u7528\u5229\u7528\u4e86\u5ef6\u8fdf\u7ed1\u5b9aPLT\u6280\u672f\uff0c\u51fd\u6570\u8c03\u7528\u9700\u7ecf\u8fc7\uff1a<code>ext@plt</code> -&gt; <code>ext@got.plt</code> -&gt; \u771f\u6b63\u7684\u5730\u5740<code>0x7ffff7fc3119</code> <pre><code>(gdb) disas foo\nDump of assembler code for function foo:\n    0x00005555555551a0 &lt;+0&gt;:     endbr64 \n    0x00005555555551a4 &lt;+4&gt;:     push   %rbp\n    0x00005555555551a5 &lt;+5&gt;:     mov    %rsp,%rbp\n    0x00005555555551a8 &lt;+8&gt;:     mov    $0x0,%eax\n    0x00005555555551ad &lt;+13&gt;:    callq  0x555555555070 &lt;ext@plt&gt;\n    0x00005555555551b2 &lt;+18&gt;:    mov    $0x0,%eax\n    0x00005555555551b7 &lt;+23&gt;:    callq  0x555555555169 &lt;bar&gt;\n    0x00005555555551bc &lt;+28&gt;:    nop\n    0x00005555555551bd &lt;+29&gt;:    pop    %rbp\n    0x00005555555551be &lt;+30&gt;:    retq\n\n(gdb) info sym &amp;bar\nbar in section .text of /home/yuxiangw/GitHub/learning_book/docs/booknotes/cxydzwxy/link/dynamic/code/got/main\n(gdb) p/x &amp;bar\n$1 = 0x555555555169\n\n# \u6253\u5370ext@plt\n(gdb) x/3i 0x555555555070\n    0x555555555070 &lt;ext@plt&gt;:    endbr64 \n    0x555555555074 &lt;ext@plt+4&gt;:  bnd jmpq *0x2f55(%rip)        # 0x555555557fd0 &lt;ext@got.plt&gt;\n    0x55555555507b &lt;ext@plt+11&gt;: nopl   0x0(%rax,%rax,1)\n# \u6253\u5370ext@got.plt\n(gdb) p/x *(uint64_t *)0x555555557fd0\n$2 = 0x7ffff7fc3119\n(gdb) info sym &amp;ext\next in section .text of ./libfoo.so\n(gdb) p/x &amp;ext\n$3 = 0x7ffff7fc3119\n</code></pre></li> </ul> </li> </ul>"},{"location":"booknotes/cxydzwxy/link/dynamic/#plt","title":"\u5ef6\u8fdf\u7ed1\u5b9a(PLT)","text":"<p>\u7531\u4e8e\u52a8\u6001\u94fe\u63a5\u5b58\u5728GOT\u5b9a\u4f4d\uff0c\u4e00\u822c\u6bd4\u9759\u6001\u94fe\u63a5\u8981\u6162\u4e00\u4e9b\u3002\u5ef6\u8fdf\u7ed1\u5b9a(Lazy Binding)\u6280\u672f\u5c31\u662f\u4e3a\u4e86\u63d0\u9ad8\u52a8\u6001\u94fe\u63a5\u8fd0\u884c\u65f6\u7684\u6548\u7387\u800c\u63d0\u51fa\u7684\u3002\u5176\u57fa\u672c\u601d\u60f3\u5c31\u662f\u5f53\u51fd\u6570\u7b2c\u4e00\u6b21\u88ab\u7528\u5230\u65f6\u624d\u8fdb\u884c\u7ed1\u5b9a(\u7b26\u53f7\u67e5\u627e\u3001\u91cd\u5b9a\u4f4d\u7b49)\uff0c\u5982\u679c\u6ca1\u6709\u7528\u5230\u5219\u4e0d\u8fdb\u884c\u7ed1\u5b9a\u3002</p> <p>ELF\u4f7f\u7528PLT(Procedure Linkage Table)\u6765\u5b9e\u73b0\u5ef6\u8fdf\u7ed1\u5b9a\u3002\u4f8b\u5982\uff0c\u6211\u4eec\u60f3\u901a\u8fc7PLT\u8df3\u8f6c\u5230<code>bar</code>\u51fd\u6570\uff0c\u9996\u5148\u8df3\u8f6c\u5230PLT\u4e2d\u5bf9\u5e94\u7684\u7ed3\u6784<code>bar@plt</code>\uff0c\u5176\u5b9e\u73b0\u5927\u81f4\u5982\u4e0b(\u6839\u636eGCC\u7684\u7248\u672c\u4e0d\u540c\uff0c\u5b9e\u73b0\u53ef\u80fd\u4f1a\u4e0d\u540c)\uff1a <pre><code>bar@plt:\njmp *(bar@GOT)  # \u901a\u8fc7GOT\u95f4\u63a5\u8df3\u8f6c\uff0c\u5982\u679cGOT\u672a\u88ab\u914d\u7f6e\uff0c\u5c06\u7ee7\u7eed\u4e0b\u9762\u7684\u8bed\u53e5\uff1b\u5982\u679cGOT\u5df2\u914d\u7f6e\uff0c\u8df3\u8f6c\u81f3bar\u51fd\u6570\npush n          # \u4ee5\u4e0b\u4ee3\u7801\u662f\u5c06bar\u7684\u5730\u5740\u586b\u5165bar@GOT\u4e2d\uff0cn\u662fbar\u8fd9\u4e2a\u7b26\u53f7\u5728\u91cd\u5b9a\u4f4d\u8868\".rela.plt\"\u4e2d\u7684\u4e0b\u6807\npush moduleID   # \u6a21\u5757ID\njump _dl_runtime_resolve # \u901a\u8fc7\u94fe\u63a5\u5668\u51fd\u6570\u5b8c\u6210\u7b26\u53f7\u89e3\u6790\u548c\u91cd\u5b9a\u4f4d\n</code></pre></p>"},{"location":"booknotes/cxydzwxy/link/dynamic/#plt_1","title":"PLT\u76f8\u5173\u7684\u6bb5","text":"<p>ELF\u5c06GOT\u62c6\u5206\u6210\u4e24\u4e2a\u8868\uff1a</p> <ul> <li>\".got\"\u6bb5 - \u7528\u6765\u4fdd\u5b58\u5168\u5c40\u53d8\u91cf\u5f15\u7528\u7684\u5730\u5740</li> <li>\".got.plt\"\u6bb5 - \u7528\u6765\u4fdd\u5b58\u5916\u90e8\u51fd\u6570\u5f15\u7528\u7684\u5730\u5740</li> </ul> <p>\u5728\u4f8b\u5b50\"secondary_dep\"\u4e2d\uff0c\u7528<code>objdump -D libouter.so</code>\u547d\u4ee4\u6253\u5370\".got\"\u548c\".got.plt\"\u6bb5\u7684\u5185\u5bb9\u5982\u4e0b\uff1a <pre><code>Disassembly of section .got:\n\n0000000000003fd8 &lt;.got&gt;:\n        ...\n\nDisassembly of section .got.plt:\n\n0000000000004000 &lt;_GLOBAL_OFFSET_TABLE_&gt;:\n    4000:       18 3e                   sbb    %bh,(%rsi)\n        ...\n    4016:       00 00                   add    %al,(%rax)\n    4018:       30 10                   xor    %dl,(%rax)\n    401a:       00 00                   add    %al,(%rax)\n    401c:       00 00                   add    %al,(%rax)\n    401e:       00 00                   add    %al,(%rax)\n    4020:       40 10 00                adc    %al,(%rax)\n    4023:       00 00                   add    %al,(%rax)\n    4025:       00 00                   add    %al,(%rax)\n    4027:       00 50 10                add    %dl,0x10(%rax)\n    402a:       00 00                   add    %al,(%rax)\n    402c:       00 00                   add    %al,(%rax)\n        ...\n</code></pre> \u5176\u4e2d\uff0c\".got\"\u6bb5\u7684\u8303\u56f4\u662f\uff1a0x3fd8-0x4000\uff0c\".got.plt\"\u6bb5\u7684\u8303\u56f4\u662f\uff1a0x4000-0x4038</p> <ul> <li><code>0x3fe0</code>\u662f\u5168\u5c40\u53d8\u91cf<code>b</code>\u5728\".got\"\u6bb5\u7684\u4f4d\u7f6e\uff0c<code>bar</code>\u51fd\u6570\u4e2d\u53d8\u91cf<code>b</code>\u7684\u5730\u5740\u5c31\u662f\u6b64\u4f4d\u7f6e     <pre><code>0000000000001159 &lt;bar&gt;:\n    1159:       f3 0f 1e fa             endbr64 \n    115d:       55                      push   %rbp\n    115e:       48 89 e5                mov    %rsp,%rbp\n    1161:       c7 05 d1 2e 00 00 01    movl   $0x1,0x2ed1(%rip)        # 403c &lt;a&gt;\n    1168:       00 00 00 \n    116b:       48 8b 05 6e 2e 00 00    mov    0x2e6e(%rip),%rax        # 3fe0 &lt;b&gt;\n    1172:       c7 00 02 00 00 00       movl   $0x2,(%rax)\n    1178:       48 8b 05 61 2e 00 00    mov    0x2e61(%rip),%rax        # 3fe0 &lt;b&gt;\n    117f:       8b 10                   mov    (%rax),%edx\n    ...\n</code></pre></li> <li><code>0x4028</code>\u662f\u5916\u90e8\u51fd\u6570<code>ext</code>\u5728\".got.plt\"\u6bb5\u7684\u4f4d\u7f6e\uff0c<code>ext@plt</code>\u5c31\u662f\u8df3\u8f6c\u5230\u6b64\u4f4d\u7f6e     <pre><code>0000000000001090 &lt;ext@plt&gt;:\n    1090:       f3 0f 1e fa             endbr64 \n    1094:       f2 ff 25 8d 2f 00 00    bnd jmpq *0x2f8d(%rip)        # 4028 &lt;ext&gt;\n    109b:       0f 1f 44 00 00          nopl   0x0(%rax,%rax,1)\n</code></pre></li> </ul>"},{"location":"booknotes/cxydzwxy/link/dynamic/#_7","title":"\u52a8\u6001\u94fe\u63a5\u76f8\u5173\u7684\u6bb5","text":"<p>\u5728\u52a8\u6001\u94fe\u63a5\u4e2d\uff0c\u64cd\u4f5c\u7cfb\u7edf\u4f1a\u5148\u52a0\u8f7d\u52a8\u6001\u94fe\u63a5\u5668(Dynamic Linker)\uff0c\u5c06\u63a7\u5236\u6743\u4ea4\u7ed9\u52a8\u6001\u94fe\u63a5\u5668\u7684\u5165\u53e3\u5730\u5740\u3002\u5f53\u52a8\u6001\u94fe\u63a5\u5668\u5f97\u5230\u63a7\u5236\u6743\u4e4b\u540e\uff0c\u5b83\u5f00\u59cb\u6267\u884c\u4e00\u7cfb\u5217\u81ea\u8eab\u7684\u521d\u59cb\u5316\u64cd\u4f5c\uff0c\u7136\u540e\u6839\u636e\u5f53\u524d\u7684\u73af\u5883\u53c2\u6570\uff0c\u5f00\u59cb\u5bf9\u53ef\u6267\u884c\u6587\u4ef6\u8fdb\u884c\u52a8\u6001\u94fe\u63a5\u5de5\u4f5c\u3002\u5f53\u6240\u6709\u52a8\u6001\u94fe\u63a5\u5de5\u4f5c\u5b8c\u6210\u540e\uff0c\u52a8\u6001\u94fe\u63a5\u5668\u4f1a\u5c06\u63a7\u5236\u6743\u8f6c\u4ea4\u5230\u53ef\u6267\u884c\u6587\u4ef6\u7684\u5165\u53e3\u5730\u5740\uff0c\u7a0b\u5e8f\u5f00\u59cb\u6b63\u5f0f\u6267\u884c\u3002</p> <p>\u4e0b\u9762\u7ed3\u5408\u4f8b\u5b50\"secondary_dep\"\uff0c\u4ecb\u7ecd\u52a8\u6001\u94fe\u63a5\u76f8\u5173\u7684\u6bb5\u3002</p>"},{"location":"booknotes/cxydzwxy/link/dynamic/#interp","title":"\".interp\"\u6bb5","text":"<p>\u5728\u52a8\u6001\u94fe\u63a5\u7684ELF\u53ef\u6267\u884c\u6587\u4ef6\u4e2d\uff0c\u6709\u4e00\u4e2a\u4e13\u95e8\u7684\u6bb5\u53eb\u505a\".interp\"\u6bb5\uff0c\u6307\u5b9a\u4e86\u52a8\u6001\u94fe\u63a5\u5668\u7684\u4f4d\u7f6e\u3002\u901a\u8fc7<code>objdump -s main</code>\u547d\u4ee4\uff0c\u6253\u5370\".interp\"\u6bb5\u5982\u4e0b\uff0c <pre><code>Contents of section .interp:\n 0318 2f6c6962 36342f6c 642d6c69 6e75782d  /lib64/ld-linux-\n 0328 7838362d 36342e73 6f2e3200           x86-64.so.2.\n</code></pre> \u5176\u4e2d\uff0c<code>/lib64/ld-linux-x86-64.so.2</code>\u662f\u4e00\u4e2a\u8f6f\u94fe\u63a5\uff0c\u6307\u5411\u52a8\u6001\u94fe\u63a5\u5668\u5171\u4eab\u5bf9\u8c61\u7684\u4f4d\u7f6e\u3002</p>"},{"location":"booknotes/cxydzwxy/link/dynamic/#dynamic","title":"\".dynamic\"\u6bb5","text":"<p>\".dynamic\"\u6bb5\u4fdd\u5b58\u4e86\u52a8\u6001\u94fe\u63a5\u5668\u6240\u9700\u8981\u7684\u57fa\u672c\u4fe1\u606f\uff0c\u6bd4\u5982\u4f9d\u8d56\u4e8e\u54ea\u4e9b\u5171\u4eab\u5bf9\u8c61\u3001\u52a8\u6001\u94fe\u63a5\u5668\u7b26\u53f7\u8868\u7684\u4f4d\u7f6e\u3001\u52a8\u6001\u94fe\u63a5\u91cd\u5b9a\u4f4d\u8868\u7684\u4f4d\u7f6e\u3001\u5171\u4eab\u5bf9\u8c61\u521d\u59cb\u5316\u4ee3\u7801\u7684\u5730\u5740\u7b49\u3002</p> <p><code>readelf -d libouter.so</code>\u547d\u4ee4\u53ef\u67e5\u770blibouter.so\u7684\"dynamic\"\u6bb5\uff0c\u5176\u5185\u5bb9\u5982\u4e0b\uff1a <pre><code>$ readelf -d libouter.so\nDynamic section at offset 0x2e08 contains 25 entries:\n  Tag        Type                         Name/Value\n 0x0000000000000001 (NEEDED)             Shared library: [libinner.so]\n 0x0000000000000001 (NEEDED)             Shared library: [libc.so.6]\n 0x000000000000000c (INIT)               0x1000\n 0x000000000000000d (FINI)               0x11c0\n 0x0000000000000019 (INIT_ARRAY)         0x3df8\n 0x000000000000001b (INIT_ARRAYSZ)       8 (bytes)\n ...\n</code></pre></p> <p><code>ldd libouter.so</code>\u547d\u4ee4\u53ef\u67e5\u770blibouter.so\u6240\u4f9d\u8d56\u7684\u52a8\u6001\u5e93\uff0c\u5176\u5185\u5bb9\u5982\u4e0b\uff1a <pre><code>$ ldd libouter.so \n    linux-vdso.so.1 (0x00007fffd7fd9000)\n    libinner.so =&gt; not found\n    libc.so.6 =&gt; /lib/x86_64-linux-gnu/libc.so.6 (0x00007f4f1ce6b000)\n    /lib64/ld-linux-x86-64.so.2 (0x00007f4f1d07a000)\n</code></pre></p>"},{"location":"booknotes/cxydzwxy/link/dynamic/#_8","title":"\u52a8\u6001\u7b26\u53f7\u8868","text":"<p>\".dynsym\"\u6bb5\u662f\u52a8\u6001\u94fe\u63a5\u7684\u52a8\u6001\u7b26\u53f7\u8868\uff0c\u7c7b\u4f3c\u4e8e\u9759\u6001\u94fe\u63a5\u7684\u7b26\u53f7\u8868\".symtab\"\uff0c\u7528\u4e8e\u4fdd\u5b58\u52a8\u6001\u94fe\u63a5\u6a21\u5757\u4e4b\u95f4\u7684\u7b26\u53f7\u5bfc\u5165\u5bfc\u51fa\u5173\u7cfb\uff0c\u6a21\u5757\u79c1\u6709\u53d8\u91cf\u5219\u4e0d\u4fdd\u5b58\u3002\u4f46\".symtab\"\u6bb5\u5f80\u5f80\u4fdd\u5b58\u6240\u6709\u7b26\u53f7\u3002</p> <p>\".dynstr\"\u6bb5\u662f\u52a8\u6001\u94fe\u63a5\u7684\u52a8\u6001\u7b26\u53f7\u5b57\u7b26\u4e32\u8868\uff0c\u7c7b\u4f3c\u4e8e\u9759\u6001\u94fe\u63a5\u7684\u7b26\u53f7\u5b57\u7b26\u4e32\u8868\".strtab\"\u6bb5\uff0c\u7528\u4e8e\u4fdd\u5b58\u52a8\u6001\u94fe\u63a5\u76f8\u5173\u7b26\u53f7\u540d\u7684\u5b57\u7b26\u4e32\u3002\u540c\u65f6\u4e3a\u4e86\u52a0\u5feb\u8fd0\u884c\u65f6\u7b26\u53f7\u7684\u67e5\u627e\u8fc7\u7a0b\uff0c\u8fd8\u6709\u8f85\u52a9\u7684\u7b26\u53f7\u54c8\u5e0c\u8868\".hash\"\u6bb5\u3002</p> <p>\u547d\u4ee4<code>readelf --dyn-syms libouter.so</code>\u53ef\u67e5\u770b\u52a8\u6001\u7b26\u53f7\u8868\".dynsym\"\u6bb5\uff1a <pre><code>$ readelf --dyn-syms libouter.so \n\nSymbol table '.dynsym' contains 10 entries:\n   Num:    Value          Size Type    Bind   Vis      Ndx Name\n     0: 0000000000000000     0 NOTYPE  LOCAL  DEFAULT  UND \n     1: 0000000000000000     0 NOTYPE  WEAK   DEFAULT  UND _ITM_deregisterTMCloneTab\n     2: 0000000000000000     0 OBJECT  GLOBAL DEFAULT  UND b\n     3: 0000000000000000     0 FUNC    GLOBAL DEFAULT  UND printf@GLIBC_2.2.5 (2)\n     4: 0000000000000000     0 NOTYPE  WEAK   DEFAULT  UND __gmon_start__\n     5: 0000000000000000     0 FUNC    GLOBAL DEFAULT  UND ext\n     6: 0000000000000000     0 NOTYPE  WEAK   DEFAULT  UND _ITM_registerTMCloneTable\n     7: 0000000000000000     0 FUNC    WEAK   DEFAULT  UND __cxa_finalize@GLIBC_2.2.5 (2)\n     8: 0000000000001159    71 FUNC    GLOBAL DEFAULT   14 bar\n     9: 00000000000011a0    31 FUNC    GLOBAL DEFAULT   14 foo\n</code></pre></p> <p>\u547d\u4ee4<code>readelf -sD libouter.so</code>\u53ef\u4ee5\u67e5\u770b\u52a8\u6001\u7b26\u53f7\u7684\u54c8\u5e0c\u8868\uff1a <pre><code>$ readelf -sD libouter.so \n\nSymbol table of `.gnu.hash` for image:\n  Num Buc:    Value          Size   Type   Bind Vis      Ndx Name\n    8   0: 0000000000001159    71 FUNC    GLOBAL DEFAULT  14 bar\n    9   1: 00000000000011a0    31 FUNC    GLOBAL DEFAULT  14 foo\n</code></pre></p>"},{"location":"booknotes/cxydzwxy/link/dynamic/#_9","title":"\u52a8\u6001\u94fe\u63a5\u91cd\u5b9a\u4f4d\u8868","text":"<p>\u5171\u4eab\u5bf9\u8c61\u9700\u8981\u91cd\u5b9a\u4f4d\u7684\u4e3b\u8981\u539f\u56e0\u662f\u5bfc\u5165\u7b26\u53f7\u7684\u5b58\u5728\u3002\u65e0\u8bba\u662f\u53ef\u6267\u884c\u6587\u4ef6\u8fd8\u662f\u5171\u4eab\u5bf9\u8c61\uff0c\u4e00\u65e6\u4f9d\u8d56\u4e8e\u5176\u4ed6\u5171\u4eab\u5bf9\u8c61\uff0c\u90a3\u4e48\u5b83\u7684\u4ee3\u7801\u6216\u6570\u636e\u4e2d\u5c31\u4f1a\u6709\u5bf9\u4e8e\u5bfc\u5165\u7b26\u53f7\u7684\u5f15\u7528\u3002\u5728\u7f16\u8bd1\u65f6\u8fd9\u4e9b\u5bfc\u5165\u7b26\u53f7\u7684\u5730\u5740\u672a\u77e5\u3002\u5728\u9759\u6001\u94fe\u63a5\u4e2d\uff0c\u8fd9\u4e9b\u672a\u77e5\u7684\u5730\u5740\u5f15\u7528\u5728\u94fe\u63a5\u65f6\u88ab\u4fee\u6b63\u3002\u4f46\u662f\u5728\u52a8\u6001\u94fe\u63a5\u4e2d\uff0c\u5bfc\u5165\u7b26\u53f7\u7684\u5730\u5740\u5728\u8fd0\u884c\u65f6\u624d\u786e\u5b9a\uff0c\u6240\u4ee5\u9700\u8981\u5728\u8fd0\u884c\u65f6\u5c06\u8fd9\u4e9b\u5bfc\u5165\u7b26\u53f7\u7684\u5f15\u7528\u4fee\u6b63\uff0c\u5373\u9700\u8981\u91cd\u5b9a\u4f4d\u3002</p> <p>\u5bf9\u4e8e\u4f7f\u7528PIC\u6280\u672f\u7684\u53ef\u6267\u884c\u6587\u4ef6\u6216\u5171\u4eab\u5bf9\u8c61\uff0c\u867d\u7136\u5b83\u4eec\u7684\u4ee3\u7801\u6bb5\u4e0d\u9700\u8981\u91cd\u5b9a\u4f4d(\u56e0\u4e3a\u5730\u5740\u65e0\u5173)\uff0c\u4f46\u662f\u6570\u636e\u6bb5\u8fd8\u5305\u542b\u4e86\u7edd\u5bf9\u5730\u5740\u7684\u5f15\u7528\u3002\u56e0\u4e3a\u4ee3\u7801\u6bb5\u4e2d\u7edd\u5bf9\u5730\u5740\u76f8\u5173\u7684\u90e8\u5206\u88ab\u5206\u79bb\u4e86\u51fa\u6765\uff0c\u53d8\u6210\u4e86GOT\uff0c\u800cGOT\u5b9e\u9645\u4e0a\u662f\u6570\u636e\u6bb5\u7684\u4e00\u90e8\u5206\u3002\u9664\u4e86GOT\u4ee5\u5916\uff0c\u6570\u636e\u6bb5\u8fd8\u53ef\u80fd\u5305\u542b\u7edd\u5bf9\u5730\u5740\u5f15\u7528\u3002</p> <p>\u7c7b\u4f3c\u4e8e\u9759\u6001\u94fe\u63a5\u4e2d\u7684\u4ee3\u7801\u6bb5\u91cd\u5b9a\u4f4d\u8868\".rela.text\"\u6bb5\u548c\u6570\u636e\u6bb5\u7684\u91cd\u5b9a\u4f4d\u8868\".rela.data\"\u6bb5\uff0c\u52a8\u6001\u94fe\u63a5\u4e5f\u6709\u52a8\u6001\u4ee3\u7801\u6bb5\u91cd\u5b9a\u4f4d\u8868\".rela.plt\"\u6bb5\u548c\u52a8\u6001\u6570\u636e\u6bb5\u91cd\u5b9a\u4f4d\u8868\".rela.dyn\"\u3002</p> <ul> <li>\".rela.dyn\"\u6bb5\u662f\u5bf9\u6570\u636e\u5f15\u7528\u7684\u4fee\u6b63\uff0c\u5b83\u6240\u4fee\u6b63\u7684\u4f4d\u7f6e\u4f4d\u4e8e\".got\"\u4ee5\u53ca\u6570\u636e\u6bb5</li> <li>\".rela.plt\"\u6bb5\u662f\u5bf9\u51fd\u6570\u5f15\u7528\u7684\u4fee\u6b63\uff0c\u5b83\u6240\u4fee\u6b63\u7684\u4f4d\u7f6e\u4f4d\u4e8e\".got.plt\"</li> </ul> <p>\u547d\u4ee4<code>readelf -r libouter.so</code>\u53ef\u67e5\u770b\u91cd\u5b9a\u4f4d\u8868\uff1a <pre><code>$ readelf -r libouter.so \n\nRelocation section '.rela.dyn' at offset 0x4c8 contains 8 entries:\n  Offset          Info           Type           Sym. Value    Sym. Name + Addend\n000000003df8  000000000008 R_X86_64_RELATIVE                    1150\n000000003e00  000000000008 R_X86_64_RELATIVE                    1110\n000000004030  000000000008 R_X86_64_RELATIVE                    4030\n000000003fd8  000100000006 R_X86_64_GLOB_DAT 0000000000000000 _ITM_deregisterTMClone + 0\n000000003fe0  000200000006 R_X86_64_GLOB_DAT 0000000000000000 b + 0\n000000003fe8  000400000006 R_X86_64_GLOB_DAT 0000000000000000 __gmon_start__ + 0\n000000003ff0  000600000006 R_X86_64_GLOB_DAT 0000000000000000 _ITM_registerTMCloneTa + 0\n000000003ff8  000700000006 R_X86_64_GLOB_DAT 0000000000000000 __cxa_finalize@GLIBC_2.2.5 + 0\n\nRelocation section '.rela.plt' at offset 0x588 contains 3 entries:\n  Offset          Info           Type           Sym. Value    Sym. Name + Addend\n000000004018  000800000007 R_X86_64_JUMP_SLO 0000000000001159 bar + 0\n000000004020  000300000007 R_X86_64_JUMP_SLO 0000000000000000 printf@GLIBC_2.2.5 + 0\n000000004028  000500000007 R_X86_64_JUMP_SLO 0000000000000000 ext + 0\n\n$ readelf -S libouter.so | grep got\n  [12] .plt.got          PROGBITS         0000000000001060  00001060\n  [22] .got              PROGBITS         0000000000003fd8  00002fd8\n  [23] .got.plt          PROGBITS         0000000000004000  00003000\n</code></pre></p> <ul> <li>R_X86_64_JUMP_SLO\u7c7b\u578b<ul> <li>\u5bf9\".got.plt\"\u6bb5\u7684\u91cd\u5b9a\u4f4d\uff0c\u88ab\u4fee\u6b63\u7684\u4f4d\u7f6e\u53ea\u9700\u8981\u76f4\u63a5\u586b\u5165\u7b26\u53f7\u7684\u5730\u5740</li> <li>\u4ee5<code>printf</code>\u91cd\u5b9a\u4f4d\u4e3a\u4f8b\uff0c\u5f53\u52a8\u6001\u94fe\u63a5\u5668\u9700\u8981\u8fdb\u884c\u91cd\u5b9a\u4f4d\u65f6\uff0c\u5b83\u5148\u67e5\u627e<code>printf</code>\u4f4d\u4e8e<code>libc.so</code>\u7684\u5730\u5740(\u5047\u8bbe\u4e3a0x08801234)\u3002\u90a3\u4e48\u94fe\u63a5\u5668\u5c31\u4f1a\u5c06\u8fd9\u4e2a\u5730\u5740\u586b\u5165\u5230\".got.plt\"\u4e2d\u7684\u504f\u79fb<code>0x4020</code>\u7684\u4f4d\u7f6e\u4e2d\u3002</li> </ul> </li> <li>R_X86_64_GLOB_DAT\u7c7b\u578b<ul> <li>\u5bf9\".got\"\u7aef\u7684\u91cd\u5b9a\u4f4d\uff0c\u8fc7\u7a0b\u548cR_X86_64_JUMP_SLO\u7c7b\u578b\u7c7b\u4f3c</li> </ul> </li> <li>R_X86_64_RELATIVE\u7c7b\u578b<ul> <li>\u4e0d\u540c\u4e8e\u524d\u9762\u7684\u7c7b\u578b\uff0c\u662f\u5bf9\u7edd\u5bf9\u5730\u5740\u5f15\u7528\u7684\u91cd\u5b9a\u4f4d\uff0c\u53c8\u79f0\u57fa\u5740\u91cd\u7f6e(Rebasing)</li> </ul> </li> </ul>"},{"location":"booknotes/cxydzwxy/link/dynamic/#_10","title":"\u52a8\u6001\u94fe\u63a5\u7684\u6b65\u9aa4\u548c\u5b9e\u73b0","text":"<p>\u52a8\u6001\u94fe\u63a5\u7684\u6b65\u9aa4\u57fa\u672c\u4e0a\u5206\u4e09\u6b65\uff1a</p> <ul> <li>\u542f\u52a8\u52a8\u6001\u94fe\u63a5\u5668\u672c\u8eab</li> <li>\u88c5\u8f7d\u6240\u6709\u9700\u8981\u7684\u5171\u4eab\u5bf9\u8c61</li> <li>\u91cd\u5b9a\u4f4d\u548c\u521d\u59cb\u5316</li> </ul>"},{"location":"booknotes/cxydzwxy/link/dynamic/#_11","title":"\u52a8\u6001\u94fe\u63a5\u5668\u81ea\u4e3e","text":"<p>\u52a8\u6001\u94fe\u63a5\u5668\u6709\u4e24\u4e2a\u8981\u6c42\uff1a</p> <ul> <li>\u52a8\u6001\u94fe\u63a5\u5668\u672c\u8eab\u4e0d\u53ef\u4ee5\u4f9d\u8d56\u4e8e\u5176\u4ed6\u4efb\u4f55\u5171\u4eab\u5bf9\u8c61<ul> <li>\u4e0d\u4f7f\u7528\u4efb\u4f55\u7cfb\u7edf\u5e93\u3001\u8fd0\u884c\u5e93</li> </ul> </li> <li>\u52a8\u6001\u94fe\u63a5\u5668\u672c\u8eab\u6240\u9700\u8981\u7684\u5168\u5c40\u548c\u9759\u6001\u53d8\u91cf\u7684\u91cd\u5b9a\u4f4d\u5de5\u4f5c\u7531\u5b83\u672c\u8eab\u5b8c\u6210<ul> <li>\u7531\u4e00\u6bb5\u975e\u5e38\u7cbe\u5de7\u7684\u4ee3\u7801\u5b8c\u6210\uff0c\u79f0\u4e3a\u81ea\u4e3e(Bootstrap)</li> </ul> </li> </ul> <p>\u5f53\u7a0b\u5e8f\u542f\u52a8\u65f6\uff0c\u901a\u8fc7\u6808\u7ed9\u52a8\u6001\u94fe\u63a5\u5668\u4f20\u9012\u53c2\u6570\uff0c\u4e0b\u9762\u7684\u4ee3\u7801\u53ef\u4ee5\u6253\u5370\u8fdb\u7a0b\u5f00\u59cb\u6267\u884c\u65f6\u6808\u4e0a\u7684\u4fe1\u606f\uff0c\u5305\u62ec\uff1a</p> <ul> <li>\u8fdb\u7a0b\u53c2\u6570<code>argv</code></li> <li>\u73af\u5883\u53d8\u91cf<code>environ</code></li> <li>\u52a8\u6001\u94fe\u63a5\u5668\u6240\u9700\u8981\u7684\u4e00\u4e9b\u8f85\u52a9\u4fe1\u606f\u7ec4(Auxiliary Vector)<ul> <li>AT_ENTRY\u662f\u7a0b\u5e8f\u5165\u53e3\u5730\u5740\uff0c\u5373\".text\"\u6bb5\u7684\u8d77\u59cb\u5730\u5740\uff0c\u4e5f\u662f<code>_start</code>\u51fd\u6570\u7684\u5730\u5740</li> </ul> </li> </ul> <pre><code>int main(int argc, char** argv, char** environ)\n{\n   uint64_t* p = (uint64_t*)argv;\n   printf(\"Argument count: %ld\\n\", *(p - 1));\n   assert(argc == *(p - 1));\n\n   int i = 0;\n   for (; i &lt; *(p - 1); i++)\n   {\n      printf(\"Argument %d : %s\\n\", i, (char *)(*(p + i)));\n   }\n\n   p += i;\n   p++; // skip 0;\n   assert((void*)environ == (void*)p);\n\n   printf(\"Environment: \\n\");\n   while(*p)\n   {\n      printf(\"\\t%s\\n\", (char *)(*p));\n      p++;\n   }\n   p++; // skip 0;\n\n   printf(\"Auxiliary Vectors:\\n\");\n   Elf64_auxv_t* aux = (Elf64_auxv_t*)p;\n   while(aux-&gt;a_type != AT_NULL)\n   {\n      // Type is defined in /usr/include/x86_64-linux-gnu/bits/auxv.h\n      printf(\"\\tType: %02ld, Value: %lx\\n\", aux-&gt;a_type, aux-&gt;a_un.a_val);\n      aux++;\n   }\n\n   return 0;\n}\n</code></pre>"},{"location":"booknotes/cxydzwxy/link/dynamic/#_12","title":"\u88c5\u8f7d\u5171\u4eab\u5bf9\u8c61","text":"<p>\u5b8c\u6210\u57fa\u672c\u81ea\u4e3e\u4ee5\u540e\uff0c\u52a8\u6001\u94fe\u63a5\u5668\u5c06\u53ef\u6267\u884c\u6587\u4ef6\u548c\u94fe\u63a5\u5668\u672c\u8eab\u7684\u7b26\u53f7\u8868\u5408\u5e76\u5230\u4e00\u4e2a\u7b26\u53f7\u8868\u4e2d\uff0c\u6211\u4eec\u79f0\u4e4b\u4e3a\u5168\u5c40\u7b26\u53f7\u8868(Global Symbol Table)\u3002\u7136\u540e\u6839\u636e\".dynamic\"\u6bb5\u4e2d\u7684<code>DT_NEEDED</code>\u52a0\u8f7d\u6240\u9700\u5171\u4eab\u5bf9\u8c61\u3002\u5f53\u4e00\u4e2a\u65b0\u7684\u5171\u4eab\u5bf9\u8c61\u88ab\u88c5\u8f7d\u8fdb\u6765\u540e\uff0c\u5b83\u7684\u7b26\u53f7\u8868\u4f1a\u88ab\u5408\u5e76\u5230\u5168\u5c40\u7b26\u53f7\u8868\u4e2d\u3002</p> <p>\u5982\u679c\u4e24\u4e2a\u4e0d\u540c\u7684\u6a21\u5757\u5b9a\u4e49\u4e86\u540c\u4e00\u4e2a\u7b26\u53f7\uff0c\u90a3\u4e48\u540e\u52a0\u5165\u5168\u5c40\u7b26\u53f7\u8868\u7684\u7b26\u53f7\u4f1a\u88ab\u5ffd\u7565\uff0c\u79f0\u4e3a\u5171\u4eab\u5bf9\u8c61\u7684\u5168\u5c40\u7b26\u53f7\u4ecb\u5165(Global Symbol Interpose)\u3002</p> <p>\u5728\u4f8b\u5b50\"sym_interpose\"\u4e2d\uff0cb1.so\u4f9d\u8d56a1.so\uff0cb2.so\u4f9d\u8d56a2.so\uff0ca1.so\u548ca2.so\u5b9a\u4e49\u4e86\u76f8\u540c\u7684\u51fd\u6570<code>a()</code>\u3002\u52a8\u6001\u94fe\u63a5\u5668\u6309\u7167\u5e7f\u5ea6\u4f18\u5148\u7684\u987a\u5e8f\u8fdb\u884c\u88c5\u8f7d\u65f6\uff0c\u9996\u5148\u662fmain\uff0c\u7136\u540e\u662fb1.so\u3001b2.so\u3001a1.so\uff0c\u6700\u540e\u662fa2.so\u3002\u56e0\u6b64\uff0ca2.so\u7684<code>a()</code>\u51fd\u6570\u88ab\u5ffd\u7565\u3002</p>"},{"location":"booknotes/cxydzwxy/link/dynamic/#_13","title":"\u91cd\u5b9a\u4f4d\u548c\u521d\u59cb\u5316","text":"<p>\u88c5\u8f7d\u5b8c\u6240\u6709\u5171\u4eab\u5bf9\u8c61\u540e\uff0c\u52a8\u6001\u94fe\u63a5\u5668\u5df2\u7ecf\u62e5\u6709\u4e86\u8fdb\u7a0b\u7684\u5168\u5c40\u7b26\u53f7\u8868\uff0c\u56e0\u6b64\u5f00\u59cb\u904d\u5386\u53ef\u6267\u884c\u6587\u4ef6\u548c\u6bcf\u4e2a\u5171\u4eab\u5bf9\u8c61\u7684\u91cd\u5b9a\u4f4d\u8868\uff0c\u5c06\u5b83\u4eec\u7684GOT/PLT\u4e2d\u7684\u6bcf\u4e2a\u9700\u8981\u91cd\u5b9a\u4f4d\u7684\u4f4d\u7f6e\u8fdb\u884c\u4fee\u6b63\u3002</p> <p>\u91cd\u5b9a\u4f4d\u5b8c\u6210\u540e\uff0c\u5982\u679c\u67d0\u4e2a\u5171\u4eab\u5bf9\u8c61\u6709\".init\"\u6bb5\uff0c\u90a3\u4e48\u52a8\u6001\u94fe\u63a5\u5668\u4f1a\u6267\u884c\".init\"\u6bb5\u4e2d\u7684\u4ee3\u7801\uff0c\u7528\u4ee5\u5b9e\u73b0\u5171\u4eab\u5bf9\u8c61\u7279\u6709\u7684\u521d\u59cb\u5316\u8fc7\u7a0b\u3002\u6bd4\u5982\u6700\u5e38\u89c1\u7684\uff0c\u5171\u4eab\u5bf9\u8c61\u4e2d\u7684C++\u7684\u5168\u5c40/\u9759\u6001\u5bf9\u8c61\u7684\u6784\u9020\u5c31\u9700\u8981\u901a\u8fc7\".init\"\u6765\u521d\u59cb\u5316\u3002\u76f8\u5e94\u5730\uff0c\".finit\"\u6bb5\u4f1a\u5728\u8fdb\u7a0b\u9000\u51fa\u65f6\u6267\u884c\uff0c\u5b9e\u73b0\u5168\u5c40\u5bf9\u8c61\u6790\u6784\u4e4b\u7c7b\u7684\u64cd\u4f5c\u3002</p> <p>\u5982\u679c\u8fdb\u7a0b\u7684\u53ef\u6267\u884c\u6587\u4ef6\u4e5f\u6709\".init\"\u6bb5\uff0c\u52a8\u6001\u94fe\u63a5\u5668\u4e0d\u4f1a\u6267\u884c\u5b83\uff0c\u56e0\u4e3a\u53ef\u6267\u884c\u6587\u4ef6\u7684\".init\"\u6bb5\u548c\".finit\"\u6bb5\u662f\u7531\u7a0b\u5e8f\u521d\u59cb\u5316\u90e8\u5206\u4ee3\u7801\u8d1f\u8d23\u6267\u884c\u7684\u3002</p>"},{"location":"booknotes/cxydzwxy/link/dynamic/#_14","title":"\u663e\u5f0f\u8fd0\u884c\u65f6\u94fe\u63a5","text":"<p>\u5171\u4eab\u5bf9\u8c61\u4e0d\u4ec5\u53ef\u4ee5\u901a\u8fc7\u52a8\u6001\u94fe\u63a5\u5e93\u81ea\u52a8\u5bfc\u5165\uff0c\u4e5f\u53ef\u4ee5\u8fd0\u884c\u65f6\u624b\u52a8\u5bfc\u5165\u3002\u4e0b\u9762\u7684\u4ee3\u7801\u5c55\u793a\u4e86\u5982\u4f55\u52a8\u6001\u88c5\u8f7d\u5e93(Dynamic Loading Library)\uff1a</p> <ul> <li>\u52a8\u6001\u52a0\u8f7d<code>libm.so.6</code>\u5171\u4eab\u5bf9\u8c61</li> <li>\u8fd0\u884c\u5e93\u4e2d\u7684<code>sin</code>\u51fd\u6570 <pre><code>int main(void)\n{\n   void *handle = dlopen(\"libm.so.6\", RTLD_NOW);\n\n   double (*func)(double);\n   func = dlsym(handle, \"sin\");\n   printf(\"%f\\n\", func(3.1415926 / 2));\n\n   dlclose(handle);\n   return 0;\n}\n</code></pre></li> </ul> <p>\u5f53\u591a\u4e2a\u540c\u540d\u7b26\u53f7\u51b2\u7a81\u65f6\uff0c<code>dlsym()</code>\u5bf9\u7b26\u53f7\u7684\u67e5\u627e\u4f18\u5148\u7ea7\u5206\u4e24\u79cd\u7c7b\u578b\uff1a</p> <ul> <li>\u201c\u88c5\u8f7d\u5e8f\u5217\u201d\u67e5\u627e<ul> <li>\u5f53<code>dlopen()</code>\u7b2c\u4e00\u4e2a\u53c2\u6570\u4e3a<code>NULL</code>\u65f6\uff0c\u5728\u5728\u5168\u5c40\u7b26\u53f7\u8868\u4e2d\uff0c\u4f9d\u636e\u201c\u5148\u8f7d\u5165\u7b26\u53f7\u4f18\u5148\u201d\u7684\u539f\u5219\u8fdb\u884c\u67e5\u627e</li> </ul> </li> <li>\u201c\u4f9d\u8d56\u5e8f\u5217\u201d\u67e5\u627e<ul> <li>\u5f53<code>dlopen()</code>\u6253\u5f00\u67d0\u4e2a\u7279\u5b9a\u5171\u4eab\u5bf9\u8c61\u65f6\uff0c\u4ee5\u5f53\u524d\u5171\u4eab\u5bf9\u8c61\u4e3a\u6839\u8282\u70b9\uff0c\u5bf9\u5b83\u6240\u6709\u4f9d\u8d56\u7684\u5171\u4eab\u5bf9\u8c61\u8fdb\u884c\u5e7f\u5ea6\u4f18\u5148\u904d\u5386\u67e5\u627e</li> </ul> </li> </ul>"},{"location":"booknotes/cxydzwxy/link/dynamic/#-rdynamic","title":"\"-rdynamic\"\u9009\u9879","text":"<p>\u9ed8\u8ba4\u60c5\u51b5\u4e0b\uff0c\u53ea\u6709\u52a8\u6001\u94fe\u63a5\u5e93\u624d\u4f1a\u5bfc\u51fa\u7b26\u53f7\u5230\u52a8\u6001\u7b26\u53f7\u8868\".dynsym\"\u3002\u4f46\u662f\uff0c\u5f53\u5728\u94fe\u63a5\u7684\u65f6\u5019\u52a0\u4e0a\"-rdynamic\"\u9009\u9879\u65f6\uff0c\u94fe\u63a5\u5668\u4f1a\u5bf9\u53ef\u6267\u884c\u6587\u4ef6\u4e5f\u4f1a\u5bfc\u51fa\u7b26\u53f7\u5230\u52a8\u6001\u7b26\u53f7\u8868\".dynsym\"\u3002\u4e00\u822c\u60c5\u51b5\u4e0b\uff0c\u53ef\u6267\u884c\u6587\u4ef6\u4e0d\u9700\u8981\u5bfc\u51fa\u7b26\u53f7\uff0c\u4f46\u662f\u5f53\u901a\u8fc7<code>dlopen</code>\u52a8\u6001\u52a0\u8f7d\u5e93\u65f6\uff0c\u53ef\u80fd\u9700\u8981\u53ef\u6267\u884c\u6587\u4ef6\u5bfc\u51fa\u7b26\u53f7\u7ed9\u52a8\u6001\u5e93\u3002\u4f8b\u5982\uff0cStackOverflow\u4e2d\u7684\u4f8b\u5b50\uff0c\u901a\u8fc7\"-rdynamic\"\u9009\u9879\u89e3\u51b3\u4e86\u8fd0\u884c\u65f6\u7684\u9519\u8bef\u3002</p> <p>\u4f8b\u5b50\"dlopen_rdynamic\"\u5229\u7528\"-rdynamic\"\u9009\u9879\uff0c\u89e3\u51b3\u4e86\u51fd\u6570\u8c03\u7528\u4e0d\u4e00\u81f4\u7684\u95ee\u9898\u3002\u5f53\u6709\"-rdynamic\"\u9009\u9879\u65f6\uff0c<code>print_static_var_addr</code>\u51fd\u6570\u548c<code>s_a</code>\u9759\u6001\u53d8\u91cf\u7684\u5730\u5740\u624d\u662f\u4e00\u81f4\u7684\u3002</p> \u6709\"-rdynamic\"\u9009\u9879\u6ca1\u6709\"-rdynamic\"\u9009\u9879 <pre><code>&gt; ./main \nCall static function directly:\nprint_static_var_addr addr: 0x56042d12f303\ns_a addr = 0x56042d132014\nCall static function from dlopen:\nprint_static_var_addr addr: 0x56042d12f303\ns_a addr = 0x56042d132014\n\n# \".dynsym\"\u6bb5\u4e2d\u6709print_static_var_addr\n&gt; readelf --dyn-syms ./main\nSymbol table '.dynsym' contains 23 entries:\nNum:    Value          Size Type    Bind   Vis      Ndx Name\n...\n    14: 0000000000001303    41 FUNC    GLOBAL DEFAULT   16 print_static_var_addr\n...\n</code></pre> <pre><code>&gt; ./main \nCall static function directly:\nprint_static_var_addr addr: 0x558854f1c303\ns_a addr = 0x558854f1f014\nCall static function from dlopen:\nprint_static_var_addr addr: 0x7f3f99f6b15c\ns_a addr = 0x7f3f99f6e02c\n\n# \".dynsym\"\u6bb5\u4e2d\u6ca1\u6709print_static_var_addr\n&gt; readelf --dyn-syms ./main\n</code></pre>"},{"location":"booknotes/cxydzwxy/link/dynamic/#linux","title":"Linux\u5171\u4eab\u5e93\u7684\u7ec4\u7ec7","text":""},{"location":"booknotes/cxydzwxy/link/dynamic/#_15","title":"\u5171\u4eab\u5e93\u7248\u672c","text":"<p>Linux\u89c4\u5b9a\u5171\u4eab\u5e93\u7684\u6587\u4ef6\u540d\u89c4\u5219\u5982\u4e0b\uff1a<code>libname.so.x.y.z</code></p> <ul> <li>name - \u5e93\u7684\u540d\u5b57</li> <li>x - \u4e3b\u7248\u672c\u53f7<ul> <li>\u4e0d\u540c\u4e3b\u7248\u672c\u53f7\u7684\u5e93\u4e4b\u95f4\u65f6\u4e0d\u517c\u5bb9\u7684</li> </ul> </li> <li>y - \u6b21\u7248\u672c\u53f7<ul> <li>\u589e\u52a0\u4e00\u4e9b\u65b0\u7684\u63a5\u53e3\u7b26\u53f7\uff0c\u4e14\u4fdd\u6301\u539f\u6765\u7684\u7b26\u53f7\u4e0d\u53d8</li> </ul> </li> <li>z - \u53d1\u5e03\u7248\u672c\u53f7<ul> <li>\u4e00\u4e9b\u9519\u8bef\u7684\u4fee\u6b63\u3001\u6027\u80fd\u7684\u6539\u8fdb\u7b49\uff0c\u5e76\u4e0d\u6dfb\u52a0\u4efb\u4f55\u65b0\u7684\u63a5\u53e3\uff0c\u4e5f\u4e0d\u5bf9\u63a5\u53e3\u8fdb\u884c\u66f4\u6539</li> </ul> </li> </ul>"},{"location":"booknotes/cxydzwxy/link/dynamic/#soname","title":"SONAME","text":"<p>SONAME\u662f\u5171\u4eab\u5bf9\u8c61\u7684\u771f\u5b9e\u540d\u5b57\uff0c\u901a\u8fc7<code>-Wl,-soname,&lt;soname&gt;</code>\u5728\u7f16\u8bd1\u65f6\u586b\u5165\u5171\u4eab\u5e93\uff0c\u53ef\u901a\u8fc7\u547d\u4ee4<code>objdump -p &lt;lib&gt; | grep SONAME</code>\u6216<code>readelf -d libfoo.so | grep SONAME</code>\u67e5\u770b\u3002</p> <p>\u5982\u679c\u4e00\u4e2a\u5171\u4eab\u5e93\u5b58\u5728SONAME\uff0c\u90a3\u4e48\u65e0\u8bba\u5171\u4eab\u5e93\u81ea\u8eab\u7684\u6587\u4ef6\u540d\u5982\u4f55\u6539\u53d8\uff0c\u5728\u94fe\u63a5\u65f6\u90fd\u4f1a\u4f7f\u7528SONAME\u3002\u5982\u679c\u4e00\u4e2a\u5171\u4eab\u5e93\u6ca1\u6709\u8bbe\u7f6eSONAME\uff0c\u94fe\u63a5\u65f6\u4f1a\u4f7f\u7528\u6587\u4ef6\u540d\u3002\u5982\u4f8b\u5b50\"soname\"\u4e2d\u7684<code>libfoo.so</code>\u8bbe\u7f6e\u4e86SONAME\u3002\u56e0\u6b64\u5373\u4f7f\u91cd\u547d\u540d\u5171\u4eab\u5e93\u4e3a<code>libbar.so</code>\uff0c\u518d\u7528<code>-lbar</code>\u94fe\u63a5\uff0c\u6700\u7ec8\u751f\u6210\u7684\u53ef\u6267\u884c\u6587\u4ef6\u8fd8\u662f\u8981\u6c42\u94fe\u63a5\u5230<code>libfoo.so</code>\u3002</p> <p>\u5728Linux\u7cfb\u7edf\u4e2d\uff0cSONAME\u7528\u4e8e\u7edf\u4e00\u6807\u8bc6\u517c\u5bb9\u7684\u5171\u4eab\u5e93\uff1a</p> <ul> <li>SONAME\u53ea\u4fdd\u7559\u4e3b\u7248\u672c\u53f7\uff0c\u89c4\u5b9a\u4e86\u5171\u4eab\u5e93\u7684\u63a5\u53e3(\u5171\u4eab\u5e93\u540d\u5b57\u548c\u4e3b\u7248\u672c\u53f7\u53ef\u4ee5\u4fdd\u8bc1\u517c\u5bb9\u6027)<ul> <li>\u6bd4\u5982\uff0c\u4e00\u4e2a\u5171\u4eab\u5e93\u53eb\u505a<code>libfoo.so.2.6.1</code>\uff0c\u90a3\u4e48\u5b83\u7684SO-NAME\u662f<code>libfoo.so.2</code></li> </ul> </li> <li>\u7cfb\u7edf\u4f1a\u4e3a\u6bcf\u5404\u5171\u4eab\u5e93\u5728\u5b83\u6240\u5728\u7684\u76ee\u5f55\u521b\u5efa\u4e00\u4e2a\u8ddfSO-NAME\u76f8\u540c\u7684\u5e76\u4e14\u6307\u5411\u5b83\u7684\u8f6f\u94fe\u63a5<ul> <li>\u6bd4\u5982\uff0c\u4e00\u4e2a\u5171\u4eab\u5e93<code>/ib/libfoo.so.2.6.1</code>\uff0c\u90a3\u4e48\u5b58\u5728\u4e00\u4e2a\u8f6f\u94fe\u63a5<code>/lib/libfoo.so.2</code></li> </ul> </li> </ul>"},{"location":"booknotes/cxydzwxy/link/dynamic/#_16","title":"\u94fe\u63a5\u540d","text":"<p>GCC\u7684\u63d0\u4f9b\u4e86\u4e0d\u540c\u7684\u65b9\u6cd5\u6307\u5b9a\u94fe\u63a5\u7684\u5171\u4eab\u5e93\uff1a</p> <ul> <li><code>-l&lt;link_name&gt;</code>\u53c2\u6570<ul> <li>\u6307\u5b9a\u9700\u8981\u94fe\u63a5\u7684\u5171\u4eab\u5e93<code>lib&lt;link_name&gt;.so</code></li> </ul> </li> <li><code>-l:&lt;filename&gt;</code>\u53c2\u6570<ul> <li>\u901a\u8fc7\u6587\u4ef6\u540d\u6307\u5b9a\u5171\u4eab\u5e93\uff0c\u53c2\u8003LD\u624b\u518c</li> </ul> </li> <li>\u5168\u8def\u5f84\u6307\u5b9a</li> <li><code>-Wl,-static</code>\u53c2\u6570<ul> <li>\u6307\u5b9a\u67e5\u627e\u9759\u6001\u5e93\uff0c\u901a\u8fc7<code>-Wl,-Bdynamic</code>\u6062\u590d\u6210\u52a8\u6001\u5e93\u67e5\u627e</li> </ul> </li> </ul> <p>\u4f8b\u5b50\"linkname\"\u63d0\u4f9b\u4e86\u6307\u5b9a\u5171\u4eab\u5e93\u7684\u4e0d\u540c\u65b9\u6cd5\uff1a</p> <pre><code># \u94fe\u63a5\u5f53\u524d\u76ee\u5f55\u4e0b\u7684\u52a8\u6001\u5e93libfoo.so\nmain: clean foo $(OBJS)\n    $(CC) $(OBJS) -L. -lfoo -o main\n\n# \u94fe\u63a5\u5f53\u524d\u76ee\u5f55\u4e0b\u7684\u52a8\u6001\u5e93libfoo.so\nmain2: clean foo $(OBJS)\n    $(CC) $(OBJS) -L. -l:libfoo.so -o main\n\n# \u94fe\u63a5\u5f53\u524d\u76ee\u5f55\u4e0b\u7684\u52a8\u6001\u5e93libfoo.so\nmain3: clean foo $(OBJS)\n    $(CC) $(OBJS) $(PWD)/libfoo.so -o main\n\n# \u94fe\u63a5\u5f53\u524d\u76ee\u5f55\u4e0b\u7684\u9759\u6001\u5e93libfoo.a\nmain_static: clean foo_static $(OBJS)\n    $(CC) $(OBJS) -L. -Wl,-static -lfoo -Wl,-Bdynamic -o main\n</code></pre>"},{"location":"booknotes/cxydzwxy/link/dynamic/#_17","title":"\u5171\u4eab\u5e93\u7684\u67e5\u627e\u8fc7\u7a0b","text":"<p>\u9ed8\u8ba4\u60c5\u51b5\u4e0b\uff0c\u52a8\u6001\u94fe\u63a5\u5668\u4f1a\u4f9d\u6b21\u5728<code>/etc/ld.so.cache</code>\uff0c<code>/lib</code>\u548c<code>/user/lib</code>\u76ee\u5f55\u4e0b\u5bfb\u627e\u5171\u4eab\u5e93\u3002\u5176\u4e2d\uff0c<code>/etc/ld.so.cache</code>\u662f\u7531<code>ldconfig</code>\u5de5\u5177\u4e3a\u4e86\u52a0\u901f\u5171\u4eab\u5e93\u5bfb\u627e\u8fc7\u7a0b\uff0c\u6839\u636e<code>/etc/ld.so.conf</code>\u89c4\u5b9a\u7684\u76ee\u5f55\u5efa\u7acb\u7684\u4e34\u65f6\u7f13\u5b58\u3002</p> <p>\u9664\u4e86\u9ed8\u8ba4\u60c5\u51b5\uff0cLinux\u7cfb\u7edf\u8fd8\u63d0\u4f9b\u4e86\u8bb8\u591a\u5176\u4ed6\u7684\u65b9\u6cd5\uff0c\u7528\u6765\u6539\u53d8\u52a8\u6001\u94fe\u63a5\u5668\u88c5\u8f7d\u5171\u4eab\u5e93\u7684\u8def\u5f84\u3002\u4f8b\u5b50\"lib_dep\"\u5c55\u793a\u4e86\u591a\u79cd\u4e0d\u540c\u7684\u65b9\u6cd5\uff0c\u7528\u6765\u6307\u5b9a\u5171\u4eab\u5e93\u7684\u641c\u7d22\u8def\u5f84\uff1a <pre><code>inner:\n    gcc -shared -fPIC lib_inner.c -o libinner.so\n\nouter_alone_so:\n    gcc -shared -fPIC lib_outer.c -o libouter.so\n\nouter_inner_so:\n    gcc -shared -fPIC lib_outer.c -L. -linner -o libouter.so\n\n# static link libouter.a and dynamic link libinner.so\n# it needs LD_LIBRARY_PATH for libinner.so search path\n# ldd main\n#   linux-vdso.so.1 (0x00007ffff2dc8000)\n#   libinner.so =&gt; not found\n#   libc.so.6 =&gt; /lib/x86_64-linux-gnu/libc.so.6 (0x00007f02a7970000)\n#   /lib64/ld-linux-x86-64.so.2 (0x00007f02a7bbb000)\nmain_a: clean inner outer_a\n    gcc -o main main.c libouter.a -L. -linner\n    env LD_LIBRARY_PATH=. ./main\n\n# same as main_a\n# ldd main\n#   linux-vdso.so.1 (0x00007fffed222000)\n#   libinner.so =&gt; not found\n#   libc.so.6 =&gt; /lib/x86_64-linux-gnu/libc.so.6 (0x00007f2b50a10000)\n#   /lib64/ld-linux-x86-64.so.2 (0x00007f2b50c5c000)\nmain_a2: clean inner outer_a\n    gcc -o main main.c -L. -Wl,-static -louter -Wl,-Bdynamic -linner\n    env LD_LIBRARY_PATH=. ./main\n\n# no link option during link, so it needs LD_LIBRARY_PATH\n# ldd main\n#   linux-vdso.so.1 (0x00007fffd73c6000)\n#   libouter.so =&gt; not found\n#   libinner.so =&gt; not found\n#   libc.so.6 =&gt; /lib/x86_64-linux-gnu/libc.so.6 (0x00007f74af570000)\n#   /lib64/ld-linux-x86-64.so.2 (0x00007f74af7b3000)\nmain: clean inner outer_alone_so\n    gcc -o main main.c -L. -louter -linner\n    env LD_LIBRARY_PATH=. ./main\n\n# \"-rpath-link\" only affects compile process, not runtime,\n# so it needs LD_LIBRARY_PATH\n# ldd main\n#   linux-vdso.so.1 (0x00007fffe0774000)\n#   libouter.so =&gt; not found\n#   libinner.so =&gt; not found\n#   libc.so.6 =&gt; /lib/x86_64-linux-gnu/libc.so.6 (0x00007f4637460000)\n#   /lib64/ld-linux-x86-64.so.2 (0x00007f46376a2000)\nmain_so: clean inner outer_alone_so\n    gcc -o main main.c -L. -louter -linner -Wl,-rpath-link=.\n    env LD_LIBRARY_PATH=. ./main\n\n# \"-rpath\" specifies the library path, no need LD_LIBRARY_PATH\n# ldd main\n#   linux-vdso.so.1 (0x00007fffef8c8000)\n#   libouter.so =&gt; ./libouter.so (0x00007f3252b10000)\n#   libinner.so =&gt; ./libinner.so (0x00007f3252b00000)\n#   libc.so.6 =&gt; /lib/x86_64-linux-gnu/libc.so.6 (0x00007f32528d0000)\n#   /lib64/ld-linux-x86-64.so.2 (0x00007f3252b36000)\nmain_so1: clean inner outer_alone_so\n    gcc -o main main.c -L. -louter -linner -Wl,-rpath=.\n    ./main\n\n# \"--allow-shlib-undefined\" suppress the link error for libinner.so symbols,\n# so, it needs LD_PRELOAD to load libinner.so in advance\n# ldd main\n#   linux-vdso.so.1 (0x00007fffc3dda000)\n#   libouter.so =&gt; not found\n#   libc.so.6 =&gt; /lib/x86_64-linux-gnu/libc.so.6 (0x00007fcccec50000)\n#   /lib64/ld-linux-x86-64.so.2 (0x00007fcccee96000)\nmain_so2: clean inner outer_alone_so\n    gcc -o main main.c -L. -louter -Wl,--allow-shlib-undefined\n    env LD_PRELOAD=./libinner.so LD_LIBRARY_PATH=. ./main\n\n# Different from \"main_so\", libouter.so knows libinner.so, so it doesn't\n# need specify libinner.so during compile\n# ldd main\n#   linux-vdso.so.1 (0x00007fffe35b8000)\n#   libouter.so =&gt; not found\n#   libc.so.6 =&gt; /lib/x86_64-linux-gnu/libc.so.6 (0x00007f1249120000)\n#   /lib64/ld-linux-x86-64.so.2 (0x00007f1249365000)\nmain_so3: clean inner outer_inner_so\n    gcc -o main main.c -L. -louter -Wl,-rpath-link=.\n    env LD_LIBRARY_PATH=. ./main\n\n# Different from \"main_so1\", libinner.so cannot be found by main because libouter.so\n# hides it\n# it needs LD_LIBRARY_PATH\n# ldd main\n#   linux-vdso.so.1 (0x00007fffd6902000)\n#   libouter.so =&gt; ./libouter.so (0x00007f0e15200000)\n#   libc.so.6 =&gt; /lib/x86_64-linux-gnu/libc.so.6 (0x00007f0e14fd0000)\n#   /lib64/ld-linux-x86-64.so.2 (0x00007f0e15224000)\n#   libinner.so =&gt; not found\nmain_so4: clean inner outer_inner_so\n    gcc -o main main.c -L. -linner -louter -Wl,-rpath=.\n    env LD_LIBRARY_PATH=. ./main\n\n# same as main_so4\n# ldd main\n#   linux-vdso.so.1 (0x00007ffff82f6000)\n#   libouter.so =&gt; ./libouter.so (0x00007f9479930000)\n#   libc.so.6 =&gt; /lib/x86_64-linux-gnu/libc.so.6 (0x00007f9479700000)\n#   /lib64/ld-linux-x86-64.so.2 (0x00007f9479955000)\n#   libinner.so =&gt; not found\nmain_so5: clean inner outer_inner_so\n    gcc -o main main.c -L. -louter -Xlinker -rpath .\n    env LD_LIBRARY_PATH=. ./main\n\n# same as \"-rpath-link\" option\n# ldd main\n#   linux-vdso.so.1 (0x00007fffcda2e000)\n#   libouter.so =&gt; not found\n#   libc.so.6 =&gt; /lib/x86_64-linux-gnu/libc.so.6 (0x00007fb0322e0000)\n#   /lib64/ld-linux-x86-64.so.2 (0x00007fb03252a000)\nmain_so6: clean inner outer_inner_so\n    export LD_LIBRARY_PATH=. &amp;&amp; gcc -o main main.c -L. -louter\n    env LD_LIBRARY_PATH=. ./main\n</code></pre></p> <ul> <li>\u7f16\u8bd1\u671f\u95f4 - \u6307\u5b9a\u94fe\u63a5\u65f6\u7684\u641c\u7d22\u8def\u5f84<ul> <li><code>-Wl,-rpath=&lt;path&gt;</code>\u548c<code>-Xlinker -rpath &lt;path&gt;</code><ul> <li><code>-rpath</code>\u9009\u9879\u4f1a\u5f71\u54cd\u8fd0\u884c\u671f\u95f4\u7684\u641c\u7d22\u8def\u5f84\uff0c<code>ldd</code>\u4f1a\u4ece\u6b64\u9009\u9879\u6307\u5b9a\u7684\u76ee\u5f55\u4e2d\u5bfb\u627e</li> <li><code>readelf -d &lt;ELF&gt;</code>\u53ef\u67e5\u770b\u76ee\u6807\u6587\u4ef6\u4e2d\u6307\u5b9a\u7684<code>rpath</code>\u8def\u5f84\uff1a<code>(RUNPATH)</code>\u5173\u952e\u5b57</li> </ul> </li> <li><code>-Wl,-rpath-link=&lt;path&gt;</code><ul> <li>\u4e0d\u5f71\u54cd\u8fd0\u884c\u671f\u95f4\u7684\u641c\u7d22\u8def\u5f84</li> </ul> </li> <li><code>export LD_LIBRARY_PATH=&lt;path&gt;</code><ul> <li>\u4e0d\u5f71\u54cd\u8fd0\u884c\u671f\u95f4\u7684\u641c\u7d22\u8def\u5f84</li> <li>\u548c<code>-rpath-link</code>\u7c7b\u4f3c</li> </ul> </li> </ul> </li> <li>\u8fd0\u884c\u671f\u95f4<ul> <li><code>export LD_LIBRARY_PATH=&lt;path&gt;</code> - \u6307\u5b9a\u8fd0\u884c\u65f6\u7684\u641c\u7d22\u8def\u5f84</li> <li><code>LD_PRELOAD=&lt;lib_path&gt;</code> - \u9884\u5148\u88c5\u8f7d\u5171\u4eab\u5e93</li> </ul> </li> </ul>"},{"location":"booknotes/cxydzwxy/link/dynamic/#_18","title":"\u8c03\u8bd5\u52a8\u6001\u94fe\u63a5\u5668","text":"<p>\u73af\u5883\u53d8\u91cf<code>LD_DEBUG</code>\u53ef\u4ee5\u6253\u5f00\u52a8\u6001\u94fe\u63a5\u5668\u7684\u8c03\u8bd5\u529f\u80fd\uff0c<code>LD_DEBUG</code>\u53ef\u4ee5\u8bbe\u7f6e\u6210\u5982\u4e0b\u503c\uff1a</p> LD_DEBUG\u7684\u503c \u529f\u80fd\u63cf\u8ff0 libs \u663e\u793a\u5171\u4eab\u5e93\u7684\u641c\u7d22\u8def\u5f84 reloc \u663e\u793a\u4ece\u5b9a\u4f4d\u8fc7\u7a0b files \u663e\u793a\u5904\u7406\u8f93\u5165\u6587\u4ef6\u7684\u8fc7\u7a0b symbols \u663e\u793a\u7b26\u53f7\u8868\u67e5\u627e\u8fc7\u7a0b bindings \u663e\u793a\u52a8\u6001\u94fe\u63a5\u7684\u7b26\u53f7\u7ed1\u5b9a\u8fc7\u7a0b versions \u663e\u793a\u7b26\u53f7\u7684\u7248\u672c\u4f9d\u8d56\u5173\u7cfb scopes \u663e\u793a\u8303\u56f4\u4fe1\u606f all \u663e\u793a\u4ee5\u4e0a\u6240\u6709\u4fe1\u606f statistics \u663e\u793a\u52a8\u6001\u94fe\u63a5\u8fc7\u7a0b\u4e2d\u7684\u5404\u79cd\u7edf\u8ba1\u4fe1\u606f unused \u663e\u793a\u6ca1\u6709\u4f7f\u7528\u5230\u7684\u5171\u4eab\u5e93 help \u663e\u793a\u5e2e\u52a9\u4fe1\u606f <p>\u4f8b\u5982\uff0c\u4e0b\u9762\u7684\u4f8b\u5b50\u901a\u8fc7<code>LD_DEBUG=libs</code>\uff0c\u627e\u5230\u4e86\u53ef\u6267\u884c\u6587\u4ef6<code>main</code>\u4f9d\u8d56\u7684\u4e24\u4e2a\u5171\u4eab\u5e93\u7684\u4f4d\u7f6e\uff1a</p> <ul> <li>./libfoo.so</li> <li>/lib/x86_64-linux-gnu/libc.so.6</li> </ul> <pre><code>$ env LD_DEBUG=libs LD_LIBRARY_PATH=. ./main\n    438736:     find library=libfoo.so [0]; searching\n    438736:      search path=./tls/haswell/x86_64:./tls/haswell:./tls/x86_64:./tls:./haswell/x86_64:./haswell:./x86_64:.           (LD_LIBRARY_PATH)\n    438736:       trying file=./tls/haswell/x86_64/libfoo.so\n    438736:       trying file=./tls/haswell/libfoo.so\n    438736:       trying file=./tls/x86_64/libfoo.so\n    438736:       trying file=./tls/libfoo.so\n    438736:       trying file=./haswell/x86_64/libfoo.so\n    438736:       trying file=./haswell/libfoo.so\n    438736:       trying file=./x86_64/libfoo.so\n    438736:       trying file=./libfoo.so\n    438736:\n    438736:     find library=libc.so.6 [0]; searching\n    438736:      search path=./tls/haswell/x86_64:./tls/haswell:./tls/x86_64:./tls:./haswell/x86_64:./haswell:./x86_64:.           (LD_LIBRARY_PATH)\n    438736:       trying file=./tls/haswell/x86_64/libc.so.6\n    438736:       trying file=./tls/haswell/libc.so.6\n    438736:       trying file=./tls/x86_64/libc.so.6\n    438736:       trying file=./tls/libc.so.6\n    438736:       trying file=./haswell/x86_64/libc.so.6\n    438736:       trying file=./haswell/libc.so.6\n    438736:       trying file=./x86_64/libc.so.6\n    438736:       trying file=./libc.so.6\n    438736:      search cache=/etc/ld.so.cache\n    438736:       trying file=/lib/x86_64-linux-gnu/libc.so.6\n    ...\n</code></pre>"},{"location":"booknotes/cxydzwxy/link/static/","title":"\u9759\u6001\u94fe\u63a5","text":"<p>\u300a\u7a0b\u5e8f\u5458\u7684\u81ea\u6211\u4fee\u517b--\u94fe\u63a5\u3001\u88c5\u8f7d\u4e0e\u5e93\u300b - \u4fde\u7532\u5b50\uff0c\u77f3\u51e1\uff0c\u6f58\u7231\u6c11\uff0c\u7b2c\u56db\u7ae0\u7684\u8bfb\u4e66\u7b14\u8bb0\uff1b\u4ee5\u53ca\u300a\u6df1\u5165\u7406\u89e3\u8ba1\u7b97\u673a\u7cfb\u7edf\u300b - Randal E. Bryant - \u7b2c\u4e09\u7248\uff0c\u7b2c7.6.3\u548c7.7\u7ae0\u8282\u7684\u8bfb\u4e66\u7b14\u8bb0\u3002\u672c\u6587\u4e2d\u7684\u6240\u6709\u4ee3\u7801\u53ef\u5728GitHub\u4ed3\u5e93\u4e2d\u627e\u5230</p>"},{"location":"booknotes/cxydzwxy/link/static/#_2","title":"\u9759\u6001\u94fe\u63a5\u8fc7\u7a0b","text":"<p>\u94fe\u63a5\u5668\u91c7\u7528\u76f8\u4f3c\u6bb5\u5408\u5e76\u7684\u65b9\u5f0f\uff0c\u5c06\u76f8\u540c\u6027\u8d28\u7684\u6bb5\u5408\u5e76\u5230\u4e00\u8d77\u3002\u6574\u4e2a\u94fe\u63a5\u8fc7\u7a0b\u5206\u4e24\u6b65\uff1a</p> <ul> <li>\u7a7a\u95f4\u4e0e\u5730\u5740\u5206\u914d<ul> <li>\u626b\u63cf\u6240\u6709\u8f93\u5165\u6587\u4ef6\uff0c\u521b\u5efa\u5168\u5c40\u7b26\u53f7\u8868\uff0c\u5e76\u5408\u5e76\u8f93\u5165\u6587\u4ef6</li> </ul> </li> <li>\u7b26\u53f7\u89e3\u6790\u4e0e\u91cd\u5b9a\u4f4d<ul> <li>\u8bfb\u53d6\u6bb5\u7684\u6570\u636e\u548c\u91cd\u5b9a\u4f4d\u4fe1\u606f\uff0c\u8fdb\u884c\u7b26\u53f7\u89e3\u6790\u4e0e\u91cd\u5b9a\u4f4d\u3001\u8c03\u6574\u4ee3\u7801\u4e2d\u7684\u5730\u5740</li> </ul> </li> </ul>"},{"location":"booknotes/cxydzwxy/link/static/#_3","title":"\u7a7a\u95f4\u4e0e\u5730\u5740\u5206\u914d","text":"<p>VMA\u6807\u8bc6<code>Virtual Memory Address</code>\uff0c\u5373\u865a\u62df\u5730\u5740\u3002\u5728\u94fe\u63a5\u4e4b\u524d\uff0c\u76ee\u6807\u6587\u4ef6\u4e2d\u7684\u6240\u6709\u6bb5\u7684VMA\u90fd\u662f0\uff0c\u56e0\u4e3a\u865a\u62df\u7a7a\u95f4\u8fd8\u6ca1\u6709\u88ab\u5206\u914d\u3002\u7b49\u5230\u94fe\u63a5\u4e4b\u540e\uff0c\u53ef\u6267\u884c\u6587\u4ef6\u4e2d\u7684\u5404\u4e2a\u6bb5\u90fd\u88ab\u5206\u914d\u5230\u4e86\u76f8\u5e94\u7684\u865a\u62df\u5730\u5740\u3002</p> <p>\u4f8b\u5b50\"alloc_reloc\"\u4f1a\u5c06<code>a.o</code>\u548c<code>b.o</code>\u94fe\u63a5\u6210\u4e00\u4e2a\u53ef\u6267\u884c\u6587\u4ef6\u3002\u7531\u6253\u5370\u4fe1\u606f\u53ef\u77e5\uff0c<code>.text</code>\u6bb5\u5728\u53ef\u6267\u884c\u6587\u4ef6\u4e2d\u88ab\u5206\u914d\u5230\u4e86\u5730\u5740\u662f<code>0x0000000000401000</code>\uff0c\u5927\u5c0f\u4e3a0x29\u5b57\u8282\uff0c\u662f<code>a.o</code>\u548c<code>b.o</code>\u7684<code>.text</code>\u6bb5\u5927\u5c0f\u4e4b\u548c\u3002</p> <pre><code>a.o:     file format elf64-x86-64\n\nSections:\nIdx Name          Size      VMA               LMA               File off  Algn\n0 .text         00000023  0000000000000000  0000000000000000  00000040  2**0\n                CONTENTS, ALLOC, LOAD, RELOC, READONLY, CODE\n1 .data         00000000  0000000000000000  0000000000000000  00000063  2**0\n                CONTENTS, ALLOC, LOAD, DATA\n...\n\nb.o:     file format elf64-x86-64\n\nSections:\nIdx Name          Size      VMA               LMA               File off  Algn\n0 .text         00000010  0000000000000000  0000000000000000  00000040  2**0\n                CONTENTS, ALLOC, LOAD, RELOC, READONLY, CODE\n1 .data         00000004  0000000000000000  0000000000000000  00000050  2**2\n                CONTENTS, ALLOC, LOAD, DATA\n...\n\nmain:     file format elf64-x86-64\n\nSections:\nIdx Name          Size      VMA               LMA               File off  Algn\n0 .note.gnu.property 00000020  00000000004001c8  00000000004001c8  000001c8  2**3\n                CONTENTS, ALLOC, LOAD, READONLY, DATA\n1 .text         00000033  0000000000401000  0000000000401000  00001000  2**0\n                CONTENTS, ALLOC, LOAD, READONLY, CODE\n2 .eh_frame     00000058  0000000000402000  0000000000402000  00002000  2**3\n                CONTENTS, ALLOC, LOAD, READONLY, DATA\n3 .data         00000004  0000000000404000  0000000000404000  00003000  2**2\n                CONTENTS, ALLOC, LOAD, DATA\n...\n</code></pre>"},{"location":"booknotes/cxydzwxy/link/static/#_4","title":"\u7b26\u53f7\u89e3\u6790","text":"<p>\u91cd\u5b9a\u4f4d\u7684\u8fc7\u7a0b\u4e2d\uff0c\u94fe\u63a5\u5668\u4f1a\u67e5\u627e\u7531\u6240\u6709\u8f93\u5165\u76ee\u6807\u6587\u4ef6\u7684\u7b26\u53f7\u8868\u7ec4\u6210\u7684\u5168\u5c40\u7b26\u53f7\u8868\uff0c\u627e\u5230\u76f8\u5e94\u7684\u7b26\u53f7\u7684\u76ee\u6807\u5730\u5740\uff0c\u7136\u540e\u8fdb\u7a0b\u91cd\u5b9a\u4f4d\u3002</p> <p>\u901a\u8fc7<code>readelf -s</code>\u53ef\u4ee5\u67e5\u770b\u7b26\u53f7\u8868\uff1a <pre><code>&gt; readelf -s main\n\nSymbol table '.symtab' contains 14 entries:\n   Num:    Value          Size Type    Bind   Vis      Ndx Name\n     0: 0000000000000000     0 NOTYPE  LOCAL  DEFAULT  UND \n     1: 00000000004001c8     0 SECTION LOCAL  DEFAULT    1 \n     2: 0000000000401000     0 SECTION LOCAL  DEFAULT    2 \n     3: 0000000000402000     0 SECTION LOCAL  DEFAULT    3 \n     4: 0000000000404000     0 SECTION LOCAL  DEFAULT    4 \n     5: 0000000000000000     0 SECTION LOCAL  DEFAULT    5 \n     6: 0000000000000000     0 FILE    LOCAL  DEFAULT  ABS a.c\n     7: 0000000000000000     0 FILE    LOCAL  DEFAULT  ABS b.c\n     8: 0000000000401023    16 FUNC    GLOBAL DEFAULT    2 swap\n     9: 0000000000404000     4 OBJECT  GLOBAL DEFAULT    4 shared\n    10: 0000000000404004     0 NOTYPE  GLOBAL DEFAULT    4 __bss_start\n    11: 0000000000401000    35 FUNC    GLOBAL DEFAULT    2 main\n    12: 0000000000404004     0 NOTYPE  GLOBAL DEFAULT    4 _edata\n    13: 0000000000404008     0 NOTYPE  GLOBAL DEFAULT    4 _end\n</code></pre></p> <p>\u7ed3\u5408\u5168\u5c40\u7b26\u53f7\u8868\u548c\u91cd\u5b9a\u4f4d\u7c7b\u578b\uff0c\u94fe\u63a5\u5668\u5c31\u53ef\u4ee5\u5b8c\u6210\u91cd\u5b9a\u4f4d\u5de5\u4f5c\u4e86\u3002\u4f8b\u5982\uff0c<code>shared</code>\u5728\u5168\u5c40\u7b26\u53f7\u8868\u4e2d\u7684\u5730\u5740\u662f<code>0x404000</code>\u3002<code>shared</code>\u7684\u91cd\u5b9a\u4f4d\u7c7b\u578b\u662f\u76f8\u5bf9\u5bfb\u5740\u4fee\u6b63\u7c7b\u578b<code>R_X86_64_PC32</code>\u3002\u56e0\u6b64\uff0c\u5728\u6700\u7ec8\u7684\u53ef\u6267\u884c\u6587\u4ef6\u4e2d\uff0c<code>shared</code>\u7684\u5730\u5740\u88ab\u4fee\u6b63\u4e3a<code>0x2fee</code>\uff0c\u5176\u503c\u6b63\u597d\u7b49\u4e8e\uff1a<code>0x404000 - 0x401012</code>\u3002 <pre><code>  401008:       c7 05 ee 2f 00 00 02    movl   $0x2,0x2fee(%rip)        # 404000 &lt;shared&gt;\n  40100f:       00 00 00 \n  401012:       b8 00 00 00 00          mov    $0x0,%eax\n</code></pre></p>"},{"location":"booknotes/cxydzwxy/link/static/#_5","title":"\u7b26\u53f7\u89e3\u6790\u987a\u5e8f","text":"<p>\u5728\u94fe\u63a5\u65f6\uff0c\u547d\u4ee4\u884c\u4e0a\u7684\u5e93\u51fa\u73b0\u7684\u987a\u5e8f\u975e\u5e38\u91cd\u8981\uff0c\u5982\u679c\u5b9a\u4e49\u4e00\u4e2a\u7b26\u53f7\u7684\u5e93\u51fa\u73b0\u5728\u8fd9\u4e2a\u7b26\u53f7\u7684\u5f15\u7528\u4e4b\u524d\uff0c\u90a3\u4e48\u4f1a\u51fa\u73b0\u89e3\u6790\u9519\u8bef\u3002</p> <ul> <li>\u5982\u679c\u5404\u4e2a\u5e93\u7684\u6210\u5458\u662f\u76f8\u4e92\u72ec\u7acb\u7684\uff0c\u90a3\u4e48\u8fd9\u4e9b\u5e93\u53ef\u4ee5\u4efb\u4f55\u987a\u5e8f\u653e\u7f6e\u5728\u547d\u4ee4\u884c\u7684\u7ed3\u5c3e</li> <li>\u5982\u679c\u5e93\u4e0d\u662f\u76f8\u4e92\u72ec\u7acb\u7684\uff0c\u90a3\u4e48\u81f3\u5c11\u6709\u4e00\u4e2a\u5b58\u5728\u7b26\u53f7\u5b9a\u4e49\u7684\u5e93\uff0c\u51fa\u73b0\u5728\u7b26\u53f7\u5f15\u7528\u7684\u5e93\u4e4b\u540e</li> <li>\u4f8b\u5982\uff0c\u5047\u8bbe<code>foo.c</code>\u8c03\u7528<code>libx.a</code>\u4e2d\u7684\u51fd\u6570\uff0c<code>libx.a</code>\u53c8\u8c03\u7528<code>liby.a</code>\u7684\u51fd\u6570\uff0c<code>liby.a</code>\u53c8\u8c03\u7528<code>libx.a</code>\u7684\u51fd\u6570\uff0c\u90a3\u4e48<code>libx.a</code>\u5fc5\u987b\u5728\u547d\u4ee4\u884c\u4e0a\u91cd\u590d\u51fa\u73b0\uff1a<ul> <li><code>&gt; gcc foo.c libx.a liby.a libx.a</code></li> </ul> </li> </ul> <p>\u5728\u7b26\u53f7\u89e3\u6790\u9636\u6bb5\uff0c\u94fe\u63a5\u5668\u4ece\u5de6\u5230\u53f3\u626b\u63cf\u6587\u4ef6\u3002\u5728\u626b\u63cf\u4e2d\uff0c\u94fe\u63a5\u5668\u4f1a\u7ef4\u62a4\uff1a</p> <ul> <li>\u4e00\u4e2a\u53ef\u91cd\u5b9a\u4f4d\u76ee\u6807\u6587\u4ef6\u7684\u96c6\u5408<code>E</code>\uff08\u8fd9\u4e2a\u96c6\u5408\u7684\u6587\u4ef6\u4f1a\u88ab\u5408\u5e76\u8d77\u6765\u5f62\u6210\u53ef\u6267\u884c\u6587\u4ef6\uff09</li> <li>\u4e00\u4e2a\u672a\u89e3\u6790\u7684\u7b26\u53f7\u96c6\u5408<code>U</code>\uff08\u5373\u5f15\u7528\u4e86\u4f46\u662f\u5c1a\u672a\u5b9a\u4e49\u7684\u7b26\u53f7\uff09</li> <li>\u4e00\u4e2a\u5728\u524d\u9762\u8f93\u5165\u6587\u4ef6\u4e2d\u5df2\u5b9a\u4e49\u7684\u7b26\u53f7\u96c6<code>D</code></li> </ul> <p>\u8d77\u521d\u65f6\uff0c<code>E</code>\u3001<code>U</code>\u548c<code>D</code>\u5747\u4e3a\u7a7a\uff0c\u5bf9\u4e8e\u8f93\u5165\u6587\u4ef6<code>f</code>\uff1a</p> <ul> <li>\u5982\u679c<code>f</code>\u662f\u4e00\u4e2a\u76ee\u6807\u6587\u4ef6\uff0c\u94fe\u63a5\u5668\u628a<code>f</code>\u6dfb\u52a0\u5230<code>E</code>\uff0c\u4fee\u6539<code>U</code>\u548c<code>D</code>\u6765\u53cd\u6620<code>f</code>\u4e2d\u7684\u7b26\u53f7\u5f15\u7528\u548c\u5b9a\u4e49</li> <li>\u5982\u679c<code>f</code>\u662f\u4e00\u4e2a\u5e93\u6587\u4ef6\uff0c\u94fe\u63a5\u5668\u5c1d\u8bd5\u5339\u914d<code>U</code>\u4e2d\u672a\u89e3\u6790\u7684\u7b26\u53f7\u548c\u5e93\u6587\u4ef6\u4e2d\u5b9a\u4e49\u7684\u7b26\u53f7</li> <li>\u5982\u679c\u5339\u914d\u6210\u529f\uff0c\u5c06\u6b64\u7b26\u53f7\u6dfb\u52a0\u5230<code>E</code>\u4e2d\uff0c\u5e76\u4fee\u6539<code>U</code>\u548c<code>D</code>\u6765\u53cd\u6620\u4f9d\u8d56\u7684\u7b26\u53f7\u5f15\u7528\u548c\u5b9a\u4e49</li> <li>\u5982\u679c\u5f53\u94fe\u63a5\u5668\u5b8c\u6210\u5bf9\u547d\u4ee4\u884c\u4e0a\u8f93\u5165\u7684\u6587\u4ef6\u7684\u626b\u63cf\u540e\uff0c</li> <li>\u5982\u679c<code>U</code>\u662f\u975e\u7a7a\u7684\uff0c\u90a3\u4e48\u94fe\u63a5\u5668\u5c31\u4f1a\u8f93\u51fa\u4e00\u4e2a\u9519\u8bef\u5e76\u7ec8\u6b62</li> <li>\u5426\u5219\uff0c\u5408\u5e76<code>E</code>\u548c\u76ee\u6807\u6587\u4ef6\uff0c\u8f93\u51fa\u53ef\u6267\u884c\u6587\u4ef6</li> </ul>"},{"location":"booknotes/cxydzwxy/link/static/#_6","title":"\u91cd\u5b9a\u4f4d","text":"<p>\u4f8b\u5b50\"alloc_reloc\"\u4e2d\uff0c<code>main</code>\u51fd\u6570\u5f15\u7528\u4e86\u5176\u4ed6\u6a21\u5757\u5b9a\u4e49\u7684<code>swap</code>\u51fd\u6570\u548c<code>shared</code>\u53d8\u91cf\uff1a</p> <pre><code>extern int swap();\nextern int shared;\n\nint main()\n{\n    shared = 2;\n    swap();\n    return 0;\n}\n</code></pre> <ul> <li> <p>\u91cd\u5b9a\u4f4d\u4e4b\u524d\u7684<code>main</code>\u51fd\u6570     <pre><code>0000000000000000 &lt;main&gt;:\n0:   f3 0f 1e fa             endbr64 \n4:   55                      push   %rbp\n5:   48 89 e5                mov    %rsp,%rbp\n8:   c7 05 00 00 00 00 02    movl   $0x2,0x0(%rip)           # 12 &lt;main+0x12&gt;\uff0c\u91cd\u5b9a\u4f4dshared\u53d8\u91cf\u524d\nf:   00 00 00 \n12:   b8 00 00 00 00          mov    $0x0,%eax\n17:   e8 00 00 00 00          callq  1c &lt;main+0x1c&gt;           # \u91cd\u5b9a\u4f4dswap\u51fd\u6570\u524d\n1c:   b8 00 00 00 00          mov    $0x0,%eax\n21:   5d                      pop    %rbp\n22:   c3                      retq\n</code></pre></p> </li> <li> <p>\u91cd\u5b9a\u4f4d\u4e4b\u540e\u7684<code>main</code>\u51fd\u6570     <pre><code>0000000000401000 &lt;main&gt;:\n401000:       f3 0f 1e fa             endbr64 \n401004:       55                      push   %rbp\n401005:       48 89 e5                mov    %rsp,%rbp\n401008:       c7 05 ee 2f 00 00 02    movl   $0x2,0x2fee(%rip)  # 404000 &lt;shared&gt;\uff0c\u91cd\u5b9a\u4f4dshared\u53d8\u91cf\u540e\n40100f:       00 00 00 \n401012:       b8 00 00 00 00          mov    $0x0,%eax\n401017:       e8 07 00 00 00          callq  401023 &lt;swap&gt;      # \u91cd\u5b9a\u4f4dswap\u51fd\u6570\u540e\n40101c:       b8 00 00 00 00          mov    $0x0,%eax\n401021:       5d                      pop    %rbp\n401022:       c3                      retq\n</code></pre></p> </li> </ul>"},{"location":"booknotes/cxydzwxy/link/static/#_7","title":"\u91cd\u5b9a\u4f4d\u8868","text":"<p>\u65e0\u8bba\u4f55\u65f6\u6c47\u7f16\u5668\u9047\u5230\u6700\u7ec8\u4f4d\u7f6e\u672a\u77e5\u7684\u76ee\u6807\u5f15\u7528\uff0c\u5b83\u5c31\u4f1a\u751f\u6210\u4e00\u4e2a\u91cd\u5b9a\u4f4d\u6761\u76ee\uff0c\u544a\u8bc9\u94fe\u63a5\u5668\u5728\u5c06\u76ee\u6807\u6587\u4ef6\u5408\u5e76\u6210\u53ef\u6267\u884c\u6587\u4ef6\u65f6\u5982\u4f55\u4fee\u6539\u8fd9\u4e2a\u5f15\u7528\u3002\u6240\u6709\u91cd\u5b9a\u4f4d\u6761\u76ee\u7ec4\u6210\u4e86\u91cd\u5b9a\u4f4d\u8868(Relocation Table)\uff0c\u7528\u6765\u4fdd\u5b58\u4e8e\u91cd\u5b9a\u4f4d\u76f8\u5173\u7684\u4fe1\u606f\u3002\u6bcf\u4e2a\u8981\u88ab\u91cd\u5b9a\u4f4d\u7684ELF\u6bb5\u90fd\u6709\u4e00\u4e2a\u5bf9\u5e94\u7684\u91cd\u5b9a\u4f4d\u6bb5\u3002\u4f8b\u5982\uff0c\u5982\u679c\u4ee3\u7801\u6bb5<code>.text</code>\u6709\u8981\u88ab\u91cd\u5b9a\u4f4d\u7684\u5730\u65b9\uff0c\u90a3\u4e48\u4f1a\u6709\u4e00\u4e2a\u76f8\u5e94\u53eb<code>.rela.text</code>\u7684\u6bb5\u4fdd\u5b58\u4e86\u4ee3\u7801\u6bb5\u7684\u91cd\u5b9a\u4f4d\u8868\uff1b\u5982\u679c\u6570\u636e\u6bb5<code>.data</code>\u6709\u8981\u88ab\u91cd\u5b9a\u4f4d\u7684\u5730\u65b9\uff0c\u5c31\u4f1a\u6709\u4e00\u4e2a\u53eb<code>.rela.data</code>\u7684\u6bb5\u4fdd\u5b58\u6570\u636e\u6bb5\u7684\u91cd\u5b9a\u4f4d\u8868\u3002</p> <p>\u53ef\u4ee5\u4f7f\u7528<code>objdump -r</code>\u6216\u8005<code>readelf -r</code>\u67e5\u770b\u91cd\u5b9a\u4f4d\u8868\u7684\u5185\u5bb9\uff1a <pre><code>&gt; readelf -r a.o\n\nRelocation section '.rela.text' at offset 0x250 contains 2 entries:\n  Offset          Info           Type           Sym. Value    Sym. Name + Addend\n00000000000a  000a00000002 R_X86_64_PC32     0000000000000000 shared - 8\n000000000018  000c00000004 R_X86_64_PLT32    0000000000000000 swap - 4\n</code></pre></p> <p>\u6bcf\u4e2a\u8981\u88ab\u91cd\u5b9a\u4f4d\u7684\u5730\u65b9\u53eb\u4e00\u4e2a\u91cd\u5b9a\u4f4d\u5165\u53e3(Relocation Entry)\u3002\u91cd\u5b9a\u4f4d\u5165\u53e3\u7684\u504f\u79fb(Offset)\u8868\u793a\u8be5\u5165\u53e3\u5728\u8981\u88ab\u91cd\u5b9a\u4f4d\u7684\u6bb5\u4e2d\u7684\u4f4d\u7f6e\u3002\u4f8b\u5982\uff0c<code>shared</code>\u5728<code>a.o</code>\u7684<code>.text</code>\u6bb5\u7684<code>0xa</code>\u7684\u4f4d\u7f6e\u3002</p> <p>ELF\u5b9a\u4e49\u4e8632\u79cd\u4e0d\u540c\u7684\u91cd\u5b9a\u4f4d\u7c7b\u578b\uff0c\u5176\u4e2d\u6700\u91cd\u8981\u7684\u4e24\u79cd\u7c7b\u578b\u662f\uff1a</p> <ul> <li><code>R_X86_64_PC32</code><ul> <li>\u4f7f\u752832\u4f4dPC\u76f8\u5bf9\u5730\u5740\u7684\u5f15\u7528</li> </ul> </li> <li><code>R_X86_64_32</code><ul> <li>\u4f7f\u752832\u4f4d\u7edd\u5bf9\u5730\u5740\u7684\u5f15\u7528</li> </ul> </li> </ul>"},{"location":"booknotes/cxydzwxy/link/static/#c","title":"C++\u94fe\u63a5\u95ee\u9898","text":""},{"location":"booknotes/cxydzwxy/link/static/#_8","title":"\u91cd\u590d\u4ee3\u7801\u6d88\u9664","text":"<p>C++\u7f16\u8bd1\u5668\u5728\u5f88\u591a\u65f6\u5019\u4f1a\u4ea7\u751f\u91cd\u590d\u7684\u4ee3\u7801\uff0c\u6bd4\u5982\u6a21\u677f(Template)\uff0c\u5916\u90e8\u5185\u8054\u51fd\u6570(Extern Inline Function)\u548c\u865a\u51fd\u6570\u8868(Virtual Function Table)\u90fd\u6709\u53ef\u80fd\u5728\u4e0d\u540c\u7684\u7f16\u8bd1\u5355\u5143\u91cc\u751f\u6210\u76f8\u540c\u7684\u4ee3\u7801\u3002</p> <p>\u4f8b\u5982\uff0c\u5f53\u4e00\u4e2a\u6a21\u677f\u5728\u591a\u4e2a\u7f16\u8bd1\u5355\u5143\u540c\u65f6\u5b9e\u4f8b\u5316\u6210\u76f8\u540c\u7684\u7c7b\u578b\u7684\u65f6\u5019\uff0c\u4f1a\u751f\u6210\u91cd\u590d\u7684\u4ee3\u7801\u3002\u7f16\u8bd1\u5668\u4f1a\u5c06\u6bcf\u4e2a\u6a21\u677f\u7684\u5b9e\u4f8b\u4ee3\u7801\u90fd\u5355\u72ec\u5b58\u653e\u5728\u4e00\u4e2a\u6bb5\u91cc\uff0c\u6bcf\u4e2a\u6bb5\u53ea\u5305\u542b\u4e00\u4e2a\u6a21\u677f\u5b9e\u4f8b\u3002\u94fe\u63a5\u5668\u5728\u6700\u7ec8\u94fe\u63a5\u7684\u65f6\u5019\u53ef\u4ee5\u533a\u5206\u8fd9\u4e9b\u76f8\u540c\u7684\u6a21\u677f\u5b9e\u4f8b\u6bb5\uff0c\u7136\u540e\u5c06\u4ed6\u4eec\u5408\u5e76\u5165\u6700\u540e\u7684\u4ee3\u7801\u6bb5\u3002</p> <p>\u540c\u6837\uff0c\u5b9a\u4e49\u5728\u5934\u6587\u4ef6\u4e2d\u7684\u7c7b\u65b9\u6cd5\uff0c\u4f1a\u51fa\u73b0\u5728\u591a\u4e2a\u7f16\u8bd1\u5355\u5143\u4e2d\uff0c\u4f46\u5728\u6700\u7ec8\u94fe\u63a5\u65f6\u88ab\u6d88\u9664\u5408\u5e76\u3002\u5728\u4f8b\u5b50\"cpp_link\"\u4e2d\uff0c<code>foo.h</code>\u4e2d\u5b9a\u4e49\u4e86<code>Foo::foo()</code>\u65b9\u6cd5\uff1a <pre><code>class Foo\n{\npublic:\n   void foo()\n   {\n      printf(\"foo\\n\");\n   }\n   void bar();\n};\n</code></pre> \u7f16\u8bd1\u540e\uff0c\u5728<code>obj1.o</code>\uff0c<code>obj2.o</code>\uff0c<code>main.o</code>\u4e09\u4e2a\u7f16\u8bd1\u5355\u5143\u4e2d\u90fd\u5b58\u5728\u76f8\u540c\u7684\u6bb5<code>.text._ZN3Foo3foo</code>\uff0c\u5e76\u4e14<code>_ZN3Foo3fooEv</code>\u7b26\u53f7\u7c7b\u578b\u90fd\u662f\u5f31\u7c7b\u578b<code>WEAK</code>\u3002\u4f46\u662f\u5728\u6700\u7ec8\u7684\u53ef\u6267\u884c\u6587\u4ef6<code>main</code>\u4e2d\uff0c<code>_ZN3Foo3fooEv</code>\u88ab\u5408\u5e76\u5230<code>.text</code>\u6bb5\u4e2d\u3002 <pre><code>&gt; readelf -S obj1.o\n...\n[ 7] .text._ZN3Foo3foo PROGBITS         0000000000000000  0000006a\n       0000000000000022  0000000000000000 AXG       0     0     2\n...\n&gt; readelf -s obj1.o\n...\n12: 0000000000000000    34 FUNC    WEAK   DEFAULT    7 _ZN3Foo3fooEv\n...\n&gt; readelf -s main\n...\n70: 0000000000001186    34 FUNC    WEAK   DEFAULT   16 _ZN3Foo3fooEv\n...\n&gt; objdump -D main\n...\n0000000000001186 &lt;_ZN3Foo3fooEv&gt;:\n    1186:       f3 0f 1e fa             endbr64\n    118a:       55                      push   %rbp\n    118b:       48 89 e5                mov    %rsp,%rbp\n    118e:       48 83 ec 10             sub    $0x10,%rsp\n    1192:       48 89 7d f8             mov    %rdi,-0x8(%rbp)\n    1196:       48 8d 05 6b 0e 00 00    lea    0xe6b(%rip),%rax        # 2008 &lt;_IO_stdin_used+0x8&gt;\n    119d:       48 89 c7                mov    %rax,%rdi\n    11a0:       e8 ab fe ff ff          callq  1050 &lt;puts@plt&gt;\n    11a5:       90                      nop\n    11a6:       c9                      leaveq\n    11a7:       c3                      retq\n...\n</code></pre></p>"},{"location":"booknotes/cxydzwxy/link/static/#_9","title":"\u5168\u5c40\u6784\u9020\u4e0e\u6790\u6784","text":"<p>Linux\u7cfb\u7edf\u4e0b\u4e00\u822c\u7684\u7a0b\u5e8f\u5165\u53e3\u662f<code>_start</code>\uff0c\u5728\u5b8c\u6210\u4e00\u7cfb\u5217\u521d\u59cb\u5316\u8fc7\u7a0b\u540e\uff0c\u518d\u8c03\u7528<code>main</code>\u51fd\u6570\u6765\u6267\u884c\u7a0b\u5e8f\u7684\u4e3b\u4f53\u3002<code>main</code>\u51fd\u6570\u6267\u884c\u5b8c\u6210\u540e\uff0c\u8fd4\u56de\u5230\u521d\u59cb\u5316\u90e8\u5206\uff0c\u8fdb\u884c\u4e00\u4e9b\u6e05\u7406\u5de5\u4f5c\u3002\u76f8\u5173\u521d\u59cb\u5316\u4ee3\u7801\u5b9a\u4e49\u5728\u4e0b\u9762\u7684\u4e24\u4e2a\u6bb5\u5185\uff1a</p> <ul> <li>.init\u6bb5<ul> <li>\u521d\u59cb\u5316\u4ee3\u7801\uff0c\u5728main\u51fd\u6570\u4e4b\u524d\u8c03\u7528</li> </ul> </li> <li>.fini\u6bb5<ul> <li>\u8fdb\u7a0b\u7ec8\u6b62\u4ee3\u7801\uff0c\u5728main\u51fd\u6570\u9000\u51fa\u65f6\u6267\u884c</li> </ul> </li> </ul> <p>C++\u7684\u5168\u5c40\u5bf9\u8c61\u7684\u6784\u9020\u548c\u6790\u6784\u51fd\u6570\uff0c\u5c31\u5229\u7528\u4e86\u6b64\u521d\u59cb\u5316\u8fc7\u7a0b\u3002</p>"},{"location":"booknotes/cxydzwxy/link/static/#_10","title":"\u94fe\u63a5\u8fc7\u7a0b\u63a7\u5236","text":""},{"location":"booknotes/cxydzwxy/link/static/#_11","title":"\u94fe\u63a5\u63a7\u5236\u811a\u672c","text":"<p>\u53ef\u901a\u8fc7\u4e09\u79cd\u65b9\u6cd5\u63a7\u5236\u94fe\u63a5\u8fc7\u7a0b\uff1a</p> <ul> <li>\u4f7f\u7528\u547d\u4ee4\u884c\u6765\u7ed9\u94fe\u63a5\u5668\u6307\u5b9a\u53c2\u6570</li> <li>\u5c06\u94fe\u63a5\u6307\u4ee4\u5b58\u653e\u5728\u76ee\u6807\u6587\u4ef6\u91cc\u9762<ul> <li>\u5982\uff0c<code>.drectve</code>\u6bb5</li> </ul> </li> <li>\u4f7f\u7528\u94fe\u63a5\u63a7\u5236\u811a\u672c<ul> <li><code>ld -verbose</code>\u547d\u4ee4\u53ef\u67e5\u770b\u9ed8\u8ba4\u94fe\u63a5\u811a\u672c</li> <li><code>ld -T &lt;link.script&gt;</code>\u53ef\u6307\u5b9a\u94fe\u63a5\u811a\u672c</li> </ul> </li> </ul>"},{"location":"booknotes/cxydzwxy/link/static/#_12","title":"\u6700\u5c0f\u7684\u7a0b\u5e8f","text":"<p>\u4f8b\u5b50\"tiny_hello_32\"\u548c\u4f8b\u5b50\"tiny_hello_64\"\u5206\u522b\u662f32\u4f4d\u548c64\u4f4d\u4e0b\uff0c\u6700\u5c0f\u7684\"Hello World\"\u7a0b\u5e8f\u3002\u6b64\u7a0b\u5e8f\u548c\u666e\u901a\u7a0b\u5e8f\u6709\u4ee5\u4e0b\u4e0d\u540c\uff1a</p> <ul> <li>\u6ca1\u6709\u7528C\u8bed\u8a00\u5e93\uff0c\u5982<code>printf</code>\u7b49\u51fd\u6570\u3002\u5229\u7528\u6c47\u7f16\u8bed\u8a00\u76f4\u63a5\u5b9e\u73b0\u7cfb\u7edf\u8c03\u7528\u3002</li> <li>\u4e0d\u4ee5<code>_start</code>\u4f5c\u4e3a\u7a0b\u5e8f\u5165\u53e3\uff0c\u76f4\u63a5\u4ee5\u7528\u6237\u5b9a\u4e49\u7684<code>nomain</code>\u51fd\u6570\u4f5c\u4e3a\u7a0b\u5e8f\u5165\u53e3\u3002</li> <li>\u53ef\u901a\u8fc7\u94fe\u63a5\u811a\u672c\u5c06\u6240\u6709\u6bb5\u5408\u5e76\u5230\u81ea\u5b9a\u4e49\u7684<code>tinytext</code>\u6bb5</li> </ul> <p>\u4ee564\u4f4d\u4e3a\u4f8b\uff0c\u6e90\u4ee3\u7801\u5982\u4e0b\uff1a <pre><code>char* str = \"Hello World\\n\";\n\nvoid print()\n{\n   // int write(int fd, char* buffer, int size);\n   // write(rdi, rsi, rdx);\n   //    fd = stdout (1)\n   //    buffer = str\n   //    size = 13\n   // WRITE system call ID = 1 (rax)\n   asm(\n      \"movq $13,%%rdx \\n\\t\"\n      \"movq %0,%%rsi \\n\\t\"\n      \"movq $1,%%rdi \\n\\t\"\n      \"movq $1,%%rax \\n\\t\"\n      \"syscall \\n\\t\"\n      ::\"r\"(str):\"rdi\",\"rsi\",\"rdx\"\n   );\n}\n\nvoid exit()\n{\n   // Syscall 60 is exit on x86_64\n   // __asm (\"movq $60,%rax; movq $42,%rdi; syscall\");\n   asm(\n      \"movq $42,%rdi \\n\\t\"\n      \"movq $60,%rax \\n\\t\"\n      \"syscall \\n\\t\"\n   );\n}\n\nvoid nomain()\n{\n   print();\n   exit();\n}\n</code></pre></p> <p>\u94fe\u63a5\u811a\u672c<code>main.lds</code>\u5982\u4e0b\uff0c\u6307\u5b9a\u4e86\u5165\u53e3\u51fd\u6570\u548c\u6bb5\u4fe1\u606f\uff1a <pre><code>ENTRY(nomain)\n\nSECTIONS\n{\n   . = 0x400000 + SIZEOF_HEADERS;\n   tinytext : { *(.text) *(.data) *(.rodata) }\n   /DISCARD/ : { *(.comment) }\n}\n</code></pre></p> <p>\u901a\u8fc7<code>ld -static -T main.lds -o main main.o</code>\u547d\u4ee4\uff0c\u53ef\u751f\u6210\u53ef\u6267\u884c\u6587\u4ef6<code>main</code>\u3002\u811a\u672c\u4e2d\u7684<code>SIZEOF_HEADERS</code>\u7b49\u4e8e<code>0x120</code>\uff0c\u6240\u4ee5<code>.note.gnu.property</code>\u6bb5\u7684VMA\u7b49\u4e8e<code>0x400120</code>\u3002\u901a\u8fc7GDB\u6253\u5370\u8fd0\u884c\u65f6\u7684\u5730\u5740\u7a7a\u95f4\uff0c\u53d1\u73b0\u8fdb\u7a0b<code>main</code>\u88ab\u52a0\u8f7d\u5230<code>0x400000~0x401000</code>\u9875\uff0c\u548c\u94fe\u63a5\u811a\u672c\u4e00\u81f4\u3002 <pre><code>&gt; objdump -h main\n\nmain:     file format elf64-x86-64\n\nSections:\nIdx Name          Size      VMA               LMA               File off  Algn\n  0 .note.gnu.property 00000020  0000000000400120  0000000000400120  00000120  2**3\n                  CONTENTS, ALLOC, LOAD, READONLY, DATA\n  1 .eh_frame     00000078  0000000000400140  0000000000400140  00000140  2**3\n                  CONTENTS, ALLOC, LOAD, READONLY, DATA\n  2 tinytext      00000073  00000000004001b8  00000000004001b8  000001b8  2**0\n                  CONTENTS, ALLOC, LOAD, CODE\n  3 .data.rel.local 00000008  0000000000400230  0000000000400230  00000230  2**3\n                  CONTENTS, ALLOC, LOAD, DATA\n\n&gt; make debug\nMapped address spaces:\n\n          Start Addr           End Addr       Size     Offset objfile\n            0x400000           0x401000     0x1000        0x0 /home/yuxiangw/GitHub/learning_book/docs/booknotes/cxydzwxy/link/static/code/tiny_hello_64/main\n      0x7ffff7ff9000     0x7ffff7ffd000     0x4000        0x0 [vvar]\n      0x7ffff7ffd000     0x7ffff7fff000     0x2000        0x0 [vdso]\n      0x7ffffffde000     0x7ffffffff000    0x21000        0x0 [stack]\n  0xffffffffff600000 0xffffffffff601000     0x1000        0x0 [vsyscall]\n</code></pre></p>"},{"location":"booknotes/cxydzwxy/link/static/#ld","title":"ld\u94fe\u63a5\u811a\u672c\u8bed\u6cd5","text":"<p>\u94fe\u63a5\u811a\u672c\u7684\u8bed\u53e5\u5206\u4e24\u79cd\uff1a</p> <ul> <li>\u8d4b\u503c\u8bed\u53e5<ul> <li>\u5982<code>. = 0x400000 + SIZEOF_HEADERS;</code>\uff0c\u6307\u5b9a\u4e86SECTION\u7684\u8d77\u59cb\u5730\u5740</li> </ul> </li> <li>\u547d\u4ee4\u8bed\u53e5<ul> <li>\u5982<code>ENTRY(nomain)</code>\uff0c\u6307\u5b9a\u4e86\u8fdb\u7a0b\u7684\u5165\u53e3\u5730\u5740</li> </ul> </li> </ul> \u547d\u4ee4\u8bed\u53e5 \u8bf4\u660e ENTRY(symbol) \u6309\u7167\u4ee5\u4e0b\u4f18\u5148\u7ea7\u987a\u5e8f\u8bbe\u7f6e\u8fdb\u7a0b\u5165\u53e3\u5730\u5740\uff1a 1. ld\u547d\u4ee4\u884c\u7684-e\u9009\u9879  2. \u94fe\u63a5\u811a\u672c\u7684ENTRY(symbol)\u547d\u4ee4  3. \u5982\u679c\u5b9a\u4e49\u4e86_start\u7b26\u53f7\uff0c\u4f7f\u7528_start\u7b26\u53f7\u503c  4. \u5982\u679c\u5b58\u5728.text\u6bb5\uff0c\u4f7f\u7528.text\u6bb5\u7684\u7b2c\u4e00\u5b57\u8282\u7684\u5730\u5740  5. \u4f7f\u7528\u503c0 STARTUP(filename) \u5c06\u6587\u4ef6<code>filename</code>\u4f5c\u4e3a\u94fe\u63a5\u8fc7\u7a0b\u4e2d\u7684\u7b2c\u4e00\u4e2a\u8f93\u5165\u6587\u4ef6 SEARCH_DIR(path) \u5c06\u8def\u5f84path\u52a0\u5165\u5230ld\u94fe\u63a5\u5668\u7684\u5e93\u67e5\u627e\u76ee\u5f55 INPUT(file, file, ...) \u6307\u5b9a\u6587\u4ef6\u4f5c\u4e3a\u94fe\u63a5\u8fc7\u7a0b\u4e2d\u7684\u8f93\u5165\u6587\u4ef6 INCLUDE filename \u5c06\u6307\u5b9a\u6587\u4ef6\u5305\u542b\u8fdb\u94fe\u63a5\u811a\u672c PROVIDE(symbol) \u5728\u94fe\u63a5\u811a\u672c\u4e2d\u5b9a\u4e49\u67d0\u4e2a\u7b26\u53f7 SECTIONS{...} \u7ec4\u7ec7\u6bb5\u5185\u5bb9 <p>SECTIONS\u547d\u4ee4\u6700\u57fa\u672c\u683c\u5f0f\u5982\u4e0b\uff1a <pre><code>SECTIONS\n{\n    ...\n    secname : { contents }\n    ...\n}\n</code></pre></p> <ul> <li>secname\u8868\u793a\u8f93\u51fa\u6bb5\u7684\u6bb5\u540d\uff0c\u540e\u9762\u5fc5\u987b\u6709\u4e00\u4e2a\u7a7a\u683c\u7b26<ul> <li><code>/DISCARD/</code>\u8868\u793a\u7279\u6b8a\u7684\u8f93\u51fa\u6bb5\uff0c\u6b64\u8f93\u51fa\u6bb5\u7684\u5185\u5bb9\u5c06\u88ab\u4e22\u5f03</li> </ul> </li> <li>contents\u63cf\u8ff0\u4e86\u4e00\u5957\u89c4\u5219\uff0c\u7b26\u53f7\u6b64\u89c4\u5219\u7684\u8f93\u5165\u6bb5\u4f1a\u5408\u5e76\u5230\u8f93\u51fa\u6bb5<ul> <li>\u4f8b\u5982\uff0c<code>*(.text) *(.data) *(.rodata)</code>\u8868\u793a\u5c06\u6240\u6709<code>.o</code>\u6587\u4ef6\u7684<code>.text</code>\u6bb5\uff0c<code>.data</code>\u6bb5\u548c<code>.rodata</code>\u6bb5\u90fd\u5408\u5e76\u5230\u8f93\u51fa\u6bb5</li> </ul> </li> </ul>"},{"location":"booknotes/cxydzwxy/load/","title":"\u88c5\u8f7d","text":"<p>\u300a\u7a0b\u5e8f\u5458\u7684\u81ea\u6211\u4fee\u517b--\u94fe\u63a5\u3001\u88c5\u8f7d\u4e0e\u5e93\u300b - \u4fde\u7532\u5b50\uff0c\u77f3\u51e1\uff0c\u6f58\u7231\u6c11\uff0c\u7b2c\u516d\u7ae0\u7684\u8bfb\u4e66\u7b14\u8bb0\uff0c\u672c\u6587\u4e2d\u7684\u6240\u6709\u4ee3\u7801\u53ef\u5728GitHub\u4ed3\u5e93\u4e2d\u627e\u5230</p>"},{"location":"booknotes/cxydzwxy/load/#_2","title":"\u8fdb\u7a0b\u865a\u62df\u5730\u5740\u7a7a\u95f4","text":""},{"location":"booknotes/cxydzwxy/load/#32","title":"32\u4f4d","text":"<p>32\u4f4d\u7cfb\u7edf\u7684\u5730\u5740\u7a7a\u95f4\u662f4GB(2^32)\uff0c\u53c2\u89c1\u6587\u6863\u3002\u5176\u4e2d\uff0c1GB\u662f\u5185\u6838\u7a7a\u95f4\uff0c3GB\u662f\u7528\u6237\u7a7a\u95f4\uff1a</p> <ul> <li>\u5185\u6838\u7a7a\u95f4\uff1a0xC0000000 ~ 0xFFFFFFFF</li> <li>\u7528\u6237\u7a7a\u95f4\uff1a0x00000000 ~ 0xBFFFFFFF<ul> <li><code>.text</code>\u6bb5\u7684\u52a0\u8f7d\u5730\u5740\u662f\uff1a0x08048000</li> </ul> </li> </ul> <p></p>"},{"location":"booknotes/cxydzwxy/load/#64","title":"64\u4f4d","text":"<p>64\u4f4d\u7cfb\u7edf\u7684\u6700\u5927\u5730\u5740\u7a7a\u95f4\u662f16EB(2^64)\uff0c\u53c2\u89c1\u6587\u6863\u3002AMD\u67b6\u6784\u89c4\u5b9a\u4e863\u79cd64\u4f4d\u7cfb\u7edf\u7684\u865a\u62df\u5730\u5740\u7a7a\u95f4\u89c4\u8303\uff0c\u5206\u522b\u662f\uff1a48-bit\u5b9e\u73b0\uff0c57-bit\u5b9e\u73b0\u548c64-bit\u5b9e\u73b0\u3002</p> <p></p> <p>\u4ee548-bit\u5b9e\u73b0\u4e3a\u4f8b\uff0c\u53ef\u7528\u5730\u5740\u7a7a\u95f4\u4e3a\u4e24\u4e2a128TB(2^47)\u8303\u56f4(\u5982\u4e0b\u56fe)\uff0c\u5206\u522b\u662f\uff1a</p> <ul> <li>\u5185\u6838\u7a7a\u95f4\uff1a0xFFFF_8000_0000_0000 ~ 0xFFFF_FFFF_FFFF_FFFF</li> <li>\u7528\u6237\u7a7a\u95f4\uff1a0x0000_0000_0000_0000 ~ 0x0000_7FFF_FFFF_FFFF<ul> <li>\u548c32\u4f4d\u7cfb\u7edf\u4e00\u6837\uff0c\u7528\u6237\u7a7a\u95f4\u4e5f\u5305\u542b\u4e86\u6808\u533a\u3001\u5806\u533a\u3001\u4ee3\u7801\u6bb5\u3001\u6570\u636e\u6bb5\u7b49</li> </ul> </li> </ul> <p></p> <p>\u4f8b\u5b50\"vm_addr\"\u901a\u8fc7\u6253\u5370<code>__executable_start</code>\u53d8\u91cf\u7684\u503c\uff0c\u67e5\u770b\u8fdb\u7a0b\u88ab\u52a0\u8f7d\u7684\u8d77\u59cb\u5730\u5740\u3002\u9ed8\u8ba4\u60c5\u51b5\u4e0b\uff0cgcc\u4f1a\u5229\u7528ASLR\uff0c\u968f\u673a\u8fdb\u7a0b\u7684\u52a0\u8f7d\u5730\u5740\u3002\u56e0\u6b64\uff0c\u9700\u8981\u52a0\u5165\u94fe\u63a5\u9009\u9879<code>-static</code>\u6216\u8005\u624b\u52a8\u6307\u5b9a\u94fe\u63a5\u811a\u672c(<code>-T</code>)\uff0c\u4ee5\u56fa\u5b9a\u8fdb\u7a0b\u52a0\u8f7d\u5730\u5740\uff0c\u4fbf\u4e8e\u89c2\u5bdf\u3002\u4f8b\u5b50\u4e2d\u7684\u94fe\u63a5\u811a\u672cmain.lds\u548c\u9ed8\u8ba4\u94fe\u63a5\u811a\u672c<code>ld -verbose</code>\u4e00\u81f4\uff0c\u6307\u5b9a\u4e86\u52a0\u8f7d\u5730\u5740<code>.</code>\uff1a <pre><code>...\nSECTIONS\n{\n  PROVIDE (__executable_start = SEGMENT_START(\"text-segment\", 0x400000)); . = SEGMENT_START(\"text-segment\", 0x400000) + SIZEOF_HEADERS;\n  ...\n}\n</code></pre> \u7a0b\u5e8f\u8fd0\u884c\u7ed3\u679c\u5982\u4e0b\uff0c\u5176\u4e2d\uff1a</p> <ul> <li>\u52a0\u8f7d\u5730\u5740\u7531<code>SEGMENT_START(\"text-segment\", 0x400000) + SIZEOF_HEADERS</code>\u6307\u5b9a\uff0c\u8fd0\u884c\u7ed3\u679c\u662f<code>0x400318</code></li> <li><code>__executable_start</code>\u53d8\u91cf\u7684\u503c\u7531<code>SEGMENT_START(\"text-segment\", 0x400000)</code>\u6307\u5b9a\uff0c\u8fd0\u884c\u7ed3\u679c\u662f<code>0x400000</code></li> <li>\u8fdb\u7a0b\u8fd0\u884c\u65f6\u52a0\u8f7d\u9875\u7684\u8d77\u59cb\u5730\u5740\u662f<code>0x400000</code>\uff0c\u7531\u94fe\u63a5\u65f6\u6307\u5b9a\u7684\u52a0\u8f7d\u5730\u5740<code>0x400318</code>\u51b3\u5b9a</li> </ul> <pre><code>&gt; ./main\nExecutable Start 0x400000\nText End 0x401285 0x401285 0x401285\nData End 0x404030 0x404030\nExecutable End 0x404038 0x404038\n\n&gt; objdump -h ./main\n./main:     file format elf64-x86-64\nSections:\nIdx Name          Size      VMA               LMA               File off  Algn\n  0 .interp       0000001c  0000000000400318  0000000000400318  00000318  2**0\n                  CONTENTS, ALLOC, LOAD, READONLY, DATA\n  1 .note.gnu.property 00000020  0000000000400338  0000000000400338  00000338  2**3\n                  CONTENTS, ALLOC, LOAD, READONLY, DATA\n\n&gt; make debug\nMapped address spaces:\n          Start Addr           End Addr       Size     Offset objfile\n            0x400000           0x401000     0x1000        0x0 ./main\n            0x401000           0x402000     0x1000     0x1000 ./main\n            0x402000           0x403000     0x1000     0x2000 ./main\n            0x403000           0x404000     0x1000     0x2000 ./main\n            0x404000           0x405000     0x1000     0x3000 ./main\n      0x7ffff7dbf000     0x7ffff7de4000    0x25000        0x0 /usr/lib/x86_64-linux-gnu/libc-2.31.so\n</code></pre>"},{"location":"booknotes/cxydzwxy/load/#_3","title":"\u88c5\u8f7d\u7684\u65b9\u5f0f","text":"<p>\u5185\u5b58\u548c\u78c1\u76d8\u4e2d\u7684\u6570\u636e\u4e0e\u6307\u4ee4\u6309\u7167\u201c\u9875(Page)\u201d\u4e3a\u5355\u4f4d\u5212\u5206\u6210\u82e5\u5e72\u4e2a\u9875\uff0c\u6240\u6709\u88c5\u8f7d\u548c\u64cd\u4f5c\u90fd\u4ee5\u9875\u4e3a\u5355\u4f4d\u3002\u901a\u8fc7<code>getconf PAGESIZE</code>\u547d\u4ee4\u53ef\u53c2\u770b\u7cfb\u7edf\u9875\u7684\u5927\u5c0f\uff0c\u4e00\u822c\u7cfb\u7edf\u90fd\u4f7f\u75284096(0x1000)\u5b57\u8282\u7684\u9875\uff0c\u5982\u4e0a\u8282\u6253\u5370\u7684\u8fdb\u7a0b\u865a\u62df\u5185\u5b58\uff0c\u5c31\u662f\u4ee5<code>0x1000</code>\u5927\u5c0f\u7684\u9875\u4e3a\u5355\u4f4d\u7684\u3002</p>"},{"location":"booknotes/cxydzwxy/load/#_4","title":"\u5b9e\u4f8b","text":"<p>\u5047\u8bbe\u6709\u4e00\u53f032\u4f4d\u673a\u5668\uff0c\u5185\u5b5816KB\uff0c\u9875\u5927\u5c0f\u4e3a4096\u5b57\u8282\uff0c\u56e0\u6b64\u51714\u9875\uff0c\u5730\u5740\u5206\u5e03\u5982\u4e0b\uff1a</p> \u9875\u7f16\u53f7 \u5730\u5740 F0 0x0000_0000 ~ 0x0000_0FFF F1 0x0000_1000 ~ 0x0000_1FFF F2 0x0000_2000 ~ 0x0000_2FFF F3 0x0000_3000 ~ 0x0000_3FFF <p>\u73b0\u6709\u4e00\u5927\u5c0f\u4e3a32KB\u7684\u7a0b\u5e8f\u9700\u8981\u88c5\u8f7d\u3002\u7a0b\u5e8f\u603b\u5171\u88ab\u5206\u4e3a8\u9875(P0 ~ P7)\uff0c\u65e0\u6cd5\u540c\u65f6\u88c5\u516516KB\u7684\u5185\u5b58\u3002\u56e0\u6b64\uff0c\u6211\u4eec\u9700\u8981\u52a8\u6001\u88c5\u8f7d\uff1a</p> <ul> <li>\u5982\u679c\u7a0b\u5e8f\u521a\u5f00\u59cb\u6267\u884c\u65f6\u7684\u5165\u53e3\u5730\u5740\u5728P0\u9875\uff0c\u88c5\u8f7d\u7ba1\u7406\u5668\u53d1\u73b0\u7a0b\u5e8f\u7684P0\u4e0d\u5728\u5185\u5b58\u4e2d\uff0c\u4e8e\u662f\u5c06\u5185\u5b58F0\u5206\u914d\u7ed9P0</li> <li>\u8fd0\u884c\u4e00\u6bb5\u65f6\u95f4\u4ee5\u540e\uff0c\u7a0b\u5e8f\u9700\u8981\u7528\u5230P5\uff0c\u4e8e\u662f\u88c5\u8f7d\u5668\u5c06P5\u8f6c\u5165F1\uff1b\u4ee5\u6b64\u7c7b\u63a8P3\u548cP6\u88ab\u88c5\u5165F2\u548cF3\uff0c\u6b64\u65f6\u5185\u5b58\u5df2\u6ee1\u8f7d</li> <li>\u5982\u679c\u6b64\u65f6\u7a0b\u5e8f\u9700\u8981\u8bbf\u95eeP4\uff0c\u88c5\u8f7d\u5668\u4f1a\u6839\u636e\u7279\u5b9a\u7b97\u6cd5\uff0c\u9009\u62e9\u4e00\u4e2a\u5df2\u7ecf\u88ab\u5206\u914d\u6389\u7684\u5185\u5b58\u9875\u6765\u88c5\u8f7dP4\uff0c\u4f8b\u5982\u6309\u7167\u5148\u8fdb\u5148\u51fa\u7684\u7b97\u6cd5\uff0c\u7528F0\u88c5\u8f7dP4</li> </ul> <p></p> <p>\u5f53\u7a0b\u5e8f\u9700\u8981P4\u7684\u65f6\u5019\uff0c\u5b83\u53ef\u80fd\u4f1a\u88ab\u88c5\u5165F0~F3\u4e2d\u7684\u4efb\u610f\u4e00\u4e2a\u3002\u5982\u679c\u7a0b\u5e8f\u4f7f\u7528\u7269\u7406\u5730\u5740\u76f4\u63a5\u8fdb\u884c\u64cd\u4f5c\uff0c\u90a3\u4e48\u6bcf\u6b21\u9875\u88ab\u88c5\u5165\u65f6\u90fd\u9700\u8981\u8fdb\u884c\u91cd\u5b9a\u4f4d\u3002\u56e0\u6b64\u9700\u8981\u8fdb\u7a0b\u9700\u8981\u4f7f\u7528\u865a\u62df\u5730\u5740\u800c\u4e0d\u662f\u7269\u7406\u5730\u5740\u3002\u786c\u4ef6MMU\u63d0\u4f9b\u4e86\u865a\u62df\u5730\u5740\u5230\u7269\u7406\u5730\u5740\u7684\u8f6c\u6362\uff0c\u5c06\u7269\u7406\u5730\u5740\u9690\u85cf\u5728\u865a\u62df\u5730\u5740\u4e4b\u4e0b\u3002\u56e0\u6b64\uff0c\u5bf9\u4e8e\u7a0b\u5e8f\u6765\u8bf4\uff0c\u7269\u7406\u5730\u5740\u662f\u900f\u660e\u7684\uff0c\u4e0d\u9700\u8981\u5173\u5fc3\u3002</p> <p>\u5728\u786c\u4ef6\u7684\u5730\u5740\u8f6c\u6362\u548c\u9875\u6620\u5c04\u673a\u5236\u7684\u5e2e\u52a9\u4e0b\uff0c\u7a0b\u5e8f\u53ef\u4ee5\u4e0d\u7528\u8003\u8651\u5b9e\u9645\u786c\u4ef6\u5927\u5c0f\u7684\u9650\u5236\u3002\u4f8b\u5982\u4e0a\u4f8b\u4e2d\uff0c\u867d\u7136\u786c\u4ef6\u53ea\u670916KB\u7684\u5185\u5b58\uff0c\u5bf9\u4e8e32KB\u7684\u7a0b\u5e8f\u6765\u8bf4\uff0c\u62e5\u6709\u72ec\u7acb\u768432KB\u865a\u62df\u5185\u5b58\uff0c\u53ef\u201c\u540c\u65f6\u201d(\u5206\u65f6\u590d\u7528)\u52a0\u8f7d\u5165\u5168\u90e8\u7684\u7a0b\u5e8f\uff0c\u5e76\u4e14\u5730\u5740\u8fde\u7eed\u3002</p> <p>\u4e0b\u9762\uff0c\u6211\u4eec\u4ece\u64cd\u4f5c\u7cfb\u7edf\u7684\u89d2\u5ea6\uff0c\u6765\u9610\u8ff0\u4e00\u4e2a\u53ef\u6267\u884c\u6587\u4ef6\u662f\u5982\u4f55\u88ab\u88c5\u8f7d\u548c\u6267\u884c\u7684\u3002</p>"},{"location":"booknotes/cxydzwxy/load/#_5","title":"\u8fdb\u7a0b\u7684\u5efa\u7acb","text":"<p>\u7a0b\u5e8f\u542f\u52a8\u524d\uff0c\u9700\u8981\u505a\u4ee5\u4e0b\u4e09\u4ef6\u4e8b\u60c5\uff1a</p> <ul> <li>\u521b\u5efa\u4e00\u4e2a\u72ec\u7acb\u7684\u865a\u62df\u5730\u5740\u7a7a\u95f4<ul> <li>\u521b\u5efa\u865a\u62df\u5730\u5740\u548c\u7269\u7406\u5730\u5740\u7684\u6620\u5c04\u5173\u7cfb</li> <li>\u521b\u5efa\u865a\u62df\u7a7a\u95f4\u53ea\u662f\u521b\u5efa\u6620\u5c04\u51fd\u6570\u6240\u9700\u8981\u7684\u76f8\u5173\u6570\u636e\u7ed3\u6784<ul> <li>\u5728Linux\u4e2d\uff0c\u5b9e\u9645\u4e0a\u53ea\u662f\u5206\u914d\u4e86\u4e00\u4e2a\u9875\u76ee\u5f55(Page Directory)</li> </ul> </li> </ul> </li> <li>\u8bfb\u53d6\u53ef\u6267\u884c\u6587\u4ef6\u5934\uff0c\u5e76\u4e14\u5efa\u7acb\u865a\u62df\u7a7a\u95f4\u4e0e\u53ef\u6267\u884c\u6587\u4ef6\u7684\u6620\u5c04\u5173\u7cfb<ul> <li>\u521b\u5efa\u865a\u62df\u7a7a\u95f4\u4e0e\u53ef\u6267\u884c\u6587\u4ef6\u7684\u6620\u5c04\u5173\u7cfb</li> <li>\u5f53\u64cd\u4f5c\u7cfb\u7edf\u6355\u83b7\u5230\u7f3a\u9875\u9519\u8bef\u65f6\uff0c\u9700\u8981\u77e5\u9053\u7a0b\u5e8f\u5f53\u524d\u6240\u9700\u8981\u7684\u9875\u5728\u53ef\u6267\u884c\u6587\u4ef6\u4e2d\u7684\u4f4d\u7f6e<ul> <li>\u5728Linux\u4e2d\uff0c\u4f1a\u5728\u8fdb\u7a0b\u76f8\u5e94\u7684\u6570\u636e\u7ed3\u6784\u4e2d\uff0c\u8bbe\u7f6e\u6bb5\u7684VMA\u548c\u6bb5\u5728ELF\u6587\u4ef6\u4e2d\u7684\u504f\u79fb\u7684\u6620\u5c04\u5173\u7cfb</li> </ul> </li> </ul> </li> <li>\u5c06CPU\u7684\u6307\u4ee4\u5bc4\u5b58\u5668\u8bbe\u7f6e\u6210\u53ef\u6267\u884c\u6587\u4ef6\u7684\u5165\u53e3\u5730\u5740\uff0c\u542f\u52a8\u8fd0\u884c<ul> <li>\u5185\u6838\u5806\u6808\u548c\u7528\u6237\u5806\u6808\u7684\u5207\u6362</li> <li>CPU\u8fd0\u884c\u6743\u9650\u7684\u5207\u6362</li> </ul> </li> </ul>"},{"location":"booknotes/cxydzwxy/load/#_6","title":"\u9875\u9519\u8bef","text":"<p>\u4e0a\u9762\u7684\u6b65\u9aa4\u6267\u884c\u5b8c\u4ee5\u540e\uff0c\u5176\u5b9e\u53ef\u6267\u884c\u6587\u4ef6\u7684\u771f\u6b63\u6307\u4ee4\u548c\u6570\u636e\u90fd\u6ca1\u6709\u88ab\u88c5\u5165\u5230\u5185\u5b58\u4e2d\u3002\u64cd\u4f5c\u7cfb\u7edf\u53ea\u662f\u901a\u8fc7\u53ef\u6267\u884c\u6587\u4ef6\u5934\u90e8\u7684\u4fe1\u606f\u5efa\u7acb\u8d77\u53ef\u6267\u884c\u6587\u4ef6\u548c\u8fdb\u7a0b\u865a\u62df\u5185\u5b58\u4e4b\u95f4\u7684\u6620\u5c04\u5173\u7cfb\u800c\u5df2\u3002</p> <p>\u5047\u8bbe\u7a0b\u5e8f\u7684\u5165\u53e3\u5730\u5740\u65f6<code>0x08048000</code>\uff0c\u521a\u597d\u662f<code>.text</code>\u6bb5\u7684\u8d77\u59cb\u5730\u5740\u3002\u5f53CPU\u5f00\u59cb\u6267\u884c\u8fd9\u4e2a\u5730\u5740\u7684\u6307\u4ee4\u65f6\uff0c\u53d1\u73b0\u9875\u9762<code>0x08048000 ~ 0x08049000</code>\u662f\u4e2a\u7a7a\u9875\u9762\uff0c\u4e8e\u662f\u89e6\u53d1\u4e00\u4e2a\u9875\u9519\u8bef(Page Fault)\u3002\u7136\u540e\u63a7\u5236\u6743\u88ab\u4ea4\u7ed9\u64cd\u4f5c\u7cfb\u7edf\uff0c\u6765\u52a0\u8f7d<code>.text</code>\u6bb5\u5230\u6b64\u9875\u9762\uff0c\u5177\u4f53\u6b65\u9aa4\u5982\u4e0b\uff1a</p> <ul> <li>\u5229\u7528\u524d\u9762\u63d0\u5230\u7684\u7b2c\u4e8c\u6b65\u5efa\u7acb\u7684\u865a\u62df\u7a7a\u95f4\u548c\u53ef\u6267\u884c\u6587\u4ef6\u7684\u6620\u5c04\u5173\u7cfb\uff0c\u627e\u5230\u7a7a\u9875\u9762\u6240\u5728\u7684VMA\uff0c\u5e76\u8ba1\u7b97\u51fa\u76f8\u5e94\u7684\u9875\u9762\u5728\u53ef\u6267\u884c\u6587\u4ef6\u4e2d\u7684\u504f\u79fb</li> <li>\u7136\u540e\u5728\u7269\u7406\u5185\u5b58\u4e2d\u5206\u914d\u4e00\u4e2a\u7269\u7406\u9875\u9762\uff0c\u52a0\u8f7d\u53ef\u6267\u884c\u6587\u4ef6\u5bf9\u5e94\u4f4d\u7f6e\u7684\u5185\u5bb9\u5230\u6b64\u7269\u7406\u9875\uff0c\u5e76\u5c06\u8fdb\u7a0b\u4e2d\u8be5\u865a\u62df\u9875\u4e0e\u5206\u914d\u7684\u7269\u7406\u9875\u4e4b\u95f4\u5efa\u7acb\u6620\u5c04\u5173\u7cfb</li> <li>\u6700\u540e\u628a\u63a7\u5236\u6743\u4ea4\u8fd8\u7ed9\u8fdb\u7a0b\uff0c\u8fdb\u7a0b\u4ece\u521a\u624d\u9875\u9519\u8bef\u7684\u4f4d\u7f6e\u91cd\u65b0\u5f00\u59cb\u6267\u884c</li> </ul>"},{"location":"booknotes/cxydzwxy/load/#_7","title":"\u8fdb\u7a0b\u865a\u62df\u7a7a\u95f4\u5206\u5e03","text":""},{"location":"booknotes/cxydzwxy/load/#elf","title":"ELF\u94fe\u63a5\u89c6\u56fe\u548c\u6267\u884c\u89c6\u56fe","text":"<p>ELF\u6587\u4ef6\u4e2d\uff0c\u6bb5\u7684\u6743\u9650\u5f80\u5f80\u53ea\u6709\u4e3a\u6570\u4e0d\u591a\u7684\u51e0\u79cd\u7ec4\u5408\uff0c\u57fa\u672c\u4e0a\u662f\u4e09\u79cd\uff1a</p> <ul> <li>\u4ee5\u4ee3\u7801\u6bb5\u4e3a\u4ee3\u8868\u7684\u6743\u9650\u4e3a\u53ef\u8bfb\u53ef\u6267\u884c\u7684\u6bb5</li> <li>\u4ee5\u6570\u636e\u6bb5\u548cBSS\u6bb5\u4e3a\u4ee3\u8868\u7684\u6743\u9650\u4e3a\u53ef\u8bfb\u53ef\u5199\u7684\u6bb5</li> <li>\u4ee5\u53ea\u8bfb\u6570\u636e\u6bb5\u4e3a\u4ee3\u8868\u7684\u6743\u9650\u4e3a\u53ea\u8bfb\u7684\u6bb5</li> </ul> <p>\u4e3a\u4e86\u6709\u6548\u5229\u7528\u5185\u5b58\uff0c\u53ef\u5c06\u76f8\u540c\u6743\u9650\u7684\u6bb5\u5408\u5e76\u5230\u4e00\u8d77\u5f53\u4f5c\u4e00\u4e2a\u6bb5\u8fdb\u884c\u9875\u6620\u5c04\u3002\u4e00\u4e2a\u6216\u591a\u4e2a\u5c5e\u6027\u7c7b\u4f3c\u7684\"Section\"\u7ec4\u6210\u4e00\u4e2a\"Segment\"\uff0c\u4e00\u4e2a\"Segment\"\u5728\u88c5\u8f7d\u7684\u65f6\u5019\u53ea\u6709\u4e00\u4e2a\u5bf9\u5e94\u7684VMA\uff0c\u8fd9\u6837\u5c31\u53ef\u51cf\u5c11\u9875\u9762\u5185\u90e8\u788e\u7247\uff0c\u4ece\u800c\u8282\u7701\u7a7a\u95f4\u3002</p> <ul> <li>\u4ece\"Section\"\u7684\u89d2\u5ea6\u6765\u770bELF\u6587\u4ef6\u662f\u94fe\u63a5\u89c6\u56fe(Linking View)<ul> <li><code>readelf -S &lt;elf&gt;</code>\u53ef\u67e5\u770bSection</li> </ul> </li> <li>\u4ece\"Segment\"\u7684\u89d2\u5ea6\u6765\u770b\u662f\u6267\u884c\u89c6\u56fe(Execution View)\u3002<ul> <li><code>readelf -l &lt;elf&gt;</code>\u53ef\u64e6\u597d\u770bSegment</li> </ul> </li> </ul> <p>\u4f8b\u5b50\"segment\"\u5c55\u793a\u4e86\u4e00\u4e2a\u7b80\u5355\u7684\u53ef\u6267\u884c\u6587\u4ef6\u4e24\u79cd\u89c6\u56fe\u7684\u5173\u7cfb\uff1a</p> <ul> <li>32\u4e2a\"Section\"\u6839\u636e\u6bb5\u7684\u5c5e\u6027\u88ab\u5206\u6210\u4e8610\u4e2a\"Segment\"</li> <li>4\u4e2a\"LOAD\"\u7c7b\u578b\u7684\"Segment\"\u662f\u9700\u8981\u88ab\u52a0\u8f7d\u7684\uff0c\u5176\u4ed6\u7684\u8bf8\u5982\"NOTE\"\uff0c\"TLS\", \"GNU_STACK\"\u90fd\u662f\u5728\u88c5\u8f7d\u65f6\u8d77\u8f85\u52a9\u4f5c\u7528\u7684<ul> <li>\u5176\u4e2d\uff0c\u7b2c\u4e8c\u4e2a\"LOAD\"\u7c7b\u578b\u4e3a\u53ef\u8bfb\u53ef\u6267\u884c\u7684\u90e8\u5206\uff0c\u5305\u62ec\u4e86\u4ee3\u7801\u6bb5<code>.text</code>\u6bb5</li> </ul> </li> </ul> <pre><code>&gt; readelf -S main\nThere are 32 section headers, starting at offset 0xd4588:\nSection Headers:\n  [Nr] Name              Type             Address           Offset\n       Size              EntSize          Flags  Link  Info  Align\n  [ 0]                   NULL             0000000000000000  00000000\n       0000000000000000  0000000000000000           0     0     0\n  [ 1] .note.gnu.propert NOTE             0000000000400270  00000270\n       0000000000000020  0000000000000000   A       0     0     8\n  [ 2] .note.gnu.build-i NOTE             0000000000400290  00000290\n       0000000000000024  0000000000000000   A       0     0     4\n  [ 3] .note.ABI-tag     NOTE             00000000004002b4  000002b4\n       0000000000000020  0000000000000000   A       0     0     4\n  [ 4] .rela.plt         RELA             00000000004002d8  000002d8\n       0000000000000240  0000000000000018  AI       0    20     8\n  [ 5] .init             PROGBITS         0000000000401000  00001000\n       000000000000001b  0000000000000000  AX       0     0     4\n  [ 6] .plt              PROGBITS         0000000000401020  00001020\n       0000000000000180  0000000000000000  AX       0     0     16\n  [ 7] .text             PROGBITS         00000000004011a0  000011a0\n       0000000000091ec0  0000000000000000  AX       0     0     16\n  [ 8] __libc_freeres_fn PROGBITS         0000000000493060  00093060\n       0000000000001ca0  0000000000000000  AX       0     0     16\n  [ 9] .fini             PROGBITS         0000000000494d00  00094d00\n       000000000000000d  0000000000000000  AX       0     0     4\n  [10] .rodata           PROGBITS         0000000000495000  00095000\n       000000000001bd04  0000000000000000   A       0     0     32\n  [11] .stapsdt.base     PROGBITS         00000000004b0d04  000b0d04\n       0000000000000001  0000000000000000   A       0     0     1\n  [12] .eh_frame         PROGBITS         00000000004b0d08  000b0d08\n       000000000000a604  0000000000000000   A       0     0     8\n  [13] .gcc_except_table PROGBITS         00000000004bb30c  000bb30c\n       00000000000000b1  0000000000000000   A       0     0     1\n  [14] .tdata            PROGBITS         00000000004bd0c0  000bc0c0\n       0000000000000020  0000000000000000 WAT       0     0     8\n  [15] .tbss             NOBITS           00000000004bd0e0  000bc0e0\n       0000000000000040  0000000000000000 WAT       0     0     8\n  [16] .init_array       INIT_ARRAY       00000000004bd0e0  000bc0e0\n       0000000000000010  0000000000000008  WA       0     0     8\n  [17] .fini_array       FINI_ARRAY       00000000004bd0f0  000bc0f0\n       0000000000000010  0000000000000008  WA       0     0     8\n  [18] .data.rel.ro      PROGBITS         00000000004bd100  000bc100\n       0000000000002df4  0000000000000000  WA       0     0     32\n  [19] .got              PROGBITS         00000000004bfef8  000beef8\n       00000000000000f0  0000000000000000  WA       0     0     8\n  [20] .got.plt          PROGBITS         00000000004c0000  000bf000\n       00000000000000d8  0000000000000008  WA       0     0     8\n  [21] .data             PROGBITS         00000000004c00e0  000bf0e0\n       0000000000001a50  0000000000000000  WA       0     0     32\n  [22] __libc_subfreeres PROGBITS         00000000004c1b30  000c0b30\n       0000000000000048  0000000000000000  WA       0     0     8\n  [23] __libc_IO_vtables PROGBITS         00000000004c1b80  000c0b80\n       00000000000006a8  0000000000000000  WA       0     0     32\n  [24] __libc_atexit     PROGBITS         00000000004c2228  000c1228\n       0000000000000008  0000000000000000  WA       0     0     8\n  [25] .bss              NOBITS           00000000004c2240  000c1230\n       0000000000001718  0000000000000000  WA       0     0     32\n  [26] __libc_freeres_pt NOBITS           00000000004c3958  000c1230\n       0000000000000028  0000000000000000  WA       0     0     8\n  ...\nKey to Flags:\n  W (write), A (alloc), X (execute), M (merge), S (strings), I (info),\n  L (link order), O (extra OS processing required), G (group), T (TLS),\n  C (compressed), x (unknown), o (OS specific), E (exclude),\n  l (large), p (processor specific)\n\n&gt; readelf -l main\nThere are 10 program headers, starting at offset 64\nProgram Headers:\n  Type           Offset             VirtAddr           PhysAddr\n                 FileSiz            MemSiz              Flags  Align\n  LOAD           0x0000000000000000 0x0000000000400000 0x0000000000400000\n                 0x0000000000000518 0x0000000000000518  R      0x1000\n  LOAD           0x0000000000001000 0x0000000000401000 0x0000000000401000\n                 0x0000000000093d0d 0x0000000000093d0d  R E    0x1000\n  LOAD           0x0000000000095000 0x0000000000495000 0x0000000000495000\n                 0x00000000000263bd 0x00000000000263bd  R      0x1000\n  LOAD           0x00000000000bc0c0 0x00000000004bd0c0 0x00000000004bd0c0\n                 0x0000000000005170 0x00000000000068c0  RW     0x1000\n  NOTE           0x0000000000000270 0x0000000000400270 0x0000000000400270\n                 0x0000000000000020 0x0000000000000020  R      0x8\n  NOTE           0x0000000000000290 0x0000000000400290 0x0000000000400290\n                 0x0000000000000044 0x0000000000000044  R      0x4\n  TLS            0x00000000000bc0c0 0x00000000004bd0c0 0x00000000004bd0c0\n                 0x0000000000000020 0x0000000000000060  R      0x8\n  GNU_PROPERTY   0x0000000000000270 0x0000000000400270 0x0000000000400270\n                 0x0000000000000020 0x0000000000000020  R      0x8\n  GNU_STACK      0x0000000000000000 0x0000000000000000 0x0000000000000000\n                 0x0000000000000000 0x0000000000000000  RW     0x10\n  GNU_RELRO      0x00000000000bc0c0 0x00000000004bd0c0 0x00000000004bd0c0\n                 0x0000000000002f40 0x0000000000002f40  R      0x1\n Section to Segment mapping:\n  Segment Sections...\n   00     .note.gnu.property .note.gnu.build-id .note.ABI-tag .rela.plt \n   01     .init .plt .text __libc_freeres_fn .fini \n   02     .rodata .stapsdt.base .eh_frame .gcc_except_table \n   03     .tdata .init_array .fini_array .data.rel.ro .got .got.plt .data __libc_subfreeres __libc_IO_vtables __libc_atexit .bss __libc_freeres_ptrs \n   04     .note.gnu.property \n   05     .note.gnu.build-id .note.ABI-tag \n   06     .tdata .tbss \n   07     .note.gnu.property \n   08     \n   09     .tdata .init_array .fini_array .data.rel.ro .got \n</code></pre> <p>\u7531\u4e8e\u53ea\u6709\u53ef\u6267\u884c\u6587\u4ef6\u9700\u8981\u52a0\u8f7d\uff0c\u56e0\u6b64\u53ea\u6709\u53ef\u6267\u884c\u6587\u4ef6\u6709\u7a0b\u5e8f\u5934\u8868<code>Program Headers</code>\uff0c\u76ee\u6807\u6587\u4ef6\u4e2d\u6ca1\u6709\u3002\u6839\u636e\u7a0b\u5e8f\u5934\u8868\u4e2d\u7684\"VirtAddr\"\uff0c\"MemSiz\"\u4ee5\u53ca\u7cfb\u7edf\u7684\u9875\u5927\u5c0f\uff0c\u5c31\u53ef\u7528\u63a8\u65ad\u51fa\u5404\u6bb5\u8fd0\u884c\u65f6\u5728\u865a\u62df\u5185\u5b58\u4e2d\u7684\u4f4d\u7f6e\u3002</p>"},{"location":"booknotes/cxydzwxy/load/#_8","title":"\u5806\u548c\u6808","text":"<p>\u64cd\u4f5c\u7cfb\u7edf\u901a\u8fc7\u4f7f\u7528VMA\u6765\u5806\u8fdb\u7a0b\u7684\u5730\u5740\u7a7a\u95f4\u8fdb\u884c\u7ba1\u7406\u3002\u64cd\u4f5c\u7cfb\u7edf\u7ed9\u8fdb\u7a0b\u7a7a\u95f4\u5212\u5206\u51fa\u4e00\u4e2a\u4e2aVMA\u6765\u7ba1\u7406\u8fdb\u7a0b\u7684\u865a\u62df\u7a7a\u95f4\u3002\u57fa\u672c\u539f\u5219\u662f\u5c06\u76f8\u540c\u6743\u9650\u5c5e\u6027\u7684\u3001\u6709\u76f8\u540c\u6620\u50cf\u6587\u4ef6\u7684\u6620\u5c04\u6210\u4e00\u4e2aVMA\u3002\u4e00\u4e2a\u8fdb\u7a0b\u57fa\u672c\u4e0a\u53ef\u7528\u5206\u4e3a\u5982\u4e0b\u51e0\u79cdVMA\u533a\u57df\uff1a</p> <ul> <li>\u4ee3\u7801VMA\uff0c\u6743\u9650\u53ea\u8bfb\u3001\u53ef\u6267\u884c\uff1b\u6709\u6620\u50cf\u6587\u4ef6</li> <li>\u6570\u636eVMA\uff0c\u6743\u9650\u53ef\u8bfb\u5199\u3001\u53ef\u6267\u884c\uff1b\u6709\u6620\u50cf\u6587\u4ef6</li> <li>\u5806VMA\uff0c\u6743\u9650\u53ef\u8bfb\u5199\u3001\u53ef\u6267\u884c\uff1b\u65e0\u6620\u50cf\u6587\u4ef6\uff0c\u533f\u540d\uff0c\u53ef\u5411\u4e0a\u6269\u5c55</li> <li>\u6808VMA\uff0c\u6743\u9650\u53ef\u8bfb\u5199\u3001\u4e0d\u53ef\u6267\u884c\uff1b\u65e0\u6620\u50cf\u6587\u4ef6\uff0c\u533f\u540d\uff0c\u53ef\u5411\u4e0b\u6269\u5c55</li> </ul> <p>\u5728Linux\u4e0b\uff0c\u6211\u4eec\u53ef\u901a\u8fc7<code>cat /proc/&lt;pid&gt;/maps</code>\u6765\u67e5\u770b\u8fdb\u7a0b\u7684\u865a\u62df\u7a7a\u95f4\u5206\u5e03\uff1a</p> <pre><code>&gt; cat /proc/&lt;pid&gt;/maps\n00400000-00401000 r--p 00000000 08:05 4589838                            ./main\n00401000-00495000 r-xp 00001000 08:05 4589838                            ./main\n00495000-004bc000 r--p 00095000 08:05 4589838                            ./main\n004bd000-004c0000 r--p 000bc000 08:05 4589838                            ./main\n004c0000-004c3000 rw-p 000bf000 08:05 4589838                            ./main\n004c3000-004c4000 rw-p 00000000 00:00 0 \n014e2000-01505000 rw-p 00000000 00:00 0                                  [heap]\n7ffda9035000-7ffda9056000 rw-p 00000000 00:00 0                          [stack]\n7ffda912d000-7ffda9131000 r--p 00000000 00:00 0                          [vvar]\n7ffda9131000-7ffda9133000 r-xp 00000000 00:00 0                          [vdso]\nffffffffff600000-ffffffffff601000 --xp 00000000 00:00 0                  [vsyscall]\n\n&gt; ls -i ./main\n4589838 ./main\n</code></pre> <p>\u9664\u4e86\u524d\u9762\u51e0\u4e2aVMA\u6620\u5c04\u5230\u4e86\u53ef\u6267\u884c\u6587\u4ef6<code>main</code>\u5916\uff08\u53ef\u6267\u884c\u6587\u4ef6\u7684inode\u662f4589838\uff09\uff0c\u5176\u4ed6\u7684VMA\u7684\u6587\u4ef6\u8282\u70b9\u90fd\u662f0\uff0c\u8868\u793a\u533f\u540d\u865a\u62df\u5185\u5b58\u533a\u57df(Anonymous Virtual Memory Area)\u3002\u5176\u4e2d\u6709\u4e24\u4e2a\u533a\u57df\u5206\u522b\u662f\u5806(Heap)\u548c\u6808(Stack)\uff0c\u4ed6\u4eec\u7684\u5927\u5c0f\u5206\u522b\u662f140KB\u548c132KB\u3002\u5e76\u4e14\u4ed6\u4eec\u7684\u5927\u5c0f\u968f\u7740\u7a0b\u5e8f\u7684\u8fd0\u884c\uff0c\u4f1a\u52a8\u6001\u53d8\u6362\u3002\u4f8b\u5b50\"max_malloc\"\u53ef\u4ee5\u6253\u5370\u5f53\u524d\u7cfb\u7edf<code>malloc</code>\u53ef\u4ee5\u7533\u8bf7\u7684\u6700\u5927\u5806\u6570\u91cf\u3002</p> <p>\u4e0a\u9762\u6620\u5c04\u5230\u53ef\u6267\u884c\u6587\u4ef6\u7684VMA\uff0c\u5230<code>0x004c3000</code>\u5c31\u7ed3\u675f\u4e86\uff0c\u5c0f\u4e8e\"Segment\"\u4e2dLOAD\u7c7b\u578b\u7684\u6700\u5927\u503c<code>0x004C3980</code>\u3002\u8fd9\u662f\u56e0\u4e3a\u64cd\u4f5c\u7cfb\u7edf\u5bf9<code>.bss</code>\u6bb5\u548c<code>__libc_freeres_ptrs</code>\u6bb5\u505a\u4e86\u7279\u6b8a\u5904\u7406\uff0c\u4ed6\u4eec\u88ab\u76f4\u63a5\u6620\u5c04\u5230\u4e86\u5806\u4e2d\u3002</p>"},{"location":"booknotes/cxydzwxy/load/#elf_1","title":"\u5185\u6838\u88c5\u8f7dELF\u8fc7\u7a0b","text":"<p>Linux\u901a\u8fc7\u7cfb\u7edf\u8c03\u7528<code>execve()</code>\u8fdb\u884cELF\u7684\u88c5\u8f7d\u8fc7\u7a0b\uff0c\u7cfb\u7edf\u8c03\u7528<code>execve()</code>\u7684\u4f7f\u7528\u65b9\u6cd5\u53ef\u53c2\u8003\u4f8b\u5b50\"minibash\"\uff0c\u8fd9\u91cc\u4e0d\u518d\u7ec6\u8ff0\u3002</p> <p>\u5728\u5185\u6838\u4e2d\uff0c\u7cfb\u7edf\u8c03\u7528<code>execve()</code>\u4f1a\u5148\u68c0\u67e5\u6587\u4ef6\u5934\uff0c\u786e\u5b9a\u6587\u4ef6\u7c7b\u578b\u540e\uff0c\u8c03\u7528\u76f8\u5e94\u7684\u88c5\u8f7d\u51fd\u6570\u3002\u5982\uff0c<code>load_elf_binary()</code>\u7528\u4e8e\u5bfc\u5165ELF\u6587\u4ef6\uff0c\u5b83\u7684\u4e3b\u8981\u6b65\u9aa4\u662f\uff1a</p> <ul> <li>\u68c0\u67e5ELF\u6587\u4ef6\u7684\u6709\u6548\u6027\uff0c\u6bd4\u5982\u9b54\u6570\u3001\u7a0b\u5e8f\u5934\u8868\u4e2d\u7684\u6bb5(Segment)\u7684\u6570\u91cf</li> <li>\u5bfb\u627e\u52a8\u6001\u94fe\u63a5\u7684<code>.interp</code>\u6bb5\uff0c\u8bbe\u7f6e\u52a8\u6001\u94fe\u63a5\u5668\u8def\u5f84</li> <li>\u6839\u636eELF\u53ef\u6267\u884c\u6587\u4ef6\u7684\u7a0b\u5e8f\u5934\u8868\u7684\u63cf\u8ff0\uff0c\u5806ELF\u6587\u4ef6\u8fdb\u884c\u6620\u5c04\uff0c\u6bd4\u5982\u4ee3\u7801\u3001\u6570\u636e\u3001\u53ea\u8bfb\u6570\u636e\u7b49</li> <li>\u521d\u59cb\u5316ELF\u8fdb\u7a0b\u73af\u5883</li> <li>\u5c06<code>execve()</code>\u7cfb\u7edf\u8c03\u7528\u7684\u8fd4\u56de\u5730\u5740\u4fee\u6539\u6210ELF\u53ef\u6267\u884c\u6587\u4ef6\u7684\u5165\u53e3\u70b9<ul> <li>\u9759\u6001\u94fe\u63a5\u7684ELF\u53ef\u6267\u884c\u6587\u4ef6\uff0c\u5165\u53e3\u662fELF\u6587\u4ef6\u7684\u6587\u4ef6\u5934\u4e2d\u7684<code>e_entry</code>\u6240\u6307\u7684\u5730\u5740</li> <li>\u52a8\u6001\u94fe\u63a5\u7684ELF\u53ef\u6267\u884c\u6587\u4ef6\uff0c\u5165\u53e3\u662f\u52a8\u6001\u94fe\u63a5\u5668</li> </ul> </li> </ul>"},{"location":"booknotes/debug_hacks/advance/","title":"\u9ad8\u7ea7\u8c03\u8bd5\u6280\u672f","text":"<p>\u300aDebug Hacks--\u6df1\u5165\u8c03\u8bd5\u7684\u6280\u672f\u548c\u5de5\u5177\u300b - \u5409\u5188\u5f18\u9686\uff0c\u7b2c\u56db\u7ae0\u548c\u7b2c\u516d\u7ae0\u7684\u8bfb\u4e66\u6bd4\u8f83\uff0c\u672c\u6587\u4e2d\u6240\u6709\u4ee3\u7801\u53ef\u5728GitHub\u4ed3\u5e93\u4e2d\u627e\u5230</p>"},{"location":"booknotes/debug_hacks/advance/#gotplt","title":"GOT\u548cPLT","text":""},{"location":"booknotes/debug_hacks/advance/#_2","title":"\u5de5\u4f5c\u539f\u7406","text":"<ul> <li>GOT(Global Offset Table)<ul> <li>GOT\u662f\u4fdd\u5b58\u5e93\u51fd\u6570\u5730\u5740\u7684\u533a\u57df\uff0c\u7a0b\u5e8f\u8fd0\u884c\u65f6\uff0c\u7528\u5230\u7684\u5e93\u51fd\u6570\u5730\u5740\u4f1a\u8bbe\u7f6e\u5230\u8be5\u533a\u57df</li> </ul> </li> <li>PLT(Procedure Linkage Table)<ul> <li>PLT\u65f6\u8c03\u7528\u5e93\u51fd\u6570\u65f6\u7684\u5c0f\u578b\u4ee3\u7801\u96c6\u5408\uff0c\u7a0b\u5e8f\u53ef\u4ee5\u50cf\u8c03\u7528\u81ea\u5df1\u7684\u7528\u6237\u51fd\u6570\u4e00\u6837\u8c03\u7528\u8fd9\u4e9b\u5c0f\u578b\u4ee3\u7801\u3002\u8fd9\u4e9b\u4ee3\u7801\u53ea\u662f\u8df3\u8f6c\u5230GOT\u4e2d\u8bbe\u7f6e\u7684\u503c\u800c\u5df2\u3002\u5982\u679cGOT\u4e2d\u5c1a\u672a\u8bbe\u7f6e\u8c03\u7528\u51fd\u6570\u7684\u5730\u5740\uff0c\u5c31\u5c06\u5730\u5740\u8bbe\u7f6e\u5230GOT\u4e2d\u518d\u8df3\u8f6c\u3002</li> </ul> </li> </ul> <p>\u52a8\u6001\u5e93\u51fd\u6570\u6bcf\u6b21\u8fd0\u884c\u7684\u5730\u5740\u90fd\u4e0d\u540c\uff0c\u5229\u7528GOT\u548cPLT\u673a\u5236\uff0c\u8fdb\u7a0b\u53ef\u5c06\u5e93\u51fd\u6570\u770b\u4f5c\u4e00\u4e2a\u56fa\u5b9a\u4e0d\u53d8\u7684\u5730\u5740\uff0c\u8be6\u60c5\u53ef\u53c2\u8003\u6587\u7ae0\"\u52a8\u6001\u94fe\u63a5\"\u3002</p>"},{"location":"booknotes/debug_hacks/advance/#_3","title":"\u5b9e\u4f8b","text":"<p>\u5728\u793a\u4f8b\u4ee3\u7801\u7684\u6c47\u7f16\u4ee3\u7801\u4e2d\uff0c</p> <ul> <li><code>callq  0x555555555050 &lt;foo@plt&gt;</code><ul> <li>\u901a\u8fc7PLT\u6280\u672f\u8c03\u7528\u5e93\u51fd\u6570<code>foo</code></li> </ul> </li> <li><code>0x555555555050</code>\u662f<code>foo@plt</code>\u5730\u5740<ul> <li>\u5bf9\u5e94\u7684\u6c47\u7f16\u4ee3\u7801\u7b2c\u4e00\u53e5\u662f\u8df3\u8f6c\u6307\u4ee4\uff0c\u8df3\u8f6c\u5730\u5740\u4fdd\u5b58\u5728<code>0x555555557fd0</code>\u5730\u5740\u4e2d\uff08\u4ee3\u7801\u4e2d\u7684<code>*</code>\u662f\u53d6\u503c\u7684\u610f\u601d\uff09</li> </ul> </li> <li><code>0x555555557fd0</code>\u662f<code>foo@got.plt</code>\u5730\u5740<ul> <li>\u5982\u679cGOT\u5c1a\u672a\u8bbe\u7f6e\u8fc7\uff0c\u540e\u9762\u7684\u6307\u4ee4\u4f1a\u5c06\u5e93\u51fd\u6570<code>foo</code>\u7684\u5730\u5740\u586b\u5165\u6b64\u5730\u5740</li> <li>\u5982\u679cGOT\u5df2\u7ecf\u8bbe\u7f6e\u8fc7\uff0c\u4f1a\u76f4\u63a5\u8df3\u8f6c\u81f3\u5e93\u51fd\u6570<code>foo</code>\uff0c\u5982\u4e0b\u9762\u7684\u7684\u5730\u5740<code>0x7ffff7fc30f9</code></li> </ul> </li> <li>\u7531\u4e8e<code>foo</code>\u5e93\u51fd\u6570\u7684PLT\u5730\u5740\u662f\u56fa\u5b9a\u7684\uff0c\u4ece\u4e3b\u8fdb\u7a0b\u7684\u89d2\u5ea6\u770b\uff0c\u5176\u8c03\u7528\u7684<code>foo</code>\u5e93\u51fd\u6570\u7684\u5730\u5740\uff0c\u6bcf\u6b21\u8fd0\u884c\u90fd\u4e0d\u53d8\uff0c\u90fd\u662f<code>0x555555555050</code> <pre><code>(gdb) disas main\nDump of assembler code for function main:\n=&gt; 0x0000555555555158 &lt;+0&gt;:     endbr64 \n   0x000055555555515c &lt;+4&gt;:     push   %rbp\n   0x000055555555515d &lt;+5&gt;:     mov    %rsp,%rbp\n   0x0000555555555160 &lt;+8&gt;:     sub    $0x10,%rsp\n   0x0000555555555164 &lt;+12&gt;:    callq  0x555555555149 &lt;bar&gt;\n   0x0000555555555169 &lt;+17&gt;:    mov    %eax,-0xc(%rbp)\n   0x000055555555516c &lt;+20&gt;:    mov    $0x0,%eax\n   0x0000555555555171 &lt;+25&gt;:    callq  0x555555555050 &lt;foo@plt&gt;\n   0x0000555555555176 &lt;+30&gt;:    mov    %eax,-0x8(%rbp)\n   0x0000555555555179 &lt;+33&gt;:    mov    -0xc(%rbp),%edx\n   0x000055555555517c &lt;+36&gt;:    mov    -0x8(%rbp),%eax\n   0x000055555555517f &lt;+39&gt;:    add    %edx,%eax\n   0x0000555555555181 &lt;+41&gt;:    mov    %eax,-0x4(%rbp)\n   0x0000555555555184 &lt;+44&gt;:    mov    $0x0,%eax\n   0x0000555555555189 &lt;+49&gt;:    leaveq \n   0x000055555555518a &lt;+50&gt;:    retq \n\n(gdb) disas 0x555555555050\nDump of assembler code for function rand@plt:\n   0x0000555555555050 &lt;+0&gt;:     endbr64 \n   0x0000555555555054 &lt;+4&gt;:     bnd jmpq *0x2f75(%rip)        # 0x555555557fd0 &lt;foo@got.plt&gt;\n   0x000055555555505b &lt;+11&gt;:    nopl   0x0(%rax,%rax,1)\n\n(gdb) p/x *(uint64_t*)0x555555557fd0\n$1 = 0x7ffff7fc30f9\n# \u548cfoo@got.plt\u7684\u5185\u5bb9\u76f8\u540c\n(gdb) p/x &amp;foo\n$2 = 0x7ffff7fc30f9\n</code></pre></li> </ul>"},{"location":"booknotes/debug_hacks/advance/#strace","title":"strace","text":"<p><code>strace</code>\u80fd\u591f\u8ddf\u8e2a\u8fdb\u7a0b\u4f7f\u7528\u7684\u7cfb\u7edf\u8c03\u7528\uff0c\u5e76\u663e\u793a\u5176\u5185\u5bb9\u3002\u4f8b\u5982\uff0c\u4e0b\u9762\u7684\u4ee3\u7801\u4f1a\u56e0\u4e3a\u6ca1\u6709\u6587\u4ef6\u6743\u9650\u800c\u51fa\u9519\u3002</p> <pre><code>int main(void)\n{\n   FILE *fp;\n   fp = fopen(\"/etc/shadow\", \"r\");\n   if (fp == NULL)\n   {\n      printf(\"Error!\\n\");\n      return EXIT_FAILURE;\n   }\n   return EXIT_SUCCESS;\n}\n</code></pre> <p>\u5229\u7528<code>strace ./main</code>\uff0c\u53ef\u627e\u5230\u51fa\u9519\u7684\u539f\u56e0\uff1a <pre><code>...\nopenat(AT_FDCWD, \"/etc/shadow\", O_RDONLY) = -1 EACCES (Permission denied)\nfstat(1, {st_mode=S_IFCHR|0620, st_rdev=makedev(0x88, 0x3), ...}) = 0\nwrite(1, \"Error!\\n\", 7Error!)                 = 7\n...\n</code></pre></p>"},{"location":"booknotes/debug_hacks/advance/#gdb","title":"\u7ed3\u5408GDB\u8be6\u7ec6\u8c03\u67e5","text":"<p>\u901a\u8fc7<code>strace -i</code>\u53ef\u4ee5\u67e5\u770b\u7cfb\u7edf\u8c03\u7528\u7684\u5730\u5740\uff0c\u56e0\u6b64\u53ef\u4ee5\u5728\u6b64\u5730\u5740\u4e0a\u7528GDB\u65ad\u70b9\u8c03\u8bd5\u3002\u4e3a\u4e86\u8ba9\u6bcf\u6b21\u8fd0\u884c\u7684\u5730\u5740\u4fdd\u6301\u4e0d\u53d8\uff0c\u9700\u8981\u901a\u8fc7<code>setarch -R</code>\u547d\u4ee4\uff0c\u5173\u95ed\u5730\u5740\u7a7a\u95f4\u5e03\u5c40\u968f\u673a\u5316(Address Space Layout Randomization, ASLR)\u529f\u80fd\u3002</p> <p>\u4f8b\u5982\uff0c\u4f8b\u5b50\"strace\"\uff0c\u901a\u8fc7\u547d\u4ee4<code>setarch -R</code>\u5173\u95ed\u5730\u5740\u7a7a\u95f4\u5e03\u5c40\u968f\u673a\u5316\u540e\uff0c<code>openat</code>\u7684\u5730\u5740\u662f<code>0x7ffff7ecfd1b</code>\u3002\u901a\u8fc7GDB\u65ad\u70b9\u547d\u4ee4<code>b *0x7ffff7ecfd1b</code>\uff0c\u53ef\u77e5\u6b64\u4f4d\u7f6e\u662f\"open64.c:48\"\u3002\u4ece\u800c\uff0c\u53ef\u4ee5\u5f88\u65b9\u4fbf\u5730\u5728strace\u76f8\u5173\u7684\u4f4d\u7f6e\u6253\u4e0a\u65ad\u70b9\u3002</p> <pre><code>$ setarch -R\n$ strace -i ./main\n...\n[00007ffff7ed625b] brk(0x55555557a000)  = 0x55555557a000\n[00007ffff7ecfd1b] openat(AT_FDCWD, \"/etc/shadow\", O_RDONLY) = -1 EACCES (Permission denied)\n[00007ffff7ecf4f9] fstat(1, {st_mode=S_IFCHR|0620, st_rdev=makedev(0x88, 0x3), ...}) = 0\n[00007ffff7ed0057] write(1, \"Error!\\n\", 7Error!) = 7\n...\n\n$ gdb ./main\n(gdb) start\nTemporary breakpoint 1 at 0x1169: file main.c, line 5.\nStarting program: /home/yuxiangw/GitHub/learning_book/docs/booknotes/debug_hacks/advance/code/strace/main \n\nTemporary breakpoint 1, main () at main.c:5\n5       {\n(gdb) b *0x7ffff7ecfd1b\nBreakpoint 2 at 0x7ffff7ecfd1b: file ../sysdeps/unix/sysv/linux/open64.c, line 48.\n(gdb) c\nContinuing.\n\nBreakpoint 2, 0x00007ffff7ecfd1b in __libc_open64 (file=0x555555556006 \"/etc/shadow\", oflag=0)\n    at ../sysdeps/unix/sysv/linux/open64.c:48\n48      ../sysdeps/unix/sysv/linux/open64.c: No such file or directory.\n</code></pre>"},{"location":"booknotes/debug_hacks/basic/","title":"\u8c03\u8bd5\u524d\u7684\u5fc5\u77e5\u5fc5\u4f1a","text":"<p>\u300aDebug Hacks--\u6df1\u5165\u8c03\u8bd5\u7684\u6280\u672f\u548c\u5de5\u5177\u300b - \u5409\u5188\u5f18\u9686\uff0c\u7b2c\u4e8c\u7ae0\u7684\u8bfb\u4e66\u7b14\u8bb0\uff0c\u672c\u6587\u4e2d\u7684\u6240\u6709\u4ee3\u7801\u53ef\u5728GitHub\u4ed3\u5e93\u4e2d\u627e\u5230</p>"},{"location":"booknotes/debug_hacks/basic/#_2","title":"\u5bc4\u5b58\u5668\u548c\u6c47\u7f16\u4ee3\u7801","text":"<p>\u672c\u7ae0\u8282\u4ecb\u7ecd\u4e86x84_64\u5e73\u53f0\u4e2d\u7684\u5404\u5bc4\u5b58\u5668\u7684\u4f5c\u7528\uff0c\u4ee5\u53ca\u6c47\u7f16\u4ee3\u7801\u7684\u57fa\u672c\u5f62\u5f0f</p>"},{"location":"booknotes/debug_hacks/basic/#x86_64","title":"x86_64\u5bc4\u5b58\u5668","text":"<p>x86_64\u5b9a\u4e49\u4e86\u5404\u79cd\u5bc4\u5b58\u5668\uff0c\u5b83\u4eec\u7684\u7528\u9014\u5982\u4e0b\u8868\u6240\u793a\uff1a</p> Register Purpose Saved across calls %rax temp register; (\u4fdd\u5b58\u51fd\u6570\u8fd4\u56de\u503c) No %rbx callee-saved Yes %rcx used to pass 4th argument to functions No %rdx used to pass 3rd argument to functions No %rsp stack pointer \uff08\u6307\u5411\u6808\u9876\uff09 Yes %rbp callee-saved; base pointer\uff08\u6307\u5411\u6808\u5e27\u5f00\u59cb\u7684\u5730\u65b9\uff09 Yes %rsi used to pass 2nd argument to functions No %rdi used to pass 1st argument to functions No %r8 used to pass 5th argument to functions No %r9 used to pass 6th argument to functions No %r10-r11 temporary No %r12-r15 callee-saved registers Yes %rip instruction pointer; Program Counter register Global <p>\u53e6\u5916\u8fd8\u6709xmm0, xmm1...\u7b49\u5bc4\u5b58\u5668\uff0c\u7528\u4e8e\u4f20\u9012float\u7c7b\u578b\u6216\u8005double\u7c7b\u578b\u7684\u53c2\u6570\uff0c\u5177\u4f53\u53c2\u89c1\u672c\u6587\u4e2d\u7684\u201c\u53c2\u6570\u4f20\u9012-x86_64\u201d\u7ae0\u8282\u3002</p>"},{"location":"booknotes/debug_hacks/basic/#_3","title":"\u5e38\u89c1\u64cd\u4f5c\u7b26","text":"<p>\u4e0b\u8868\u5217\u51fa\u4e86\u5bf9\u5bc4\u5b58\u5668\u548c\u5185\u5b58\u7684\u5e38\u89c1\u64cd\u4f5c\uff0c\u5176\u4ed6\u64cd\u4f5c\u548c\u76f8\u5e94\u7684\u6c47\u7f16\u4ee3\u7801\u53ef\u53c2\u8003\u6587\u6863\u3002</p> \u64cd\u4f5c\u7c7b\u578b \u683c\u5f0f \u64cd\u4f5c\u6570\u503c \u7acb\u5373\u6570 <code>$Imm</code> <code>Imm</code>\uff0c\u7acb\u5373\u6570\u5bfb\u5740 \u5bc4\u5b58\u5668 <code>Ea</code> <code>R[Ea]</code>\uff0c\u5bc4\u5b58\u5668\u5bfb\u5740 \u5185\u5b58 <code>Imm</code> <code>M[Imm]</code>\uff0c\u7edd\u5bf9\u5bfb\u5740 \u5185\u5b58 <code>(Ea)</code> <code>M[R[Ea]]</code>\uff0c\u95f4\u63a5\u5bfb\u5740 \u5185\u5b58 <code>Imm(Ea)</code> <code>M[Imm + R[Ea]]</code>\uff0c\uff08\u57fa\u5730\u5740+\u504f\u79fb\u91cf\uff09\u5bfb\u5740 <ul> <li><code>Imm</code>\u8868\u793a\u7acb\u5373\u6570\uff0c\u4f8b\u5982\uff1a0x8048d8e</li> <li><code>Ex</code>\u8868\u793a\u5bc4\u5b58\u5668\uff0c\u4f8b\u5982\uff1a%rax</li> <li><code>R[Ex]</code>\u8868\u793a\u5bc4\u5b58\u5668Ex\u7684\u503c</li> <li><code>M[x]</code>\u8868\u793a\u5730\u5740\u4e3ax\u7684\u5185\u5b58\u4e2d\u7684\u503c</li> </ul>"},{"location":"booknotes/debug_hacks/basic/#_4","title":"\u51fd\u6570\u8c03\u7528\u548c\u6808","text":"<p>\u672c\u7ae0\u8282\u7ed3\u5408GDB\u7684\u8c03\u8bd5\u4fe1\u606f\uff0c\u4ecb\u7ecd\u4e86\u6808\u5728\u7a0b\u5e8f\u8fd0\u884c\u4e2d\u7684\u4f5c\u7528</p>"},{"location":"booknotes/debug_hacks/basic/#_5","title":"\u6808\u7684\u5e03\u5c40","text":"<p>\u5728\u51fd\u6570\u8c03\u7528\u7684\u8fc7\u7a0b\u4e2d\uff0c\u6808\u4e0a\u4f9d\u6b21\u4fdd\u5b58\u4e86\uff1a</p> <ul> <li>\u4f20\u7ed9\u51fd\u6570\u7684\u53c2\u6570\uff0c\u5177\u4f53\u4f20\u9012\u8fc7\u7a0b\u53ef\u53c2\u8003\u672c\u6587\u4e2d\u7684\u201c\u53c2\u6570\u4f20\u9012\u201d\u7ae0\u8282<ul> <li>\u5bf9\u4e8ex86_64\uff0c\u53c2\u6570\u901a\u8fc7\u201crdi, rsi, rdx, rcx, r8, r9\u201d\u7b49\u5bc4\u5b58\u5668\u4f20\u9012\u3002\u5f53\u53c2\u6570\u8fc7\u591a\u65f6\uff0c\u624d\u4f1a\u5c06\u989d\u5916\u7684\u53c2\u6570\u901a\u8fc7\u6808\u4f20\u9012</li> <li>\u5bf9\u4e8ei386\uff0c\u6240\u6709\u7684\u53c2\u6570\u90fd\u4f1a\u901a\u8fc7\u6808\u4f20\u9012</li> </ul> </li> <li>\u8c03\u7528\u8005\u7684\u8fd4\u56de\u5730\u5740</li> <li>\u4e0a\u5c42\u6808\u5e27\u6307\u9488<code>%rbp</code>\u7684\u503c</li> <li>\u51fd\u6570\u5185\u90e8\u4f7f\u7528\u7684\u81ea\u52a8\u53d8\u91cf</li> </ul> <p></p> <p>\u6bcf\u6b21\u51fd\u6570\u8c03\u7528\u90fd\u4f1a\u521b\u5efa\u81ea\u5df1\u7684\u6808\u5e27(stack frame)\uff0c\u6808\u5e27\u7684\u8d77\u59cb\u5730\u5740\u7531<code>%rbp</code>\u5e27\u6307\u9488\u4fdd\u5b58\uff0c\u6808\u9876\u7531<code>%rsp</code>\u6808\u6307\u9488\u4fdd\u5b58\u3002\u4ee5\"sum.c\"\u4ee3\u7801\u4e3a\u4f8b\u5b50\uff0c<code>main</code>\u51fd\u6570(caller)\u8c03\u7528\u4e86<code>sum_till_MAX</code>\u51fd\u6570(callee)\uff0c\u5176\u76f8\u5173\u6c47\u7f16\u4ee3\u7801\u5982\u4e0b\uff1a</p> <ul> <li> <p><code>main</code>\u51fd\u6570\u8c03\u7528\u5904\u7684\u6c47\u7f16\u4ee3\u7801     <pre><code>0x0000000000001296 &lt;+180&gt;:   mov    $0x0,%edi               # \u521d\u59cb\u5316\u53c2\u65701\u7684\u503c\u4e3a0\n0x000000000000129b &lt;+185&gt;:   callq  0x11a9 &lt;sum_till_MAX&gt;   # \u8df3\u8f6c\u81f3sum_till_MAX\uff0c\u5176\u5730\u5740\u4e3a0x11a9\n0x00000000000012a0 &lt;+190&gt;:   mov    %rax,-0x8(%rbp)         # \u5c06sum_till_MAX\u8fd4\u56de\u7684\u7ed3\u679c\u5b58\u5230\uff1aM[%rbp-0x8]\n</code></pre></p> </li> <li> <p><code>sum_till_MAX</code>\u51fd\u6570\u7684\u6c47\u7f16\u4ee3\u7801     <pre><code>0x00000000000011a9 &lt;+0&gt;:     endbr64                        # sum_till_MAX\u7684\u8d77\u59cb\u5730\u5740\u4e3a0x11a9\n0x00000000000011ad &lt;+4&gt;:     push   %rbp                    # \u5728\u6808\u4e0a\u4fdd\u5b58\u4e0a\u5c42\u6808\u5e27\u7684\u5730\u5740(\u5b58\u4e8e%rbp)\u7684\u503c\n0x00000000000011ae &lt;+5&gt;:     mov    %rsp,%rbp               # \u66f4\u65b0\u5f53\u524d\u6808\u5e27\u5730\u5740(\u6808\u9876\u5730\u5740%rsp)\u5230\u6808\u6307\u9488%rbp\n0x00000000000011b1 &lt;+8&gt;:     sub    $0x20,%rsp              # \u5728\u6808\u4e0a\u5206\u914d\u7528\u4e8e\u4fdd\u5b58\u81ea\u52a8\u53d8\u91cf\u7684\u7a7a\u95f4(\u6808\u6309\u7167\u5730\u5740\u51cf\u5c0f\u7684\u65b9\u5411\u589e\u957f)\n0x00000000000011b5 &lt;+12&gt;:    mov    %edi,-0x14(%rbp)        # \u5f00\u59cb\u6267\u884csum_till_MAX\n0x00000000000011b8 &lt;+15&gt;:    addl   $0x1,-0x14(%rbp)        # n++\n0x00000000000011bc &lt;+19&gt;:    mov    -0x14(%rbp),%eax\n0x00000000000011bf &lt;+22&gt;:    mov    %rax,-0x8(%rbp)         # sum = n, M[%rbp0-0x8]\u5b58\u4e86sum\u7684\u503c\n0x00000000000011c3 &lt;+26&gt;:    mov    0x2e47(%rip),%eax       # 0x4010 &lt;max_addend&gt;\n0x00000000000011c9 &lt;+32&gt;:    cmp    %eax,-0x14(%rbp)\n0x00000000000011cc &lt;+35&gt;:    jae    0x11dc &lt;sum_till_MAX+51&gt;# \u7ed3\u675f\u9012\u5f52\n0x00000000000011ce &lt;+37&gt;:    mov    -0x14(%rbp),%eax\n0x00000000000011d1 &lt;+40&gt;:    mov    %eax,%edi\n0x00000000000011d3 &lt;+42&gt;:    callq  0x11a9 &lt;sum_till_MAX&gt;   # \u9012\u5f52\u8c03\u7528sum_till_MAX\n0x00000000000011d8 &lt;+47&gt;:    add    %rax,-0x8(%rbp)\n0x00000000000011dc &lt;+51&gt;:    mov    -0x8(%rbp),%rax         # \u5c06sum\u7684\u503c\u901a\u8fc7%rax\u8fd4\u56de\n0x00000000000011e0 &lt;+55&gt;:    leaveq                         # \u91ca\u653e\u5f53\u524d\u6808\uff0c\u66f4\u65b0%rbp\u7684\u503c\u5230\u4e0a\u4e00\u6808\u5e27\n0x00000000000011e1 &lt;+56&gt;:    retq                           # \u8df3\u8f6c\u5230\u6808\u4e2d\u7684\u8fd4\u56de\u5730\u5740\n</code></pre></p> </li> </ul>"},{"location":"booknotes/debug_hacks/basic/#gdbbacktrace","title":"GDB\u7684backtrace","text":"<p>GDB\u8c03\u8bd5\u5668\u7684backtrace\u529f\u80fd\u662f\u901a\u8fc7\u641c\u7d22\u6808\u4e2d\u4fdd\u5b58\u7684\u4fe1\u606f\u6765\u5b9e\u73b0\u7684\u3002\u4ee5\"sum.c\"\u4ee3\u7801\u4e3a\u4f8b\u5b50\uff0c\u5f53backtrace\u663e\u793a\u5982\u4e0b\u65f6\uff0c <pre><code>#0  sum_till_MAX (n=2) at sum.c:18\n#1  0x00005555555551d8 in sum_till_MAX (n=1) at sum.c:19\n#2  0x00005555555552a0 in main (argc=2, argv=0x7fffffffdd48) at sum.c:37\n</code></pre> \u901a\u8fc7<code>x/40xw $sp</code>\u6253\u5370\u7684\u6808\u4e0a\u5185\u5bb9\u5982\u4e0b\uff1a <pre><code>0x7fffffffdbd0: 0x00000000      0x00000000      0x00000000      0x00000002      \u5f53\u524d\u6808\u5e27\n                                                                [\"u32 n\"\u7684\u503c]\n0x7fffffffdbe0: 0x00050000      0x00000000      0x00000002      0x00000000\n                                                [\"u64 sum\" \u7684\u503c\u662f2       ]\n0x7fffffffdbf0: 0xffffdc20      0x00007fff      0x555551d8      0x00005555\n                [\u4e0a\u5c42%rbp\u7684\u503c0x7fffffffdc20]    [\u8fd4\u56de\u5730\u57400x00005555555551d8]\n------------------------------------------------------------------------------------------\n0x7fffffffdc00: 0xffffdc50      0x00007fff      0x555550c0      0x00000001      \u4e0a\u5c42\u6808\u5e27\n                                                                [\"u32 n\"\u7684\u503c]\n0x7fffffffdc10: 0xffffdd40      0x00007fff      0x00000001      0x00000000\n                                                [\"u64 sum\" \u7684\u503c\u662f1       ]\n0x7fffffffdc20: 0xffffdc50      0x00007fff      0x555552a0      0x00005555\n                [\u4e0a\u5c42%rbp\u7684\u503c0x7fffffffdc50]    [\u8fd4\u56de\u5730\u57400x00005555555552a0]\n------------------------------------------------------------------------------------------\n0x7fffffffdc30: 0xffffdd48      0x00007fff      0x555550c0      0x00000002 \u4e0a\u4e0a\u5c42\u6808\u5e27'main'\n                [argv\u7684\u503c:0x7fffffffdd48 ]                      [argc\u7684\u503c]\n0x7fffffffdc40: 0xffffdd40      0x00007fff      0x00000000      0x00000000\n0x7fffffffdc50: 0x00000000      0x00000000      0xf7de60b3      0x00007fff\n0x7fffffffdc60: 0xf7ffc620      0x00007fff      0xffffdd48      0x00007fff\n</code></pre></p> <ul> <li>\u5176\u4e2d\uff0c\u8fd4\u56demain\u51fd\u6570\u7684\u5730\u5740\u7684\u6c47\u7f16\u4ee3\u7801\uff0c\u901a\u8fc7<code>x/i 0x00005555555552a0</code>\u6253\u5370\u5982\u4e0b\uff1a<ul> <li><code>0x5555555552a0 &lt;main+190&gt;:   mov    %rax,-0x8(%rbp)</code>\uff0c\u5bf9\u5e94\u4e8emain\u51fd\u6570\u6c47\u7f16\u4ee3\u7801\u7684\u8fd4\u56de\u4f4d\u7f6e</li> </ul> </li> <li>\u901a\u8fc7<code>info frame</code>\u53ef\u4ee5\u67e5\u770b\u66f4\u591aframe\u7684\u4fe1\u606f     <pre><code>Stack level 0, frame at 0x7fffffffdc00:\n rip = 0x5555555551c3 in sum_till_MAX (sum.c:18); saved rip = 0x5555555551d8\n called by frame at 0x7fffffffdc30\n source language c.\n Arglist at 0x7fffffffdbc8, args: n=2\n Locals at 0x7fffffffdbc8, Previous frame's sp is 0x7fffffffdc00\n Saved registers:\n  rbp at 0x7fffffffdbf0, rip at 0x7fffffffdbf8\n</code></pre></li> </ul>"},{"location":"booknotes/debug_hacks/basic/#_6","title":"\u6808\u5927\u5c0f\u7684\u9650\u5236","text":"<p>\u5982\u679c\u8fdb\u7a0b\u53d1\u751f\u6808\u6ea2\u51fa(stack overflow)\uff0c\u4f1a\u5f15\u53d1segmentation fault\u3002\u4e0a\u9762\u7684\u4f8b\u5b50\u5982\u679c\u4e0d\u5e26\u4efb\u4f55\u53c2\u6570\uff0c\u5c31\u4f1a\u53d1\u751f\u6808\u6ea2\u51fa\u3002\u901a\u8fc7GDB\u8c03\u8bd5\uff0c\u53ef\u5f97\u5230\u5982\u4e0b\u8c03\u8bd5\u4fe1\u606f\uff1a <pre><code>(gdb) i proc mapping\n      0x7ffff7ffe000     0x7ffff7fff000     0x1000        0x0 \n      0x7fffff7ff000     0x7ffffffff000   0x800000        0x0 [stack]\n  0xffffffffff600000 0xffffffffff601000     0x1000        0x0 [vsyscall]\n(gdb) p $sp\n      $1 = (void *) 0x7fffff7fefe0\n</code></pre></p> <ul> <li><code>i proc mapping</code>\u663e\u793a\u7684\u6808\u7684\u6709\u6548\u5730\u5740\u8303\u56f4\u4e3a\uff1a0x7fffff7ff000 ~ 0x7ffffffff000</li> <li>\u53d1\u751f\u9519\u8bef\u65f6\uff0c\u6808\u6307\u9488\u4e3a\uff1a0x7fffff7fefe0\uff0c\u8d85\u51fa\u4e86\u6709\u6548\u8303\u56f4</li> </ul> <p>\u6211\u4eec\u53ef\u4ee5\u901a\u8fc7<code>ulimit -s</code>\u67e5\u770b\u8fdb\u7a0b\u6808\u7684\u6700\u5927\u503c\uff0c\u5e76\u4e14\u53ef\u4ee5\u901a\u8fc7<code>ulimit -Ss &lt;stack_size&gt;</code>\u4fee\u6539\u6b64\u503c\u3002</p>"},{"location":"booknotes/debug_hacks/basic/#_7","title":"\u53c2\u6570\u4f20\u9012","text":"<p>\u672c\u7ae0\u8282\u4ecb\u7ecd\u4e86\u4e0d\u540c\u5e73\u53f0\u3001\u8bed\u8a00\u4e2d\uff0c\u4e0d\u540c\u7684\u51fd\u6570\u53c2\u6570\u4f20\u9012\u6a21\u578b</p>"},{"location":"booknotes/debug_hacks/basic/#x86_65","title":"x86_64","text":"<p>\u5728x86_64\u4e2d\uff0c\u6574\u578b\u548c\u6307\u9488\u578b\u7684\u53c2\u6570\u4f1a\u4ece\u5de6\u81f3\u53f3\u4f9d\u6b21\u4fdd\u5b58\u5230rdi, rsi, rdx, rcx, r8, r9\u4e2d\uff0c\u6d6e\u70b9\u578b\u53c2\u6570\u4f1a\u4fdd\u5b58\u5230xmm0, xmm1...\u4e2d\uff0c\u5982\u679c\u5bc4\u5b58\u5668\u88ab\u7528\u5b8c\uff0c\u5176\u4ed6\u53c2\u6570\u4f1a\u88ab\u4fdd\u5b58\u5230\u6808\u4e0a\u3002</p> <p>\u4ee5\u5982\u4e0b\u4ee3\u7801\u4e3a\u4f8b\uff0c\u901a\u8fc7<code>func</code>\u51fd\u6570\u7684\u8c03\u7528\u8c03\u8bd5\u4fe1\u606f\uff0c\u6211\u4eec\u53ef\u4ee5\u4e86\u89e3x86_64\u7684\u53c2\u6570\u4f20\u9012\u6a21\u578b\u3002 <pre><code>void func(int a, long b, short c, char d, long long e, float f, double g, int *h, float *i, char *j);\n\n// \u51fd\u6570\u8c03\u7528\nfunc(100, 35000L, 5, 'A', 123456789LL, 3.14, 2.99792458e8, &amp;v1, &amp;v2, \"string\");\n</code></pre></p> <p>\u901a\u8fc7GDB\u547d\u4ee4<code>b *func</code>(\u52a0\u661f\u53f7\u53ef\u786e\u4fdd\u51fd\u6570\u88ab\u65ad\u5728\u6808\u64cd\u4f5c\u4e4b\u524d)\uff0c\u5c06\u65ad\u70b9\u6253\u5230\u793a\u4f8b\u4ee3\u7801\u4e2d<code>func</code>\u51fd\u6570\u8c03\u7528\u4e4b\u524d\uff0c\u89c2\u5bdf\u5230\u5bc4\u5b58\u5668\u7684\u503c\u5982\u4e0b\uff1a <pre><code>(gdb) b *func\nBreakpoint 2 at 0x555555555149: file main.c, line 8.\n\n(gdb) disas func\nDump of assembler code for function func:\n=&gt; 0x0000555555555149 &lt;+0&gt;:     endbr64 \n   0x000055555555514d &lt;+4&gt;:     push   %rbp\n   0x000055555555514e &lt;+5&gt;:     mov    %rsp,%rbp\n   0x0000555555555151 &lt;+8&gt;:     sub    $0x30,%rsp\n\n(gdb) i r\nrax            0x4048f5c3          1078523331\nrbx            0x555555555240      93824992236096\nrcx            0x41                65               #\u53c2\u6570d\nrdx            0x5                 5                #\u53c2\u6570c\nrsi            0x88b8              35000            #\u53c2\u6570b\nrdi            0x64                100              #\u53c2\u6570a\nrbp            0x7fffffffdcb0      0x7fffffffdcb0\nrsp            0x7fffffffdc98      0x7fffffffdc98\nr8             0x75bcd15           123456789        #\u53c2\u6570e\nr9             0x555555558010      93824992247824   #\u53c2\u6570h\n...\n\n(gdb) p $xmm0.v4_float                              #\u53c2\u6570f\n$1 = {3.1400001, 0, 0, 0}\n\n(gdb) p $xmm1.v2_double                             #\u53c2\u6570g\n$3 = {299792458, 0}\n\n(gdb) x/3xg $rsp                                    #\u8fd4\u56de\u5730\u5740,\u53c2\u6570i,\u53c2\u6570j\n0x7fffffffdc98: 0x000055555555522e 0x0000555555558014\n0x7fffffffdca8: 0x0000555555556055\n\n(gdb) printf \"%.2f\\n\", *(float*)0x0000555555558014  #\u53c2\u6570i\n0.01\n\n(gdb) p (char*)0x0000555555556055                   #\u53c2\u6570j\n$1 = 0x555555556055 \"string\"\n\n(gdb) n\n(gdb) bt                                            #\u6240\u6709\u53c2\u6570\u7684\u503c\uff0c\u548c\u5bc4\u5b58\u5668\u548c\u6808\u4e2d\u7684\u503c\u76f8\u540c\nfunc (a=100, b=35000, c=5, d=65 'A', e=123456789, f=3.1400001, g=299792458,\n  h=0x555555558010 &lt;v1&gt;, i=0x555555558014 &lt;v2&gt;, j=0x555555556055 \"string\") at main.c:9\n</code></pre></p> <ul> <li>5\u4e2a\u6574\u578b\u53c2\u6570<code>a,b,c,d,e,h</code>\u88ab\u4f9d\u6b21\u5b58\u5165<code>rdi,rsi,rdx,rcx,r8,r9</code>\u4e2d</li> <li>\u6d6e\u70b9\u578b\u53c2\u6570<code>f,g</code>\u88ab\u5b58\u5165<code>xmm0,xmm1</code>\u4e2d\uff0cGDB\u5c06\u8fd9\u4e9b\u5bc4\u5b58\u5668\u88ab\u770b\u4f5c\u4ee5\u4e0b\u8054\u5408\u7c7b\u578b     <pre><code>union {\n    float v4_float[4];\n    double v2_double[2];\n    int8_t v16_int8[16];\n    int16_t v8_int16[8];\n    int32_t v4_int32[8];\n    int64_t v2_int64[8];\n    int128_t uint128;\n} xmm0;\n</code></pre></li> <li>\u7531\u4e8e\u5bc4\u5b58\u5668\u5df2\u7ecf\u7528\u5b8c\uff0c\u53c2\u6570<code>i,j</code>\u88ab\u5b58\u4e8e\u6808\u4e0a\uff0c\u901a\u8fc7<code>x/3xg $rsp</code>\u4f9d\u6b21\u5f97\u5230\u8fd4\u56de\u5730\u5740\u3001\u53c2\u6570i\u548c\u53c2\u6570j\u7684\u503c\uff0c\u548c\u6700\u7ec8\u4f20\u9012\u7684\u51fd\u6570\u53c2\u6570\u503c\u76f8\u540c<ul> <li>0x7fffffffdc98: 0x000055555555522e    - \u8fd4\u56de\u5730\u5740</li> <li>0x7fffffffdca0: 0x0000555555558014    - \u53c2\u6570i</li> <li>0x7fffffffdca8: 0x0000555555556055    - \u53c2\u6570j</li> </ul> </li> </ul>"},{"location":"booknotes/debug_hacks/basic/#i386","title":"i386","text":"<p>\u5728i386\u4e2d\uff0c\u53c2\u6570\u5168\u90e8\u653e\u5728\u6808\u4e2d\u3002\u5c06\u4e0a\u8282\u4e2d\u7684\u4ee3\u7801\u901a\u8fc7<code>-m32</code>\u7f16\u8bd1\u621032\u4f4d\u7248\u672c\u540e\uff0c\u901a\u8fc7GDB\u8c03\u8bd5\uff0c\u65ad\u70b9\u5728<code>func</code>\u8c03\u7528\u4e4b\u524d\u3002\u6b64\u65f6\uff0c<code>func</code>\u51fd\u6570\u7684\u6240\u6709\u53c2\u6570\uff0c\u4ece\u53f3\u5230\u5de6\u4f9d\u6b21\u88ab\u538b\u5165\u6808\u4e2d\uff0c\u6253\u5370\u6808\u4e0a\u5185\u5bb9\u5982\u4e0b\uff1a</p> <pre><code>(gdb) p *(int*)($esp+4)\n$1 = 100                                    #\u53c2\u6570a\n(gdb) p *(long*)($esp+8)\n$2 = 35000                                  #\u53c2\u6570b\n(gdb) p *(short*)($esp+12)\n$3 = 5                                      #\u53c2\u6570c\n(gdb) p *(char*)($esp+16)\n$4 = 65 'A'                                 #\u53c2\u6570d\n(gdb) p *(long long*)($esp+20)\n$5 = 123456789                              #\u53c2\u6570e\n(gdb) printf \"%.2e\\n\",*(float*)($esp+28)\n3.14e+00                                    #\u53c2\u6570f\n(gdb) printf \"%.3e\\n\",*(double*)($esp+32)\n2.998e+08                                   #\u53c2\u6570g\n(gdb) p/x *(int*)($esp+40)\n$6 = 0x56559008                             #\u53c2\u6570h\n(gdb) p/x *(int*)($esp+44)\n$7 = 0x5655900c                             #\u53c2\u6570i\n(gdb) p/x *(int*)($esp+48)\n$8 = 0x56557055                             #\u53c2\u6570j\n\n(gdb) n\n(gdb) bt\nfunc (a=100, b=35000, c=5, d=65 'A', e=123456789, f=3.1400001, g=299792458,\n  h=0x56559008 &lt;v1&gt;, i=0x5655900c &lt;v2&gt;, j=0x56557055 \"string\") at main.c:9\n</code></pre>"},{"location":"booknotes/debug_hacks/basic/#i386_1","title":"i386\u4e2d\u7684\u5bc4\u5b58\u5668\u8c03\u7528","text":"<p>i386\u4e5f\u53ef\u4ee5\u901a\u8fc7\u201cfastcall\u201d\u7684\u65b9\u5f0f\uff0c\u5c06\u53c2\u6570\u653e\u5728\u5bc4\u5b58\u5668\u4e2d\u3002\u4f8b\u5982\uff0cGCC\u53ef\u4ee5\u901a\u8fc7<code>__attribute__((regparm(3)))</code>\u58f0\u660e\uff0c\u4f7f\u7528eax\uff0cedx\u548cecx\u4f20\u9012\u5f00\u59343\u5404\u53c2\u6570\u3002\u800cLinux\u53ef\u4ee5\u4f7f\u7528FASTCALL\u548casmregparm\u7b49\u5b8f\u6765\u5b9e\u73b0\u3002 <pre><code>__attribute__((regparm(3)))\nvoid func(int a, long b, short c, char d, long long e, float f, double g, int *h, float *i, char *j)\n{\n    ...\n}\n</code></pre></p>"},{"location":"booknotes/debug_hacks/basic/#c","title":"C++","text":"<p>C++\u51fd\u6570\u5728\u7f16\u8bd1\u65f6\u4f1a\u7ecf\u8fc7\u51fd\u6570\u540d\u53d8\u6362(mangle)\uff0c\u5e76\u4e14\u5bf9\u4e8e\u7c7b\u65b9\u6cd5\u7684\u8c03\u7528\uff0c\u7b2c\u4e00\u4e2a\u53c2\u6570\u662f\u5f53\u524d\u7c7b\u5bf9\u8c61\u7684\u6307\u9488\u3002\u4f8b\u5982\uff0c\u4f8b\u5b50\u4e2d\u7684<code>foo::func</code>\u51fd\u6570\uff0c\u6700\u7ec8\u8c03\u7528\u7b7e\u540d\u5982\u4e0b\uff1a <pre><code>void func(class foo *this, int x, int y)\n{\n    this-&gt;a = x;\n    this-&gt;b = y+2;\n}\n</code></pre></p> <p>\u5c06\u7a0b\u5e8f\u5728<code>foo::func</code>\u51fd\u6570\u8c03\u7528\u524d\u6253\u4e0a\u65ad\u70b9\u540e\uff0c\u53ef\u5f97\u5230\u5982\u4e0b\u5bc4\u5b58\u5668\u7684\u503c\uff1a <pre><code>(gdb) i r\n...\nrdx            0x1                 1                #\u53c2\u6570y\nrsi            0x5                 5                #\u53c2\u6570x\nrdi            0x7fffffffdc18      140737488346136  #\u53c2\u6570this\n...\n\n(gdb) n\n(gdb) bt                                            #\u53c2\u6570\u503c\u548c\u4e0a\u9762\u7684\u5bc4\u5b58\u5668\u503c\u76f8\u540c\nfoo::func (this=0x7fffffffdc18, x=5, y=1) at main.cpp:13\n</code></pre></p>"},{"location":"booknotes/debug_hacks/dwarf/","title":"DWARF","text":"<p>\u300aIntroduction to the DWARF Debugging Format\u300b - Michael J. Eager\uff0c\u300aExploring the DWARF debug format information\u300b\u4ee5\u53ca\u300aHow debuggers work: Part 3 - Debugging information\u300b \u7684\u8bfb\u4e66\u7b14\u8bb0\uff0c\u5bf9\u4e8eDWARF\u7684\u5b8c\u6574\u63cf\u8ff0\u53ef\u53c2\u8003\u5b98\u7f51\uff0c\u672c\u6587\u4e2d\u7684\u6240\u6709\u4ee3\u7801\u53ef\u5728GitHub\u4ed3\u5e93\u4e2d\u627e\u5230</p>"},{"location":"booknotes/debug_hacks/dwarf/#_1","title":"\u7b80\u4ecb","text":"<p>DWARF\u662f\u4e00\u79cd\u8c03\u8bd5\u6587\u4ef6\u683c\u5f0f\uff0c\u7528\u4e8e\u5728\u8c03\u8bd5\u9636\u6bb5\u63d0\u4f9b\u6e90\u6587\u4ef6\u7684\u4fe1\u606f\u3002DWARF\u7531\u4e0b\u9762\u7684\u6bb5\u7ec4\u6210\u3002\u5176\u4e2d\uff0c<code>.debug_info</code>\u6bb5\u8bb0\u5f55\u4e86\u6700\u4e3b\u8981\u7684\u8c03\u8bd5\u4fe1\u606f\u3002</p> DWARF\u6bb5 \u63cf\u8ff0 .debug_abbrev Abbreviations used in the .debug_info section .debug_aranges Lookup table for mapping addresses to compilation units .debug_frame Call frame information .debug_info Core DWARF information section .debug_line Line number information .debug_loc Location lists used in the DW_AT_location attributes .debug_macinfo Macro information .debug_pubnames Lookup table for global objects and functions .debug_pubtypes Lookup table for global types .debug_ranges Address ranges used in the DW_AT_ranges attributes .debug_str String table used in .debug_info .debug_types Type descriptions <p>\u4f8b\u5982\uff0c\u4f8b\u5b50\"debug_format\"\u4e2d\u7684\u53ef\u6267\u884c\u6587\u4ef6\u4e2d\uff0c\u5c31\u5305\u62ec\u4e86\u5982\u4e0b\u8c03\u8bd5\u4fe1\u606f\uff1a <pre><code>&gt; objdump -h main | grep .debug\n 27 .debug_aranges 00000040  0000000000000000  0000000000000000  0000303b  2**0\n 28 .debug_info   00000430  0000000000000000  0000000000000000  0000307b  2**0\n 29 .debug_abbrev 000001aa  0000000000000000  0000000000000000  000034ab  2**0\n 30 .debug_line   00000288  0000000000000000  0000000000000000  00003655  2**0\n 31 .debug_str    00004e82  0000000000000000  0000000000000000  000038dd  2**0\n 32 .debug_ranges 00000030  0000000000000000  0000000000000000  0000875f  2**0\n 33 .debug_macro  000012ae  0000000000000000  0000000000000000  0000878f  2**0\n</code></pre></p>"},{"location":"booknotes/debug_hacks/dwarf/#die","title":"DIE","text":"<p>DIE(Debugging Infromation Entry)\u662fDWARF\u4e2d\u6700\u57fa\u672c\u7684\u5355\u5143\u3002\u6bcf\u4e2aDIE\u7531\u4e00\u4e2a\u6807\u7b7e(tag)\u548c\u82e5\u5e72\u4e2a\u5c5e\u6027(atributes)\u63cf\u8ff0\u3002\u5e76\u4e14\uff0c\u6bcf\u4e2aDIE\u90fd\u6709\u4e00\u4e2a\u7236\u4eb2(parent DIE)\u548c\u591a\u4e2a\u5144\u5f1f(sibling DIEs)\uff0c\u7ec4\u7ec7\u6210\u6811\u7684\u5f62\u5f0f\u3002</p> DIE\u6807\u7b7e \u63cf\u8ff0 DW_TAG_compile_unit Represents the compile unit information DW_TAG_class_type Represents the class name and type information DW_TAG_structure_type Represents the structure name and type information DW_TAG_union_type Represents the union name and type information DW_TAG_enumeration_type Represents the enum name and type information DW_TAG_typedef Represents the typedef name and type information DW_TAG_array_type Represents the array name and type information DW_TAG_subrange_type Represents the array size information DW_TAG_inheritance Represents the inherited class name and type information DW_TAG_member Represents the members of class DW_TAG_subprogram Represents the function name information DW_TAG_formal_parameter Represents the function arguments' information DIE\u5c5e\u6027 \u63cf\u8ff0 DW_AT_name Represents the name string DW_AT_type Represents the type information DW_AT_artificial Is set when it is created by compiler DW_AT_sibling Represents the sibling location information DW_AT_data_member_location Represents the location information DW_AT_virtuality Is set when it is virtual"},{"location":"booknotes/debug_hacks/dwarf/#_2","title":"\u8c03\u8bd5\u4fe1\u606f","text":"<p><code>readelf --debug-dump=info &lt;elf&gt;</code>\u547d\u4ee4\u53ef\u6253\u5370ELF\u6587\u4ef6\u4e2d\u7684\".debug_info\"\u5185\u5bb9\uff0c\u5176\u4ed6\u6bb5\u7684\u5185\u5bb9\u4e5f\u53ef\u4ee5\u901a\u8fc7<code>readelf</code>\u7684\u76f8\u5173\u547d\u4ee4\u83b7\u53d6\u3002\u4e0b\u9762\u901a\u8fc7\u4f8b\u5b50\"debug_format\"\uff0c\u4ecb\u7ecd\u5404\u79cd\u7c7b\u578b\u7684\u8c03\u8bd5\u4fe1\u606f\uff0c\u6e90\u6587\u4ef6\"main.cpp\"\u7684\u5185\u5bb9\u5982\u4e0b\uff1a <pre><code>#include &lt;stdio.h&gt;\n\ntypedef int int_type;\nenum myenum { Jan = 1, Feb = 2};\n\nclass base\n{\npublic:\n    int basemember;\n};\n\nclass myclass : public base\n{\npublic:\n    int a;\n    char b[8];\n    int_type c;\n    myenum myclass_myenum;\n    void display(int x)\n    {\n        x = 4;\n    }\n};\n\nint main()\n{\n    int test = 3;\n    myclass mc;\n    mc.display(test);\n}\n</code></pre></p>"},{"location":"booknotes/debug_hacks/dwarf/#_3","title":"\u7f16\u8bd1\u5355\u5143\u4fe1\u606f","text":".debug_info\u6bb5\u4e2d\u7684\u7f16\u8bd1\u5355\u5143\u4fe1\u606f<pre><code> &lt;0&gt;&lt;b&gt;: Abbrev Number: 1 (DW_TAG_compile_unit)\n    &lt;c&gt;   DW_AT_producer    : (indirect string, offset: 0x3d42): GNU C++14 9.4.0 -mtune=generic -march=x86-64 -g3 -O0 -fno-inline -fasynchronous-unwind-tables -fstack-protector-strong -fstack-clash-protection -fcf-protection\n    &lt;10&gt;   DW_AT_language    : 4    (C++)\n    &lt;11&gt;   DW_AT_name        : (indirect string, offset: 0x1138): main.cpp\n    &lt;15&gt;   DW_AT_comp_dir    : (indirect string, offset: 0x2fc8): /home/ben/GitHub/learning_book/docs/booknotes/debug_hacks/dwarf/code/debug_format\n    &lt;19&gt;   DW_AT_ranges      : 0x0\n    &lt;1d&gt;   DW_AT_low_pc      : 0x0\n    &lt;25&gt;   DW_AT_stmt_list   : 0x0\n    &lt;29&gt;   DW_AT_GNU_macros  : 0x0\n</code></pre> <ul> <li><code>DW_TAG_compile_unit</code> - \u7f16\u8bd1\u5355\u5143\u6807\u7b7e<ul> <li><code>DW_AT_name</code> - \u7f16\u8bd1\u5355\u5143\u7684\u6587\u4ef6\u540d\u4e3a\"main.cpp\"</li> <li><code>DW_AT_comp_dir</code> - \u7f16\u8bd1\u5355\u5143\u6587\u4ef6\u5939</li> </ul> </li> </ul>"},{"location":"booknotes/debug_hacks/dwarf/#_4","title":"\u7c7b\u578b\u4fe1\u606f","text":"<p>\u6e90\u6587\u4ef6\"main.cpp\"\u4e2d\u7684<code>typedef int int_type</code>\uff0c\u5728\".debug_info\"\u6bb5\u4e2d\u5bf9\u5e94\u4fe1\u606f\u5982\u4e0b\uff1a</p> .debug_info\u6bb5\u4e2d\u7684typedef<pre><code> &lt;1&gt;&lt;65&gt;: Abbrev Number: 5 (DW_TAG_base_type)\n    &lt;66&gt;   DW_AT_byte_size   : 4\n    &lt;67&gt;   DW_AT_encoding    : 5    (signed)\n    &lt;68&gt;   DW_AT_name        : int\n ...\n &lt;1&gt;&lt;2f5&gt;: Abbrev Number: 2 (DW_TAG_typedef)\n    &lt;2f6&gt;   DW_AT_name        : (indirect string, offset: 0xd73): int_type\n    &lt;2fa&gt;   DW_AT_decl_file   : 1\n    &lt;2fb&gt;   DW_AT_decl_line   : 3\n    &lt;2fc&gt;   DW_AT_decl_column : 13\n    &lt;2fd&gt;   DW_AT_type        : &lt;0x65&gt;\n</code></pre> <ul> <li><code>DW_TAG_base_type</code> - \u57fa\u672c\u7c7b\u578b<ul> <li>DWARF\u89c4\u5b9a\u4e86\u5e38\u89c1\u57fa\u672c\u7c7b\u578b\u7684\u4fe1\u606f\uff0c\u5982\u957f\u5ea6\u4e3a4bytes\u7684<code>int</code>\u7c7b\u578b</li> </ul> </li> <li><code>DW_TAG_typedef</code> - <code>typedef</code>\u6807\u7b7e<ul> <li><code>DW_AT_name</code> - <code>typedef</code>\u81ea\u5b9a\u4e49\u7684\u7c7b\u578b\u540d\uff1a<code>int_type</code></li> <li><code>DW_AT_type</code> - <code>typedef</code>\u7684\u539f\u59cb\u7c7b\u578b\uff0c\u6b64\u5904\u7684<code>&lt;0x65&gt;</code>\u662f<code>int</code>\u7c7b\u578b\u7684\u4f4d\u7f6e</li> <li><code>DW_AT_decl_file</code> - \u6e90\u4ee3\u7801\u6587\u4ef6\u7f16\u53f7\uff0c\u901a\u8fc7<code>readelf --debug-dump=line main</code>\u4e2d\u7684<code>The File Name Table</code>\u53ef\u67e5\u770b\u5bf9\u5e94\u6587\u4ef6\u540d\u3002\u4f8b\u5982\uff0c\"main.cpp\"\u7684\u7f16\u53f7\u4e3a1\uff0c\"stddef.h\"\u7684\u7f16\u53f7\u4e3a2</li> <li><code>DW_AT_decl_line</code> - \u6e90\u4ee3\u7801\u6587\u4ef6\u4e2d\u7684\u884c\u53f7</li> </ul> </li> </ul> <p>\u6e90\u6587\u4ef6\"main.cpp\"\u4e2d\u7684<code>enum myenum { Jan = 1, Feb = 2}</code>\uff0c\u5728\".debug_info\"\u6bb5\u4e2d\u5bf9\u5e94\u4fe1\u606f\u5982\u4e0b\uff1a</p> .debug_info\u6bb5\u4e2d\u7684enum<pre><code> &lt;1&gt;&lt;301&gt;: Abbrev Number: 16 (DW_TAG_enumeration_type)\n    &lt;302&gt;   DW_AT_name        : (indirect string, offset: 0x546): myenum\n    &lt;306&gt;   DW_AT_encoding    : 7   (unsigned)\n    &lt;307&gt;   DW_AT_byte_size   : 4\n    &lt;308&gt;   DW_AT_type        : &lt;0x40&gt;\n    &lt;30c&gt;   DW_AT_decl_file   : 1\n    &lt;30d&gt;   DW_AT_decl_line   : 4\n    &lt;30e&gt;   DW_AT_decl_column : 6\n    &lt;30f&gt;   DW_AT_sibling     : &lt;0x320&gt;\n &lt;2&gt;&lt;313&gt;: Abbrev Number: 17 (DW_TAG_enumerator)\n    &lt;314&gt;   DW_AT_name        : Jan\n    &lt;318&gt;   DW_AT_const_value : 1\n &lt;2&gt;&lt;319&gt;: Abbrev Number: 17 (DW_TAG_enumerator)\n    &lt;31a&gt;   DW_AT_name        : Feb\n    &lt;31e&gt;   DW_AT_const_value : 2\n</code></pre> <ul> <li><code>DW_TAG_enumeration_type</code> - \u679a\u4e3e\u7c7b\u578b\u6807\u7b7e<ul> <li>\u5305\u62ec\u679a\u4e3e\u6210\u5458\u7684\u7c7b\u578b\u548c\u5927\u5c0f</li> </ul> </li> <li><code>DW_TAG_enumerator</code> - \u679a\u4e3e\u5e38\u91cf\u6807\u7b7e<ul> <li>\u5305\u62ec\u679a\u4e3e\u6210\u5458\u7684\u540d\u5b57\u548c\u503c</li> </ul> </li> </ul>"},{"location":"booknotes/debug_hacks/dwarf/#_5","title":"\u7c7b\u4fe1\u606f","text":"<p>\u6e90\u6587\u4ef6\"main.cpp\"\u4e2d\u7684\u57fa\u7c7b<code>bash</code>\uff0c\u5728\".debug_info\"\u6bb5\u4e2d\u5bf9\u5e94\u4fe1\u606f\u5982\u4e0b\uff1a .debug_info\u6bb5\u4e2d\u7684\u57fa\u7c7b\u4fe1\u606f<pre><code> &lt;1&gt;&lt;320&gt;: Abbrev Number: 18 (DW_TAG_class_type)\n    &lt;321&gt;   DW_AT_name        : (indirect string, offset: 0x230e): base\n    &lt;325&gt;   DW_AT_byte_size   : 4\n    &lt;326&gt;   DW_AT_decl_file   : 1\n    &lt;327&gt;   DW_AT_decl_line   : 6\n    &lt;328&gt;   DW_AT_decl_column : 7\n    &lt;329&gt;   DW_AT_sibling     : &lt;0x33c&gt;\n &lt;2&gt;&lt;32d&gt;: Abbrev Number: 19 (DW_TAG_member)\n    &lt;32e&gt;   DW_AT_name        : (indirect string, offset: 0x25db): basemember\n    &lt;332&gt;   DW_AT_decl_file   : 1\n    &lt;333&gt;   DW_AT_decl_line   : 9\n    &lt;334&gt;   DW_AT_decl_column : 8\n    &lt;335&gt;   DW_AT_type        : &lt;0x65&gt;\n    &lt;339&gt;   DW_AT_data_member_location: 0\n    &lt;33a&gt;   DW_AT_accessibility: 1  (public)\n &lt;2&gt;&lt;33b&gt;: Abbrev Number: 0\n</code></pre></p> <ul> <li><code>DW_TAG_class_type</code> - \u7c7b\u6807\u7b7e<ul> <li>\u57fa\u7c7b\u7684\u540d\u5b57\u662f<code>base</code>\uff0c\u5927\u5c0f\u4e3a4bytes</li> <li><code>DW_AT_sibling</code> - \u5144\u5f1f\u6807\u7b7e\u7684\u4f4d\u7f6e\uff0c\u8868\u660e\u5f53\u524d\u4f4d\u7f6e\u5230<code>&lt;0x33c&gt;</code>\u4e4b\u524d\u7684\u5185\u5bb9\u90fd\u662f\u5f53\u524d\u7c7b\u7684\u4fe1\u606f</li> </ul> </li> <li><code>DW_TAG_member</code> - \u7c7b\u6210\u5458\u6807\u7b7e<ul> <li>\u57fa\u7c7b\u6210\u5458\u7684\u540d\u5b57\u662f<code>basemember</code></li> <li>\u57fa\u7c7b\u6210\u5458\u7684\u7c7b\u578b\u5b9a\u4e49\u5728<code>&lt;0x65&gt;</code>\u5904\uff0c\u662f\u5927\u5c0f\u4e3a4bytes\u7684<code>int</code>\u7c7b\u578b</li> <li><code>DW_AT_accessibility</code> - \u7c7b\u6210\u5458\u7684\u8bbf\u95ee\u5c5e\u6027</li> </ul> </li> </ul> <p>\u6e90\u6587\u4ef6\u4e2d\uff0c<code>myclass</code>\u7c7b\u7ee7\u627f\u4e86<code>base</code>\u7c7b\uff0c\u7ee7\u627f\u7c7b\u5728\".debug_info\"\u6bb5\u4e2d\u5bf9\u5e94\u4fe1\u606f\u5982\u4e0b\uff1a</p> .debug_info\u6bb5\u4e2d\u7684\u7ee7\u627f\u7c7b\u4fe1\u606f<pre><code> &lt;1&gt;&lt;33c&gt;: Abbrev Number: 18 (DW_TAG_class_type)\n    &lt;33d&gt;   DW_AT_name        : (indirect string, offset: 0x4380): myclass\n    &lt;341&gt;   DW_AT_byte_size   : 24\n    &lt;342&gt;   DW_AT_decl_file   : 1\n    &lt;343&gt;   DW_AT_decl_line   : 12\n    &lt;344&gt;   DW_AT_decl_column : 7\n    &lt;345&gt;   DW_AT_sibling     : &lt;0x39f&gt;\n &lt;2&gt;&lt;349&gt;: Abbrev Number: 20 (DW_TAG_inheritance)\n    &lt;34a&gt;   DW_AT_type        : &lt;0x320&gt;\n    &lt;34e&gt;   DW_AT_data_member_location: 0\n    &lt;34f&gt;   DW_AT_accessibility: 1  (public)\n &lt;2&gt;&lt;350&gt;: Abbrev Number: 21 (DW_TAG_member)\n    &lt;351&gt;   DW_AT_name        : a\n    &lt;353&gt;   DW_AT_decl_file   : 1\n    &lt;354&gt;   DW_AT_decl_line   : 15\n    &lt;355&gt;   DW_AT_decl_column : 8\n    &lt;356&gt;   DW_AT_type        : &lt;0x65&gt;\n    &lt;35a&gt;   DW_AT_data_member_location: 4\n    &lt;35b&gt;   DW_AT_accessibility: 1  (public)\n    ...\n</code></pre> <ul> <li><code>DW_TAG_inheritance</code> - \u7ee7\u627f\u4fe1\u606f\u6807\u7b7e<ul> <li>\u7ee7\u627f\u4e86\u5b9a\u4e49\u5728<code>&lt;0x320&gt;</code>\u5904\u7684\u57fa\u7c7b<code>base</code></li> </ul> </li> <li>\u5176\u4ed6\u5185\u5bb9\u548c\u666e\u901a\u7c7b\u4e00\u6837</li> </ul>"},{"location":"booknotes/debug_hacks/dwarf/#_6","title":"\u51fd\u6570\u4fe1\u606f","text":"<p>\u6e90\u6587\u4ef6\"main.cpp\"\u4e2d\u7684<code>void myclass::display(int x)</code>\uff0c\u5728\".debug_info\"\u6bb5\u4e2d\u5bf9\u5e94\u4fe1\u606f\u5982\u4e0b\uff1a .debug_info\u6bb5\u4e2d\u7684\u51fd\u6570\u4fe1\u606f<pre><code> &lt;2&gt;&lt;382&gt;: Abbrev Number: 22 (DW_TAG_subprogram)\n    &lt;383&gt;   DW_AT_external    : 1\n    &lt;383&gt;   DW_AT_name        : (indirect string, offset: 0x3c7b): display\n    &lt;387&gt;   DW_AT_decl_file   : 1\n    &lt;388&gt;   DW_AT_decl_line   : 19\n    &lt;389&gt;   DW_AT_decl_column : 9\n    &lt;38a&gt;   DW_AT_linkage_name: (indirect string, offset: 0x1141): _ZN7myclass7displayEi\n    &lt;38e&gt;   DW_AT_accessibility: 1  (public)\n    &lt;38f&gt;   DW_AT_declaration : 1\n    &lt;38f&gt;   DW_AT_object_pointer: &lt;0x393&gt;\n &lt;3&gt;&lt;393&gt;: Abbrev Number: 23 (DW_TAG_formal_parameter)\n    &lt;394&gt;   DW_AT_type        : &lt;0x3af&gt;\n    &lt;398&gt;   DW_AT_artificial  : 1\n &lt;3&gt;&lt;398&gt;: Abbrev Number: 24 (DW_TAG_formal_parameter)\n    &lt;399&gt;   DW_AT_type        : &lt;0x65&gt;\n</code></pre></p> <ul> <li><code>DW_TAG_subprogram</code> - \u51fd\u6570\u6807\u7b7e<ul> <li>\u51fd\u6570\u540d\u4e3a<code>display</code></li> <li><code>display</code>\u51fd\u6570\u5b9a\u4e49\u5728\"main.cpp\"\u4e2d\u7684\u7b2c19\u884c</li> <li><code>_ZN7myclass7displayEi</code>\u662f<code>myclass::display</code>\u7684\u51fd\u6570\u7f16\u7801\u540e\u7684\u7b26\u53f7</li> </ul> </li> <li><code>DW_TAG_formal_parameter</code> - \u51fd\u6570\u53c2\u6570\u6807\u7b7e<ul> <li>\u53c2\u65701\u662f<code>base</code>\u7c7b\u7684\u6307\u9488\u7c7b\u578b\uff0c\u4f4d\u4e8e<code>&lt;0x3af&gt;</code></li> <li>\u53c2\u65702\u662f<code>int</code>\u7c7b\u578b\uff0c\u4f4d\u4e8e<code>&lt;0x65&gt;</code></li> </ul> </li> </ul>"},{"location":"booknotes/debug_hacks/dwarf/#_7","title":"\u884c\u4fe1\u606f","text":"<p><code>readelf --debug-dump=decodedline main</code>\u547d\u4ee4\u53ef\u4ee5\".debug_line\"\u6bb5\u4e2d\u7684\u4fe1\u606f\uff1a</p> .debug_line\u6bb5\u4e2d\u7684\u884c\u4fe1\u606f<pre><code>File name                            Line number    Starting address    View    Stmt\nmain.cpp                                      19              0x1198               x\nmain.cpp                                      21              0x11a7               x\nmain.cpp                                      22              0x11ae               x\nmain.cpp                                      22              0x11b1               x\n\nmain.cpp                                      26              0x1149               x\nmain.cpp                                      26              0x1155               x\nmain.cpp                                      27              0x1164               x\nmain.cpp                                      29              0x116b               x\nmain.cpp                                      30              0x117c               x\nmain.cpp                                      30              0x1197               x\n</code></pre> <p>\".debug_line\"\u6bb5\u5efa\u7acb\u4e86\u6e90\u6587\u4ef6\u884c\u53f7\u548c\u7a0b\u5e8f\u5730\u5740\u7684\u4e00\u4e00\u5bf9\u5e94\u5173\u7cfb\u3002\u4f8b\u5982\uff0c<code>main</code>\u51fd\u6570\u5728\u6c47\u7f16\u4ee3\u7801\u4e2d\u7684\u5730\u5740\u662f<code>0x1149</code>\uff0c\u5728\u6e90\u6587\u4ef6\u4e2d\u7684\u884c\u53f7\u662f<code>26</code>\u3002</p> <ul> <li>\u5f53\u5728\u67d0\u4e00\u884c\u53f7\u8bbe\u7f6e\u65ad\u70b9\u65f6\uff0c\u8c03\u8bd5\u5668\u53ef\u901a\u8fc7\".debug_line\"\u6bb5\uff0c\u6839\u636e\u6e90\u6587\u4ef6\u884c\u53f7\u627e\u5230\u5bf9\u5e94\u7684\u5730\u5740</li> <li>\u5f53\u67d0\u6307\u4ee4\u53d1\u751f\u9519\u8bef\u65f6\uff0c\u8c03\u8bd5\u5668\u53ef\u901a\u8fc7\".debug_line\"\u6bb5\uff0c\u6839\u636e\u51fa\u9519\u5730\u5740\u5b9a\u4f4d\u5230\u6e90\u6587\u4ef6\u884c\u53f7</li> </ul>"},{"location":"booknotes/debug_hacks/gdb/","title":"GDB","text":"<p>GDB\u7684\u9ad8\u7ea7\u7528\u6cd5\uff0c\u6240\u6709\u6837\u4f8b\u53ef\u5728GitHub\u4ed3\u5e93\u4e2d\u627e\u5230</p>"},{"location":"booknotes/debug_hacks/gdb/#_1","title":"\u7b80\u4ecb","text":"<p>GDB\u7528\u4e8e\u7a0b\u5e8f\u8c03\u8bd5\uff0c\u5e38\u89c1\u7684\u64cd\u4f5c\u6709\uff1a</p> <ul> <li>\u542f\u52a8\u8c03\u8bd5\u7a0b\u5e8f\uff0c\u5e76\u53ef\u9644\u52a0\u542f\u52a8\u53c2\u6570</li> <li>\u6839\u636e\u6307\u5b9a\u6761\u4ef6\uff0c\u6682\u505c\u7a0b\u5e8f\u7684\u8fd0\u884c</li> <li>\u67e5\u770b\u6682\u505c\u5904\u7a0b\u5e8f\u8fd0\u884c\u7684\u5404\u79cd\u72b6\u6001</li> <li>\u6309\u9700\u8981\u4fee\u6539\u7a0b\u5e8f\u7684\u72b6\u6001\u540e\uff0c\u7ee7\u7eed\u8fd0\u884c\u7a0b\u5e8f\u4ee5\u89c2\u5bdf\u72b6\u6001\u7684\u53d8\u5316</li> </ul> <p>\u53ef\u901a\u8fc7\"GDB\u7684\u7528\u6237\u624b\u518c\"\u67e5\u770bGDB\u6240\u6709\u547d\u4ee4\u7684\u7528\u6cd5</p>"},{"location":"booknotes/debug_hacks/gdb/#_2","title":"\u542f\u52a8\u4e0e\u6267\u884c","text":""},{"location":"booknotes/debug_hacks/gdb/#_3","title":"\u542f\u52a8\u8fdb\u7a0b","text":"<ul> <li><code>gdb &lt;EXE&gt;</code></li> <li><code>gdb --args &lt;EXE&gt; &lt;args...&gt;</code></li> </ul>"},{"location":"booknotes/debug_hacks/gdb/#_4","title":"\u6302\u8f7d\u5230\u8fd0\u884c\u7684\u8fdb\u7a0b","text":"<ul> <li><code>gdb -p &lt;PID&gt;</code></li> </ul>"},{"location":"booknotes/debug_hacks/gdb/#_5","title":"\u6267\u884c","text":"<ul> <li><code>continue &lt;\u6b21\u6570&gt;</code>\uff0c\u8fbe\u5230\u6307\u5b9a\u6b21\u6570\u524d\uff0c\u6267\u884c\u5230\u65ad\u70b9\u65f6\u4e0d\u6682\u505c</li> <li><code>finish</code>\uff0c\u6267\u884c\u5b8c\u5f53\u524d\u51fd\u6570\u540e\u6682\u505c</li> <li><code>until</code>\uff0c\u6267\u884c\u5b8c\u5f53\u524d\u4ee3\u7801\u5757\u540e\u6682\u505c\uff0c\u5982\u679c\u662f\u5faa\u73af\uff0c\u6267\u884c\u5b8c\u5faa\u73af\u540e\u6682\u505c</li> </ul>"},{"location":"booknotes/debug_hacks/gdb/#_6","title":"\u8bbe\u7f6e\u65ad\u70b9","text":""},{"location":"booknotes/debug_hacks/gdb/#break-point","title":"\u666e\u901a\u65ad\u70b9(break point)","text":"<ul> <li><code>break &lt;\u51fd\u6570\u540d&gt;</code></li> <li><code>break &lt;\u6587\u4ef6\u540d:\u884c\u53f7&gt;</code></li> <li><code>break &lt;*\u5730\u5740&gt;</code></li> <li><code>break &lt;+/-\u504f\u79fb\u91cf&gt;</code></li> </ul>"},{"location":"booknotes/debug_hacks/gdb/#conditional-break-point","title":"\u6761\u4ef6\u65ad\u70b9(conditional break point)","text":"<ul> <li><code>break &lt;\u65ad\u70b9&gt; if &lt;\u6761\u4ef6&gt;</code></li> </ul>"},{"location":"booknotes/debug_hacks/gdb/#watch-point","title":"\u76d1\u89c6\u70b9(watch point)","text":"<ul> <li><code>watch &lt;\u53d8\u91cf/\u5730\u5740&gt;</code>\uff0c\u76d1\u89c6\u53d8\u91cf\u6216\u5730\u5740\uff0c\u5f53\u53d1\u751f\u53d8\u5316\u65f6\u6682\u505c\u7a0b\u5e8f</li> </ul>"},{"location":"booknotes/debug_hacks/gdb/#catch-point","title":"\u6355\u83b7\u70b9(catch point)","text":"<ul> <li> <p><code>catch throw</code>\uff0c\u6355\u83b7C++\u7a0b\u5e8f\u7684\u5f02\u5e38\uff0c\u5f53\u53d1\u751f\u5f02\u5e38\u65f6\uff0c\u6682\u505c\u7a0b\u5e8f</p> <ul> <li>\u5b9e\u4f8b\u4ee3\u7801\u88abGDB\u6355\u83b7\u4e86\u5f02\u5e38\u7684\u53d1\u751f <pre><code>gdb -q ./main \\\n-ex \"catch throw\" \\\n-ex \"run\" \\\n-ex \"bt\"\nReading symbols from ./main...\nCatchpoint 1 (throw)\nStarting program: /home/yuxiangw/GitHub/learning_book/docs/booknotes/debug_hacks/gdb/code/catch_throw/main \nstart\n\nCatchpoint 1 (exception thrown), 0x00007ffff7e448b2 in __cxa_throw ()\nfrom /lib/x86_64-linux-gnu/libstdc++.so.6\n#0  0x00007ffff7e448b2 in __cxa_throw () from /lib/x86_64-linux-gnu/libstdc++.so.6\n#1  0x00005555555552e8 in throwException () at main.cpp:8\n#2  0x0000555555555314 in main () at main.cpp:17\n</code></pre></li> </ul> </li> <li> <p><code>catch syscall &lt;name&gt;</code>\uff0c\u6355\u83b7\u7cfb\u7edf\u8c03\u7528\uff0c\u7cfb\u7edf\u8c03\u7528\u540d\u5b57\u53ef\u67e5\u770b\"/usr/include/asm/unistd.h\"</p> </li> <li> <p><code>catch fork</code>\uff0c\u6355\u83b7<code>fork</code>\u8c03\u7528</p> <ul> <li>\u5b9e\u4f8b\u4ee3\u7801\u88abGDB\u6355\u83b7\u4e86<code>fork</code>\u7684\u8c03\u7528 <pre><code>gdb -q ./main \\\n-ex \"catch fork\" \\\n-ex \"run\" \\\n-ex \"bt\"\nReading symbols from ./main...\nCatchpoint 1 (fork)\nStarting program: /home/yuxiangw/GitHub/learning_book/docs/booknotes/debug_hacks/gdb/code/catch_fork/main \nFork example\n\nCatchpoint 1 (forked process 1767571), arch_fork (ctid=0x7ffff7fb2810) at ../sysdeps/unix/sysv/linux/arch-fork.h:49\n49      ../sysdeps/unix/sysv/linux/arch-fork.h: No such file or directory.\n#0  arch_fork (ctid=0x7ffff7fb2810) at ../sysdeps/unix/sysv/linux/arch-fork.h:49\n#1  __libc_fork () at ../sysdeps/nptl/fork.c:76\n#2  0x0000555555555239 in main () at main.cpp:10\n</code></pre></li> </ul> </li> <li> <p><code>catch signal</code>\uff0c\u6355\u83b7\u4fe1\u53f7\u7684\u53d1\u751f</p> <ul> <li>\u5b9e\u4f8b\u4ee3\u7801\u88abGDB\u6355\u83b7\u4e86\"SIGUSR1\"\u548c\"SIGCHLD\"\u7684\u4fe1\u53f7 <pre><code>gdb -q ./main \\\n-ex \"catch signal\" \\\n-ex \"run\" \\\n-ex \"bt\" \\\n-ex \"c\" \\\n-ex \"bt\"\nReading symbols from ./main...\nCatchpoint 1 (standard signals)\nStarting program: /home/yuxiangw/GitHub/learning_book/docs/booknotes/debug_hacks/gdb/code/catch_signal/main \nCatch signal example\n[Detaching after fork from child process 1796689]\nThis is parent process to handle SIGUSR1 signal [process PID: 1796685, signal sender PID: 1796689].\nThis is child process to send SIGUSR1 signal [process PID: 1796689, parent process PID: 1796685].\n\nSend SIGUSR1 signal successfully.\nChild process is Done!\nCatchpoint 1 (signal SIGUSR1), 0x00007ffff7ea4c2a in __GI___wait4 (pid=1796689, stat_loc=0x7fffffffdbfc, \n    options=0, usage=0x0) at ../sysdeps/unix/sysv/linux/wait4.c:27\n27      ../sysdeps/unix/sysv/linux/wait4.c: No such file or directory.\n#0  0x00007ffff7ea4c2a in __GI___wait4 (pid=1796689, stat_loc=0x7fffffffdbfc, options=0, usage=0x0)\n    at ../sysdeps/unix/sysv/linux/wait4.c:27\n#1  0x000055555555533d in main () at main.cpp:27\nContinuing.\n\nCatchpoint 1 (signal SIGCHLD), SIGUSR1_handler (signo=0) at main.cpp:9\n9       {\n#0  SIGUSR1_handler (signo=0) at main.cpp:9\n#1  &lt;signal handler called&gt;\n#2  0x00007ffff7ea4c28 in __GI___wait4 (pid=1796689, stat_loc=0x7fffffffdbfc, options=0, usage=0x7ffff7ea4c2a &lt;__GI___wait4+26&gt;) at ../sysdeps/unix/sysv/linux/wait4.c:27\n#3  0x000055555555533d in main () at main.cpp:27\n</code></pre></li> </ul> </li> </ul>"},{"location":"booknotes/debug_hacks/gdb/#_7","title":"\u89c2\u5bdf\u72b6\u6001","text":""},{"location":"booknotes/debug_hacks/gdb/#backtrace","title":"\u663e\u793a\u6808\u5e27(backtrace)","text":"<ul> <li><code>bt N</code>\uff0c\u663e\u793a\u5f00\u5934N\u4e2a\u6808\u5e27</li> <li><code>bt full</code>\uff0c\u4e0d\u4ec5\u663e\u793abacktrace\uff0c\u8fd8\u663e\u793a\u5c40\u90e8\u53d8\u91cf</li> <li><code>frame &lt;\u6808\u5e27\u53f7&gt;</code>\uff0c\u9009\u62e9\u8981\u663e\u793a\u7684\u6808\u5e27\uff0c\u53ef\u89c2\u5bdf\u5f53\u524d\u6808\u5e27\u4e0a\u7684\u53d8\u91cf</li> </ul>"},{"location":"booknotes/debug_hacks/gdb/#_8","title":"\u663e\u793a\u5bc4\u5b58\u5668","text":"<ul> <li><code>info reg</code>\uff0c\u663e\u793a\u5404\u5bc4\u5b58\u5668\u7684\u503c<ul> <li>\u53ef\u7f29\u5199\u4e3a<code>i r</code>\uff0c\u4f8b\u5982\u67e5\u770bPC\u5bc4\u5b58\u5668\u7684\u503c\uff0c\u53ef\u8f93\u5165\uff1a<code>i r pc</code></li> <li>\u67e5\u770b\u6240\u6709\u5bc4\u5b58\u5668\u7684\u503c\uff1a<code>info all-registers</code></li> </ul> </li> <li><code>p $eax</code>\uff0c\u663e\u793aeax\u5bc4\u5b58\u5668\u7684\u503c</li> </ul>"},{"location":"booknotes/debug_hacks/gdb/#_9","title":"\u663e\u793a\u53d8\u91cf","text":"<ul> <li> <p><code>p/&lt;\u683c\u5f0f&gt; &lt;\u53d8\u91cf&gt;</code>\uff0c\u6309\u6307\u5b9a\u683c\u5f0f\u663e\u793a\u53d8\u91cf\u7684\u503c</p> <ul> <li>GDB\u652f\u6301\u7684\u5e38\u89c1\u683c\u5f0f\uff0c\u5176\u4ed6\u683c\u5f0f\u53ef\u53c2\u8003\u624b\u518c</li> </ul> \u683c\u5f0f \u8bf4\u660e x \u663e\u793a\u4e3a\u5341\u516d\u8fdb\u5236\u6570 a \u5730\u5740 c \u663e\u793a\u4e3a\u5b57\u7b26 s \u663e\u793a\u4e3a\u5b57\u7b26\u4e32 i \u663e\u793a\u4e3a\u673a\u5668\u8bed\u8a00(\u53ea\u5728<code>x</code>\u547d\u4ee4\u4e2d\u6709\u6548) </li> <li> <p><code>p *&lt;\u6570\u7ec4\u540d&gt;@&lt;\u6570\u7ec4\u957f\u5ea6&gt;</code>\uff0c\u6253\u5370\u6570\u7ec4\u5185\u5bb9</p> </li> <li><code>x/nfu &lt;\u5730\u5740&gt;</code>\uff0c\u663e\u793a\u5185\u5b58\u5185\u5bb9<ul> <li>n\u8868\u793a\u663e\u793a\u7684\u6b21\u6570\uff0c\u9ed8\u8ba4\u662f1</li> <li>f\u662f\u663e\u793a\u683c\u5f0f\uff0c\u9ed8\u8ba4\u662fx</li> <li>u\u8868\u793a\u5355\u4f4d\uff0c\u5176\u9ed8\u8ba4\u503c\u548c\u663e\u793a\u683c\u5f0f\u6709\u5173\uff0c\u53ef\u53d6\u503c\uff1ab,h,w,g</li> </ul> </li> <li><code>explore &lt;\u53d8\u91cf/\u8868\u8fbe\u5f0f/\u7c7b\u578b&gt;</code>\uff0c\u4ea4\u4e92\u5f0f\u5730\u63d0\u4f9b\u53c2\u6570\u7684\u4fe1\u606f</li> </ul>"},{"location":"booknotes/debug_hacks/gdb/#_10","title":"\u4fee\u6539\u72b6\u6001","text":"<ul> <li><code>set variable &lt;\u53d8\u91cf&gt;=&lt;\u8868\u8fbe\u5f0f&gt;</code>\uff0c\u6539\u53d8\u53d8\u91cf\u7684\u503c</li> </ul>"},{"location":"booknotes/debug_hacks/gdb/#_11","title":"\u591a\u7ebf\u7a0b\u8c03\u8bd5","text":"<ul> <li><code>info inferiors</code>\uff0c\u67e5\u770b\u6b63\u5728\u88abGDB\u8c03\u8bd5\u7684\u8fdb\u7a0b</li> <li><code>info threads</code>\uff0c\u67e5\u770b\u6240\u6709\u7ebf\u7a0b\u7684\u72b6\u6001\u4fe1\u606f</li> <li><code>thread &lt;threadno&gt;</code>\uff0c\u5207\u6362\u5230\u7f16\u53f7\u4e3a\"threadno\"\u7684\u7ebf\u7a0b</li> <li><code>thread apply &lt;threadno&gt; &lt;command&gt;</code>\uff0c\u53ea\u8ba9\u7f16\u53f7\u4e3a\"threadno\"\u7684\u7ebf\u7a0b\u6267\u884cGDB\u547d\u4ee4</li> <li><code>set scheduler-locking on</code>\uff0c\u53ea\u8fd0\u884c\u5728\u5f53\u524d\u7ebf\u7a0b\u4e2d\uff0c\u4e0d\u5207\u6362\u5230\u4ed6\u7ebf\u7a0b\u6267\u884c\u4efb\u4f55GDB\u547d\u4ee4<ul> <li>\u5b9e\u4f8b\u4ee3\u7801\u521b\u5efa\u4e00\u4e2a\u4e3b\u7ebf\u7a0b\u548c\u56db\u4e2a\u5b50\u7ebf\u7a0b <pre><code>gdb -q ./main \\\n-ex \"b signals\" \\\n-ex \"run\" \\\n-ex \"info threads\" \\\n-ex \"info inferiors\"\nReading symbols from ./main...\nBreakpoint 1 at 0x1468: file main.cpp, line 18.\nStarting program: /home/yuxiangw/GitHub/learning_book/docs/booknotes/debug_hacks/gdb/code/threads/main \n[Thread debugging using libthread_db enabled]\nUsing host libthread_db library \"/lib/x86_64-linux-gnu/libthread_db.so.1\".\n[New Thread 0x7ffff7a12700 (LWP 1821943)]\nWaiting... \n[New Thread 0x7ffff7211700 (LWP 1821944)]\nWaiting... \n[New Thread 0x7ffff6a10700 (LWP 1821945)]\nWaiting... \n[New Thread 0x7ffff620f700 (LWP 1821946)]\n[Switching to Thread 0x7ffff620f700 (LWP 1821946)]\n\nThread 5 \"main\" hit Breakpoint 1, signals () at main.cpp:18\n18      {\nId   Target Id                                  Frame \n1    Thread 0x7ffff7a13740 (LWP 1821939) \"main\" __pthread_clockjoin_ex (threadid=140737347921664, \n    thread_return=0x0, clockid=&lt;optimized out&gt;, abstime=&lt;optimized out&gt;, block=&lt;optimized out&gt;)\n    at pthread_join_common.c:145\n2    Thread 0x7ffff7a12700 (LWP 1821943) \"main\" futex_wait_cancelable (private=&lt;optimized out&gt;, expected=0, \n    futex_word=0x55555555a188 &lt;cv+40&gt;) at ../sysdeps/nptl/futex-internal.h:183\n3    Thread 0x7ffff7211700 (LWP 1821944) \"main\" futex_wait_cancelable (private=&lt;optimized out&gt;, expected=0, \n    futex_word=0x55555555a188 &lt;cv+40&gt;) at ../sysdeps/nptl/futex-internal.h:183\n4    Thread 0x7ffff6a10700 (LWP 1821945) \"main\" futex_wait_cancelable (private=&lt;optimized out&gt;, expected=0, \n    futex_word=0x55555555a188 &lt;cv+40&gt;) at ../sysdeps/nptl/futex-internal.h:183\n* 5    Thread 0x7ffff620f700 (LWP 1821946) \"main\" signals () at main.cpp:18\nNum  Description       Executable        \n* 1    process 1821939   /home/yuxiangw/GitHub/learning_book/docs/booknotes/debug_hacks/gdb/code/threads/main \n</code></pre></li> </ul> </li> </ul>"},{"location":"booknotes/debug_hacks/gdb/#_12","title":"\u5176\u4ed6\u5e38\u89c1\u547d\u4ee4","text":"<ul> <li><code>info sharedlibrary</code>\uff0c\u6253\u5370\u5df2\u7ecf\u88c5\u8f7d\u7684\u52a8\u6001\u5e93</li> <li><code>info proc</code>\uff0c\u6253\u5370\u8fdb\u7a0b\u4fe1\u606f</li> <li><code>info proc mappings</code>\uff0c\u67e5\u770b\u8fdb\u7a0b\u7684\u5185\u5b58\u6620\u5c04\uff0c\u5373\u663e\u793a\u8fdb\u7a0b\u5bf9\u5e94\u7684/proc//maps\u7684\u4fe1\u606f <li><code>disas /s &lt;\u51fd\u6570/\u5730\u5740&gt;</code>\uff0c\u67e5\u770b\u6c47\u7f16\u4ee3\u7801\uff0c\u5176\u4e2d<code>/s</code>\u8868\u793a\u540c\u65f6\u663e\u793asource+assembly\u4ee3\u7801</li> <li><code>set print elements unlimited</code>\uff0c\u4e0d\u9650\u5236\u6570\u7ec4\u4e2d\u5143\u7d20\u663e\u793a\u7684\u4e2a\u6570\uff0c\u9ed8\u8ba4\u60c5\u51b5\u4e0b\uff0cGDB\u6253\u5370\u6570\u7ec4\u65f6\uff0c\u53ea\u4e00\u6b21\u6027\u663e\u793a\u90e8\u5206\u5143\u7d20</li>"},{"location":"booknotes/debug_hacks/gdb/#_13","title":"\u53c2\u8003","text":"<ul> <li>\"GDB\u7684\u7528\u6237\u624b\u518c\"</li> </ul>"},{"location":"booknotes/hplsp/adv_io/","title":"\u9ad8\u7ea7IO\u51fd\u6570","text":"<p>\u300aLinux\u9ad8\u6027\u80fd\u670d\u52a1\u5668\u7f16\u7a0b\u300b - \u6e38\u53cc \u7b2c6\u7ae0\uff0c\u4ee5\u53ca\u300a\u5c0f\u6797coding - \u7f51\u7edc\u7cfb\u7edf\u300b\u7684\u8bfb\u4e66\u7b14\u8bb0\uff0c\u672c\u6587\u4e2d\u7684\u6240\u6709\u4ee3\u7801\u53ef\u5728GitHub\u4ed3\u5e93\u4e2d\u627e\u5230</p>"},{"location":"booknotes/hplsp/adv_io/#pipe","title":"pipe\u51fd\u6570","text":""},{"location":"booknotes/hplsp/adv_io/#pipe_1","title":"pipe","text":"<p><pre><code>#include &lt;unistd.h&gt;\n\n// \u6253\u5f00\u4e00\u4e2a\u7ba1\u9053\n//  fd[0] - \u7ba1\u9053\u8bfb\u7aef\n//  fd[1] - \u7ba1\u9053\u5199\u7aef\n//  \u5982\u679c\u7ba1\u9053\u4e2d\u6ca1\u6709\u6570\u636e\uff0c\u8bfb\u64cd\u4f5c\u963b\u585e\n//  \u5982\u679c\u6240\u6709\u5199\u7aef\u88ab\u5173\u95ed\uff0c\u8bfb\u64cd\u4f5c\u8fd4\u56de\u96f6\n//  \u5982\u679c\u6240\u6709\u8bfb\u7aef\u88ab\u5173\u95ed\uff0c\u5199\u64cd\u4f5c\u5931\u8d25\uff0c\u5e76\u89e6\u53d1`SIGPIPE`\u4fe1\u53f7\nint pipe(int fd[2]);\n</code></pre> </p> <p>\u4f8b\u5b50\"pipe\"\uff0c\u5b9e\u73b0\u4e86\u5b50\u8fdb\u7a0b\u540c\u6b65\u8bfb\u53d6\u7236\u8fdb\u7a0b\u5f80\u7ba1\u9053\u4e2d\u5199\u5165\u7684\u6570\u636e\uff1a</p> <p><pre><code>#define MSGSIZE 16\nconst char *msg1 = \"hello, world #1\";\nconst char *msg2 = \"hello, world #2\";\n\nvoid write_data(int write_fd)\n{\n   printf(\"Parent Task Starts\\n\");\n\n   int nbytes = write(write_fd, msg1, MSGSIZE);\n   printf(\"parent process wrote %d bytes to child process: %s\\n\", nbytes, msg1);\n   nbytes = write(write_fd, msg2, MSGSIZE);\n   printf(\"parent process wrote %d bytes to child process: %s\\n\", nbytes, msg2);\n\n   printf(\"Parent Task Ends\\n\");\n}\n\nvoid read_data(int read_fd)\n{\n   printf(\"Child Task Starts\\n\");\n\n   char inbuf[MSGSIZE];\n   int nbytes = 0;\n\n   while ((nbytes = read(read_fd, inbuf, MSGSIZE)) &gt; 0)\n      printf(\"child process read %d bytes to from parent process: %s\\n\", nbytes, inbuf);\n\n   printf(\"Child Task Ends\\n\");\n}\n\nint main(int argc, char **argv)\n{\n   int fd[2];\n   pipe(fd);\n\n   int read_fd = fd[0];\n   int write_fd = fd[1];\n\n   pid_t pid = fork();\n   if (pid == 0)\n   {\n      close(write_fd);\n      read_data(read_fd);\n      close(read_fd);\n      return 0;\n   }\n\n   close(read_fd);\n   sleep(1);\n   write_data(write_fd);\n   close(write_fd);\n\n   wait(NULL);\n   return 0;\n}\n</code></pre> <pre><code>&gt; ./main \nChild Task Starts\nParent Task Starts\nparent process wrote 16 bytes to child process: hello, world #1\nparent process wrote 16 bytes to child process: hello, world #2\nParent Task Ends\nchild process read 16 bytes to from parent process: hello, world #1\nchild process read 16 bytes to from parent process: hello, world #2\nChild Task Ends\n</code></pre></p>"},{"location":"booknotes/hplsp/adv_io/#socketpair","title":"socketpair","text":"<p><pre><code>#include &lt;sys/socket.h&gt;\n\n// \u521b\u5efa\u53cc\u5411\u7ba1\u9053\n//  domain - \u53ea\u80fd\u662fUNIX\u672c\u5730\u534f\u8bae\u65cfAF_UNIX\n//  type, protocol - \u672c\u5730\u534f\u8bae\u65cf\u7684\u53c2\u6570\n//  fd[2] - \u7ba1\u9053\u7684\u4e24\u7aef\uff0c\u90fd\u53ef\u8bfb\u53ef\u5199\uff0c\u4e00\u7aef\u5199\uff0c\u5fc5\u987b\u4ece\u53e6\u4e00\u7aef\u8bfb\uff0c\u53cd\u4e4b\u4ea6\u7136\u3002\n//  \u5982\u679c\u7ba1\u9053\u4e2d\u6ca1\u6709\u6570\u636e\uff0c\u8bfb\u64cd\u4f5c\u963b\u585e\n//  \u5982\u679c\u7ba1\u9053\u4e00\u7aef\u7684\u6587\u4ef6\u63cf\u8ff0\u7b26\u90fd\u88ab\u5173\u95ed\uff0c\u5219\u53e6\u4e00\u7aef\u7684\u8bfb\u64cd\u4f5c\u8fd4\u56de\u96f6\nint socketpair(int domain, int type, int protocol, int fd[2]);\n</code></pre> </p> <p>\u4f8b\u5b50\"socketpair\"\uff0c\u5b9e\u73b0\u4e86\u5728\u4e24\u4e2a\u8fdb\u7a0b\u95f4\u4f20\u9012\u6570\u636e\uff1a</p> <p><pre><code>#define MSGSIZE 16\nconst char *msg1 = \"hello, world #1\";\nconst char *msg2 = \"hello, world #2\";\n\nvoid parent_rw(int socket)\n{\n   printf(\"[Parent] Task Starts\\n\");\n\n   char inbuf[MSGSIZE];\n   int nbytes = read(socket, inbuf, MSGSIZE);\n   printf(\"[Parent] read %d bytes to from child process: %s\\n\", nbytes, inbuf);\n\n   nbytes = write(socket, msg1, MSGSIZE);\n   printf(\"[Parent] wrote %d bytes to child process: %s\\n\", nbytes, msg1);\n\n   printf(\"[Parent] Task Ends\\n\");\n}\n\nvoid child_wr(int socket)\n{\n   printf(\"[Child] Task Starts\\n\");\n\n   int nbytes = write(socket, msg2, MSGSIZE);\n   printf(\"[Child] wrote %d bytes to parent process: %s\\n\", nbytes, msg2);\n\n   char inbuf[MSGSIZE];\n   nbytes = read(socket, inbuf, MSGSIZE);\n   printf(\"[Child] read %d bytes to from parent process: %s\\n\", nbytes, inbuf);\n\n   printf(\"[Child] Task Ends\\n\");\n}\n\nint main()\n{\n   int fd[2];\n   socketpair(AF_UNIX, SOCK_STREAM, 0, fd);\n\n   const int parentSocket = 0;\n   const int childSocket = 1;\n\n   pid_t pid = fork();\n   if (pid == 0)\n   {\n      close(fd[parentSocket]);\n      child_wr(fd[childSocket]);\n      close(fd[childSocket]);\n      return 0;\n   }\n\n   close(fd[childSocket]);\n   sleep(1);\n   parent_rw(fd[parentSocket]);\n   close(fd[parentSocket]);\n\n   wait(NULL);\n   return 0;\n}\n</code></pre> <pre><code>&gt; ./main \n[Child] Task Starts\n[Child] wrote 16 bytes to parent process: hello, world #2\n[Parent] Task Starts\n[Parent] read 16 bytes to from child process: hello, world #2\n[Parent] wrote 16 bytes to child process: hello, world #1\n[Parent] Task Ends\n[Child] read 16 bytes to from parent process: hello, world #1\n[Child] Task Ends\n</code></pre></p>"},{"location":"booknotes/hplsp/adv_io/#mkfifo","title":"mkfifo","text":"<p><pre><code>#include &lt;sys/stat.h&gt;\n\n// \u521b\u5efa\u547d\u540d\u7ba1\u9053\n//  pathname - \u547d\u540d\u7ba1\u9053\u6587\u4ef6\u540d\uff0c\u9700\u8981\u4fdd\u8bc1\u5728\u521b\u5efa\u524d\u4e0d\u5b58\u5728\u6b64\u6587\u4ef6\n//  mode - \u6587\u4ef6\u5c5e\u6027\n//  \u9700\u8981\u540c\u65f6\u4ee5\u201c\u53ea\u8bfb\u201d\u548c\u201c\u53ea\u5199\u201d\u7684\u65b9\u5f0f\u6253\u5f00\u547d\u540d\u7ba1\u9053\uff0c\u5e76\u5728\u4e24\u8fb9\u8fdb\u884c\u540c\u6b65\u8bfb\u5199\nint mkfifo(const char *pathname, mode_t mode);\n</code></pre> </p> <p>\u4f8b\u5b50\"mkfifo\"\uff0c\u521b\u5efa\u4e86\u4e00\u4e2a<code>/tmp/fifo</code>\u547d\u540d\u7ba1\u9053\uff0c\u5e76\u5728\u4e24\u4e2a\u8fdb\u7a0b\u4e2d\u901a\u8fc7\u6b64\u7ba1\u9053\u540c\u6b65\u6570\u636e\uff1a</p> <p><pre><code>#define NAMED_FIFO \"/tmp/fifo\"\n#define MSGSIZE 16\nconst char *msg1 = \"hello, world #1\";\nconst char *msg2 = \"hello, world #2\";\n\nvoid parent_rw()\n{\n   printf(\"[Parent] Task Starts\\n\");\n\n   int fd_read = open(NAMED_FIFO, O_RDONLY);\n   char inbuf[MSGSIZE];\n   int nbytes = read(fd_read, inbuf, MSGSIZE);\n   printf(\"[Parent] read %d bytes to from child process: %s\\n\", nbytes, inbuf);\n   close(fd_read);\n\n   int fd_write = open(NAMED_FIFO, O_WRONLY);\n   nbytes = write(fd_write, msg1, MSGSIZE);\n   printf(\"[Parent] wrote %d bytes to child process: %s\\n\", nbytes, msg1);\n   close(fd_write);\n\n   printf(\"[Parent] Task Ends\\n\");\n}\n\nvoid child_wr()\n{\n   printf(\"[Child] Task Starts\\n\");\n\n   int fd_write = open(NAMED_FIFO, O_WRONLY);\n   int nbytes = write(fd_write, msg2, MSGSIZE);\n   printf(\"[Child] wrote %d bytes to parent process: %s\\n\", nbytes, msg2);\n   close(fd_write);\n\n   int fd_read = open(NAMED_FIFO, O_RDONLY);\n   char inbuf[MSGSIZE];\n   nbytes = read(fd_read, inbuf, MSGSIZE);\n   printf(\"[Child] read %d bytes to from parent process: %s\\n\", nbytes, inbuf);\n   close(fd_read);\n\n   printf(\"[Child] Task Ends\\n\");\n}\n\nint main(int argc, char **argv)\n{\n   int rc = mkfifo(NAMED_FIFO, 0777);\n   if (rc == -1)\n   {\n      perror(NAMED_FIFO);\n      return -1;\n   }\n\n   pid_t pid = fork();\n   if (pid == 0)\n   {\n      child_wr();\n      return 0;\n   }\n\n   sleep(1);\n   parent_rw();\n\n   wait(NULL);\n   unlink(NAMED_FIFO);\n   return 0;\n}\n</code></pre> <pre><code>&gt; ./main \n[Child] Task Starts\n[Parent] Task Starts\n[Child] wrote 16 bytes to parent process: hello, world #2\n[Parent] read 16 bytes to from child process: hello, world #2\n[Parent] wrote 16 bytes to child process: hello, world #1\n[Child] read 16 bytes to from parent process: hello, world #1\n[Child] Task Ends\n[Parent] Task Ends\n</code></pre></p>"},{"location":"booknotes/hplsp/adv_io/#dup","title":"dup\u51fd\u6570","text":""},{"location":"booknotes/hplsp/adv_io/#dup_1","title":"dup","text":"<p><pre><code>#include &lt;unistd.h&gt;\n\n// \u590d\u5236\u6587\u4ef6\u63cf\u8ff0\u7b26\uff0c\u65b0\u7684\u6587\u4ef6\u63cf\u8ff0\u7b26\u7684\u503c\u7531\u7cfb\u7edf\u6307\u5b9a\n//  oldfd - \u8981\u590d\u5236\u7684\u6587\u4ef6\u63cf\u8ff0\u7b26\nint dup(int oldfd);\n</code></pre> \u4f8b\u5b50\"dup\"\uff0c\u590d\u5236\u4e86\u6807\u51c6\u8f93\u51fa\uff0c\u56e0\u6b64\u6709\u4e24\u4e2a\u6587\u4ef6\u63cf\u8ff0\u7b26\u53ef\u4ee5\u8f93\u51fa\u4fe1\u606f\uff1a <pre><code>const char msg1[] = \"hello, world #1\\n\";\nconst char msg2[] = \"hello, world #2\\n\";\n\nint main()\n{\n   int stdout_fd = 1;\n   int stdout_fd_copy = dup(stdout_fd);\n\n   printf(\"%s\", msg1);\n   write(stdout_fd_copy, msg2, sizeof(msg2) - 1); // print to stdout\n\n   close(stdout_fd_copy);\n   return 0;\n}\n</code></pre> <pre><code>&gt; ./main \nhello, world #1\nhello, world #2\n</code></pre></p>"},{"location":"booknotes/hplsp/adv_io/#dup2","title":"dup2","text":"<p><pre><code>#include &lt;unistd.h&gt;\n\n// \u590d\u5236\u6587\u4ef6\u63cf\u8ff0\u7b26\uff0c\u65b0\u7684\u6587\u4ef6\u63cf\u8ff0\u7b26\u7531\u7528\u6237\u4f20\u5165\n//  oldfd - \u8981\u590d\u5236\u7684\u6587\u4ef6\u63cf\u8ff0\u7b26\n//  newfd - \u65b0\u7684\u6587\u4ef6\u63cf\u8ff0\u7b26\u7684\u503c\uff0c\u5982\u679c\u6709\u88ab\u6b64\u6587\u4ef6\u63cf\u8ff0\u7b26\u6253\u5f00\u7684\u6587\u4ef6\uff0c\u4f1a\u88ab\u5173\u95ed\nint dup2(int oldfd, int newfd);\n</code></pre> \u4f8b\u5b50\"dup2\"\uff0c\u5c06\u6807\u51c6\u8f93\u51fa\u91cd\u5b9a\u4f4d\u5230\u4e86\u6587\u4ef6\uff1a <pre><code>const char msg1[] = \"hello, world #1\\n\";\nconst char msg2[] = \"hello, world #2\\n\";\n\nint main()\n{\n   int fd = open(\"dup2.log\", O_CREAT | O_WRONLY | O_APPEND, S_IRUSR | S_IWUSR | S_IRGRP | S_IROTH);\n   int stdout_fd = 1;\n   int rc = dup2(fd, stdout_fd);\n\n   printf(\"%s\", msg1); // print to log file because the fd is redirected\n   fflush(stdout); // no flush will lose the data\n   write(stdout_fd, msg2, sizeof(msg2) - 1);\n\n   close(stdout_fd);\n   close(fd);\n\n   return 0;\n}\n</code></pre> <pre><code>&gt; cat dup2.log\nhello, world #1\nhello, world #2\n</code></pre></p>"},{"location":"booknotes/hplsp/adv_io/#mmap","title":"mmap\u51fd\u6570","text":"<pre><code>#include &lt;sys/mman.h&gt;\n\n// \u7533\u8bf7\u4e00\u5757\u5185\u5b58\uff0c\u53ef\u5c06\u8fd9\u6bb5\u5185\u5b58\u4f5c\u4e3a\u8fdb\u7a0b\u95f4\u901a\u4fe1\u7684\u5171\u4eab\u5185\u5b58\uff0c\u4e5f\u53ef\u7528\u5c06\u6587\u4ef6\u76f4\u63a5\u6620\u5c04\u5230\u7528\u6237\u7a7a\u95f4\n//  start - \u5141\u8bb8\u7528\u6237\u4f7f\u7528\u67d0\u4e2a\u7279\u5b9a\u7684\u5730\u5740\u4f5c\u4e3a\u8fd9\u6bb5\u5185\u5b58\u7684\u8d77\u59cb\u5730\u5740\uff0cNULL\u8868\u793a\u7531\u7cfb\u7edf\u5206\u914d\n//  length - \u5185\u5b58\u6bb5\u957f\u5ea6\n//  prot - \u8bbe\u7f6e\u5185\u5b58\u6bb5\u7684\u8bbf\u95ee\u6743\u9650\n//  flags - \u63a7\u5236\u5185\u5b58\u6bb5\u88ab\u4fee\u6539\u540e\u7a0b\u5e8f\u7684\u884c\u4e3a\n//      MAP_SHARED - \u5728\u8fdb\u7a0b\u95f4\u5171\u4eab\u8fd9\u6bb5\u5185\u5b58\uff0cPOSIX\u8fdb\u7a0b\u901a\u4fe1\u4f9d\u8d56\u6b64\u529f\u80fd\n//      MAP_PRIVATE - \u8c03\u7528\u8fdb\u7a0b\u6240\u79c1\u6709\n//      MAP_ANONYMOUS / MAP_ANON - \u5185\u5b58\u6bb5\u4e0d\u662f\u4ece\u6587\u4ef6\u6620\u5c04\u800c\u6765\uff0c\u540e\u4e24\u4e2a\u53c2\u6570\u88ab\u5ffd\u7565\uff0cPOSIX\u8fdb\u7a0b\u540c\u6b65\u4f9d\u8d56\u6b64\u529f\u80fd\n//  fd - \u88ab\u6620\u5c04\u6587\u4ef6\u5bf9\u5e94\u7684\u6587\u4ef6\u63cf\u8ff0\u7b26\n//  offset - \u4ece\u6587\u4ef6\u7684\u4f55\u5904\u5f00\u59cb\u6620\u5c04\n//  \u6210\u529f\u65f6\u8fd4\u56de\u6307\u5411\u76ee\u6807\u5185\u5b58\u533a\u57df\u7684\u6307\u9488\uff0c\u5931\u8d25\u65f6\u8fd4\u56de`MAP_FAILED`\nvoid* mmap(void *start, size_t length, int prot, int flags, int fd, off_t offset);\n</code></pre> <p><code>mmap</code>\u4e00\u822c\u7528\u5728\u4e24\u4e2a\u5730\u65b9\uff1a</p> <ul> <li>\u5229\u7528<code>mmap+write</code>\u52a0\u901f\u6587\u4ef6\u62f7\u8d1d\uff0c\u5b9e\u73b0\u96f6\u62f7\u8d1d</li> <li>\u5728\u8fdb\u7a0b\u95f4\u5171\u4eab\u5185\u5b58\uff0c\u4f8b\u5982\uff0cPOSIX\u8fdb\u7a0b\u95f4\u901a\u4fe1\u5c31\u4f9d\u8d56\u5230\u4e86<code>mmap</code></li> </ul>"},{"location":"booknotes/hplsp/adv_io/#_1","title":"\u96f6\u62f7\u8d1d","text":"<p>\u6b63\u5e38\u6587\u4ef6\u62f7\u8d1d\uff0c\u9700\u8981\u7ecf\u8fc7\u201c\u7528\u6237\u7f13\u51b2\u533a\u201d\uff0c\u5982\u4e0b\u56fe\uff1a  \u56fe\u7247\u6765\u81ea\u6587\u6863</p> <p>\u800c\u5728<code>mmap</code>\u7684\u5e2e\u52a9\u4e0b\uff0c\u4e0d\u9700\u8981\u7ecf\u8fc7\u201c\u7528\u6237\u7f13\u51b2\u533a\u201d\uff0c\u76f4\u63a5\u5728\u5185\u6838\u7a7a\u95f4\u901a\u8fc7CPU\u62f7\u8d1d\uff0c\u4ece\u800c\u51cf\u5c11\u4e86\u4e00\u6b21CPU\u7684\u62f7\u8d1d\u65f6\u95f4\uff0c\u5982\u4e0b\u56fe\uff1a </p> <p>\u4f8b\u5b50\"mmap\"\uff0c\u5229\u7528<code>mmap</code>\u5b9e\u73b0\u4e86\u5bf9\u6587\u4ef6\u7684\u62f7\u8d1d\uff1a <pre><code>int main(int argc, char *argv[])\n{\n   ...\n   int fdin = open(in_filename, O_RDONLY);\n   int fdout = open(out_filename, O_RDWR | O_CREAT | O_TRUNC, S_IRUSR | S_IWUSR | S_IRGRP | S_IROTH);\n\n   struct stat statbuf;\n   fstat(fdin, &amp;statbuf);\n   ftruncate(fdout, statbuf.st_size); // expand the space of the output file\n\n   // \u6620\u5c04\u8f93\u5165\u6587\u4ef6\u5230\u7528\u6237\u7a7a\u95f4`src_ptr`\n   void *src_ptr = mmap(NULL, statbuf.st_size, PROT_READ, MAP_SHARED, fdin, 0);\n\n   // \u6620\u5c04\u8f93\u51fa\u6587\u4ef6\u5230\u7528\u6237\u7a7a\u95f4`dest_ptr`\n   void *dest_ptr = mmap(NULL, statbuf.st_size, PROT_READ | PROT_WRITE, MAP_SHARED, fdout, 0);\n\n   memcpy(dest_ptr, src_ptr, statbuf.st_size); // copy to output file\n\n   munmap(dest_ptr, statbuf.st_size);\n   munmap(src_ptr, statbuf.st_size);\n   return 0;\n}\n</code></pre></p>"},{"location":"booknotes/hplsp/adv_io/#_2","title":"\u5171\u4eab\u5185\u5b58","text":"<p>\u8fdb\u7a0b\u95f4\u5171\u4eab\u5185\u5b58\u662f<code>mmap</code>\u6700\u91cd\u8981\u7684\u529f\u80fd\u4e4b\u4e00\uff0c\u533f\u540d\u5171\u4eab\u5185\u5b58\u53ef\u7528\u4e8e\u7236\u8fdb\u7a0b/\u5b50\u8fdb\u7a0b\u95f4\u7684\u901a\u4fe1\uff0c\u800c\u5177\u540d\u5171\u4eab\u5185\u5b58\u53ef\u4ee5\u5b9e\u73b0\u7cfb\u7edf\u4e2d\u4efb\u610f\u8fdb\u7a0b\u95f4\u7684\u901a\u4fe1\u3002\u5728\u201c\u7a0b\u5e8f\u5458\u7684\u81ea\u6211\u4fee\u517b/\u5e76\u53d1\u201d\u535a\u6587\u4e2d\uff0c\u4f8b\u4e3e\u4e86\u5404\u573a\u666f\u4e2d<code>mmap</code>\u7684\u4f5c\u7528\uff1a</p> <ul> <li><code>mmap</code>\u5728\u8fdb\u7a0b\u95f4\u540c\u6b65\u4e2d\u7684\u4f5c\u7528<ul> <li>\u4e92\u65a5\u91cf</li> <li>\u4fe1\u53f7\u91cf</li> <li>\u6761\u4ef6\u53d8\u91cf</li> </ul> </li> <li><code>mmap</code>\u5728\u8fdb\u7a0b\u95f4\u901a\u4fe1\u4e2d\u7684\u4f5c\u7528<ul> <li>\u5171\u4eab\u5185\u5b58</li> </ul> </li> </ul>"},{"location":"booknotes/hplsp/adv_io/#sendfile","title":"sendfile\u51fd\u6570","text":"<p><pre><code>#include &lt;sys/sendfile.h&gt;\n\n// \u5c06\u4e00\u4e2a\u771f\u5b9e\u6587\u4ef6\u7684\u6570\u636e\u4f20\u9012\u7ed9\u4e00\u4e2asocket\n//  out_fd - \u5fc5\u987b\u662f\u4e00\u4e2asocket\n//  in_fd - \u5fc5\u987b\u662f\u4e00\u4e2a\u771f\u5b9e\u6587\u4ef6\u7684\u6587\u4ef6\u63cf\u8ff0\u7b26\uff0c\u4e0d\u80fd\u662fsocket\u6216\u7ba1\u9053\nssize_t sendfile(int out_fd, int in_fd, off_t* offset, size_t count);\n</code></pre> \u5982\u4e0b\u56fe\u6240\u793a\uff0c\u4e00\u6b21<code>sendfile</code>\u7cfb\u7edf\u8c03\u7528\uff0c\u5c31\u53ef\u4ee5\u5b9e\u73b0\u6587\u4ef6\u7684\u62f7\u8d1d\u52a8\u4f5c\u3002\u76f8\u6bd4\u4e8e<code>mmap+write</code>\u5b9e\u73b0\u7684\u96f6\u62f7\u8d1d\uff0c<code>sendfile</code>\u540c\u6837\u53ea\u6709\u4e00\u6b21CPU\u62f7\u8d1d\uff0c\u5e76\u4e14\u53ea\u9700\u8981\u4e00\u6b21\u7cfb\u7edf\u8c03\u7528\uff0c\u4ece\u800c\u51cf\u5c11\u4e86\u7528\u6237\u7a7a\u95f4/\u5185\u6838\u7a7a\u95f4\u4e0a\u4e0b\u6587\u5207\u6362\u7684\u6b21\u6570\u3002</p> <p></p> <p>\u4f8b\u5b50\"sendfile\"\uff0c\u5229\u7528<code>sendfile</code>\u5b8c\u6210\u4e86\u670d\u52a1\u5668\u5411\u5ba2\u6237\u7aef\u4f20\u9012\u6587\u4ef6\u6570\u636e\u7684\u529f\u80fd\uff1a</p> <pre><code>int main(int argc, char* argv[])\n{\n   ...\n   int filefd = open(file_name, O_RDONLY);\n   struct stat stat_buf;\n   fstat(filefd, &amp;stat_buf);\n\n   // start server listen socket\n   ...\n   int connfd = accept(sock, (struct sockaddr*)&amp;client, &amp;client_addrlength);\n\n   sendfile(connfd, filefd, NULL, stat_buf.st_size);\n\n   close(connfd);\n   close(sock);\n   return 0;\n}\n</code></pre> serverclient <pre><code>&gt; ./main 127.0.0.1 12345 ./in.txt\n</code></pre> <pre><code>&gt; telnet 127.0.0.1 12345\nTrying 127.0.0.1...\nConnected to 127.0.0.1.\nEscape character is '^]'.\nhello\nworld\nConnection closed by foreign host.\n</code></pre>"},{"location":"booknotes/hplsp/adv_io/#copy_file_range","title":"copy_file_range\u51fd\u6570","text":"<pre><code>#include &lt;unistd.h&gt;\n\n// \u62f7\u8d1d\u6587\u4ef6\u5185\u5bb9\u5230\u53e6\u4e00\u4e2a\u6587\u4ef6\nssize_t copy_file_range(int fd_in, off64_t *off_in,\n                        int fd_out, off64_t *off_out,\n                        size_t len, unsigned int flags);\n</code></pre> <p><code>copy_file_range</code>\u51fd\u6570\u6ca1\u6709<code>sendfile</code>\u51fd\u6570\u5bf9\u6587\u4ef6\u63cf\u8ff0\u7b26\u7684\u9650\u5236\uff0c\u53ef\u4ee5\u5728\u4e24\u4e2a\u666e\u901a\u6587\u4ef6\u4e4b\u95f4\u8fdb\u884c\u62f7\u8d1d\uff0c\u53c2\u8003\u4f8b\u5b50\"copy_file_range\"\uff1a</p> <pre><code>int main(int argc, char *argv[])\n{\n   ...\n   int fd_in = open(argv[1], O_RDONLY);\n   struct stat stat;\n   fstat(fd_in, &amp;stat);\n   int len = stat.st_size;\n\n   int fd_out = open(argv[2], O_CREAT | O_WRONLY | O_TRUNC, 0644);\n\n   int nBytes = 0;\n   do\n   {\n      nBytes = copy_file_range(fd_in, NULL, fd_out, NULL, len, 0);\n      len -= rc;\n   } while (len &gt; 0 &amp;&amp; nBytes &gt; 0);\n\n   close(fd_in);\n   close(fd_out);\n   return 0;\n}\n</code></pre>"},{"location":"booknotes/hplsp/multi_io/","title":"IO\u590d\u7528","text":"<p>\u300aLinux\u9ad8\u6027\u80fd\u670d\u52a1\u5668\u7f16\u7a0b\u300b - \u6e38\u53cc \u7684\u7b2c9\u7ae0\uff0c\u300aUNIX\u7f51\u7edc\u7f16\u7a0b\u53771\u300b - \u7b2c\u4e09\u7248 \u7684\u7b2c6\u7ae0\uff0c\u4ee5\u53ca\u300a\u5c0f\u6797coding - \u7f51\u7edc\u7cfb\u7edf\u300b\u7684\u8bfb\u4e66\u7b14\u8bb0\uff0c\u672c\u6587\u4e2d\u7684\u6240\u6709\u4ee3\u7801\u53ef\u5728GitHub\u4ed3\u5e93\u4e2d\u627e\u5230</p>"},{"location":"booknotes/hplsp/multi_io/#io_1","title":"IO\u590d\u7528\u51fd\u6570","text":"<p>Linux\u63d0\u4f9b\u4e86<code>select()</code>\uff0c<code>poll()</code>\uff0c<code>epoll()</code>\u4e09\u4e2a\u51fd\u6570\uff0c\u7528\u4e8e\u76d1\u63a7\u6587\u4ef6\u63cf\u8ff0\u7b26\u4e0a\u53d1\u751f\u7684\u4e8b\u4ef6\uff0c\u5b9e\u73b0IO\u590d\u7528\u3002\u5176\u4e2d\uff0c<code>select()</code>\uff0c<code>poll()</code>\u662f\u7c7bUNIX\u7cfb\u7edf\u90fd\u63d0\u4f9b\u7684\uff0c\u800c<code>epoll()</code>\u662fLinux\u72ec\u6709\u7684\u3002\u4e09\u8005\u7684\u533a\u522b\u5982\u4e0b\uff1a</p> \u7cfb\u7edf\u8c03\u7528 select poll epoll \u4e8b\u4ef6\u96c6\u5408 \u76d1\u542c\u53ef\u8bfb\u3001\u53ef\u5199\u53ca\u5f02\u5e38\u4e09\u79cd\u4e8b\u4ef6 \u7edf\u4e00\u5904\u7406\u6240\u6709\u4e8b\u4ef6\u7c7b\u578b \u5185\u6838\u901a\u8fc7\u4e00\u4e2a\u4e8b\u4ef6\u8868\u7ba1\u7406\u4e8b\u4ef6 \u7d22\u5f15\u5c31\u7eea\u4e8b\u4ef6\u65f6\u95f4\u590d\u6742\u5ea6 O(n) O(n) O(1) \u5de5\u4f5c\u6a21\u5f0f \u7535\u5e73\u89e6\u53d1LT \u7535\u5e73\u89e6\u53d1LT \u7535\u5e73\u89e6\u53d1LT/\u8fb9\u6cbf\u89e6\u53d1ET <p>\u4e0b\u9762\u901a\u8fc7\u4e09\u4e2a\u4f8b\u5b50\uff0c\u5206\u522b\u4ecb\u7ecd\u8fd9\u4e09\u4e2a\u51fd\u6570\u7684\u4f7f\u7528\u65b9\u6cd5\u3002\u8fd9\u4e09\u4e2a\u4f8b\u5b50\u53ef\u540c\u65f6\u5904\u7406\u65b0\u7684\u5ba2\u6237\u7aef\u7f51\u7edc\u8fde\u63a5\u548c\u591a\u4e2a\u5ba2\u6237\u7aef\u8f93\u5165\uff0c\u5e76\u5c06\u5ba2\u6237\u7aef\u4f20\u6765\u7684\u5b57\u7b26\u4e32\u8f6c\u6362\u6210\u5927\u5199\u540e\u56de\u4f20\u7ed9\u5ba2\u6237\u7aef\uff1a</p> <p></p>"},{"location":"booknotes/hplsp/multi_io/#select","title":"select\u51fd\u6570","text":"<pre><code>#include &lt;sys/select.h&gt;\n\n// \u76d1\u542c\u4e09\u7ec4\u6587\u4ef6\u63cf\u8ff0\u7b26\u4e0a\u53d1\u751f\u7684\u4e8b\u4ef6\n//  nfds - \u88ab\u76d1\u542c\u7684\u6587\u4ef6\u63cf\u8ff0\u7b26\u7684\u603b\u6570\uff0c\u901a\u5e38\u662fselect\u76d1\u542c\u7684\u6240\u6709\u6587\u4ef6\u63cf\u8ff0\u7b26\u7684\u6700\u5927\u503c\u52a01\n//  readfds, writefds, exceptfds - \u8bb0\u5f55\u8981\u76d1\u542c\u7684\u4e09\u79cd\u7c7b\u578b\u7684\u6587\u4ef6\u63cf\u8ff0\u7b26\nint select(int nfds, fd_set* readfds, fd_set* writefds, fd_set* exceptfds, struct timeval* timeout);\n</code></pre> <ul> <li>\u6587\u4ef6\u63cf\u8ff0\u7b26\u5c31\u7eea\u6761\u4ef6<ul> <li>socket\u53ef\u8bfb<ul> <li>\u63a5\u6536\u7f13\u5b58\u533a\u7684\u5b57\u8282\u6570\u5927\u4e8e\u6216\u7b49\u4e8e<code>SO_RCVLOWAT</code></li> <li>socket\u901a\u4fe1\u7684\u5bf9\u65b9\u5173\u95ed\u8fde\u63a5\uff0c\u6b64\u65f6\u5bf9\u8be5socket\u7684\u8bfb\u64cd\u4f5c\u5c06\u8fd4\u56de0</li> <li>\u76d1\u542csocket\u4e0a\u6709\u65b0\u7684\u8fde\u63a5\u8bf7\u6c42</li> <li>socket\u4e0a\u6709\u672a\u5904\u7406\u7684\u9519\u8bef</li> </ul> </li> <li>socket\u53ef\u5199<ul> <li>\u53d1\u9001\u7f13\u5b58\u533a\u7684\u5b57\u8282\u6570\u5927\u4e8e\u6216\u7b49\u4e8e<code>SO_SNDLOWAT</code></li> <li>socket\u7684\u5199\u64cd\u4f5c\u88ab\u5173\u95ed</li> <li>socket\u4f7f\u7528\u975e\u963b\u585econnect\u8fde\u63a5\u6210\u529f\u6216\u8005\u5931\u8d25(\u8d85\u65f6)\u4e4b\u540e</li> <li>socket\u4e0a\u6709\u672a\u5904\u7406\u7684\u9519\u8bef</li> </ul> </li> <li>socket\u5f02\u5e38<ul> <li>socket\u4e0a\u63a5\u6536\u5230\u5916\u5e26\u6570\u636e\uff0c\u53d1\u9001\u7684\u65f6\u5019\u5e26\u4e0a<code>MSG_OOB</code>\u6807\u5fd7</li> </ul> </li> </ul> </li> </ul> <p>\u4f8b\u5b50\"select\"\u5229\u7528<code>select()</code>\u51fd\u6570\uff0c\u5b8c\u6210\u4e86\u5bf9\u5ba2\u6237\u7aef\u8fde\u63a5\u548c\u5ba2\u6237\u7aef\u8f93\u5165\u7684\u76d1\u542c\u3002\u9700\u8981\u6ce8\u610f\u7684\u662f\uff0c<code>select()</code>\u8c03\u7528\u8fd4\u56de\u540e\uff0c\u7528\u6237\u9700\u8981\u904d\u5386\u6240\u6709\u6587\u4ef6\u63cf\u8ff0\u7b26\uff0c\u627e\u5230\u53d1\u751f\u4e86\u4e8b\u4ef6\u7684\u6587\u4ef6\u63cf\u8ff0\u7b26\u540e\uff0c\u518d\u8fdb\u884c\u5904\u7406\u3002\u5e76\u4e14\uff0c\u6bcf\u6b21\u8c03\u7528<code>select()</code>\u524d\u90fd\u8981\u91cd\u65b0\u8bbe\u7f6e\u6587\u4ef6\u63cf\u8ff0\u7b26\uff0c\u56e0\u4e3a\u5185\u6838\u4f1a\u4fee\u6539\u4f20\u5165\u7684\u6587\u4ef6\u63cf\u8ff0\u7b26\u3002</p> server.cpp<pre><code>int main(int argc, char *argv[])\n{\n   ...\n   int listen_fd = socket(PF_INET, SOCK_STREAM, 0);\n\n   int on = 1;\n   setsockopt(listen_fd, SOL_SOCKET, SO_REUSEADDR, &amp;on, sizeof(on));\n   // \u914d\u7f6e\u76d1\u542csocket\u4e3a\u975e\u963b\u585e\n   ioctl(listen_fd, FIONBIO, (char *)&amp;on);\n\n   bind(listen_fd, (struct sockaddr *)&amp;address, sizeof(address));\n   listen(listen_fd, 5);\n\n   fd_set read_fds_copy;\n   FD_ZERO(&amp;read_fds_copy);\n   FD_SET(listen_fd, &amp;read_fds_copy);\n\n   int max_fd = listen_fd;\n   struct timeval timeout;\n   char buf[1024];\n   fd_set read_fds;\n   FD_ZERO(&amp;read_fds);\n   while (true)\n   {\n      // \u6bcf\u6b21\u8c03\u7528select\u524d\u90fd\u8981\u91cd\u65b0\u5728read_fds\u4e2d\u8bbe\u7f6e\u6587\u4ef6\u63cf\u8ff0\u7b26\uff0c\u56e0\u4e3a\u4e8b\u4ef6\u53d1\u751f\u4e4b\u540e\uff0c\u6587\u4ef6\u63cf\u8ff0\u7b26\u5c06\u88ab\u5185\u6838\u4fee\u6539\n      memcpy(&amp;read_fds, &amp;read_fds_copy, sizeof(read_fds_copy));\n      timeout.tv_sec = 60; // seconds\n\n      printf(\"[Server] Waiting on select()...\\n\");\n      select(max_fd + 1, &amp;read_fds, nullptr /*write_fds*/, nullptr /*exception_fds*/, &amp;timeout);\n      if (rc == 0)\n      {\n         printf(\"[Server] select() timeout, end program\\n\");\n         break;\n      }\n\n      for (int i = 0; i &lt;= max_fd; ++i)\n      {\n         // file descriptor `i` has read event\n         if (FD_ISSET(i, &amp;read_fds))\n         {\n            if (i == listen_fd)\n            {\n               printf(\"[Server] Listening socket is readable\\n\");\n\n               struct sockaddr_in client;\n               socklen_t client_addrlength = sizeof(client);\n               int conn_fd = accept(listen_fd, (struct sockaddr *)&amp;client, &amp;client_addrlength);\n               printf(\"[Server] New incoming connection %d, ip: %s, port: %d\\n\",\n                      conn_fd, inet_ntoa(client.sin_addr), ntohs(client.sin_port));\n\n               FD_SET(conn_fd, &amp;read_fds_copy);\n               if (conn_fd &gt; max_fd)\n                  max_fd = conn_fd;\n            }\n            else\n            {\n               printf(\"[Server] Connection socket %d is readable\\n\", i);\n\n               memset(buf, '\\0', sizeof(buf));\n               int n_bytes = recv(i, buf, sizeof(buf) - 1, 0);\n               if (n_bytes == 0)\n               {\n                  printf(\"[Server] Remote client was closed, so close connection %d\\n\", i);\n                  close(i);\n                  FD_CLR(i, &amp;read_fds_copy);\n                  if (i == max_fd)\n                  {\n                     while (FD_ISSET(max_fd, &amp;read_fds) == false)\n                        max_fd -= 1;\n                  }\n                  break;\n               }\n\n               printf(\"[Server] Get %d bytes from connection %d : %s\\n\", n_bytes, i, buf);\n               for (int j = 0; j &lt; n_bytes; j++)\n                  buf[j] = toupper(buf[j]);\n               send(i, buf, n_bytes, 0);\n            }\n         }\n      }\n   }\n\n   for (int i = 0; i &lt;= max_fd; ++i)\n   {\n      if (FD_ISSET(i, &amp;read_fds_copy))\n         close(i);\n   }\n\n   return 0;\n}\n</code></pre> <p>\u542f\u52a8\u670d\u52a1\u540e\uff0c\u901a\u8fc7<code>nc</code>\u547d\u4ee4\uff0c\u8fde\u63a5\u4e24\u4e2a\u5ba2\u6237\u7aef\u5230\u670d\u52a1\u5668\uff0c\u5206\u522b\u4f20\u9001\"hello\"\u548c\"world\"\u5b57\u7b26\u4e32\u7ed9\u670d\u52a1\u5668\uff0c\u89c2\u5bdf\u670d\u52a1\u5668\u662f\u5426\u56de\u4f20\u5927\u5199\u7684\"HELLO\"\u548c\"WORLD\"\u3002\u518d\u5206\u522b\u9000\u51fa\u5ba2\u6237\u7aef\u8fde\u63a5\uff0c\u89c2\u5bdf\u670d\u52a1\u7aef\u6253\u5370\u7684\u4fe1\u606f\u3002\u6700\u540e\u7b49\u5f8560\u79d2\u540e\uff0c\u7531\u4e8e\u670d\u52a1\u7aef\u6ca1\u6709\u6536\u5230\u4efb\u4f55\u4fe1\u606f\uff0c\u8d85\u65f6\u9000\u51fa\u3002</p> ServerClient <pre><code>&gt; ./main 127.0.0.1 1234\n[Server] Waiting on select()...\n[Server] Listening socket is readable\n[Server] New incoming connection 4, ip: 127.0.0.1, port: 56274\n[Server] Waiting on select()...\n[Server] Listening socket is readable\n[Server] New incoming connection 5, ip: 127.0.0.1, port: 56280\n[Server] Waiting on select()...\n[Server] Connection socket 4 is readable\n[Server] Get 6 bytes from connection 4 : hello\n\n[Server] Waiting on select()...\n[Server] Connection socket 5 is readable\n[Server] Get 6 bytes from connection 5 : world\n\n[Server] Waiting on select()...\n[Server] Connection socket 4 is readable\n[Server] Remote client was closed, so close connection 4\n[Server] Waiting on select()...\n[Server] Connection socket 5 is readable\n[Server] Remote client was closed, so close connection 5\n[Server] Waiting on select()...\n[Server] Waiting on select()...\n[Server] select() timeout, end program\n</code></pre> <p><pre><code># \u5ba2\u6237\u7aef1\u8fde\u63a5\u670d\u52a1\u5668\uff0c\u53d1\u9001\"hello\"\u540e`Ctrl+D`\u9000\u51fa\n&gt; nc -q 1 127.0.0.1 1234\nhello\nHELLO\n</code></pre> <pre><code># \u5ba2\u6237\u7aef1\u8fde\u63a5\u670d\u52a1\u5668\uff0c\u53d1\u9001\"world\"\u540e`Ctrl+D`\u9000\u51fa\n&gt; nc -q 1 127.0.0.1 1234\nworld\nWORLD\n</code></pre></p>"},{"location":"booknotes/hplsp/multi_io/#poll","title":"poll\u51fd\u6570","text":"<pre><code>#include &lt;poll.h&gt;\n\n// \u5728\u6307\u5b9a\u65f6\u95f4\u5185\u8f6e\u8be2\u4e00\u5b9a\u6570\u91cf\u7684\u6587\u4ef6\u63cf\u8ff0\u7b26\uff0c\u4ee5\u6d4b\u8bd5\u5176\u4e2d\u662f\u5426\u6709\u5c31\u7eea\u8005\n//  fds - \u4e00\u4e2apollfd\u7ed3\u6784\u7c7b\u7684\u6570\u7ec4\uff0c\u53ef\u6307\u5b9a\u6211\u4eec\u611f\u5174\u8da3\u7684\u4e8b\u4ef6\n//  nfds - fds\u6570\u7ec4\u7684\u6709\u6548\u957f\u5ea6\nint poll(struct pollfd* fds, nfds_t nfds, int timeout);\n\n// \u6b64\u6570\u636e\u7528\u4e8e\u6307\u5b9a\u7528\u6237\u611f\u5174\u8da3\u7684\u4e8b\u4ef6\uff0c\u540c\u65f6\u5185\u6838\u8fd4\u56de\u53d1\u751f\u7684\u4e8b\u4ef6\u7ed9\u7528\u6237\uff0c\u5177\u4f53\u4e8b\u4ef6\u89c1\u4e0b\u8868\nstruct pollfd {\n    int   fd;         // \u8f93\u5165\uff0c\u76d1\u542c\u7684\u6587\u4ef6\u63cf\u8ff0\u7b26\n    short events;     // \u8f93\u5165\uff0c\u76d1\u542c\u7684\u4e8b\u4ef6\u7c7b\u578b\uff0c\u5e38\u89c1\u7684\u7c7b\u578b\u6709\uff1aPOLLIN, POLLOUT, POLLHUP\n    short revents;    // \u8f93\u51fa\uff0c\u53d1\u751f\u7684\u4e8b\u4ef6\uff0c\u7531\u5185\u6838\u4fee\u6539\n};\n</code></pre> \u4e8b\u4ef6 \u63cf\u8ff0 \u8bf4\u660e POLLIN \u6570\u636e\u53ef\u8bfb \u5305\u62ec\u4f18\u5148\u6570\u636e<code>MSG_OOB</code> POLLOUT \u6570\u636e\u53ef\u5199 \u5305\u62ec\u4f18\u5148\u6570\u636e<code>MSG_OOB</code> POLLRDHUP TCP\u8fde\u63a5\u88ab\u5bf9\u65b9\u5173\u95ed\uff0c\u6216\u8005\u5bf9\u65b9\u5173\u95ed\u4e86\u5199\u64cd\u4f5c Linux\u5185\u68382.6.17\u5f15\u5165 POLLERR \u9519\u8bef \u7531\u5185\u6838\u7ba1\u7406\uff0c\u7528\u6237\u4e0d\u80fd\u4f5c\u4e3a\u8f93\u5165\u914d\u7f6e POLLHUP \u5199\u7aef\u88ab\u5173\u95ed\u540e\uff0c\u8bfb\u7aef\u4e0a\u5c06\u6536\u5230POLLHUP\u4e8b\u4ef6 \u7531\u5185\u6838\u7ba1\u7406\uff0c\u7528\u6237\u4e0d\u80fd\u4f5c\u4e3a\u8f93\u5165\u914d\u7f6e POLLNVAL \u6587\u4ef6\u63cf\u8ff0\u7b26\u6ca1\u6709\u6253\u5f00 \u7531\u5185\u6838\u7ba1\u7406\uff0c\u7528\u6237\u4e0d\u80fd\u4f5c\u4e3a\u8f93\u5165\u914d\u7f6e <p>\u4f8b\u5b50\"poll\"\u5229\u7528<code>poll()</code>\u51fd\u6570\uff0c\u5b8c\u6210\u4e86\u5bf9\u5ba2\u6237\u7aef\u8fde\u63a5\u548c\u5ba2\u6237\u7aef\u8f93\u5165\u7684\u76d1\u542c\u3002\u548c<code>select()</code>\u51fd\u6570\u4e00\u6837\uff0c<code>poll()</code>\u8c03\u7528\u8fd4\u56de\u540e\uff0c\u7528\u6237\u4e5f\u9700\u8981\u904d\u5386\u6240\u6709\u6587\u4ef6\u63cf\u8ff0\u7b26\uff0c\u627e\u5230\u611f\u5174\u8da3\u7684\u6587\u4ef6\u63cf\u8ff0\u7b26\u540e\uff0c\u8fdb\u884c\u5904\u7406\u3002\u540c\u65f6\u518d\u6b21\u8c03\u7528<code>poll()</code>\u7684\u65f6\u5019\uff0c\u9700\u8981\u91cd\u65b0\u4f20\u5165\u6240\u6709\u6587\u4ef6\u63cf\u8ff0\u7b26\u3002</p> server.cpp<pre><code>int main(int argc, char *argv[])\n{\n   ...\n\n   int listen_fd = socket(PF_INET, SOCK_STREAM, 0);\n\n   int on = 1;\n   setsockopt(listen_fd, SOL_SOCKET, SO_REUSEADDR, &amp;on, sizeof(on));\n   ioctl(listen_fd, FIONBIO, (char *)&amp;on);\n\n   bind(listen_fd, (struct sockaddr *)&amp;address, sizeof(address));\n   listen(listen_fd, 5);\n\n   struct pollfd fds[MAX_POLL_FD];\n   memset(fds, 0, sizeof(fds));\n   fds[0].fd = listen_fd;\n   fds[0].events = POLLIN;\n   int nfds = 1;\n   int timeout = 60 * 1000; // milliseconds\n   char buf[1024];\n   while (true)\n   {\n      printf(\"Waiting on poll()...\\n\");\n      rc = poll(fds, nfds, timeout);\n      if (rc == 0)\n      {\n         printf(\"[Server] poll() timeout, end program\\n\");\n         break;\n      }\n\n      int current_size = nfds;\n      for (int i = 0; i &lt; current_size; ++i)\n      {\n         printf(\"[Server] fds[%d].fd = %d, fds[%d].revents = 0x%x\\n\", i, fds[i].fd, i, fds[i].revents);\n         if (fds[i].revents == 0)\n            continue;\n\n         if ((fds[i].fd == listen_fd) &amp;&amp; (fds[i].revents &amp; POLLIN))\n         {\n            printf(\"[Server] Listening socket is readable\\n\");\n\n            struct sockaddr_in client;\n            socklen_t client_addrlength = sizeof(client);\n            int conn_fd = accept(listen_fd, (struct sockaddr *)&amp;client, &amp;client_addrlength);\n            printf(\"[Server] New incoming connection %d, ip: %s, port: %d\\n\",\n                   conn_fd, inet_ntoa(client.sin_addr), ntohs(client.sin_port));\n\n            fds[nfds].fd = conn_fd;\n            fds[nfds].events = POLLIN;\n            nfds++;\n         }\n         else if (fds[i].revents &amp; POLLIN)\n         {\n            printf(\"[Server] Connection socket %d is readable\\n\", fds[i].fd);\n\n            memset(buf, '\\0', sizeof(buf));\n            int n_bytes = recv(fds[i].fd, buf, sizeof(buf) - 1, 0);\n            if (n_bytes == 0)\n            {\n               printf(\"[Server] Remote client was closed, so close connection %d\\n\", fds[i].fd);\n               close(fds[i].fd);\n               fds[i] = fds[nfds - 1];\n               nfds--;\n               break;\n            }\n\n            printf(\"[Server] Get %d bytes from connection %d : %s\\n\", n_bytes, fds[i].fd, buf);\n            for (int j = 0; j &lt; n_bytes; j++)\n               buf[j] = toupper(buf[j]);\n            send(fds[i].fd, buf, n_bytes, 0);\n         }\n         else\n         {\n            printf(\"[Server] Receive unexpected event 0x%x\", fds[i].revents);\n            assert(0);\n         }\n      }\n   }\n\n   for (int i = 0; i &lt; nfds; i++)\n   {\n      if (fds[i].fd &gt; 0)\n         close(fds[i].fd);\n   }\n\n   return 0;\n}\n</code></pre> <p>\u540c\u6837\u7684\u65b9\u6cd5\uff0c\u7528\u4e24\u4e2a\u5ba2\u6237\u7aef\u6d4b\u8bd5\u670d\u52a1\u5668\uff0c\u5f97\u5230\u5982\u4e0b\u4fe1\u606f\uff1a</p> ServerClient <pre><code>&gt; ./main 127.0.0.1 1234\nWaiting on poll()...\n[Server] Listening socket is readable\n[Server] New incoming connection 4, ip: 127.0.0.1, port: 58686\nWaiting on poll()...\n[Server] Listening socket is readable\n[Server] New incoming connection 5, ip: 127.0.0.1, port: 58756\nWaiting on poll()...\n[Server] Connection socket 4 is readable\n[Server] Get 6 bytes from connection 4 : hello\n\nWaiting on poll()...\n[Server] Connection socket 5 is readable\n[Server] Get 6 bytes from connection 5 : world\n\nWaiting on poll()...\n[Server] Connection socket 4 is readable\n[Server] Remote client was closed, so close connection 4\nWaiting on poll()...\n[Server] Connection socket 5 is readable\n[Server] Remote client was closed, so close connection 5\nWaiting on poll()...\n[Server] poll() timeout, end program\n</code></pre> <p><pre><code># \u5ba2\u6237\u7aef1\u8fde\u63a5\u670d\u52a1\u5668\uff0c\u53d1\u9001\"hello\"\u540e`Ctrl+D`\u9000\u51fa\n&gt; nc -q 1 127.0.0.1 1234\nhello\nHELLO\n</code></pre> <pre><code># \u5ba2\u6237\u7aef1\u8fde\u63a5\u670d\u52a1\u5668\uff0c\u53d1\u9001\"world\"\u540e`Ctrl+D`\u9000\u51fa\n&gt; nc -q 1 127.0.0.1 1234\nworld\nWORLD\n</code></pre></p>"},{"location":"booknotes/hplsp/multi_io/#epoll","title":"epoll\u51fd\u6570","text":"<pre><code>#include &lt;sys/epoll.h&gt;\n\n// \u521b\u5efaepoll\u7684\u6587\u4ef6\u63cf\u8ff0\u7b26\n//  size - \u5df2\u7ecf\u65e0\u9700\uff0c\u7f6e\u96f6\u5373\u53ef\nint epoll_create(int size);\n\n// \u64cd\u4f5cepoll\u7684\u5185\u6838\u4e8b\u4ef6\u8868\uff0c\u4ee5\u5728\u5185\u6838\u4e8b\u4ef6\u8868\u4e2d\u76d1\u542c/\u5220\u9664\u67d0\u6587\u4ef6\u63cf\u8ff0\u7b26\n//  epfd - `epoll_create()`\u8fd4\u56de\u7684\u6587\u4ef6\u63cf\u8ff0\u7b26\n//  op - \u6307\u5b9a\u64cd\u4f5c\u7c7b\u578b\n//  fd - \u8981\u64cd\u4f5c\u7684\u6587\u4ef6\u63cf\u8ff0\u7b26\nint epoll_ctl(int epfd, int op, int fd, struct epoll_event *event);\n\n// epoll\u4e8b\u4ef6\n//  events - \u63cf\u8ff0\u4e8b\u4ef6\u7c7b\u578b\uff0c\u57fa\u672c\u548cpoll\u76f8\u540c\nstruct epoll_event\n{\n    __uint32_t events; //epoll\u4e8b\u4ef6\n    epoll_data_t data; //\u7528\u6237\u6570\u636e\n};\n\n// \u7528\u4e8e\u5b58\u50a8\u7528\u6237\u6570\u636e\u7684\u8054\u5408\u4f53\uff0c\u53ea\u80fd\u9009\u62e9\u5176\u4e2d\u4e00\u9879\u4f7f\u7528\n//  fd - \u6307\u5b9a\u4e8b\u4ef6\u6240\u4ece\u5c5e\u7684\u76ee\u6807\u6587\u4ef6\u63cf\u8ff0\u7b26\n//  ptr - \u7528\u4e8e\u6307\u5b9a\u4e0efd\u76f8\u5173\u7684\u7528\u6237\u6570\u636e\uff0c\u4e00\u79cd\u66f4\u7075\u6d3b\u4f20\u9012\u6570\u636e\u7684\u65b9\u5f0f\ntypedef union epoll_data\n{\n    void* ptr;\n    int fd;\n    uint32_t u32;\n    uint64_t u64;\n} epoll_data_t;\n\n// \u5728\u4e00\u6bb5\u8d85\u65f6\u65f6\u95f4\u5185\u7b49\u5f85\u4e00\u7ec4\u6587\u4ef6\u63cf\u8ff0\u7b26\u4e0a\u7684\u4e8b\u4ef6\n//  events - \u5185\u6838\u8fd4\u56de\u7684\u5c31\u7eea\u4e8b\u4ef6\uff0c\u53ea\u5305\u542b\u5c31\u7eea\u4e8b\u4ef6\uff0c\u56e0\u6b64\u65e0\u9700\u7528\u6237\u81ea\u5df1\u904d\u5386\u5bfb\u627e\u611f\u5174\u8da3\u7684\u4e8b\u4ef6\nint epoll_wait(int epfd, struct epoll_event* events, int maxevents, int timeout);\n</code></pre> <p>\u4e0b\u56fe\u663e\u793a\u4e86<code>epoll</code>\u76f8\u5173\u7cfb\u7edf\u8c03\u7528\u5728\u5185\u6838\u4e2d\u7684\u4f5c\u7528\u3002<code>epoll</code>\u8f83<code>select/poll</code>\u7684\u4f18\u52bf\u5728\u4e8e\uff1a</p> <ul> <li>\u5728\u5185\u6838\u4e2d\u4f7f\u7528\u4e86\u7ea2\u9ed1\u6811\u6765\u8ddf\u8e2a\u8fdb\u7a0b\u6240\u6709\u5f85\u68c0\u6d4b\u7684\u6587\u4ef6\u63cf\u8ff0\u7b26\uff0c\u89e3\u51b3\u4e86<code>select/poll</code>\u6bcf\u6b21\u90fd\u8981\u91cd\u590d\u4f20\u5165\u6240\u6709\u6587\u4ef6\u63cf\u8ff0\u7b26\u7684\u95ee\u9898</li> <li>\u540c\u65f6\u8fd8\u7ef4\u62a4\u4e86\u4e00\u4e2a\u94fe\u8868\u6765\u8bb0\u5f55\u5c31\u7eea\u4e8b\u4ef6\uff0c\u89e3\u51b3\u4e86<code>select/poll</code>\u6bcf\u6b21\u90fd\u8981\u904d\u5386\u6240\u6709\u6587\u4ef6\u63cf\u8ff0\u7b26\u6765\u5bfb\u627e\u611f\u5174\u8da3\u7684\u5c31\u7eea\u4e8b\u4ef6\u7684\u95ee\u9898</li> </ul> <p></p> <p>\u4f8b\u5b50\"epoll\"\u5229\u7528<code>epoll()</code>\u51fd\u6570\uff0c\u5b8c\u6210\u4e86\u5bf9\u5ba2\u6237\u7aef\u8fde\u63a5\u548c\u5ba2\u6237\u7aef\u8f93\u5165\u7684\u76d1\u542c\u3002\u4e0d\u540c\u4e8e<code>select()</code>\u548c<code>poll()</code>\u8c03\u7528\uff0c\u7528\u6237\u65e0\u9700\u81ea\u5df1\u904d\u5386\u6587\u4ef6\u63cf\u8ff0\u7b26\uff0c\u5bfb\u627e\u611f\u5174\u8da3\u7684\u4e8b\u4ef6\u3002<code>epoll()</code>\u51fd\u6570\u53ea\u8fd4\u56de\u7528\u6237\u611f\u5174\u8da3\u7684\u5c31\u7eea\u4e8b\u4ef6\uff0c\u63d0\u9ad8\u4e86\u7d22\u5f15\u6548\u7387\u3002</p> server.cpp<pre><code>int main(int argc, char *argv[])\n{\n   ...\n   int listen_fd = socket(PF_INET, SOCK_STREAM, 0);\n\n   int on = 1;\n   setsockopt(listen_fd, SOL_SOCKET, SO_REUSEADDR, &amp;on, sizeof(on));\n   ioctl(listen_fd, FIONBIO, (char *)&amp;on);\n\n   bind(listen_fd, (struct sockaddr *)&amp;address, sizeof(address));\n   listen(listen_fd, 5);\n\n   int epoll_fd = epoll_create1(0);\n   struct epoll_event event, events[MAX_EVENTS];\n   event.events = EPOLLIN;\n   event.data.fd = listen_fd;\n   epoll_ctl(epoll_fd, EPOLL_CTL_ADD, listen_fd, &amp;event);\n\n   int timeout = 60 * 1000; // milliseconds\n   char buf[1024];\n   while (true)\n   {\n      printf(\"Waiting on epoll()...\\n\");\n      int event_count = epoll_wait(epoll_fd, events, MAX_EVENTS, timeout);\n      if (event_count == 0)\n      {\n         printf(\"[Server] poll() timeout, end program\\n\");\n         break;\n      }\n\n      for (int i = 0; i &lt; event_count; ++i)\n      {\n         printf(\"[Server] Event 0x%x of %d events from file descriptor %d\\n\",\n            events[i].events, event_count, events[i].data.fd);\n\n         if ((events[i].data.fd == listen_fd) &amp;&amp; (events[i].events &amp; EPOLLIN))\n         {\n            printf(\"[Server] Listening socket is readable\\n\");\n\n            struct sockaddr_in client;\n            socklen_t client_addrlength = sizeof(client);\n            int conn_fd = accept(listen_fd, (struct sockaddr *)&amp;client, &amp;client_addrlength);\n            printf(\"[Server] New incoming connection %d, ip: %s, port: %d\\n\",\n                   conn_fd, inet_ntoa(client.sin_addr), ntohs(client.sin_port));\n\n            event.data.fd = conn_fd;\n            event.events = EPOLLIN;\n            epoll_ctl(epoll_fd, EPOLL_CTL_ADD, conn_fd, &amp;event);\n         }\n         else if (events[i].events &amp; EPOLLIN)\n         {\n            printf(\"[Server] Connection socket %d is readable\\n\", events[i].data.fd);\n\n            memset(buf, '\\0', sizeof(buf));\n            int n_bytes = recv(events[i].data.fd, buf, sizeof(buf) - 1, 0);\n            if (n_bytes == 0)\n            {\n               printf(\"[Server] Remote client was closed, so close connection %d\\n\", events[i].data.fd);\n               epoll_ctl(epoll_fd, EPOLL_CTL_DEL, events[i].data.fd, nullptr);\n               close(events[i].data.fd);\n               continue;\n            }\n\n            printf(\"[Server] Get %d bytes from connection %d : %s\\n\", n_bytes, events[i].data.fd, buf);\n            for (int j = 0; j &lt; n_bytes; j++)\n               buf[j] = toupper(buf[j]);\n            send(events[i].data.fd, buf, n_bytes, 0);\n         }\n         else\n         {\n            printf(\"[Server] Receive unexpected event 0x%x\", events[i].data.fd);\n            assert(0);\n         }\n      }\n   }\n\n   close(epoll_fd);\n   close(listen_fd);\n\n   return 0;\n}\n</code></pre> <p>\u540c\u6837\u7684\u65b9\u6cd5\uff0c\u7528\u4e24\u4e2a\u5ba2\u6237\u7aef\u6d4b\u8bd5\u670d\u52a1\u5668\uff0c\u5f97\u5230\u5982\u4e0b\u4fe1\u606f\uff1a</p> ServerClient <pre><code>&gt; ./main 127.0.0.1 1234\nWaiting on epoll()...\n[Server] Listening socket is readable\n[Server] New incoming connection 5, ip: 127.0.0.1, port: 36564\nWaiting on epoll()...\n[Server] Listening socket is readable\n[Server] New incoming connection 6, ip: 127.0.0.1, port: 36574\nWaiting on epoll()...\n[Server] Connection socket 5 is readable\n[Server] Get 6 bytes from connection 5 : hello\n\nWaiting on epoll()...\n[Server] Connection socket 6 is readable\n[Server] Get 6 bytes from connection 6 : world\n\nWaiting on epoll()...\n[Server] Connection socket 5 is readable\n[Server] Remote client was closed, so close connection 5\nWaiting on epoll()...\n[Server] Connection socket 6 is readable\n[Server] Remote client was closed, so close connection 6\nWaiting on epoll()...\n[Server] poll() timeout, end program\n</code></pre> <p><pre><code># \u5ba2\u6237\u7aef1\u8fde\u63a5\u670d\u52a1\u5668\uff0c\u53d1\u9001\"hello\"\u540e`Ctrl+D`\u9000\u51fa\n&gt; nc -q 1 127.0.0.1 1234\nhello\nHELLO\n</code></pre> <pre><code># \u5ba2\u6237\u7aef1\u8fde\u63a5\u670d\u52a1\u5668\uff0c\u53d1\u9001\"world\"\u540e`Ctrl+D`\u9000\u51fa\n&gt; nc -q 1 127.0.0.1 1234\nworld\nWORLD\n</code></pre></p>"},{"location":"booknotes/hplsp/multi_io/#io_2","title":"IO\u6a21\u578b","text":"IO\u6a21\u578b \u8bfb\u5199\u64cd\u4f5c\u548c\u963b\u585e\u9636\u6bb5 \u963b\u585eIO \u7a0b\u5e8f\u963b\u585e\u4e8e\u8bfb\u5199\u51fd\u6570 IO\u590d\u7528 \u7a0b\u5e8f\u963b\u585e\u4e8eIO\u590d\u7528\u7cfb\u7edf\u8c03\u7528\uff0c\u4f46\u53ef\u540c\u65f6\u76d1\u542c\u591a\u4e2aIO\u4e8b\u4ef6\uff0c\u5bf9\u4e8eIO\u672c\u8eab\u7684\u8bfb\u5199\u64cd\u4f5c\u53ef\u4ee5\u662f\u975e\u963b\u585e\u7684 SIGIO\u4fe1\u53f7 \u4fe1\u53f7\u89e6\u53d1\u8bfb\u5199\u5c31\u7eea\u4e8b\u4ef6\uff0c\u7528\u6237\u7a0b\u5e8f\u6307\u5411\u8bfb\u5199\u64cd\u4f5c\uff0c\u7a0b\u5e8f\u6ca1\u6709\u963b\u585e\u9636\u6bb5 \u5f02\u6b65IO \u5185\u6838\u6267\u884c\u8bfb\u5199\u64cd\u4f5c\u5e76\u89e6\u53d1\u8bfb\u5199\u5b8c\u6210\u4e8b\u4ef6\uff0c\u7a0b\u5e8f\u6ca1\u6709\u963b\u585e\u9636\u6bb5 <p>\u963b\u585eIO\u6a21\u578b\u662f\u6700\u7b80\u5355\u7684IO\u6a21\u578b\uff0c\u4f46\u662f\u7531\u4e8e\u5b58\u5728\u963b\u585e\u9636\u6bb5\uff0c\u6548\u7387\u8f83\u4f4e\u3002\u5176\u4ed6IO\u6a21\u578b\u90fd\u5c3d\u91cf\u51cf\u5c11\u963b\u585e\u9636\u6bb5\u7684\u65f6\u95f4\uff0c\u4ee5\u63d0\u9ad8\u6548\u7387\u3002</p>"},{"location":"booknotes/hplsp/multi_io/#io_3","title":"\u963b\u585e/\u975e\u963b\u585eIO","text":"<p>socket\u9ed8\u8ba4\u662f\u963b\u585e\u7684\uff0c\u53ef\u901a\u8fc7\u7cfb\u7edf\u8c03\u7528\u914d\u7f6e\u4e3a\u975e\u963b\u585e\u7684(\u5982\u4e0a\u9762\u7684\u4f8b\u5b50)\u3002\u53ef\u80fd\u88ab\u963b\u585e\u7684socket\u7cfb\u7edf\u8c03\u7528\u6709\uff1a</p> <ul> <li><code>accept</code>\uff0c<code>send</code>\uff0c<code>recv</code>\uff0c<code>connect</code></li> </ul> <p>\u4f8b\u5982\uff0c\u5ba2\u6237\u7aef\u901a\u8fc7<code>connect</code>\u5411\u670d\u52a1\u5668\u53d1\u8d77\u8fde\u63a5\uff0c\u9996\u5148\u53d1\u9001\u540c\u6b65\u6bb5\u62a5\u6587\u7ed9\u670d\u52a1\u5668\uff0c\u7136\u540e\u7b49\u5f85\u670d\u52a1\u5668\u8fd4\u56de\u786e\u8ba4\u6bb5\u62a5\u6587\u3002\u5982\u679c\u670d\u52a1\u5668\u7684\u786e\u8ba4\u62a5\u6587\u6ca1\u6709\u7acb\u5373\u5230\u8fbe\u5ba2\u6237\u7aef\uff0c<code>connect</code>\u8c03\u7528\u5c06\u88ab\u6302\u8d77\uff0c\u76f4\u5230\u5ba2\u6237\u7aef\u6536\u5230\u786e\u8ba4\u62a5\u6587\uff0c<code>connect</code>\u91cd\u65b0\u88ab\u5524\u9192\u3002</p> <p>\u5bf9\u4e8e\u975e\u963b\u585eIO\uff0c\u51fd\u6570\u8fd4\u56de<code>-1</code>\u4e0d\u4e00\u5b9a\u662f\u51fa\u9519\uff0c\u4e5f\u6709\u53ef\u80fd\u662f\u4e8b\u4ef6\u6ca1\u6709\u5b8c\u6210\u3002\u56e0\u6b64\uff0c\u9700\u8981\u5224\u65ad<code>errno</code>\u662f\u5426\u4e3a\u671f\u671b\u9519\u8bef\uff0c</p> <ul> <li>\u5bf9\u4e8e<code>accept</code>\uff0c<code>send</code>\u548c<code>recv</code>\u800c\u8a00\uff0c\u4e8b\u4ef6\u672a\u53d1\u751f\u65f6\uff0c<code>errno</code>\u88ab\u8bbe\u7f6e\u4e3a<ul> <li><code>EAGAIN</code> - \u518d\u6765\u4e00\u6b21</li> </ul> </li> <li>\u5bf9\u4e8e<code>connect</code>\u800c\u8a00\uff0c\u4e8b\u4ef6\u672a\u53d1\u751f\u65f6\uff0c<code>errno</code>\u88ab\u8bbe\u7f6e\u4e3a<ul> <li><code>EINPROGRESS</code> - \u5728\u5904\u7406\u4e2d</li> </ul> </li> </ul>"},{"location":"booknotes/hplsp/multi_io/#io_4","title":"IO\u901a\u77e5\u673a\u5236","text":"<p>\u975e\u963b\u585eIO\u901a\u5e38\u8981\u548c\u5176\u4ed6IO\u901a\u77e5\u673a\u5236\u4e00\u8d77\u4f7f\u7528\uff0c\u6bd4\u5982IO\u590d\u7528\u548cSIGIO\u4fe1\u53f7\uff1a</p> <ul> <li>IO\u590d\u7528<ul> <li>\u5e94\u7528\u7a0b\u5e8f\u901a\u8fc7IO\u590d\u7528\u51fd\u6570\u5411\u5185\u6838\u6ce8\u518c\u4e00\u7ec4\u4e8b\u4ef6\uff0c\u5185\u6838\u901a\u8fc7IO\u590d\u7528\u51fd\u6570\u628a\u5176\u4e2d\u5c31\u7eea\u7684\u4e8b\u4ef6\u901a\u77e5\u7ed9\u5e94\u7528\u7a0b\u5e8f</li> <li>\u80fd\u63d0\u9ad8\u6548\u7387\u7684\u539f\u56e0\u5728\u4e8eIO\u590d\u7528\u51fd\u6570\u5177\u6709\u540c\u65f6\u76d1\u542c\u591a\u4e2aIO\u4e8b\u4ef6\u7684\u80fd\u529b</li> </ul> </li> <li>SIGIO\u4fe1\u53f7<ul> <li>\u53ef\u4ee5\u4e3a\u4e00\u4e2a\u76ee\u6807\u6587\u4ef6\u63cf\u8ff0\u7b26\u6307\u5b9a\u5bbf\u4e3b\u8fdb\u7a0b\uff0c\u5f53\u76ee\u6807\u6587\u4ef6\u63cf\u8ff0\u7b26\u4e0a\u6709\u4e8b\u4ef6\u53d1\u751f\u65f6\uff0c\u5bbf\u4e3b\u8fdb\u7a0b\u5c06\u6355\u83b7SIGIO\u4fe1\u53f7\uff0c\u89e6\u53d1\u4fe1\u53f7\u5904\u7406\u51fd\u6570\uff0c\u7136\u540e\u5728\u4fe1\u53f7\u5904\u7406\u51fd\u6570\u4e2d\u5bf9\u76ee\u6807\u6587\u4ef6\u63cf\u8ff0\u7b26\u6267\u884c\u975e\u963b\u585eIO\u64cd\u4f5c</li> </ul> </li> </ul>"},{"location":"booknotes/hplsp/multi_io/#io_5","title":"\u5f02\u6b65IO","text":"<p>\u963b\u585eIO\uff0cIO\u590d\u7528\u548cSIGIO\u4fe1\u53f7\u90fd\u662f\u540c\u6b65IO\u6a21\u578b\uff0c\u56e0\u4e3a\u8fd9\u4e09\u79cd\u6a21\u578b\u4e2d\uff0cIO\u7684\u8bfb\u5199\u64cd\u4f5c\uff0c\u90fd\u662f\u5728IO\u5c31\u7eea\u4e8b\u4ef6\u53d1\u751f\u4e4b\u540e\uff0c\u7531\u5e94\u7528\u7a0b\u5e8f\u6765\u5b8c\u6210\u7684\u3002\u5bf9\u4e8e\u5f02\u6b65IO\u800c\u8a00\uff0c\u7528\u6237\u53ef\u4ee5\u76f4\u63a5\u5c06IO\u6267\u884c\u8bfb\u5199\u64cd\u4f5c\u4ea4\u7ed9\u5185\u6838\uff0c\u65e0\u9700\u7b49\u5f85IO\u5c31\u7eea\u4e8b\u4ef6\u3002\u540c\u6b65IO\u6a21\u578b\u5411\u5e94\u7a0b\u5e8f\u901a\u77e5\u7684\u662fIO\u5c31\u7eea\u4e8b\u4ef6\uff0c\u800c\u5f02\u6b65IO\u5411\u5e94\u7528\u7a0b\u5e8f\u901a\u77e5\u7684\u65f6IO\u5b8c\u6210\u4e8b\u4ef6\u3002</p> <p>\u5728Linux\u73af\u5883\u4e0b\uff0c<code>aio.h</code>\u5934\u6587\u4ef6\u4e2d\u5b9a\u4e49\u7684\u51fd\u6570\u63d0\u4f9b\u4e86\u5bf9\u5f02\u6b65IO\u7684\u652f\u6301\uff0c\u8be6\u60c5\u53c2\u8003\u6587\u6863\u3002</p>"},{"location":"booknotes/hplsp/multi_io/#reactor","title":"Reactor\u6a21\u5f0f","text":"<p><code>Reactor</code>\u6a21\u5f0f\u4e5f\u53eb<code>Dispatcher</code>\u6a21\u5f0f\uff0c\u5229\u7528IO\u591a\u8def\u590d\u7528\u76d1\u542c\u4e8b\u4ef6\uff0c\u6536\u5230\u4e8b\u4ef6\u540e\uff0c\u6839\u636e\u4e8b\u4ef6\u7c7b\u578b\u5206\u914d\uff08Dispatch\uff09\u7ed9\u67d0\u4e2a\u8fdb\u7a0b/\u7ebf\u7a0b\u3002<code>Reactor</code>\u6a21\u5f0f\u4e3b\u8981\u7531\"Reactor\"\u548c\"\u5904\u7406\u8d44\u6e90\u6c60\"\u8fd9\u4e24\u4e2a\u6838\u5fc3\u90e8\u5206\u7ec4\u6210\uff1a</p> <ul> <li>\"Reactor\"<ul> <li>\u8d1f\u8d23\u76d1\u542c\u548c\u5206\u53d1\u4e8b\u4ef6\uff0c\u4e8b\u4ef6\u7c7b\u578b\u5305\u542b\u8fde\u63a5\u4e8b\u4ef6\u548c\u8bfb\u5199\u4e8b\u4ef6\u7b49</li> <li>\u6570\u91cf\u53ef\u4ee5\u53ea\u6709\u4e00\u4e2a\uff0c\u4e5f\u53ef\u4ee5\u6709\u591a\u4e2a</li> </ul> </li> <li>\"\u5904\u7406\u8d44\u6e90\u6c60\"<ul> <li>\u8d1f\u8d23\u5904\u7406\u4e8b\u4ef6</li> <li>\u53ef\u4ee5\u662f\u5355\u4e2a\u8fdb\u7a0b/\u7ebf\u7a0b\uff0c\u4e5f\u53ef\u4ee5\u662f\u591a\u4e2a\u8fdb\u7a0b/\u7ebf\u7a0b</li> </ul> </li> </ul> <p>\u9664\u4e86\u201c\u591aReactor\u5355\u8fdb\u7a0b/\u7ebf\u7a0b\u201d\u6ca1\u6709\u4efb\u4f55\u4f18\u52bf\u4ee5\u5916\uff0c\u53e6\u5916\u4e09\u79cd\u201cReactor\u201d\u548c\u201c\u8fdb\u7a0b/\u7ebf\u7a0b\u201d\u6570\u91cf\u7684\u7ec4\u5408\u90fd\u5728\u5b9e\u9645\u573a\u666f\u4e2d\u6709\u6240\u5e94\u7528\u3002</p>"},{"location":"booknotes/hplsp/multi_io/#reactor_1","title":"\u5355Reactor\u5355\u8fdb\u7a0b/\u7ebf\u7a0b","text":"<p>\u8fdb\u7a0b\u91cc\u6709<code>Reactor</code>\u3001<code>Acceptor</code>\u3001<code>Handler</code>\u8fd9\u4e09\u4e2a\u5bf9\u8c61\uff1a</p> <ul> <li><code>Reactor</code>\u5bf9\u8c61\u7684\u4f5c\u7528\u662f\u76d1\u542c\u548c\u5206\u53d1\u4e8b\u4ef6<ul> <li>\u6536\u5230\u4e8b\u4ef6\u540e\uff0c\u6839\u636e\u4e8b\u4ef6\u7c7b\u578b\uff0c\u901a\u8fc7<code>dispatch</code>\u8fdb\u884c\u5206\u53d1\u7ed9<code>Acceptor</code>\u5bf9\u8c61\u6216\u8005<code>Handler</code>\u5bf9\u8c61</li> </ul> </li> <li><code>Acceptor</code>\u5bf9\u8c61\u7684\u4f5c\u7528\u662f\u83b7\u53d6\u8fde\u63a5<ul> <li>\u901a\u8fc7<code>accept()</code>\u51fd\u6570\u83b7\u53d6\u8fde\u63a5\uff0c\u5e76\u521b\u5efa\u4e00\u4e2a<code>Handler</code>\u5bf9\u8c61\u6765\u5904\u7406\u540e\u7eed\u7684\u54cd\u5e94</li> </ul> </li> <li><code>Handler</code>\u5bf9\u8c61\u7684\u4f5c\u7528\u662f\u5904\u7406\u4e1a\u52a1<ul> <li>\u5b8c\u6210\u771f\u6b63\u7684\u4e1a\u52a1\u903b\u8f91</li> </ul> </li> </ul> <p>\u201c\u5355Reactor\u5355\u8fdb\u7a0b/\u7ebf\u7a0b\u201d\u7684\u7f3a\u70b9\uff1a</p> <ul> <li>\u65e0\u6cd5\u5229\u7528\u591a\u6838CPU\u7684\u6027\u80fd</li> <li><code>Handler</code>\u5bf9\u8c61\u5728\u5904\u7406\u4e1a\u52a1\u903b\u8f91\u65f6\uff0c\u65e0\u6cd5\u5904\u7406\u5176\u4ed6\u8fde\u63a5\u7684\u4e8b\u60c5</li> </ul>"},{"location":"booknotes/hplsp/multi_io/#reactor_2","title":"\u5355Reactor\u591a\u8fdb\u7a0b/\u7ebf\u7a0b","text":"<p>\u5bf9\u6bd4\u201c\u5355Reactor\u5355\u8fdb\u7a0b/\u7ebf\u7a0b\u201d\uff0c\u201c\u5355Reactor\u591a\u8fdb\u7a0b/\u7ebf\u7a0b\u201d\u4e0d\u4e00\u6837\u7684\u5730\u65b9\u5728\u4e8e\uff1a</p> <ul> <li><code>Handler</code>\u5bf9\u8c61\u4e0d\u518d\u8d1f\u8d23\u4e1a\u52a1\u903b\u8f91\uff0c\u901a\u8fc7<code>read</code>\u8bfb\u53d6\u5230\u6570\u636e\u540e\uff0c\u4f1a\u5c06\u6570\u636e\u53d1\u7ed9\u5b50\u7ebf\u7a0b\u91cc\u7684<code>Processor</code>\u5bf9\u8c61\u8fdb\u884c\u4e1a\u52a1\u5904\u7406</li> </ul> <p>\u201c\u5355Reactor\u591a\u8fdb\u7a0b/\u7ebf\u7a0b\u201d\u7684\u4f18\u70b9\u5728\u4e8e\uff1a</p> <ul> <li>\u80fd\u591f\u5145\u5206\u5229\u7528\u591a\u6838CPU\u7684\u6027\u80fd</li> </ul> <p>\u7f3a\u70b9\u5728\u4e8e\uff1a</p> <ul> <li>\u56e0\u4e3a\u4e00\u4e2a<code>Reactor</code>\u5bf9\u8c61\u65e2\u8981\u627f\u62c5\u8fde\u63a5\u4e8b\u4ef6\uff0c\u4e5f\u8981\u627f\u62c5\u6570\u636e\u8bfb\u5199\u4e8b\u4ef6\uff0c\u4e14\u53ea\u5728\u4e00\u4e2a\u7ebf\u7a0b\u4e2d\u8fd0\u884c\uff0c\u5728\u9762\u5bf9\u77ac\u95f4\u9ad8\u5e76\u53d1\u7684\u573a\u666f\u65f6\uff0c\u5bb9\u6613\u6210\u4e3a\u6027\u80fd\u7684\u74f6\u9888</li> </ul>"},{"location":"booknotes/hplsp/multi_io/#reactor_3","title":"\u591aReactor\u591a\u8fdb\u7a0b/\u7ebf\u7a0b","text":"<p>\u201c\u591aReactor\u591a\u8fdb\u7a0b/\u7ebf\u7a0b\u201d\u62e5\u6709\u4e00\u4e2a<code>MainReactor</code>\u5bf9\u8c61\u548c\u4e00\u4e2a(\u6216\u591a\u4e2a)<code>SubReactor</code>\u5bf9\u8c61\uff0c\u5c06\u8fde\u63a5\u4e8b\u4ef6\u548c\u6570\u636e\u8bfb\u5199\u4e8b\u4ef6\u5206\u5f00\u76d1\u63a7\uff0c\u5e76\u5c06\u5bf9\u8fde\u63a5\u4e8b\u4ef6\u7684\u76d1\u63a7\u5355\u72ec\u653e\u5728\u4e00\u4e2a\u7ebf\u7a0b\u4e2d\uff0c\u4ece\u800c\u89e3\u51b3\u4e86\u201c\u5355Reactor\u201d\u7684\u9ad8\u5e76\u53d1\u95ee\u9898\uff1a</p> <ul> <li><code>MainReactor</code>\u5bf9\u8c61<ul> <li>\u8d1f\u8d23\u63a5\u6536\u65b0\u8fde\u63a5</li> <li>\u628a\u65b0\u8fde\u63a5\u4f20\u9012\u7ed9\u5b50\u7ebf\u7a0b\u540e\uff0c\u5c31\u4e0d\u9700\u8981\u8d1f\u8d23\u6b64\u8fde\u63a5\u7684\u5176\u4ed6\u4e8b\u60c5\u4e86</li> </ul> </li> <li><code>SubReactor</code>\u5bf9\u8c61<ul> <li>\u8d1f\u8d23\u63a5\u6536\u6570\u636e\u8bfb\u5199\u4e8b\u4ef6</li> <li>\u8c03\u7528\u5f53\u524d\u8fde\u63a5\u5bf9\u5e94\u7684<code>Handler</code>\u5bf9\u8c61\u6765\u54cd\u5e94\u4e8b\u4ef6</li> </ul> </li> </ul>"},{"location":"booknotes/hplsp/socket/","title":"\u5957\u63a5\u5b57\u57fa\u7840","text":"<p>\u300aLinux\u9ad8\u6027\u80fd\u670d\u52a1\u5668\u7f16\u7a0b\u300b - \u6e38\u53cc \u7684\u7b2c5\u7ae0\uff0c\u4ee5\u53ca\u300aUNIX\u7f51\u7edc\u7f16\u7a0b\u53771\u300b - \u7b2c\u4e09\u7248 \u7684\u7b2c3\u30014\u30017\u300111\u7ae0\u7684\u8bfb\u4e66\u7b14\u8bb0\uff0c\u672c\u6587\u4e2d\u7684\u6240\u6709\u4ee3\u7801\u53ef\u5728GitHub\u4ed3\u5e93\u4e2d\u627e\u5230</p>"},{"location":"booknotes/hplsp/socket/#_2","title":"\u5957\u63a5\u5b57\u5730\u5740","text":"<p>\u5927\u591a\u6570\u5957\u63a5\u5b57\u90fd\u9700\u8981\u4e00\u4e2a\u6307\u5411\u5957\u63a5\u5b57\u5730\u5740\u7ed3\u6784\u7684\u6307\u9488\u4f5c\u4e3a\u53c2\u6570\u3002\u6bcf\u4e2a\u534f\u8bae\u90fd\u5b9a\u4e49\u4e86\u5b83\u81ea\u5df1\u7684\u5957\u63a5\u5b57\u5730\u5740\u7ed3\u6784\uff1a</p> \u534f\u8bae\u65cf \u5730\u5740\u65cf \u7ed3\u6784\u4f53 \u5730\u5740\u542b\u4e49\u548c\u957f\u5ea6 PF_UNIX AF_UNIX <code>sockaddr_un</code> UNIX\u672c\u5730\u57df\u534f\u8bae\uff0c\u6587\u4ef6\u7684\u8def\u5f84\u540d\uff0c\u957f\u5ea6\u53ef\u8fbe108\u5b57\u8282 PF_INET AF_INET <code>sockaddr_in</code> TCP/IPv4\u534f\u8bae\uff0c16bit\u7aef\u53e3\u53f7\u548c32bit IPv4\u5730\u5740\uff0c\u51716\u5b57\u8282 PF_INET6 AF_INET6 <code>sockaddr_in6</code> TCP/IPv6\u534f\u8bae\uff0c16bit\u7aef\u53e3\u53f7\uff0c32bit\u6d41\u6807\u8bc6\uff0c128bit IPv6\u5730\u5740\uff0c32bit\u8303\u56f4ID\uff0c\u517126\u5b57\u8282"},{"location":"booknotes/hplsp/socket/#socket","title":"\u901a\u7528socket\u5730\u5740","text":"<pre><code>#include &lt;bits/socket.h&gt;\n\n// \u901a\u7528\u5957\u63a5\u5b57\u5730\u5740\u7c7b\u578b\n//  sa_family - \u5730\u5740\u65cf\u7c7b\u578b\n//  \u5957\u63a5\u5b57\u51fd\u6570\u9700\u8981\u652f\u6301\u4e0d\u540c\u534f\u8bae\u65cf\u7684\u5957\u63a5\u5b57\u5730\u5740\u7ed3\u6784\uff0c\u56e0\u6b64\u5b9a\u4e49\u4e86\u901a\u7528\u5730\u5740\u7ed3\u6784`sockaddr`\u4ee5\u63a5\u53d7\u4efb\u4f55\u534f\u8bae\u7684\u6307\u9488\u53c2\u6570\u3002\n//  \u4f8b\u5982\uff0c`int bind(int, struct sockaddr *, socklen_t)`\u51fd\u6570\u7684\u7b2c\u4e8c\u4e2a\u53c2\u6570\u63a5\u53d7IPv4\u534f\u8bae\u5730\u5740\u65f6\uff0c\u9700\u8981\u5982\u4e0b\u5f3a\u5236\u8f6c\u6362\uff1a\n//      struct sockaddr_in serv;\n//      bind(sockfd, (struct sockaddr *)&amp;serv, sizeof(serv));\nstruct sockaddr\n{\n    sa_family_t sa_family;\n    char sa_data[14];\n}\n\n// 14\u5b57\u8282\u7684`sockaddr.sa_data`\u4e0d\u8db3\u4ee5\u5bb9\u7eb3\u591a\u6570\u534f\u8bae\u65cf\u7684\u5730\u5740\u503c\uff0c\u56e0\u6b64Linux\u5b9a\u4e49\u4e86`sockaddr_storage`\u7528\u4e8e\u771f\u6b63\u7684\u5b58\u50a8\u7a7a\u95f4\nstruct sockaddr_storage\n{\n    sa_family_t sa_family;\n    unsigned long int __ss_align;\n    char __ss_padding[128-sizeof(__ss_align)];\n}\n</code></pre> <p>\u4e0d\u540c\u5957\u63a5\u5b57\u5730\u5740\u7ed3\u6784\u7684\u6bd4\u8f83\u5982\u4e0b\uff1a</p> <p></p>"},{"location":"booknotes/hplsp/socket/#ipv4-socket","title":"IPv4 socket\u5730\u5740","text":"<p>TCP/IPv4\u534f\u8bae\u65cf\u7684socket\u5730\u5740\u7ed3\u6784<code>sockaddr_in</code>\u5982\u4e0b\uff1a <pre><code>struct sockaddr_in\n{\n    sa_family_t sin_family; // \u5730\u5740\u65cf\uff1aAF_INET\n    u_int16_t sin_port;     // \u7aef\u53e3\u53f7\uff0c\u8981\u7528\u7f51\u7edc\u5b57\u8282\u5e8f(\u5927\u7aef)\u8868\u793a\n    struct in_addr sin_addr;// IPv4\u5730\u5740\u7ed3\u6784\u4f53\n};\n\nstruct in_addr\n{\n    u_int32_t s_addr;       // IPv4\u5730\u5740\uff0c\u8981\u7528\u7f51\u7edc\u5b57\u8282\u5e8f(\u5927\u7aef)\u8868\u793a\n};\n</code></pre></p> <p>\u4eba\u4eec\u4e60\u60ef\u7528\u5b57\u7b26\u4e32\u6765\u8868\u793aIP\u5730\u5740\uff0c\u4e0b\u9762\u7684\u51fd\u6570\u53ef\u7528\u4e8e\u201c\u7528\u70b9\u5206\u5341\u8fdb\u5236\u5b57\u7b26\u4e32\u8868\u793a\u7684IPv4\u5730\u5740\u201d\u548c\u201c\u7528\u7f51\u7edc\u5b57\u8282\u5e8f\u6574\u6570\u8868\u793a\u7684IPv4\u5730\u5740\u201d\u4e4b\u95f4\u7684\u8f6c\u6362\uff1a <pre><code>#include &lt;arpa/inet.h&gt;\n\n// \u5c06\u7528\u70b9\u5206\u5341\u8fdb\u5236\u5b57\u7b26\u4e32\u7684IPv4\u5730\u5740\u8f6c\u6362\u4e3a\u7f51\u7edc\u5b57\u8282\u5e8f\u6574\u6570\u8868\u793a\u7684\u5730\u5740\nin_addr_t inet_addr(const char* strptr);\n\n// \u548cinet_addr\u529f\u80fd\u4e00\u6837\uff0c\u4f46\u5c06\u7ed3\u679c\u5b58\u4e8einp\u6307\u5411\u7684\u7ed3\u6784\u4e2d\uff0c\u6210\u529f\u8fd4\u56de1\nint inet_aton(const char* cp, struct in_addr* inp);\n\n// \u5c06\u7f51\u7edc\u5b57\u8282\u5e8f\u6574\u6570\u8868\u793a\u7684IPv4\u5730\u5740\u8f6c\u5316\u4e3a\u7528\u70b9\u5206\u5341\u8fdb\u5236\u5b57\u7b26\u4e32\u7684IPv4\u5730\u5740\nchar* inet_ntoa(struct in_addr in);\n\n// inet_aton\u7684\u901a\u7528\u7248\u672c\uff0c\u4e5f\u53ef\u7528\u4e8eIPv6\u7684\u5730\u5740\u8f6c\u6362\nint inet_pton(int af, const char* src, void* dst);\n\n// inet_ntoa\u7684\u901a\u7528\u7248\u672c\uff0c\u4e5f\u53ef\u7528\u4e8eIPv6\u7684\u5730\u5740\u8f6c\u6362\uff0c\u6210\u529f\u8fd4\u56de\u6307\u5411dst\u7684\u6307\u9488\nconst char* inet_ntop(int af, const void* src, char* dst, socklen_t cnt);\n</code></pre></p> <p>\u4f8b\u5b50\"addr_conv\"\u5229\u7528\u4e0a\u9762\u7684\u51fd\u6570\uff0c\u5b8c\u6210\u4e86IPv4\u5b57\u7b26\u4e32\u5730\u5740\u548c\u7f51\u7edc\u5b57\u8282\u5730\u5740\u7684\u8f6c\u6362\uff1a <pre><code>#define IP_STR \"192.0.2.33\"\n\nint main()\n{\n   struct sockaddr_in sa;\n   char str[INET_ADDRSTRLEN];\n\n   memset(&amp;sa, 0, sizeof(sa));\n   inet_pton(AF_INET, IP_STR, &amp;(sa.sin_addr));\n   inet_ntop(AF_INET, &amp;(sa.sin_addr), str, INET_ADDRSTRLEN);\n   printf(\"[inet_pton/inet_ntop] convert between %d and %s\\n\", sa.sin_addr.s_addr, str);\n\n   memset(&amp;sa, 0, sizeof(sa));\n   inet_aton(IP_STR, &amp;(sa.sin_addr));\n   // ip\u6307\u5411inet_ntoa\u5185\u90e8\u7684\u4e00\u4e2a\u9759\u6001\u53d8\u91cf\uff0c\u56e0\u6b64inet_ntoa\u4e0d\u53ef\u91cd\u5165\n   char* ip = inet_ntoa(sa.sin_addr);\n   printf(\"[inet_addr/inet_aton/inet_ntoa] convert between %d(%d) and %s\\n\", inet_addr(IP_STR), sa.sin_addr.s_addr, ip);\n\n   return 0;\n}\n</code></pre> <pre><code>&gt; ./main\n[inet_pton/inet_ntop] convert between 553779392 and 192.0.2.33\n[inet_addr/inet_aton/inet_ntoa] convert between 553779392(553779392) and 192.0.2.33\n</code></pre></p>"},{"location":"booknotes/hplsp/socket/#_3","title":"\u540d\u5b57\u4e0e\u5730\u5740\u7684\u8f6c\u6362","text":"<p>Linux\u63d0\u4f9b\u4e86<code>getaddrinfo()</code>\u548c<code>getnameinfo()</code>\u7528\u4e8e\u4e3b\u673a\u540d\u548cIP\u5730\u5740\u4e4b\u95f4\u7684\u8f6c\u6362\uff1a <pre><code>#include &lt;netdb.h&gt;\n\n// \u6839\u636e\u4e3b\u673a\u540d/\u670d\u52a1\u540d\uff0c\u83b7\u5f97\u4e3b\u673a\u6216\u8005\u670d\u52a1\u7684\u5730\u5740\u4fe1\u606f\uff0c\u662f\u5bf9`gethostbyname`\u548c`getservbyname`\u7684\u5c01\u88c5\n//  hints - \u53ef\u8bbe\u7f6eai_flags, ai_family, ai_socktype, ai_protocol\uff0c\u5176\u4ed6\u5fc5\u987b\u4e3aNULL\n//  res - \u8fd4\u56de\u7684\u67e5\u8be2\u7ed3\u679c\uff0c\u7531\u4e8e\u4e00\u4e2a\u4e3b\u673a\u540d\u53ef\u80fd\u5bf9\u5e94\u591a\u4e2aIP\u5730\u5740\uff0c\u56e0\u6b64res\u662f\u4e00\u4e2a\u94fe\u8868\nint getaddrinfo(const char *restrict node,\n    const char *restrict service,\n    const struct addrinfo *restrict hints,\n    struct addrinfo **restrict res);\n\n// \u9500\u6bc1`getaddrinfo`\u8fd4\u56de\u7684res\nvoid freeaddrinfo(struct addrinfo *res);\n\n// hints\u548c\u8fd4\u56de\u7ed3\u679c\u7684\u7ed3\u6784\nstruct addrinfo\n{\n    int ai_flags;       // \u63a7\u5236`hints`\u884c\u4e3a\uff0c\u5982\u914d\u7f6e\u4e3a`AI_CANONNAME`\uff0c\u4f1a\u8fd4\u56de\u4e3b\u673a\u540d\n    int ai_family;      // \u5730\u5740\u7c07\uff0cAF_INET/AF_INET5/AF_UNIX\n    int ai_socktype;    // \u670d\u52a1\u7c7b\u578b\uff0cSOCK_STREAM/SOCK_DGRAM\n    int ai_protocol;    // \u7f51\u7edc\u534f\u8bae\uff0c\u901a\u5e38\u4e3a\u96f6\uff0c\u9700\u8981\u548c`ai_family`\u7684\u503c\u914d\u5957\n    socklen_t ai_addrlen;\n    char* ai_canonname; // \u4e3b\u673a\u7684\u522b\u540d\n    struct sockaddr* ai_addr;\n    struct addrinfo* ai_next;\n};\n\n// \u6839\u636e\u4e3b\u673a/\u670d\u52a1\u5730\u5740\u4fe1\u606f\uff0c\u83b7\u5f97\u4ee5\u5b57\u7b26\u4e32\u8868\u793a\u7684\u4e3b\u673a/\u670d\u52a1\u540d\uff0c\u662f\u5bf9`gethostbyaddr`\u548c`getservbyport`\u7684\u5c01\u88c5\nint getnameinfo(const struct sockaddr *restrict addr, socklen_t addrlen,\n    char *restrict host, socklen_t hostlen,\n    char *restrict serv, socklen_t servlen, int flags);\n</code></pre></p> <p>\u4f8b\u5b50\"addr_name\"\u5229\u7528\u4e0a\u9762\u7684\u51fd\u6570\uff0c\u5b8c\u6210\u4e86\u4e3b\u673a\u540d\u548cIP\u5730\u5740\u4e4b\u95f4\u7684\u8f6c\u6362\uff1a <pre><code>#define TEST_HOSTNAME \"www.baidu.com\"\n#define TEST_IP \"142.250.194.100\"\n\nvoid test_getaddrinfo()\n{\n   printf(\"[getaddrinfo]: %s\\n\", TEST_HOSTNAME);\n\n   struct addrinfo hints;\n   struct addrinfo *result;\n\n   memset(&amp;hints, 0, sizeof(struct addrinfo));\n   hints.ai_flags = AI_CANONNAME; // \u914d\u7f6e\u8fd4\u56de\u4e3b\u673a\u540d\u5230\u7b2c\u4e00\u4e2a\u7ed3\u679c\u4e2d\uff0c\u5426\u5219\u4e0d\u8fd4\u56de\u4e3b\u673a\u540d\n   hints.ai_family = AF_INET;\n   hints.ai_socktype = SOCK_STREAM;\n\n   getaddrinfo(TEST_HOSTNAME, NULL, &amp;hints, &amp;result);\n\n   printf(\"  Host name: %s\\n\", result-&gt;ai_canonname);\n   printf(\"  Address type: %s\\n\", (result-&gt;ai_family == AF_INET) ? \"AF_INET\" : \"Unknown\");\n   char str[INET_ADDRSTRLEN];\n   printf(\"  Address(es): \");\n   for (struct addrinfo *rp = result; rp != NULL; rp = rp-&gt;ai_next)\n   {\n      struct sockaddr_in *p_sockaddr = (struct sockaddr_in *)rp-&gt;ai_addr;\n      inet_ntop(rp-&gt;ai_family, &amp;(p_sockaddr-&gt;sin_addr), str, INET_ADDRSTRLEN);\n      printf(\" %s\", str);\n   }\n   printf(\"\\n\");\n\n   freeaddrinfo(result);\n}\n\nvoid test_getnameinfo()\n{\n   struct sockaddr_in sa;\n   memset(&amp;sa, 0, sizeof(sa));\n   sa.sin_family = AF_INET;\n   inet_aton(TEST_IP, &amp;(sa.sin_addr));\n\n   printf(\"[getnameinfo]: %s\\n\", inet_ntoa(sa.sin_addr));\n   char host[NI_MAXHOST];\n   getnameinfo((struct sockaddr *)&amp;sa, sizeof(struct sockaddr), host, NI_MAXHOST, nullptr, 0, NI_NAMEREQD);\n   printf(\"  Host name: %s\\n\", host);\n}\n</code></pre> <pre><code>&gt; ./main \n[getaddrinfo]: www.baidu.com\n  Host name: www.wshifen.com\n  Address type: AF_INET\n  Address(es):  104.193.88.77 104.193.88.123\n[getnameinfo]: 142.250.194.100\n  Host name: del12s04-in-f4.1e100.net\n</code></pre></p>"},{"location":"booknotes/hplsp/socket/#_4","title":"\u5957\u63a5\u5b57\u7f16\u7a0b","text":""},{"location":"booknotes/hplsp/socket/#tcp","title":"TCP\u5957\u63a5\u5b57","text":"<p>\u5982\u4e0a\u56fe\u6240\u793a\uff0c\u5ba2\u6237\u7aef\u548c\u670d\u52a1\u7aef\u7ecf\u8fc7\u4e00\u4e9b\u5217\u7684socket API\u8c03\u7528\uff0c\u6700\u7ec8\u5404\u81ea\u62e5\u6709\u4e86\u4e00\u4e2a\u53ef\u4ee5\u8bfb\u5199\u7684\u6587\u4ef6\u63cf\u8ff0\u7b26\u3002\u6b64\u540e\uff0c\u5c31\u53ef\u4ee5\u901a\u8fc7<code>read/write</code>\u51fd\u6570\u50cf\u8bbf\u95ee\u6587\u4ef6\u4e00\u6837\uff0c\u5728\u5ba2\u6237\u7aef\u548c\u670d\u52a1\u5668\u4e4b\u95f4\u8fdb\u884c\u6570\u636e\u7684\u4f20\u8f93\u3002\u540c\u65f6\uff0c\u670d\u52a1\u7aef\u4e0d\u4ec5\u521b\u5efa\u4e86\u4e00\u4e2a\u548c\u5ba2\u6237\u7aef\u8fde\u63a5\u7684socket\uff0c\u8fd8\u6253\u5f00\u4e86\u4e00\u4e2a\u76d1\u542csocket\uff0c\u7528\u4e8e\u76d1\u542c\u65b0\u7684\u5ba2\u6237\u7aef\u8fde\u63a5\u3002</p> <p>\u4f8b\u5b50\"tcp_sc\"\u5b9e\u73b0\u4e86\u5ba2\u6237\u7aef\u5411\u670d\u52a1\u7aef\u4f20\u9012\"Hello World\"\u5b57\u7b26\u4e32\u7684\u529f\u80fd\uff1a</p> ServerClient <pre><code>int main(int argc, char *argv[])\n{\n    ...\n    printf(\"[Server] Start server at %s:%d\\n\", ip, port);\n\n    struct sockaddr_in address;\n    bzero(&amp;address, sizeof(address));\n    address.sin_family = AF_INET;\n    inet_pton(AF_INET, ip, &amp;address.sin_addr);\n    address.sin_port = htons(port);\n\n    // 1. create server socket\n    int sock = socket(AF_INET, SOCK_STREAM, 0);\n    // 2. bind server socket to the address and port\n    bind(sock, (struct sockaddr *)&amp;address, sizeof(address));\n    // 3. listen at client's connection\n    listen(sock, 5);\n\n    struct sockaddr_in client;\n    socklen_t client_len = sizeof(client);\n    printf(\"[Server] Waiting for connection...\\n\");\n    // 4. accept a connection from client, and create connection socket\n    int connfd = accept(sock, (struct sockaddr *)&amp;client, &amp;client_len);\n    printf(\"[Server] Connection %d is created\\n\", connfd);\n\n    // 5. read/write with connection socket\n    char buffer[BUFFER_SIZE];\n    memset(buffer, '\\0', BUFFER_SIZE);\n    printf(\"[Server] Dump data from client...\\n\");\n    while (1)\n    {\n        int n_bytes = read(connfd, buffer, BUFFER_SIZE - 1);\n        if (n_bytes == 0)\n        {\n            printf(\"\\n[Server] Remote client socket was closed\\n\");\n            break;\n        }\n        for (int i = 0; i &lt; n_bytes; i++)\n            printf(\"%c\", buffer[i]);\n    }\n\n    printf(\"[Server] Close connection %d and listen socket %d\\n\", connfd, sock);\n    close(connfd);\n    close(sock);\n    return 0;\n}\n</code></pre> <pre><code>&gt; ./server 127.0.0.1 1234\n[Server] Start server at 127.0.0.1:1234\n[Server] Waiting for connection...\n[Server] Connection 4 is created\n[Server] Dump data from client...\nHello World\n[Server] Remote client socket was closed\n[Server] Close connection socket 4 and listen socket 3\n</code></pre> <pre><code>int main(int argc, char *argv[])\n{\n    ...\n    printf(\"[Client] Connect to server %s:%d\\n\", ip, port);\n\n    sockaddr_in server_address;\n    bzero(&amp;server_address, sizeof(server_address));\n    server_address.sin_family = AF_INET;\n    inet_pton(AF_INET, ip, &amp;server_address.sin_addr);\n    server_address.sin_port = htons(port);\n\n    // 1. create client socket\n    int sock = socket(AF_INET, SOCK_STREAM, 0);\n    // 2. connect to server address and port\n    connect(sock, (struct sockaddr *)&amp;server_address, sizeof(server_address));\n    printf(\"[Client] Connected socket %d to the server\\n\", sock);\n\n    // 3. read/write with the client socket\n    char buffer[] = \"Hello World\";\n    printf(\"[Client] Send '%s' to server\\n\", buffer);\n    send(sock, buffer, sizeof(buffer), 0);\n\n    printf(\"[Client] Close the socket %d\\n\", sock);\n    close(sock);\n    return 0;\n}\n</code></pre> <pre><code>&gt; ./client 127.0.0.1 1234\n[Client] Connect to server 127.0.0.1:1234\n[Client] Connected socket 3 to the server\n[Client] Send 'Hello World' to server\n[Client] Close the socket 3\n</code></pre>"},{"location":"booknotes/hplsp/socket/#socket_1","title":"socket\u8fde\u63a5\u548c\u4e09\u6b21\u63e1\u624b","text":"<p>\"TCP/IP\u534f\u8bae\"\u4e00\u6587\u4e2d\u4ecb\u7ecd\u4e86TCP\u8fde\u63a5\u7684\u201c\u4e09\u6b21\u63e1\u624b\u201d\u8fc7\u7a0b\u3002\u90a3\u4e48\uff0c\u901a\u8fc7<code>socket API</code>\u521b\u5efaTCP\u8fde\u63a5\u7684\u8fc7\u7a0b\u548c\u201c\u4e09\u6b21\u63e1\u624b\u201d\u7684\u5bf9\u5e94\u5173\u7cfb\u662f\u5982\u4f55\u7684\uff1f\u51fd\u6570\u8c03\u7528\u8fc7\u7a0b\u4e2dsocket\u7684\u72b6\u6001\u53c8\u662f\u600e\u4e48\u53d8\u5316\u7684\uff1f\u4e0b\u56fe\u7ed9\u51fa\u4e86\u7b54\u6848\uff1a</p> <p></p> <p>\u201c\u4e09\u6b21\u63e1\u624b\u201d\u8fc7\u7a0b\u53d1\u751f\u5728<code>connect()</code>\u548c<code>accept()</code>\u7684\u963b\u585e\u8c03\u7528\u8fc7\u7a0b\u4e2d\uff1a</p> <ul> <li><code>connect()</code>\u7684\u8c03\u7528\u53d1\u8d77\u7b2c\u4e00\u6b21\u63e1\u624b\u52a8\u4f5c\uff0c\u5e76\u5c06\u5ba2\u6237\u7aefsocket\u72b6\u6001\u53d8\u4e3a<code>SYN_SENT</code>\u72b6\u6001</li> <li><code>accept()</code>\u63a5\u6536\u5230\u7b2c\u4e00\u6b21\u63e1\u624b\u52a8\u4f5c\u540e\uff0c\u4f1a\u521b\u5efa\u4e00\u4e2a<code>SYN_RCVD</code>\u72b6\u6001\u7684\u670d\u52a1\u7aefsocket\u5230\u7531\u5185\u6838\u7ef4\u62a4\u7684<code>SYN</code>\u961f\u5217\u4e2d\uff0c\u5e76\u53d1\u9001\u7b2c\u4e8c\u6b21\u63e1\u624b\u52a8\u4f5c</li> <li><code>connect()</code>\u6536\u5230\u7b2c\u4e8c\u6b21\u63e1\u624b\u52a8\u4f5c\u540e\uff0c\u5c06\u5ba2\u6237\u7aefsocket\u72b6\u6001\u53d8\u4e3a<code>ESTABLISHED</code>\uff0c\u5e76\u53d1\u9001\u7b2c\u4e09\u6b21\u63e1\u624b\u52a8\u4f5c</li> <li><code>accept()</code>\u6536\u5230\u7b2c\u4e09\u6b21\u63e1\u624b\u52a8\u4f5c\u540e\uff0c\u5c06\u670d\u52a1\u7aefsocket\u4ece<code>SYN</code>\u961f\u5217\u4e2d\u53d6\u51fa\uff0c\u653e\u5165<code>ACCEPT</code>\u961f\u5217\u4e2d\uff0c\u5e76\u5c06\u72b6\u6001\u53d8\u6210<code>ESTABLISHED</code></li> <li>\u6700\u540e\u5e94\u7528\u7a0b\u5e8f\u4ece<code>ACCEPT</code>\u961f\u5217\u4e2d\u53d6\u51fa\u5df2\u5b8c\u6210\u8fde\u63a5\u7684\u670d\u52a1\u7aefsocket</li> </ul> <p></p> <p>\u4e0a\u56fe\u662f\u4eceLinux\u5185\u6838\u7684\u89d2\u5ea6\uff0c\u770b<code>accept()</code>\u521b\u5efa\u670d\u52a1\u7aef\u8fde\u63a5\u7684\u8fc7\u7a0b\u3002\u5728TCP\u4e09\u6b21\u63e1\u624b\u7684\u65f6\u5019\uff0cLinux\u5185\u6838\u4f1a\u7ef4\u62a4\u4e24\u4e2a\u961f\u5217\uff08\u8be6\u60c5\u53ef\u53c2\u8003\u6587\u6863\uff09\uff1a</p> <ul> <li>\u534a\u8fde\u63a5\u961f\u5217\uff0c\u4e5f\u79f0<code>SYN</code>\u961f\u5217<ul> <li>\u6700\u5927\u957f\u5ea6\u7531<code>/proc/sys/net/ipv4/tcp_max_syn_backlog</code>\u51b3\u5b9a</li> </ul> </li> <li>\u5168\u8fde\u63a5\u961f\u5217\uff0c\u4e5f\u79f0<code>ACCEPT</code>\u961f\u5217<ul> <li>\u6700\u5927\u957f\u5ea6\u7531<code>listen()</code>\u7684\u7b2c\u4e8c\u4e2a\u53c2\u6570<code>backlog</code>\u51b3\u5b9a</li> </ul> </li> </ul> <p>\u901a\u8fc7\u5bf9\u4f8b\u5b50\"tcp_sc\"\u7684\u8c03\u8bd5\uff0c\u6211\u4eec\u53ef\u4ee5\u5f97\u5230\u5ba2\u6237\u7aef<code>connect()</code>\u8c03\u7528\u524d\u540e\u5957\u63a5\u5b57\u7684\u72b6\u6001\uff1a</p> <ul> <li>\u5ba2\u6237\u7aef<code>connect()</code>\u8c03\u7528\u524d<ul> <li>\u670d\u52a1\u7aef\u963b\u585e\u5728<code>accept()</code>\u8c03\u7528\uff0c\u53ea\u5b58\u5728\u4e00\u4e2a\u670d\u52a1\u7aef\u7684<code>LISTEN Socket</code>(port:1234)</li> </ul> </li> <li>\u5ba2\u6237\u7aef<code>connect()</code>\u8c03\u7528\u540e<ul> <li>\u5ba2\u6237\u7aef\u521b\u5efa\u4e86\u4e00\u4e2a<code>ESTABLISHED Socket</code>(port:38192)</li> <li>\u670d\u52a1\u7aef\u521b\u5efa\u4e86\u4e00\u4e2a<code>ESTABLISHED Socket</code>(port:1234)</li> </ul> </li> </ul> <pre><code># client connect\u8c03\u7528\u4e4b\u524d\uff0c\u53ea\u5b58\u5728\u4e00\u4e2a\u76d1\u542csocket\n&gt; sudo netstat -ntap | grep -e 'server' -e 'client'\ntcp        0      0 127.0.0.1:1234          0.0.0.0:*               LISTEN      12773/./server \n\n# client connect\u8c03\u7528\u4e4b\u540e\uff0c\u591a\u4e86\u4e24\u4e2aESTABLISHED\u72b6\u6001\u7684socket\n&gt; sudo netstat -ntap | grep -e 'server' -e 'client'\ntcp        0      0 127.0.0.1:1234          0.0.0.0:*               LISTEN      12773/./server      \ntcp        0      0 127.0.0.1:1234          127.0.0.1:38192         ESTABLISHED 12773/./server      \ntcp        0      0 127.0.0.1:38192         127.0.0.1:1234          ESTABLISHED 13720/client\n</code></pre>"},{"location":"booknotes/hplsp/tcp_ip/","title":"TCP/IP\u534f\u8bae","text":"<p>\u300aLinux\u9ad8\u6027\u80fd\u670d\u52a1\u5668\u7f16\u7a0b\u300b - \u6e38\u53cc \u7684\u7b2c1\u30012\u30013\u7ae0\uff0c\u300aUNIX\u7f51\u7edc\u7f16\u7a0b\u53771\u300b - \u7b2c\u4e09\u7248 \u7684\u7b2c2\u7ae0\uff0c\u4ee5\u53ca\u300a\u5c0f\u6797coding - TCP\u7bc7\u300b\u7684\u8bfb\u4e66\u7b14\u8bb0\uff0c\u672c\u6587\u4e2d\u7684\u6240\u6709\u4ee3\u7801\u53ef\u5728GitHub\u4ed3\u5e93\u4e2d\u627e\u5230</p>"},{"location":"booknotes/hplsp/tcp_ip/#tcp","title":"TCP\u57fa\u7840","text":"<ul> <li>\u5e8f\u5217\u53f7(SYN)<ul> <li>\u7528\u6765\u89e3\u51b3\u7f51\u7edc\u5305\u4e71\u5e8f\u7684\u95ee\u9898\uff0c\u521d\u59cb\u503c\u4e3a\u4e00\u4e2a\u968f\u673a\u6570\uff0c\u968f\u540e\u6bcf\u53d1\u9001\u4e00\u6b21\uff0c\u52a0\u4e00</li> </ul> </li> <li>\u786e\u8ba4\u5e94\u7b54\u53f7(ACK)<ul> <li>\u7528\u6765\u89e3\u51b3\u4e22\u5305\u95ee\u9898\uff0c\u6307\u4e0b\u4e00\u6b21\u671f\u671b\u6536\u5230\u7684\u6570\u636e\u7684\u5e8f\u5217\u53f7\uff0c\u53ef\u786e\u8ba4\u6b64\u5e8f\u5217\u53f7\u524d\u9762\u7684\u6570\u636e\u90fd\u5df2\u7ecf\u88ab\u6b63\u5e38\u63a5\u6536</li> </ul> </li> <li>\u63a7\u5236\u4f4d<ul> <li>ACK - \u786e\u8ba4\u5e94\u7b54\uff0c\u9664\u4e86\u6700\u521d\u5efa\u7acb\u8fde\u63a5\u7684<code>SYN</code>\u5305\u4ee5\u5916\uff0c\u6b64\u63a7\u5236\u4f4d\u90fd\u5fc5\u987b\u7f6e1</li> <li>RST - \u5f3a\u5236\u65ad\u5f00\u8fde\u63a5</li> <li>SYN - \u5e0c\u671b\u5efa\u7acb\u8fde\u63a5</li> <li>FIN - \u5e0c\u671b\u65ad\u5f00\u8fde\u63a5</li> </ul> </li> <li>\u7a97\u53e3\u5927\u5c0f<ul> <li>\u7528\u6765\u505a\u6d41\u91cf\u63a7\u5236\uff0c\u8868\u793a\u63a5\u6536\u65b9\u8fd8\u80fd\u5bb9\u7eb3\u591a\u5c11\u5b57\u8282\u7684\u6570\u636e</li> </ul> </li> </ul>"},{"location":"booknotes/hplsp/tcp_ip/#_1","title":"\u4e09\u6b21\u63e1\u624b","text":"<p>\u5982\u4e0a\u56fe\u6240\u793a\uff0c\u901a\u8fc7\u4e09\u4e2aTCP\u62a5\u6587\uff0c\u5c31\u80fd\u5efa\u7acb\u4e00\u4e2aTCP\u8fde\u63a5\uff0c\u5e38\u79f0\u4e3a\u4e09\u6b21\u63e1\u624b\uff1a</p> <ul> <li>SYN\u62a5\u6587<ul> <li>\u5ba2\u6237\u7aef\u53d1\u8d77\u8fde\u63a5\u8bf7\u6c42\uff0c\u5e76\u5e26\u5ba2\u6237\u7aef\u5e8f\u5217\u53f7<code>client_isn</code> </li> </ul> </li> <li>SYN+ACK\u62a5\u6587<ul> <li>\u670d\u52a1\u7aef\u5e94\u7b54\u5ba2\u6237\u7aef\u5e8f\u5217<code>client_isn+1</code>\uff0c\u5e76\u5e26\u4e0a\u670d\u52a1\u7aef\u5e8f\u5217\u53f7<code>server_isn</code> </li> </ul> </li> <li>ACK\u62a5\u6587<ul> <li>\u5ba2\u6237\u7aef\u5e94\u7b54\u670d\u52a1\u7aef\u5e8f\u5217<code>server_isn+1</code>\uff0c\u5e76\u5e26\u4e0a\u6570\u636e(\u53ef\u9009) </li> </ul> </li> </ul>"},{"location":"booknotes/hplsp/tcp_ip/#_2","title":"\u56db\u6b21\u6325\u624b","text":"<p>\u5982\u4e0a\u56fe\u6240\u793a\uff0c\u9700\u8981\u56db\u4e2aTCP\u62a5\u6587\uff0c\u624d\u80fd\u5b8c\u5168\u65ad\u5f00\u4e00\u4e2aTCP\u8fde\u63a5\uff0c\u5e38\u79f0\u4e3a\u56db\u6b21\u6325\u624b\u3002\u5ba2\u6237\u7aef\u548c\u670d\u52a1\u7aef\u90fd\u53ef\u4ee5\u5148\u53d1\u8d77\u65ad\u5f00\u8bf7\u6c42\uff0c\u6bcf\u4e2a\u65b9\u5411\u90fd\u9700\u8981\u4e00\u4e2a<code>FIN</code>\u62a5\u6587\u548c<code>ACK</code>\u62a5\u6587\uff0c\u5e76\u4e14\u53ea\u6709\u4e3b\u52a8\u5173\u95ed\u7684\u8fde\u63a5\uff0c\u624d\u6709<code>TIME_WAIT</code>\u72b6\u6001\u3002</p> <ul> <li>FIN\u62a5\u6587<ul> <li>\u4e3b\u52a8\u65b9\u53d1\u9001\u65ad\u5f00\u8bf7\u6c42\uff0c\u5e76\u5e26\u4e0a\u4e3b\u52a8\u65b9\u7684<code>SEQ</code>\u548c\u671f\u671b\u7684\u88ab\u52a8\u65b9<code>ACK</code></li> </ul> </li> <li>ACK\u62a5\u6587<ul> <li>\u88ab\u52a8\u65b9\u5e94\u7b54\u4e3b\u52a8\u65b9\u7684\u65ad\u5f00\u8bf7\u6c42\uff0c\u5e76\u5e26\u4e0a\u88ab\u52a8\u65b9\u7684<code>SEQ</code>\u548c\u671f\u671b\u7684\u4e3b\u52a8\u65b9<code>ACK</code></li> </ul> </li> <li>FIN\u62a5\u6587<ul> <li>\u88ab\u52a8\u65b9\u5904\u7406\u5b8c\u672c\u5730\u4e8b\u52a1\u540e\uff0c\u5411\u4e3b\u52a8\u65b9\u53d1\u9001\u65ad\u5f00\u8bf7\u6c42\uff0c\u5e76\u5e26\u4e0a\u6b63\u786e\u7684<code>SEQ</code>\u548c<code>ACK</code></li> </ul> </li> <li>ACK\u62a5\u6587<ul> <li>\u4e3b\u52a8\u65b9\u5e94\u7b54\u88ab\u52a8\u65b9\u7684\u65ad\u5f00\u8bf7\u6c42\uff0c\u5e76\u5e26\u4e0a\u4e3b\u52a8\u65b9\u7684<code>SEQ</code></li> <li>\u5982\u679c<code>SEQ</code>\u662f\u88ab\u52a8\u65b9\u671f\u671b\u7684\uff0c\u88ab\u52a8\u65b9\u8fdb\u5165<code>CLOSE</code>\u72b6\u6001</li> <li>\u4e3b\u52a8\u65b9\u8fd8\u9700\u7b49\u5f85\u4e24\u500d\u7684MSL(\u6700\u5927\u751f\u6210\u65f6\u95f4)\uff0c\u624d\u80fd\u8fdb\u5165<code>CLOSE</code>\u72b6\u6001\uff0c\u4ee5\u4fdd\u8bc1\u6536\u5230\u6765\u81ea\u88ab\u52a8\u65b9\u7684ACK\u62a5\u6587\u4e22\u5931\u8bf7\u6c42\u7684\u65f6\u5019\uff0c\u80fd\u91cd\u53d1</li> </ul> </li> </ul>"},{"location":"booknotes/hplsp/tcp_ip/#_3","title":"\u5934\u90e8\u9009\u9879","text":"<p>\u4e0a\u9762\u7684TCP\u62a5\u6587\u5934\u90e8\u4e2d\uff0c\u6709\u4e00\u4e2a\u53ef\u9009\u7684\u90e8\u5206\uff0c\u662f\u201cTCP\u5934\u90e8\u9009\u9879\u201d\uff0c\u5176\u7ed3\u6784\u5982\u4e0b\uff1a</p> <p></p> <p>\u901a\u8fc7<code>kind</code>\u548c<code>length</code>\u7684\u4e0d\u540c\u7ec4\u5408\uff0cTCP\u62a5\u6587\u53ef\u643a\u5e26\u5404\u79cd\u4e0d\u540c\u7684\u914d\u7f6e\u9009\u9879\u3002\u8fd9\u91cc\u53ea\u4ecb\u7ecd\u201c\u6700\u5927\u62a5\u6587\u6bb5\u957f\u5ea6\u201d\u9009\u9879\uff0c\u5176\u4ed6\u9009\u9879\u4fe1\u606f\u53ef\u53c2\u8003\u300aLinux\u9ad8\u6027\u80fd\u670d\u52a1\u5668\u7f16\u7a0b\u300b\u7684\u7b2c3.2.2\u8282\u3002</p> <p>\u5f53<code>kind=2</code>\u65f6\uff0cTCP\u5934\u90e8\u9009\u9879\u4e3a\u201c\u6700\u5927\u62a5\u6587\u6bb5\u957f\u5ea6\u201d\u9009\u9879\u3002TCP\u8fde\u63a5\u521d\u59cb\u5316(\u540c\u6b65\u62a5\u6587)\u65f6\uff0c\u901a\u4fe1\u53cc\u65b9\u4f7f\u7528\u8be5\u9009\u9879\u6765\u534f\u5546\u6700\u5927\u62a5\u6587\u6bb5\u957f\u5ea6(Max Segment Size, MSS)\u3002\u4e3a\u4e86\u907f\u514d\u53d1\u751fIP\u5206\u7247\uff0cTCP\u6a21\u5757\u901a\u5e38\u5c06MSS\u8bbe\u7f6e\u4e3a<code>(MTU - 40)</code>\u5b57\u8282(20\u5b57\u8282TCP\u5934\u90e8\u548c20\u5b57\u8282IP\u5934\u90e8)\u3002MTU\u548cMSS\u7684\u6982\u5ff5\u5982\u4e0b\uff1a</p> <p></p> <ul> <li>MTU (Max Transmit Unit)<ul> <li>\u5f53IP\u6570\u636e\u62a5\u957f\u5ea6\u8d85\u8fc7MTU\u65f6\uff0c\u5b83\u4f1a\u88ab\u5206\u7247\uff0c\u53ef\u901a\u8fc7<code>ifconfig</code>\u67e5\u770b</li> </ul> </li> <li>MSS (Max Segment Size)<ul> <li>\u9664\u53bbIP\u548cTCP\u5934\u90e8\u4e4b\u540e\uff0c\u4e00\u4e2a\u7f51\u7edc\u5305\u6240\u80fd\u5bb9\u7eb3\u7684TCP\u6570\u636e\u7684\u6700\u5927\u957f\u5ea6</li> </ul> </li> </ul>"},{"location":"booknotes/hplsp/tcp_ip/#tcpdump","title":"tcpdump\u5b9e\u6218","text":"tcpdump\u9009\u9879 \u793a\u4f8b \u8bf4\u660e -i <code>tcpdump -i eth0</code> \u6307\u5b9a\u7f51\u5361\uff0cany\u8868\u793a\u6240\u6709\u7f51\u5361 -nn <code>tcpdump -nn</code> \u4e0d\u89e3\u6790IP\u5730\u5740\u548c\u7aef\u53e3\u53f7\u7684\u540d\u79f0 -c <code>tcpdump -c 5</code> \u9650\u5236\u8981\u6293\u53d6\u7684\u7f51\u7edc\u5305\u7684\u4e2a\u6570 -w <code>tcpdump -w file.pcap</code> \u4fdd\u5b58\u5230\u6587\u4ef6\u4e2d\uff0c\u53ef\u7528<code>wireshark</code>\u6253\u5f00 host, src host, dst host <code>tcpdump -nn host 192.168.1.100</code> \u4e3b\u673a\u8fc7\u6ee4 port, src port, dst port <code>tcpdump -nn port 80</code> \u7aef\u53e3\u8fc7\u6ee4 ip, ip6, arp, tcp, udp, icmp <code>tcpdump -nn tcp</code> \u534f\u8bae\u8fc7\u6ee4 and, or, not <code>tcpdump -nn host 192.168.1.100 and port 80</code> \u903b\u8f91\u8868\u8fbe\u5f0f tcp[tcpflags] <code>tcpdump -nn \"tcp[tcpflags] &amp; (tcp-syn|tcp-ack) != 0\"</code> \u7279\u5b9a\u72b6\u6001\u7684TCP\u5305"},{"location":"booknotes/hplsp/tcp_ip/#_4","title":"\u6b63\u5e38\u8fde\u63a5/\u65ad\u5f00\u5b9e\u9a8c","text":"<p>\u4f8b\u5b50\"tcpdump/normal\"\u6a21\u62df\u4e86\u4e09\u6b21\u63e1\u624b\u548c\u56db\u6b21\u6325\u624b\uff0c\u5176\u4e2d\u5305\u542b\u4e86\u5b9e\u9a8c\u811a\u672c<code>Makefile</code>\u548c\u5b9e\u9a8c\u7ed3\u679c<code>normal.pcap</code>\uff1a</p> ServerClient <pre><code># \u5728\u8fdc\u7aef\u7684\u673a\u5668\u4e0a\u901a\u8fc7`nc`\u547d\u4ee4\u542f\u52a8\u4e00\u4e2aTCP\u670d\u52a1\uff0c\u5047\u8bbe\u5176IP\u662f10.207.83.17\uff0c\u7aef\u53e3\u662f1234\n&gt; nc -lk -p 1234\n</code></pre> <p><pre><code># \u5728\u8fd1\u7aef\u7684\u673a\u5668\u4e0a\u542f\u52a8tcpdump\u76d1\u63a7\uff0c\u5047\u8bbe\u7f51\u5361\u540d\u79f0\u662f\uff1aens33\n&gt; sudo tcpdump -i ens33 tcp and host 10.207.83.17 and port 1234 -w normal.pcap\n</code></pre> <pre><code># \u5728\u8fd1\u7aef\u7684\u673a\u5668\u4e0a\u901a\u8fc7`nc`\u547d\u4ee4\u8fde\u63a5\u670d\u52a1\u5668\uff0c\u5e76\u901a\u8fc7`Ctrl+D`\u76f4\u63a5\u9000\u51fa\n&gt; nc -q 1 10.207.83.17 1234\n</code></pre></p> <p>\u5ba2\u6237\u7aef\u8fde\u63a5\u5230\u670d\u52a1\u5668\u540e\uff0c\u76f4\u63a5\u901a\u8fc7<code>Ctrl+D</code>\u9000\u51fa\u3002<code>tcpdump</code>\u5de5\u5177\u5728\u5ba2\u6237\u7aef\u6293\u53d6\u4e09\u6b21\u63e1\u624b\u548c\u56db\u6b21\u6325\u624b\u7684TCP\u5305\uff0c\u5e76\u8bb0\u5f55\u5728<code>normal.pcap</code>\u6587\u4ef6\u4e2d\u3002\u7528<code>wireshark</code>\u8f6f\u4ef6\u76f4\u63a5\u6253\u5f00<code>tcpdump</code>\u7684\u8f93\u51fa\u7ed3\u679c<code>normal.pcap</code>\uff0c\u5176\u4e2d\u663e\u793a\u7684<code>Seq</code>\u548c<code>Ack</code>\u662f<code>wireshark</code>\u505a\u8fc7\u4f18\u5316\u540e\u7684\u76f8\u5bf9\u503c\uff1a </p>"},{"location":"booknotes/hplsp/tcp_ip/#_5","title":"\u6570\u636e\u4f20\u8f93\u5b9e\u9a8c","text":"<p>\u4f8b\u5b50\"tcpdump/normal\"\u7684\u65b9\u6cd5\u540c\u6837\u53ef\u4ee5\u83b7\u53d6\u5ba2\u6237\u7aef\u548c\u670d\u52a1\u7aef\u4e4b\u95f4\u7684\u6570\u636e\u4f20\u8f93\u5305\u3002<code>transfer.pcap</code>\u8bb0\u5f55\u7684\u6570\u636e\u5305\u62ec\u4e86\uff0c\u5ba2\u6237\u7aef\u5411\u670d\u52a1\u7aef\u53d1\u9001\"hello\"\u5b57\u7b26\u4e32\uff0c\u670d\u52a1\u7aef\u5411\u5ba2\u6237\u7aef\u53d1\u9001\"world\"\u5b57\u7b26\u4e32\uff0c\u56e0\u6b64\u4e0b\u56fe\u4e2d\u9664\u4e86\u6b63\u5e38\u7684\u8fde\u63a5\u540c\u6b65\u5305\u4ee5\u5916\uff0c\u8fd8\u591a\u4e86\u4e24\u4e2a<code>PSH+ACK</code>\u5305\uff1a </p> <p><code>PSH+ACK</code>\u5305\u4e2d\u957f\u5ea6<code>Len</code>\u53d6\u51b3\u4e8e\u9700\u8981\u4f20\u9012\u7684\u6570\u636e\u7684\u5927\u5c0f\u3002\u4f8b\u5982\uff0c\u5ba2\u6237\u7aef\u5411\u670d\u52a1\u7aef\u4f20\u9012\u7684\"hello\"\u5b57\u7b26\u4e32\u9700\u89816\u4e2a\u5b57\u8282\uff0c\u5176\u4e2d\u5305\u62ec\u6700\u540e\u4e00\u4e2a\u6362\u884c\u7b26<code>\\n</code>\u3002\u4e0b\u56fe\u662f\u5ba2\u6237\u7aef\u5411\u670d\u52a1\u7aef\u53d1\u9001\u7684<code>PSH+ACK</code>\u5305\u7684\u4e8c\u8fdb\u5236\u7801\uff1a </p>"},{"location":"booknotes/hplsp/tcp_ip/#_6","title":"\u7b2c\u4e00\u6b21\u63e1\u624b\u5931\u8d25","text":"<p>\u4e3a\u4e86\u6a21\u62dfTCP\u7b2c\u4e00\u6b21\u63e1\u624b<code>SYN</code>\u4e22\u5305\u7684\u60c5\u51b5\uff0c\u53ef\u5229\u7528<code>iptables</code>\u7684<code>INPUT</code>\u89c4\u5219\u5728\u670d\u52a1\u7aef\u8fc7\u6ee4\u6389\u5ba2\u6237\u7aef\u8f93\u5165\u7684\u5305\uff0c<code>iptables</code>\u76f8\u5173\u547d\u4ee4\u53ef\u53c2\u8003\u6587\u6863\u3002\u7f51\u7edc\u5305\u8fdb\u5165\u4e3b\u673a\u540e\u7684\u987a\u5e8f\u5982\u4e0b\uff1a</p> <ul> <li>\u8fdb\u6765\u7684\u987a\u5e8f: Wire -&gt; NIC -&gt; tcpdump -&gt; iptables(INPUT\u89c4\u5219)</li> <li>\u51fa\u53bb\u7684\u987a\u5e8f: iptables(OUTPUT\u89c4\u5219) -&gt; tcpdump -&gt; NIC -&gt; Wire</li> </ul> <p>\u4f8b\u5b50\"tcpdump/1st_handshake\"\u6a21\u62df\u4e86\u7b2c\u4e00\u6b21\u63e1\u624b\u5931\u8d25\uff0c\u4e2d\u5305\u542b\u4e86\u5b9e\u9a8c\u811a\u672c<code>Makefile</code>\u548c\u5b9e\u9a8c\u7ed3\u679c<code>1st_syn_fail.pcap</code>\uff1a</p> ServerClient <pre><code># \u5728\u8fdc\u7aef\u7684\u673a\u5668\u4e0a\u5229\u7528`iptables`\u5de5\u5177\u8fc7\u6ee4\u6389\u7aef\u53e31234\u7684\u5305\n&gt; sudo iptables -A INPUT -p tcp --destination-port 1234 -j DROP\n# \u5728\u8fdc\u7aef\u7684\u673a\u5668\u4e0a\u901a\u8fc7`nc`\u547d\u4ee4\u542f\u52a8\u4e00\u4e2aTCP\u670d\u52a1\uff0c\u5047\u8bbe\u5176IP\u662f10.207.83.17\uff0c\u7aef\u53e3\u662f1234\n&gt; nc -lk -p 1234\n</code></pre> <p><pre><code># \u5728\u8fd1\u7aef\u7684\u673a\u5668\u4e0a\u542f\u52a8tcpdump\u76d1\u63a7\uff0c\u5047\u8bbe\u7f51\u5361\u540d\u79f0\u662f\uff1aens33\n&gt; sudo tcpdump -i ens33 tcp and host 10.207.83.17 and port 1234 -w 1st_syn_fail.pcap\n</code></pre> <pre><code># \u5728\u8fd1\u7aef\u7684\u673a\u5668\u4e0a\u901a\u8fc7`nc`\u547d\u4ee4\u8fde\u63a5\u670d\u52a1\u5668\uff0c\u7531\u4e8e\u65e0\u6cd5\u8fde\u63a5\u670d\u52a1\u5668\uff0c\u4e00\u6bb5\u65f6\u95f4\u540e\u4f1a\u81ea\u884c\u9000\u51fa\n&gt; nc -q 1 10.207.83.17 1234\n</code></pre></p> <p>\u7531\u4e8e\u670d\u52a1\u7aef\u8fc7\u6ee4\u4e86\u5ba2\u6237\u7aef\u53d1\u6765\u7684<code>SYN</code>\u5305\uff0c\u5ba2\u6237\u7aef\u53d1\u8d77\u4e86<code>SYN</code>\u5305\u540e\uff0c\u4e00\u76f4\u6ca1\u6709\u6536\u5230\u670d\u52a1\u7aef\u7684<code>ACK</code>\u5305\uff0c\u6240\u4ee5\u4e00\u76f4\u4f1a\u8d85\u65f6\u91cd\u4f20\uff0c\u5e76\u4e14\u6bcf\u6b21RTO\u8d85\u65f6\u65f6\u95f4\u662f\u4e0d\u540c\u7684(\u5982\u4e0b\u56fe)\uff0c\u540c\u65f6\u5ba2\u6237\u7aef\u91cd\u4f20\u6b21\u6570\u7531<code>/proc/sys/net/ipv4/tcp_syn_retries</code>\u6307\u5b9a\uff1a</p> <p></p>"},{"location":"booknotes/hplsp/tcp_ip/#_7","title":"\u7b2c\u4e8c\u6b21\u63e1\u624b\u5931\u8d25","text":"<p>\u4f8b\u5b50\"tcpdump/2nd_handshake\"\u6a21\u62df\u4e86\u7b2c\u4e8c\u6b21\u63e1\u624b\u5931\u8d25\uff0c\u5176\u4e2d\u5305\u542b\u4e86\u5b9e\u9a8c\u811a\u672c<code>Makefile</code>\u548c\u5b9e\u9a8c\u7ed3\u679c<code>2nd_syn_fail.pcap</code>\uff1a</p> ServerClient <pre><code># \u5728\u8fdc\u7aef\u7684\u673a\u5668\u4e0a\u901a\u8fc7`nc`\u547d\u4ee4\u542f\u52a8\u4e00\u4e2aTCP\u670d\u52a1\uff0c\u5047\u8bbe\u5176IP\u662f10.207.83.17\uff0c\u7aef\u53e3\u662f1234\n&gt; nc -lk -p 1234\n</code></pre> <p><pre><code># \u5728\u8fd1\u7aef\u7684\u673a\u5668\u4e0a\u542f\u52a8tcpdump\u76d1\u63a7\uff0c\u5047\u8bbe\u7f51\u5361\u540d\u79f0\u662f\uff1aens33\n&gt; sudo tcpdump -i ens33 tcp and host 10.207.83.17 and port 1234 -w 2nd_syn_fail.pcap\n</code></pre> <pre><code># \u5728\u8fd1\u7aef\u7684\u673a\u5668\u4e0a\u5229\u7528`iptables`\u5de5\u5177\u8fc7\u6ee4\u6389\u6765\u81ea\u670d\u52a1\u5668\u7684\u5305\n&gt; sudo iptables -I INPUT -s 10.207.83.17 -j DROP\n# \u5728\u8fd1\u7aef\u7684\u673a\u5668\u4e0a\u901a\u8fc7`nc`\u547d\u4ee4\u8fde\u63a5\u670d\u52a1\u5668\uff0c\u7531\u4e8e\u65e0\u6cd5\u6536\u5230\u670d\u52a1\u5668\u7684SYN+ACK\u5305\uff0c\u670d\u52a1\u5668\u4f1a\u4e00\u76f4\u91cd\u4f20SYN+ACK\u5305\n&gt; nc -q 1 10.207.83.17 1234\n</code></pre></p> <p>\u7531\u4e8e\u5ba2\u6237\u7aef\u8fc7\u6ee4\u4e86\u670d\u52a1\u7aef\u53d1\u6765\u7684<code>SYN+ACK</code>\u5305\uff0c\u670d\u52a1\u7aef\u7531\u4e8e\u6ca1\u6709\u6536\u5230\u5bf9<code>SYN+ACK</code>\u5305\u7684\u56de\u590d\uff0c\u4f1a\u8ba4\u4e3a<code>SYN+ACK</code>\u5305\u4e22\u5931\uff0c\u7136\u540e\u8d85\u65f6\u91cd\u4f20<code>SYN+ACK</code>\u5305\uff0c\u540c\u65f6\u670d\u52a1\u7aef\u91cd\u4f20<code>SYN+ACK</code>\u5305\u7684\u6b21\u6570\u7531<code>/proc/sys/net/ipv4/tcp_synack_retries</code>\u6307\u5b9a\uff1a</p> <p></p>"},{"location":"booknotes/ldd/cdev/","title":"\u5b57\u7b26\u8bbe\u5907\u9a71\u52a8","text":"<p>\u300aLinux\u8bbe\u5907\u9a71\u52a8\u7a0b\u5e8f\u300b - \u7b2c\u4e09\u7248 \u7684\u7b2c3\u7ae0\uff0c\u300aLinux\u8bbe\u5907\u9a71\u52a8\u5f00\u53d1\u8be6\u89e3\u300b - \u5b8b\u5b9d\u534e \u7684\u7b2c6\u7ae0\uff0c\u7684\u8bfb\u4e66\u7b14\u8bb0\uff0c\u672c\u6587\u4e2d\u7684\u6240\u6709\u4ee3\u7801\u53ef\u5728GitHub\u4ed3\u5e93\u4e2d\u627e\u5230</p> <p></p>"},{"location":"booknotes/ldd/cdev/#_2","title":"\u8bbe\u5907\u53f7","text":"<ul> <li>\u4e3b\u8bbe\u5907\u53f7<ul> <li>\u6807\u8bc6\u8bbe\u5907\u5bf9\u5e94\u7684\u9a71\u52a8\u7a0b\u5e8f</li> </ul> </li> <li>\u6b21\u8bbe\u5907\u53f7<ul> <li>\u7531\u5185\u6838\u4f7f\u7528\uff0c\u7528\u4e8e\u786e\u5b9a\u8bbe\u5907\u6587\u4ef6(\u901a\u5e38\u4f4d\u4e8e<code>/dev</code>\u76ee\u5f55)\u6240\u6307\u7684\u8bbe\u5907</li> </ul> </li> </ul> <p>\u5728\u5185\u6838\u4e2d\uff0c\u4e3b/\u6b21\u8bbe\u5907\u53f7\u901a\u8fc7<code>MKDEV(int major, int minor)</code>\u751f\u6210<code>dev_t</code>\u7c7b\u578b\u7684\u8bbe\u5907\u7f16\u53f7\uff0c\u5e76\u901a\u8fc7\u4e0b\u9762\u7684\u51fd\u6570\u5b8c\u6210\u5206\u914d/\u91ca\u653e\u8bbe\u5907\u7f16\u53f7\u7684\u5de5\u4f5c\uff1a</p> <p><pre><code>#include &lt;linux/fs.h&gt;\n\n// \u9759\u6001\u5206\u914d\u8bbe\u5907\u7f16\u53f7\uff0c\u7528\u4e8e\u5df2\u77e5\u8d77\u59cb\u8bbe\u5907\u53f7\u7684\u60c5\u51b5\n//  first - \u8981\u5206\u914d\u7684\u8bbe\u5907\u7f16\u53f7\u8303\u56f4\u7684\u8d77\u59cb\u503c\uff0c\u5e38\u8bbe\u7f6e\u4e3a0\n//  count - \u6240\u8bf7\u6c42\u7684\u8fde\u7eed\u8bbe\u5907\u7f16\u53f7\u7684\u4e2a\u6570\uff0c\u6b64\u6570\u503c\u4f1a\u5f71\u54cd\u53ef\u7528\u6b21\u8bbe\u5907\u7f16\u53f7\u7684\u4e2a\u6570\n//  name - \u662f\u548c\u8be5\u7f16\u53f7\u8303\u56f4\u5173\u8054\u7684\u8bbe\u5907\u540d\u79f0\uff0c\u5c06\u51fa\u73b0\u5728`/proc/devices`\u548c`sysfs`\u4e2d\nint register_chrdev_region(dev_t from, unsigned count, const char *name);\n\n// \u52a8\u6001\u5206\u914d\u8bbe\u5907\u7f16\u53f7\uff0c\u7528\u4e8e\u8bbe\u5907\u53f7\u672a\u77e5\uff0c\u5411\u7cfb\u7edf\u52a8\u6001\u7533\u8bf7\u672a\u88ab\u5360\u7528\u7684\u8bbe\u5907\u53f7\u7684\u60c5\u51b5\n//  dev - \u8f93\u51fa\u53c2\u6570\uff0c\u4fdd\u5b58\u8c03\u7528\u5b8c\u6210\u540e\u5206\u914d\u7684\u7b2c\u4e00\u4e2a\u7f16\u53f7\n//  baseminor - \u5e94\u8be5\u8981\u4f7f\u7528\u7684\u88ab\u8bf7\u6c42\u7684\u7b2c\u4e00\u4e2a\u6b21\u8bbe\u5907\u53f7\uff0c\u901a\u5e38\u662f0\n//  count\u548cname - \u548c\u4e0a\u9762\u7684\u51fd\u6570\u4e00\u81f4\nint alloc_chrdev_region(dev_t * dev, unsigned baseminor, unsigned count, const char *name);\n\n// \u91ca\u653e\u8bbe\u5907\u7f16\u53f7\nvoid unregister_chrdev_region (dev_t from, unsigned count);\n</code></pre> \u6a21\u5757\"dev_num\"\u5728\u52a0\u8f7d\u65f6\u5411\u7cfb\u7edf\u7533\u8bf7\u4e86\u4e00\u4e2a\u4e3b\u8bbe\u5907\u53f7<code>111</code>\uff0c\u5728\u5378\u8f7d\u65f6\u91ca\u653e\u4e86\u6b64\u8bbe\u5907\u53f7\uff1a</p> mock.c<pre><code>#define MOCK_MAJOR 111\n\nstatic int mock_init(void)\n{\n   int ret;\n\n   printk(KERN_INFO \"Mock enter\\n\");\n\n   ret = register_chrdev_region(MKDEV(MOCK_MAJOR, 0), 1, \"mock\");\n   if (ret &lt; 0)\n   {\n      printk(KERN_ERR \"Failed to register major number %d for mock module\\n\", MOCK_MAJOR);\n      return ret;\n   }\n\n   printk(KERN_INFO \"Register major number %d for mock module\", MOCK_MAJOR);\n   return 0;\n}\nmodule_init(mock_init);\n\nstatic void mock_exit(void)\n{\n   printk(KERN_INFO \"Mock exit\\n\");\n   unregister_chrdev_region(MKDEV(MOCK_MAJOR, 0), 1);\n}\nmodule_exit(mock_exit);\n</code></pre> <pre><code>&gt; sudo insmod mock.ko\n# \u7533\u8bf7\u7684\u8bbe\u5907\u4f1a\u51fa\u73b0\u5728`/proc/devices`\u4e2d\n&gt; cat /proc/devices | grep mock\n111 mock\n\n&gt; sudo rmmod mock.ko\n&gt; tail -n 3 /var/log/kern.log\nJun 19 21:22:18 ben-vm-base kernel: [213898.642963] Mock enter\nJun 19 21:23:05 ben-vm-base kernel: [213898.642967] Register major number 111 for mock module\nJun 19 21:23:05 ben-vm-base kernel: [213944.901289] Mock exit\n</code></pre>"},{"location":"booknotes/ldd/cdev/#_3","title":"\u5b57\u7b26\u8bbe\u5907\u9a71\u52a8\u7ec4\u6210","text":"<p>\u5b57\u7b26\u8bbe\u5907\u9a71\u52a8\u4e3b\u8981\u6709\u4e24\u90e8\u5206\u7ec4\u6210\uff1a</p> <ul> <li>\u6a21\u5757\u52a0\u8f7d/\u5378\u8f7d\u51fd\u6570<ul> <li>\u5728\u52a0\u8f7d\u51fd\u6570\u4e2d\u5e94\u5b9e\u73b0\u8bbe\u5907\u53f7\u7684\u7533\u8bf7\u548c<code>cdev</code>\u7684\u6ce8\u518c</li> <li>\u5728\u5378\u8f7d\u51fd\u6570\u4e2d\u5e94\u5b9e\u73b0\u8bbe\u5907\u53f7\u7684\u91ca\u653e\u548c<code>cdev</code>\u7684\u6ce8\u9500</li> </ul> </li> <li><code>file_operations</code>\u7ed3\u6784\u4f53\u4e2d\u7684\u6210\u5458\u51fd\u6570<ul> <li>\u5927\u591a\u6570\u5b57\u7b26\u8bbe\u5907\u9a71\u52a8\u4f1a\u5b9e\u73b0<code>read()</code>\uff0c<code>write()</code>\u548c<code>ioctl()</code>\u51fd\u6570</li> </ul> </li> </ul>"},{"location":"booknotes/ldd/cdev/#cdev","title":"<code>cdev</code>\u7ed3\u6784\u4f53","text":"<p>\u5728Linux\u5185\u6838\u4e2d\uff0c\u4f7f\u7528<code>cdev</code>\u7ed3\u6784\u4f53\u63cf\u8ff0\u4e00\u4e2a\u5b57\u7b26\u8bbe\u5907\uff1a</p> <pre><code>#include &lt;linux/cdev.h&gt;\n\nstruct cdev {\n    struct kobject kobj;\n    struct module *owner;\n    const struct file_operations *ops;  // \u6587\u4ef6\u64cd\u4f5c\u7ed3\u6784\u4f53\n    struct list_head list;\n    dev_t dev;                          // \u8bbe\u5907\u53f7\n    unsigned int count;\n};\n\n// \u5411\u5185\u6838\u7533\u8bf7`cdev`\u7a7a\u95f4\nstruct cdev *cdev_alloc(void);\n\n// \u521d\u59cb\u5316`cdev`\u7684\u6210\u5458\uff0c\u5e76\u5efa\u7acb`cdev`\u548c`file_operations`\u4e4b\u95f4\u7684\u8fde\u63a5\nvoid cdev_init(struct cdev * cdev, const struct file_operations * fops);\n\n// \u5411\u7cfb\u7edf\u6dfb\u52a0\u4e00\u4e2a`cdev`\u8bbe\u5907\n//  num - \u8bbe\u5907\u7f16\u53f7\uff0c\u7531\u4e3b/\u6b21\u8bbe\u5907\u53f7\u7ec4\u6210\n//  count - \u548c\u8be5\u8bbe\u5907\u5173\u8054\u7684\u8bbe\u5907\u7f16\u53f7\u7684\u6570\u91cf\uff0c\u5e38\u53d6\u503c1\nint cdev_add(struct cdev *dev, dev_t num, unsigned int count);\n\n// \u4ece\u7cfb\u7edf\u5220\u9664\u4e00\u4e2a`cdev`\u8bbe\u5907\nvoid cdev_del(struct cdev *);\n</code></pre>"},{"location":"booknotes/ldd/cdev/#file_operations","title":"<code>file_operations</code>\u7ed3\u6784\u4f53","text":"<p>\u5411\u7cfb\u7edf\u7533\u8bf7\u4e86\u8bbe\u5907\u7f16\u53f7\u540e\uff0c\u9700\u8981\u5c06\u9a71\u52a8\u7a0b\u5e8f\u64cd\u4f5c\u8fde\u63a5\u5230\u8fd9\u4e9b\u7f16\u53f7\u4e0a\uff0c<code>file_operations</code>\u7ed3\u6784\u5c31\u662f\u7528\u6765\u5efa\u7acb\u8fd9\u79cd\u8fde\u63a5\u7684\u3002</p> <pre><code>#include &lt;linux/fs.h&gt;\n\nstruct file_operations {\n    // \u7528\u4e8e\u4fee\u6539\u6587\u4ef6\u7684\u5f53\u524d\u8bfb\u5199\u4f4d\u7f6e\n    loff_t (*llseek) (struct file *, loff_t, int);\n    // \u4ece\u8bbe\u5907\u4e2d\u8bfb\u53d6\u6570\u636e\n    ssize_t (*read) (struct file *, char __user *, size_t, loff_t *);\n    // \u5411\u8bbe\u5907\u53d1\u9001\u6570\u636e\n    ssize_t (*write) (struct file *, const char __user *, size_t, loff_t *)\uff1b\n    // \u63d0\u4f9b\u8bbe\u5907\u76f8\u5173\u63a7\u5236\u547d\u4ee4\u7684\u5b9e\u73b0\n    long (*unlocked_ioctl) (struct file *, unsigned int, unsigned long);\n    // \u5c06\u8bbe\u5907\u5185\u5b58\u6620\u5c04\u5230\u8fdb\u7a0b\u7684\u865a\u62df\u5730\u5740\u7a7a\u95f4\u4e2d\n    int (*mmap) (struct file *, struct vm_area_struct *);\n    // \u8bbe\u5907\u6587\u4ef6\u6267\u884c\u7684\u7b2c\u4e00\u4e2a\u64cd\u4f5c\uff0c\u63d0\u4f9b\u4e86\u7ed9\u9a71\u52a8\u7a0b\u5e8f\u521d\u59cb\u5316\u7684\u80fd\u529b\n    int (*open) (struct inode *, struct file *);\n    // file\u7ed3\u6784\u88ab\u91ca\u653e\u65f6\uff0c\u5c06\u8c03\u7528\u8fd9\u4e2a\u64cd\u4f5c\n    //  \u4e0d\u662f\u6bcf\u6b21\u8c03\u7528close\u65f6\u90fd\u4f1a\u88ab\u8c03\u7528\uff0c\u53ea\u8981file\u7ed3\u6784\u88ab\u7a7a\u95f2(\u5982fork\u6216dup\u8c03\u7528\u4e4b\u540e)\uff0crelease\u5c31\u4f1a\u7b49\u5230\n    //  \u6240\u6709\u526f\u672c\u90fd\u5173\u95ed\u4e4b\u540e\u624d\u4f1a\u8c03\u7528\n    int (*release) (struct inode *, struct file *);\n    ...\n};\n\n// \u7cfb\u7edf\u4e2d\u6bcf\u4e2a\u6253\u5f00\u7684\u6587\u5728\u5185\u6838\u7a7a\u95f4\u4e2d\u90fd\u6709\u4e00\u4e2a\u5bf9\u5e94\u7684`file`\u7ed3\u6784\nstruct file {\n    struct inode *f_inode;\n    // \u6587\u4ef6\u6a21\u5f0f\n    fmode_t f_mode;\n    // \u6587\u4ef6\u8bfb\u5199\u4f4d\u7f6e\n    loff_t f_pos;\n    // \u53ef\u5728open\u8c03\u7528\u65f6\uff0c\u8d4b\u503c\u6b64\u5b57\u6bb5\u4e3a\u67d0\u4e2a\u5df2\u5206\u914d\u6570\u636e\uff0c\u65b9\u4fbf\u5176\u4ed6\u8c03\u7528\u8bbf\u95ee\n    void *private_data;\n    ...\n};\n\n// \u5bf9\u4e8e\u5355\u4e2a\u6587\u4ef6\u53ef\u80fd\u4f1a\u6709\u591a\u4e2a\u5bf9\u5e94\u7684`file`\u7ed3\u6784\u4f53\uff0c\u4f46\u53ea\u6709\u4e00\u4e2a`inode`\u7ed3\u6784\nstruct inode {\n    // \u8bbe\u5907\u7f16\u53f7\n    dev_t i_rdev;\n    union {\n        // \u5b57\u7b26\u8bbe\u5907\u5185\u90e8\u7ed3\u6784\n        struct cdev *i_cdev;\n        ...\n    };\n}\uff1b\n</code></pre>"},{"location":"booknotes/ldd/cdev/#fops","title":"<code>fops</code>\u64cd\u4f5c","text":"<p><code>file_operations</code>\u7ed3\u6784\u4f53\u4e2d\u7684\u6210\u5458\u51fd\u6570\u662f\u5b57\u7b26\u8bbe\u5907\u9a71\u52a8\u4e0e\u5185\u6838\u865a\u62df\u6587\u4ef6\u7cfb\u7edf\u7684\u63a5\u53e3\uff0c\u662f\u7528\u6237\u7a7a\u95f4\u5bf9Linux\u8fdb\u884c\u7cfb\u7edf\u8c03\u7528\u6700\u7ec8\u7684\u843d\u5b9e\u8005\u3002\u5927\u591a\u6570\u5b57\u7b26\u8bbe\u5907\u9a71\u52a8\u4f1a\u5b9e\u73b0<code>read()</code>\uff0c<code>write()</code>\u548c<code>ioctl()</code>\u51fd\u6570\uff1a</p> <p><pre><code>struct file_operations xxx_fops = {\n    .owner = THIS_MODULE,\n    .read = xxx_read,\n    .write = xxx_write,\n    .unlocked_ioctl= xxx_ioctl,\n    ...\n};\n\nssize_t xxx_read(struct file *filp, char __user *buf, size_t count, loff_t *f_pos)\n{\n    ...\n    copy_to_user(..., buf, ...);\n    ...\n}\n\nssize_t xxx_write(struct file *filp, const char __user *buf, size_t count, loff_t *f_pos)\n{\n    ...\n    copy_from_user(..., buf, ...);\n    ...\n}\n\n// I/O\u63a7\u5236\u51fd\u6570\u7684`cmd`\u53c2\u6570\u4e3a\u5b9e\u73b0\u5b9a\u4e49\u7684I/O\u63a7\u5236\u547d\u4ee4\uff0c\u800c`arg`\u5bf9\u5e94\u4e8e\u8be5\u547d\u4ee4\u7684\u53c2\u6570\nlong xxx_ioctl(struct file *filp, unsigned int cmd, unsigned long arg)\n{\n    ...\n    switch(cmd) {\n    case XXX_CMD1:\n        ...\n        break;\n    case XXX_CMD2:\n        ...\n        break;\n    default:\n        // \u4e0d\u80fd\u652f\u6301\u7684\u547d\u4ee4\n        return -ENOTTY;\n    }\n    return 0;\n}\n</code></pre> <code>read</code>\u548c<code>write</code>\u65b9\u6cd5\u5b8c\u6210\u7684\u4efb\u52a1\u662f\u76f8\u4f3c\u7684\uff0c\u5373\u62f7\u8d1d\u6570\u636e\u5230\u5e94\u7528\u7a0b\u5e8f\u7a7a\u95f4\uff0c\u6216\u4ece\u5e94\u7528\u7a0b\u5e8f\u7a7a\u95f4\u62f7\u8d1d\u6570\u636e\u5230\u5185\u6838\u7a7a\u95f4\u3002<code>read</code>\u548c<code>write</code>\u65b9\u6cd5\u7684<code>buf</code>\u53c2\u6570\u662f\u7528\u6237\u7a7a\u95f4\u7684\u6307\u9488\uff0c\u4e0d\u80fd\u76f4\u63a5\u5728\u5185\u6838\u4e2d\u76f4\u63a5\u5f15\u7528\uff0c\u539f\u56e0\u662f\uff1a</p> <ul> <li>\u5185\u6838\u6a21\u5f0f\u4e2d\u7528\u6237\u7a7a\u95f4\u7684\u6307\u9488\u53ef\u80fd\u662f\u65e0\u6548\u7684</li> <li>\u7528\u6237\u7a7a\u95f4\u7684\u5185\u5b58\u662f\u5206\u9875\u7684\uff0c\u8bbf\u95ee\u65f6\u6709\u53ef\u80fd\u53d1\u751f\u9875\u9519\u8bef\uff0c\u800c\u5185\u6838\u4ee3\u7801\u662f\u4e0d\u5141\u8bb8\u53d1\u751f\u9875\u9519\u8bef\u7684</li> <li>\u4fdd\u62a4\u5185\u6838\u5185\u5b58\uff0c\u9632\u6b62\u7528\u6237\u64cd\u4f5c\u7834\u574f\u5185\u6838</li> </ul> <p>\u56e0\u6b64\uff0c\u53ef\u901a\u8fc7\u4e0b\u9762\u7684\u51fd\u6570\u5b8c\u6210\u5185\u6838\u7a7a\u95f4\u6838\u7528\u6237\u7a7a\u95f4\u7684\u6570\u636e\u4f20\u8f93\uff1a <pre><code>// \u8fde\u7eed\u7a7a\u95f4\nunsigned long copy_from_user(void *to, const void __user *from, unsigned long count);\nunsigned long copy_to_user(void __user *to, const void *from, unsigned long count);\n\n// \u7b80\u5355\u7c7b\u578b\uff0c\u5982\uff1achar, int, long\u7b49\nint val;                    // \u5185\u6838\u7a7a\u95f4\u6574\u578b\u53d8\u91cf\nget_user(val, (int *) arg); // \u7528\u6237\u2192\u5185\u6838\uff0carg\u662f\u7528\u6237\u7a7a\u95f4\u7684\u5730\u5740\nput_user(val, (int *) arg); // \u5185\u6838\u2192\u7528\u6237\uff0carg\u662f\u7528\u6237\u7a7a\u95f4\u7684\u5730\u5740\n</code></pre></p>"},{"location":"booknotes/ldd/cdev/#_4","title":"\u5b57\u7b26\u8bbe\u5907\u9a71\u52a8\u5b9e\u4f8b","text":"<p>\u9a71\u52a8\"cdev_rw\"\u5b9e\u73b0\u4e86\u4e00\u4e2a\u5b57\u7b26\u8bbe\u5907\u9a71\u52a8\u3002\u6b64\u8bbe\u5907\u76f8\u5f53\u4e8e\u4e00\u4e2a\u5168\u5c40\u5185\u5b58\uff0c\u5927\u5c0f\u4e3a<code>GLOBALMEM_SIZE</code> (4KB)\u3002\u9a71\u52a8\u63d0\u4f9b\u4e86\u9488\u5bf9\u8be5\u5185\u5b58\u7684\u8bfb\u5199\u3001\u63a7\u5236\u548c\u5b9a\u4f4d\u51fd\u6570\uff0c\u4ee5\u4f9b\u7528\u6237\u7a7a\u95f4\u7684\u8fdb\u7a0b\u80fd\u901a\u8fc7Linux\u7cfb\u7edf\u8c03\u7528\u83b7\u53d6\u6216\u8bbe\u7f6e\u8fd9\u7247\u5185\u5b58\u7684\u5185\u5bb9\u3002</p>"},{"location":"booknotes/ldd/cdev/#_5","title":"\u6ce8\u518c\u5b57\u7b26\u8bbe\u5907","text":"<p>\u5728\u52a0\u8f7d\u6a21\u5757\u65f6\uff0c\u9700\u8981</p> <ul> <li>\u83b7\u53d6\u8bbe\u5907\u53f7</li> <li>\u6dfb\u52a0\u5b57\u7b26\u8bbe\u5907</li> </ul> <pre><code>#define DEVICE_NUM 2\n#define GMEM_MAJOR 111\n#define GLOBALMEM_SIZE 0x1000\n\nstruct gmem_dev\n{\n   struct cdev cdev;\n   unsigned char mem[GLOBALMEM_SIZE];\n};\nstruct gmem_dev *gmem_devp;\n\nstatic void gmem_setup_cdev(struct gmem_dev *dev, int index)\n{\n   int devno = MKDEV(GMEM_MAJOR, index);\n   cdev_init(&amp;dev-&gt;cdev, &amp;gmem_fops);\n   cdev_add(&amp;dev-&gt;cdev, devno, 1);\n}\n\nstatic int __init gmem_init(void)\n{\n    ...\n    devno = MKDEV(GMEM_MAJOR, 0);\n    ret = register_chrdev_region(devno, DEVICE_NUM, \"gmem\");\n    gmem_devp = kzalloc(sizeof(struct gmem_dev) * DEVICE_NUM, GFP_KERNEL);\n    for (i = 0; i &lt; DEVICE_NUM; i++)\n        gmem_setup_cdev(gmem_devp + i, i);\n\n    return 0;\n}\n</code></pre>"},{"location":"booknotes/ldd/cdev/#_6","title":"\u6dfb\u52a0\u6587\u4ef6\u64cd\u4f5c","text":"<p>\u5728\u901a\u8fc7<code>cdev_add</code>\u6dfb\u52a0\u5b57\u7b26\u8bbe\u5907\u4e4b\u524d\uff0c\u9700\u8981\u901a\u8fc7<code>cdev_init</code>\u521d\u59cb\u5316\u5b57\u7b26\u8bbe\u5907\u7684\u6587\u4ef6\u64cd\u4f5c<code>file_operations</code>\u3002\u9a71\u52a8\"cdev_rw\"\u7684\u6587\u4ef6\u64cd\u4f5c\u5305\u62ec\uff1a</p> <ul> <li><code>gmem_open</code><ul> <li>\u4ece<code>inode</code>\u7ed3\u6784\u4e2d\u83b7\u53d6\u5168\u5c40\u5185\u5b58\uff0c\u5e76\u5b58\u5230<code>filp-&gt;privatre_data</code>\u7ed3\u6784\u4e2d\uff0c\u4fbf\u4e8e\u5176\u4ed6\u51fd\u6570\u62ff\u5230\u5185\u5b58\u4f4d\u7f6e</li> </ul> </li> <li><code>gmem_read</code><ul> <li>\u5c06\u6570\u636e\u4ece\u5168\u5c40\u5185\u5b58\u62f7\u8d1d\u5230\u7528\u6237\u7a7a\u95f4</li> </ul> </li> <li><code>gmem_write</code><ul> <li>\u5c06\u6570\u636e\u4ece\u7528\u6237\u7a7a\u8840\u5199\u9053\u5168\u5c40\u5185\u5b58</li> </ul> </li> <li><code>gmem_llseek</code><ul> <li>\u4fee\u6539\u5168\u5c40\u5185\u5b58\u7684\u5f53\u524d\u8bfb\u5199\u4f4d\u7f6e</li> </ul> </li> </ul> <pre><code>static const struct file_operations gmem_fops = {\n    .owner = THIS_MODULE,\n    .llseek = gmem_llseek,\n    .read = gmem_read,\n    .write = gmem_write,\n    .unlocked_ioctl = gmem_ioctl,\n    .open = gmem_open,\n    .release = gmem_release,\n};\n\nstatic int gmem_open(struct inode *inode, struct file *filp)\n{\n   struct gmem_dev *dev = container_of(inode-&gt;i_cdev, struct gmem_dev, cdev);\n   filp-&gt;private_data = dev;\n   return 0;\n}\n\nstatic long gmem_ioctl(struct file *filp, unsigned int cmd, unsigned long arg)\n{\n   struct gmem_dev *dev = filp-&gt;private_data;\n\n   switch (cmd)\n   {\n   case MEM_CLEAR:\n      memset(dev-&gt;mem, 0, GLOBALMEM_SIZE);\n      printk(KERN_INFO \"gmem is set to zero\\n\");\n      break;\n   default:\n      return -EINVAL;\n   }\n\n   return 0;\n}\n\nstatic ssize_t gmem_read(struct file *filp, char __user *buf, size_t size, loff_t *ppos)\n{\n   struct gmem_dev *dev = filp-&gt;private_data;\n   copy_to_user(buf, dev-&gt;mem + *ppos, size);\n   *ppos += size;\n   return size;\n}\n\nstatic ssize_t gmem_write(struct file *filp, const char __user *buf, size_t size, loff_t *ppos)\n{\n   struct gmem_dev *dev = filp-&gt;private_data;\n   copy_from_user(dev-&gt;mem + *ppos, buf, size);\n   *ppos += size;\n   return size;\n}\n\nstatic loff_t gmem_llseek(struct file *filp, loff_t offset, int whence)\n{\n   loff_t newpos = 0;\n   switch (whence)\n   {\n   case 0: /* SEEK_SET */\n      newpos = offset;\n      break;\n   case 1: /* SEEK_CUR */\n      newpos = filp-&gt;f_pos + offset;\n      break;\n   case 2: /* SEEK_END */\n      newpos = GLOBALMEM_SIZE + offset;\n      break;\n   default:\n      return -EINVAL;\n   }\n   filp-&gt;f_pos = newpos;\n   return newpos;\n}\n</code></pre>"},{"location":"booknotes/ldd/cdev/#_7","title":"\u52a0\u8f7d\u6a21\u5757","text":"<p>\u5229\u7528<code>insmod</code>\u52a0\u8f7d\"gmem\"\u6a21\u5757\u540e\uff0c\u53ef\u901a\u8fc7<code>cat /proc/devices | grep gmem</code>\u67e5\u8be2\u5230\u6b64\u6a21\u5757\u7684\u4e3b\u8bbe\u5907\u53f7\u4e3a\"111\"\u3002\u7136\u540e\uff0c\u9700\u8981\u901a\u8fc7<code>mknod</code>\u547d\u4ee4\u5728<code>/dev</code>\u4e0b\u521b\u5efa\u5bf9\u5e94\u7684\u8bbe\u5907\u8282\u70b9\u3002</p> <pre><code># \u52a0\u8f7d\"gmem.ko\"\u6a21\u5757\n&gt; insmod gmem.ko\n# \u521b\u5efa\u4e3b\u8bbe\u5907\u53f7\u4e3a111\uff0c\u6b21\u8bbe\u5907\u53f7\u4e3a0\u7684\u8bbe\u5907\u8282\u70b9: /dev/gmem0\n&gt; mknod /dev/gmem0 c 111 0\n# \u521b\u5efa\u4e3b\u8bbe\u5907\u53f7\u4e3a111\uff0c\u6b21\u8bbe\u5907\u53f7\u4e3a1\u7684\u8bbe\u5907\u8282\u70b9: /dev/gmem1\n&gt; mknod /dev/gmem1 c 111 1\n\n# \u6d4b\u8bd5\u8bbe\u5907\u8282\u70b9\n&gt; echo \"hello gmem0\" &gt; /dev/gmem0\n&gt; echo \"hello gmem1\" &gt; /dev/gmem1\n&gt; cat /dev/gmem0 &amp;&amp; cat /dev/gmem1\nhello gmem0\nhello gmem1\n</code></pre>"},{"location":"booknotes/ldd/cdev/#_8","title":"\u7528\u6237\u8fdb\u7a0b\u8bbf\u95ee\u8bbe\u5907","text":"<p>\u4f8b\u5b50\"cdev_rw_user\"\u5728\u7528\u6237\u7a7a\u95f4\uff0c\u5229\u7528Linux\u7cfb\u7edf\u8c03\u7528\u8bbf\u95ee\u4e86\"/dev/gmem0\"\u8bbe\u5907\uff1a</p> <p><pre><code>#define GMEM0_DEV \"/dev/gmem0\"\nconst char data[] = \"Hello, global memory\\n\";\nint main()\n{\n   int fd = open(GMEM0_DEV, O_RDWR);\n\n   int nBytes = write(fd, data, sizeof(data));\n   printf(\"Written %d bytes to the device\\n\", nBytes);\n\n   int pos = lseek(fd, 0, SEEK_CUR);\n   printf(\"Current device position is %d\\n\", pos);\n   pos = lseek(fd, 0, SEEK_SET);\n   printf(\"Set device position to %d\\n\", pos);\n\n   char buf[1024];\n   int rc = read(fd, buf, nBytes);\n   printf(\"Read %d bytes from the device: %s\\n\", rc, buf);\n\n   close(fd);\n   return 0;\n}\n</code></pre> <pre><code>&gt; ./main\nWritten 22 bytes to the device\nCurrent device position is 22\nSet device position to 0\nRead 22 bytes from the device: Hello, global memory\n</code></pre></p>"},{"location":"booknotes/ldd/io/","title":"\u9ad8\u7ea7I/O\u64cd\u4f5c","text":"<p>\u300aLinux\u8bbe\u5907\u9a71\u52a8\u7a0b\u5e8f\u300b - \u7b2c\u4e09\u7248 \u7684\u7b2c6\u7ae0\uff0c\u300aLinux\u8bbe\u5907\u9a71\u52a8\u5f00\u53d1\u8be6\u89e3\u300b - \u5b8b\u5b9d\u534e \u7684\u7b2c8\uff0c9\u7ae0\uff0c\u7684\u8bfb\u4e66\u7b14\u8bb0\uff0c\u672c\u6587\u4e2d\u7684\u6240\u6709\u4ee3\u7801\u53ef\u5728GitHub\u4ed3\u5e93\u4e2d\u627e\u5230</p>"},{"location":"booknotes/ldd/io/#_1","title":"\u4f11\u7720\u548c\u5524\u9192","text":"<p>\u5bf9Linux\u8bbe\u5907\u9a71\u52a8\u7a0b\u5e8f\uff0c\u8fdb\u5165\u4f11\u7720\u72b6\u6001\u9700\u8981\u6ce8\u610f\uff1a</p> <ul> <li>\u4e0d\u8981\u5728\u539f\u5b50\u4e0a\u4e0b\u6587(\u62e5\u6709\u9501)\u4e2d\u8fdb\u5165\u4f11\u7720</li> <li>\u88ab\u5524\u9192\u540e\u9700\u8981\u91cd\u65b0\u68c0\u67e5\u7b49\u5f85\u6761\u4ef6</li> </ul> <p>\u5524\u9192\u65f6\u9700\u8981\u77e5\u9053\u54ea\u4e9b\u4e8b\u4ef6\u5e8f\u5217\u4f1a\u7ed3\u675f\u4f11\u7720\uff0c\u56e0\u6b64\u9700\u8981\u7ef4\u62a4\u4e00\u4e2a\u7b49\u5f85\u961f\u5217\uff1a\u961f\u5217\u5934<code>wait_queue_head_t</code>\u548c\u961f\u5217\u5143\u7d20<code>wait_queue</code>\u3002\u8fdb\u7a0b\u53ef\u901a\u8fc7<code>wait_event</code>\u5b8f\u8fdb\u5165\u4f11\u7720\uff0c\u901a\u8fc7<code>wake_up</code>\u5524\u9192\u7b49\u5f85\u961f\u5217\u4e2d\u7684\u8fdb\u7a0b\uff1a <pre><code>// \u52a8\u6001\u521d\u59cb\u5316\u7b49\u5f85\u961f\u5217\u5934\nwait_queue_head_t my_queue;\ninit_waitqueue_head(&amp;my_queue);\n\n// \u5728\u7b49\u5f85\u961f\u5217\u4e2d\uff0c\u6dfb\u52a0/\u79fb\u9664\u7b49\u5f85\u961f\u5217\u5143\u7d20\nvoid add_wait_queue(wait_queue_head_t *q, wait_queue_t *wait);\nvoid remove_wait_queue(wait_queue_head_t *q, wait_queue_t *wait);\n\n// \u7b49\u5f85\u961f\u5217\u7684\u5b8f\u64cd\u4f5c\n//  \u5b9a\u4e49\u5e76\u521d\u59cb\u5316\u540d\u4e3a`my_queue`\u7684\u7b49\u5f85\u961f\u5217\u5934\nDECLARE_WAIT_QUEUE_HEAD(my_queue);\n//  \u5b9a\u4e49\u7b49\u5f85\u961f\u5217\u5143\u7d20`wait`, \u5e76\u7528\u4efb\u52a1task\u521d\u59cb\u5316\u6b64\u7b49\u5f85\u961f\u5217\u5143\u7d20\nDECLARE_WAITQUEUE(wait, task);\n\n// \u5c4f\u853d\u4e2d\u65ad\u4f11\u7720\n//  queue - \u7b49\u5f85\u961f\u5217\u5934\n//  condition - \u4f11\u7720\u6761\u4ef6\uff0c\u4f11\u7720/\u5524\u9192\u65f6\u90fd\u9700\u8981\u68c0\u67e5\nwait_event(queue, condition)\n// \u4e0d\u5c4f\u853d\u4e2d\u65ad\u4f11\u7720\uff0c\u8fd4\u56de\u975e\u96f6\u503c\u8868\u793a\u4f11\u7720\u88ab\u67d0\u4e2a\u4fe1\u53f7\u4e2d\u65ad\nwait_event_interruptible(queue, condition)\n\n// \u5524\u9192\u7b49\u5f85\u961f\u5217\u4e2d\u7684\u6240\u6709\u4efb\u52a1\nvoid wake_up(wait_queue_head_t *queue);\n// \u5524\u9192\u7b49\u5f85\u961f\u5217\u4e2d\u5904\u4e8e`TASK_INTERRUPTIBLE`\u7684\u4efb\u52a1\nvoid wake_up_interruptible(wait_queue_head_t *queue);\n</code></pre></p> <p>\u4e0b\u56fe\u663e\u793a\u4e86\uff0c<code>wait_queue_head_t</code>\uff0c<code>wait_queue</code>\u548c<code>task_struct</code>\u4e4b\u95f4\u7684\u5173\u7cfb\uff1a</p> <p></p> <p>\u4f8b\u5b50\"sleepy\"\uff0c\u521b\u5efa\u4e86\u4e00\u4e2a\"/dev/sleepy\"\u8bbe\u5907\u3002\u5982\u679c\u67d0\u4e00\u8fdb\u7a0b\u5728\u8bfb\u53d6\u6b64\u8bbe\u5907\u65f6\uff0c\u4f1a\u8fdb\u5165\u4f11\u7720\u72b6\u6001\u3002\u901a\u8fc7\u5728\u53e6\u4e00\u4e2a\u8fdb\u7a0b\u5199\u6b64\u8bbe\u5907\uff0c\u53ef\u5524\u9192\u4f11\u7720\u7684\u8bfb\u8bbe\u5907\u8fdb\u7a0b\u3002\u4e00\u6b21\u53ea\u80fd\u5524\u9192\u4e00\u4e2a\u8fdb\u7a0b\uff0c\u5982\u679c\u5b58\u5728\u591a\u4e2a\u4f11\u7720\u7684\u8bfb\u8fdb\u7a0b\uff0c\u9700\u8981\u591a\u6b21\u5199\u5165\u8bbe\u5907\u3002</p> sleepy.c<pre><code>static DECLARE_WAIT_QUEUE_HEAD(wq);\nstatic int flag = 0;\n\nstatic ssize_t sleepy_read(struct file *filp, char __user *buf, size_t count, loff_t *pos)\n{\n   printk(KERN_DEBUG \"process %i (%s) going to sleep\\n\", current-&gt;pid, current-&gt;comm);\n   wait_event_interruptible(wq, flag != 0);\n   flag = 0;\n   printk(KERN_DEBUG \"awoken %i (%s)\\n\", current-&gt;pid, current-&gt;comm);\n   return 0;\n}\n\nstatic ssize_t sleepy_write(struct file *filp, const char __user *buf, size_t count, loff_t *pos)\n{\n   printk(KERN_DEBUG \"process %i (%s) awakening the readers...\\n\", current-&gt;pid, current-&gt;comm);\n   flag = 1;\n   wake_up_interruptible(&amp;wq);\n   return count;\n}\n</code></pre>"},{"location":"booknotes/ldd/io/#io_1","title":"\u963b\u585eI/O","text":"<p>\u9a71\u52a8\u7a0b\u5e8f\u5728\u67d0\u4e9b\u60c5\u51b5\u4e0b\uff0c\u53ef\u80fd\u65e0\u6cd5\u7acb\u5373\u5b8c\u6210\u7528\u6237\u7684\u8bf7\u6c42\u3002\u4f8b\u5982\uff0c</p> <ul> <li>\u5f53\u6570\u636e\u4e0d\u53ef\u7528\u65f6\uff0c\u7528\u6237\u8c03\u7528<code>read</code></li> <li>\u5f53\u8f93\u51fa\u7f13\u51b2\u533a\u5df2\u6ee1\uff0c\u6216\u8bbe\u5907\u8fd8\u672a\u51c6\u5907\u597d\u63a5\u53d7\u6570\u636e\u65f6\uff0c\u7528\u6237\u8c03\u7528<code>write</code></li> </ul> <p>\u5728\u8fd9\u79cd\u60c5\u51b5\u4e0b\uff0c\u9a71\u52a8\u7a0b\u5e8f\u9ed8\u8ba4\u4f1a\u963b\u585e\u8be5\u8fdb\u7a0b\uff0c\u5c06\u5176\u7f6e\u5165\u4f11\u7720\u72b6\u6001\u76f4\u5230\u8bf7\u6c42\u53ef\u7ee7\u7eed\u3002</p>"},{"location":"booknotes/ldd/io/#_2","title":"\u9a71\u52a8\u5b9e\u4f8b","text":"<p>\u4f8b\u5b50\"gfifo\"\uff0c\u521b\u5efa\u4e86\u4e00\u4e2a\u652f\u6301\u963b\u585e\u8bbf\u95ee\u7684FIFO\u8bbe\u5907\u3002\u5f53FIFO\u4e2d\u6ca1\u6709\u6570\u636e\u65f6\uff0c<code>read</code>\u8bf7\u6c42\u963b\u585e\uff0c\u6b64\u65f6\u5411FIFO\u4e2d\u5199\u5165\u6570\u636e\u80fd\u91cd\u65b0\u5524\u9192<code>read</code>\u8bf7\u6c42\u8fdb\u7a0b\u3002\u5f53FIFO\u6ee1\u6570\u636e\u65f6\uff0c<code>write</code>\u8bf7\u6c42\u963b\u585e\uff0c\u6b64\u65f6\u4eceFIFO\u4e2d\u8bfb\u51fa\u6570\u636e\u80fd\u91cd\u65b0\u5524\u9192<code>write</code>\u8bf7\u6c42\u8fdb\u7a0b\u3002</p> gfifo.c<pre><code>struct gfifo_dev\n{\n    struct cdev cdev;\n    unsigned int current_len;\n    unsigned char mem[GFIFO_SIZE];\n    struct mutex mutex;\n    wait_queue_head_t r_wait;\n    wait_queue_head_t w_wait;\n};\n\nstatic ssize_t gfifo_read(struct file *filp, char __user *buf, size_t count, loff_t *ppos)\n{\n    int ret;\n    struct gfifo_dev *dev = filp-&gt;private_data;\n    DECLARE_WAITQUEUE(wait, current);\n\n    mutex_lock(&amp;dev-&gt;mutex);\n    add_wait_queue(&amp;dev-&gt;r_wait, &amp;wait);\n\n    while (dev-&gt;current_len == 0)\n    {\n        set_current_state(TASK_INTERRUPTIBLE);\n        mutex_unlock(&amp;dev-&gt;mutex);\n        schedule();\n        mutex_lock(&amp;dev-&gt;mutex);\n    }\n\n    if (count &gt; dev-&gt;current_len)\n        count = dev-&gt;current_len;\n\n    copy_to_user(buf, dev-&gt;mem, count);\n    memcpy(dev-&gt;mem, dev-&gt;mem + count, dev-&gt;current_len - count);\n    dev-&gt;current_len -= count;\n    printk(KERN_INFO \"read %lu bytes(s),current_len:%u\\n\", count, dev-&gt;current_len);\n\n    wake_up_interruptible(&amp;dev-&gt;w_wait);\n\n    ret = count;\n    remove_wait_queue(&amp;dev-&gt;r_wait, &amp;wait);\n    set_current_state(TASK_RUNNING);\n    mutex_unlock(&amp;dev-&gt;mutex);\n    return ret;\n}\n\nstatic ssize_t gfifo_write(struct file *filp, const char __user *buf, size_t count, loff_t *ppos)\n{\n    struct gfifo_dev *dev = filp-&gt;private_data;\n    int ret;\n    DECLARE_WAITQUEUE(wait, current);\n\n    mutex_lock(&amp;dev-&gt;mutex);\n    add_wait_queue(&amp;dev-&gt;w_wait, &amp;wait);\n\n    while (dev-&gt;current_len == GFIFO_SIZE)\n    {\n        set_current_state(TASK_INTERRUPTIBLE);\n        mutex_unlock(&amp;dev-&gt;mutex);\n        schedule();\n        mutex_lock(&amp;dev-&gt;mutex);\n    }\n\n    if (count &gt; GFIFO_SIZE - dev-&gt;current_len)\n        count = GFIFO_SIZE - dev-&gt;current_len;\n\n    copy_from_user(dev-&gt;mem + dev-&gt;current_len, buf, count);\n    dev-&gt;current_len += count;\n    printk(KERN_INFO \"written %lu bytes(s),current_len:%u\\n\", count, dev-&gt;current_len);\n\n    wake_up_interruptible(&amp;dev-&gt;r_wait);\n\n    ret = count;\n    remove_wait_queue(&amp;dev-&gt;w_wait, &amp;wait);\n    set_current_state(TASK_RUNNING);\n    mutex_unlock(&amp;dev-&gt;mutex);\n    return ret;\n}\n</code></pre>"},{"location":"booknotes/ldd/io/#_3","title":"\u7528\u6237\u7a7a\u95f4\u6d4b\u8bd5","text":"<p>\u4f8b\u5b50\"gfifo_user_block\"\u662f\u5bf9\u4e0a\u8ff0\"gfifo\"\u9a71\u52a8\u963b\u585eI/O\u884c\u4e3a\u7684\u5728\u7528\u6237\u7a7a\u95f4\u7684\u6d4b\u8bd5\u3002\u5176\u4e2d\uff0c\u4e00\u4e2a\u8fdb\u7a0b\u5bf9\"/dev/gfifo\"\u8bbe\u5907\u8fdb\u884c\u8bfb\u64cd\u4f5c\uff0c\u53e6\u4e00\u4e2a\u8fdb\u7a0b\u5728\u4e00\u5b9a\u65f6\u95f4\u4e4b\u540e\u5bf9\"/dev/gfifo\"\u8bbe\u5907\u8fdb\u884c\u5199\u64cd\u4f5c\u3002\u8bfb\u8fdb\u7a0b\u4f1a\u4e00\u76f4\u963b\u585e\uff0c\u76f4\u5230\u5199\u8fdb\u7a0b\u5b8c\u6210\u5199\u64cd\u4f5c\u3002</p> <p>GFIFO Block I/O Test<pre><code>#define GFIFO_DEV \"/dev/gfifo\"\nconst char data[] = \"Hello, global gfifo\\n\";\n\nvoid sleep_write()\n{\n   printf(\"[Write Process] Start\\n\");\n   int fd = open(GFIFO_DEV, O_RDWR);\n\n   sleep(1);\n   printf(\"[Write Process] Start to write after sleep\\n\");\n   int n = write(fd, data, sizeof(data));\n   printf(\"[Write Process] Written %d bytes to the device\\n\", n);\n\n   close(fd);\n   printf(\"[Write Process] End\\n\");\n}\n\nvoid block_read()\n{\n   printf(\"[Read Process] Start\\n\");\n\n   int fd = open(GFIFO_DEV, O_RDWR);\n   char buf[1024];\n   int n = read(fd, buf, sizeof(data));\n   printf(\"[Read Process] Read %d bytes from the device: %s\\n\", n, buf);\n\n   close(fd);\n   printf(\"[Read Process] End\\n\");\n}\n\nint main(int argc, char **argv)\n{\n   pid_t pid = fork();\n   if (pid == 0)\n   {\n      sleep_write();\n      return 0;\n   }\n   block_read();\n   wait(NULL);\n   return 0;\n}\n</code></pre> <pre><code>&gt;./main\n[Read Process] Start\n[Write Process] Start\n[Write Process] Start to write after sleep\n[Write Process] Written 21 bytes to the device\n[Write Process] End\n[Read Process] Read 21 bytes from the device: Hello, global gfifo\n\n[Read Process] End\n</code></pre></p>"},{"location":"booknotes/ldd/io/#io_2","title":"\u975e\u963b\u585eI/O","text":"<p>\u975e\u963b\u585eI/O\u5728\u8bbe\u5907\u65e0\u6cd5\u7acb\u5373\u5b8c\u6210\u7528\u6237\u8bf7\u6c42\u65f6\uff0c\u4e0d\u963b\u585e\uff0c\u800c\u662f\u8fd4\u56de<code>-EAGAIN</code>\u9519\u8bef\uff0c\u544a\u77e5\u7528\u6237\u5728\u8bbe\u5907\u51c6\u5907\u597d\u540e\u518d\u6b21\u8bbf\u95ee\u3002\u975e\u963b\u585eI/O\u4e00\u822c\u548c<code>select</code>\uff0c<code>poll</code>\u6216<code>epoll</code>\u7cfb\u7edf\u8c03\u7528\u914d\u5408\u4f7f\u7528\uff0c\u4ee5\u5b9e\u73b0\u591a\u8def\u590d\u7528\u3002\u8fd9\u4e09\u4e2a\u7cfb\u7edf\u8c03\u7528\u7684\u672c\u8d28\u662f\u4e00\u6837\u7684\uff1a\u90fd\u5141\u8bb8\u8fdb\u7a0b\u51b3\u5b9a\u662f\u5426\u53ef\u4ee5\u5bf9\u4e00\u4e2a\u6216\u591a\u4e2a\u6253\u5f00\u7684\u6587\u4ef6\u505a\u975e\u963b\u585e\u7684\u8bfb\u5199\u64cd\u4f5c\u3002</p> <p>\u5f53\u7528\u6237\u7a7a\u95f4\u5728\u9a71\u52a8\u7a0b\u5e8f\u5173\u8054\u7684\u6587\u4ef6\u63cf\u8ff0\u7b26\u4e0a\u6267\u884c<code>select</code>\uff0c<code>poll</code>\u6216<code>epoll</code>\u7cfb\u7edf\u8c03\u7528\u65f6\uff0c\u9a71\u52a8\u7a0b\u5e8f\u4e2d\u7684<code>poll</code>\u6587\u4ef6\u64cd\u4f5c\u5c06\u88ab\u8c03\u7528\uff0c\u8be5\u8bbe\u5907\u65b9\u6cd5\u5206\u4e3a\u4e24\u6b65\uff1a</p> <ul> <li>\u5728\u4e00\u4e2a\u6216\u591a\u4e2a\u53ef\u6307\u793apoll\u72b6\u6001\u7684\u7b49\u5f85\u961f\u5217\u4e0a\u8c03\u7528<code>poll_wait</code></li> <li>\u8fd4\u56de\u4e00\u4e2a\u7528\u6765\u63cf\u8ff0\u64cd\u4f5c\u662f\u5426\u53ef\u4ee5\u7acb\u5373\u65e0\u963b\u585e\u6267\u884c\u7684\u4f4d\u63a9\u7801</li> </ul> <pre><code>// \u88ab`select`\uff0c`poll`\u6216`epoll`\u4f1a\u8c03\u7528\u7684\u9a71\u52a8\u4e2d\u7684\u8bbe\u5907\u65b9\u6cd5\n//  poll_table - \u7528\u4e8e\u5728\u5185\u6838\u4e2d\u5b9e\u73b0`select`\uff0c`poll`\u6216`epoll`\u7cfb\u7edf\u8c03\u7528\nunsigned int (*poll) (struct file *filp, poll_table *wait);\n\n// \u5411`poll_table`\u7ed3\u6784\u4e2d\u6dfb\u52a0\u4e00\u4e2a\u7b49\u5f85\u961f\u5217\nvoid poll_wait(struct file *, wait_queue_head_t *, poll_table *);\n</code></pre>"},{"location":"booknotes/ldd/io/#_4","title":"\u9a71\u52a8\u5b9e\u4f8b","text":"<p>\u4f8b\u5b50\"gfifo\"\uff0c\u4e0d\u4ec5\u652f\u6301\u963b\u585eI/O\u8bbf\u95ee\uff0c\u4e5f\u652f\u6301\u975e\u963b\u585eI/O\u8bbf\u95ee\u3002\u5f53<code>O_NONBLOCK</code>\u6807\u8bb0\u88ab\u8bbe\u7f6e\u540e\uff0c\u8bfb\u5199\u64cd\u4f5c\u90fd\u53d8\u4e3a\u975e\u963b\u585e\u3002\u5f53\u8bbe\u5907\u6ca1\u6709\u51c6\u5907\u597d\u65f6\uff0c\u8bfb\u5199\u64cd\u4f5c\u76f4\u63a5\u8fd4\u56de<code>-EAGAIN</code>\u800c\u4e0d\u662f\u8fdb\u5165\u4f11\u7720\u72b6\u6001\u3002\u5f53\u7528\u6237\u8c03\u7528<code>select</code>\uff0c<code>poll</code>\u6216<code>epoll</code>\u65f6\uff0c\u9a71\u52a8\u65b9\u6cd5<code>gfifo_poll</code>\u88ab\u8c03\u7528\uff0c\u76f8\u5173\u7b49\u5f85\u961f\u5217\u88ab\u52a0\u5165\u5230<code>poll_table</code>\u7ed3\u6784\u4e2d\uff0c\u4ee5\u4f9b\u5185\u6838\u4f7f\u7528\u3002</p> gfifo.c<pre><code>static unsigned int gfifo_poll(struct file *filp, poll_table *wait)\n{\n    unsigned int mask = 0;\n    struct gfifo_dev *dev = filp-&gt;private_data;\n    mutex_lock(&amp;dev-&gt;mutex);\n\n    poll_wait(filp, &amp;dev-&gt;r_wait, wait);\n    poll_wait(filp, &amp;dev-&gt;w_wait, wait);\n\n    if (dev-&gt;current_len != 0)\n        mask |= POLLIN | POLLRDNORM;\n\n    if (dev-&gt;current_len != GFIFO_SIZE)\n        mask |= POLLOUT | POLLWRNORM;\n\n    mutex_unlock(&amp;dev-&gt;mutex);\n    return mask;\n}\n\nstatic ssize_t gfifo_read(struct file *filp, char __user *buf, size_t count, loff_t *ppos)\n{\n    ...\n    while (dev-&gt;current_len == 0)\n    {\n        if (filp-&gt;f_flags &amp; O_NONBLOCK)\n        {\n            ret = -EAGAIN;\n            goto out;\n        }\n        ...\n    }\n    ...\n}\n\nstatic ssize_t gfifo_write(struct file *filp, const char __user *buf, size_t count, loff_t *ppos)\n{\n    ...\n    while (dev-&gt;current_len == GFIFO_SIZE)\n    {\n        if (filp-&gt;f_flags &amp; O_NONBLOCK)\n        {\n            ret = -EAGAIN;\n            goto out;\n        }\n        ...\n    }\n   ...\n}\n</code></pre>"},{"location":"booknotes/ldd/io/#select","title":"\u7528\u6237\u7a7a\u95f4select\u6d4b\u8bd5","text":"<p>\u4f8b\u5b50\"gfifo_user_select\"\u5bf9GFIFO\u975e\u963b\u585eI/O\u884c\u4e3a\u7684\u5728\u7528\u6237\u7a7a\u95f4\u901a\u8fc7<code>select</code>\u65b9\u6cd5\u8fdb\u884c\u4e86\u6d4b\u8bd5\u3002\u5176\u4e2d\uff0c\u4e00\u4e2a\u8fdb\u7a0b\u5bf9\"/dev/gfifo\"\u8bbe\u5907\u8fdb\u884c\u975e\u963b\u585e\u8bfb\u64cd\u4f5c\uff0c\u53e6\u4e00\u4e2a\u8fdb\u7a0b\u5728\u4e00\u5b9a\u65f6\u95f4\u4e4b\u540e\u5bf9\"/dev/gfifo\"\u8bbe\u5907\u8fdb\u884c\u5199\u64cd\u4f5c\u3002\u8bfb\u8fdb\u7a0b\u4ee51\u79d2<code>timeout</code>\u65f6\u95f4\u5bf9<code>select</code>\u8fdb\u884c\u8f6e\u8be2\uff0c\u5199\u8fdb\u7a0b\u5728\u4e00\u5b9a\u65f6\u95f4\u4e4b\u540e\u5411\u8bbe\u5907\u5199\u5165\u6570\u636e\u3002\u8bfb\u8fdb\u7a0b\u7684\u8f6e\u8be2\u64cd\u4f5c\u5728\u591a\u6b21<code>timoout</code>\u4e4b\u540e\uff0c\u4f1a\u6536\u5230\u8bbe\u5907\u53ef\u8bfb\u4e8b\u4ef6\uff0c\u4ece\u800c\u7ed3\u675f\u3002</p> <p>Non-block IO Select Test<pre><code>#define GFIFO_DEV \"/dev/gfifo\"\nconst char data[] = \"Hello, global gfifo\\n\";\n\nvoid sleep_write()\n{\n   printf(\"[Write Process] Start\\n\");\n\n   int fd = open(GFIFO_DEV, O_RDWR);\n   assert(fd &gt; 0);\n\n   sleep(5);\n   int n = write(fd, data, sizeof(data));\n   printf(\"[Write Process] Written %d bytes to the device\\n\", n);\n\n   close(fd);\n\n   printf(\"[Write Process] End\\n\");\n}\n\nvoid poll_read()\n{\n    printf(\"[Poll Process] Start\\n\");\n\n    int fd = open(GFIFO_DEV, O_RDONLY | O_NONBLOCK);\n    char buf[1024];\n    fd_set rfds;\n    struct timeval timeout;\n    while (1)\n    {\n        FD_ZERO(&amp;rfds);\n        FD_SET(fd, &amp;rfds);\n        timeout.tv_sec = 1;\n        timeout.tv_usec = 0;\n\n        int rc = select(fd + 1, &amp;rfds, NULL, NULL, &amp;timeout);\n        if (rc == 0)\n        {\n            printf(\"[Poll Process] select() timeout, no data to read\\n\");\n            continue;\n        }\n\n        if (FD_ISSET(fd, &amp;rfds))\n        {\n            int n = read(fd, buf, sizeof(data));\n            printf(\"[Poll Process] Read %d bytes from the device: %s\\n\", n, buf);\n            break;\n        }\n    }\n\n    close(fd);\n    printf(\"[Poll Process] End\\n\");\n}\n\nint main(int argc, char **argv)\n{\n    pid_t pid = fork();\n    if (pid == 0)\n    {\n        // child process\n        sleep_write();\n        return 0;\n    }\n    // parent process\n    poll_read();\n    wait(NULL);\n    return 0;\n}\n</code></pre> <pre><code>&gt; ./main\n[Poll Process] Start\n[Write Process] Start\n[Poll Process] select() timeout, no data to read\n[Poll Process] select() timeout, no data to read\n[Poll Process] select() timeout, no data to read\n[Poll Process] select() timeout, no data to read\n[Write Process] Written 21 bytes to the device\n[Write Process] End\n[Poll Process] Read 21 bytes from the device: Hello, global gfifo\n\n[Poll Process] End\n</code></pre></p>"},{"location":"booknotes/ldd/io/#poll","title":"\u7528\u6237\u7a7a\u95f4poll\u6d4b\u8bd5","text":"<p>\u4f8b\u5b50\"gfifo_user_poll\"\u5bf9GFIFO\u975e\u963b\u585eI/O\u884c\u4e3a\u7684\u5728\u7528\u6237\u7a7a\u95f4\u901a\u8fc7<code>poll</code>\u65b9\u6cd5\u8fdb\u884c\u4e86\u6d4b\u8bd5\uff0c\u5176\u884c\u4e3a\u548c\u4e0a\u8ff0<code>select</code>\u65b9\u6cd5\u7684\u6d4b\u8bd5\u7c7b\u4f3c\u3002</p> <p>Non-block IO Poll Test<pre><code>void poll_read()\n{\n    printf(\"[Poll Process] Start\\n\");\n\n    int fd = open(GFIFO_DEV, O_RDONLY | O_NONBLOCK);\n    char buf[1024];\n    struct pollfd fds[MAX_POLL_FD];\n    memset(fds, 0, sizeof(fds));\n    fds[0].fd = fd;\n    fds[0].events = POLLIN;\n    int nfds = 1;\n    int timeout = 1 * 1000; // milliseconds\n    while (1)\n    {\n        int event_count = poll(fds, nfds, timeout);\n        if (event_count == 0)\n        {\n            printf(\"[Poll Process] poll() timeout, no data to read\\n\");\n            continue;\n        }\n\n        if (fds[0].revents &amp; POLLIN)\n        {\n            int n = read(fds[0].fd, buf, sizeof(data));\n            printf(\"[Poll Process] Read %d bytes from the device: %s\\n\", n, buf);\n            break;\n        }\n        printf(\"[Poll Process] Receive unexpected event 0x%x\\n\", fds[0].revents);\n    }\n\n    close(fd);\n    printf(\"[Poll Process] End\\n\");\n}\n</code></pre> <pre><code>&gt; ./main\n[Poll Process] Start\n[Write Process] Start\n[Poll Process] poll() timeout, no data to read\n[Poll Process] poll() timeout, no data to read\n[Poll Process] poll() timeout, no data to read\n[Poll Process] poll() timeout, no data to read\n[Write Process] Written 21 bytes to the device\n[Write Process] End\n[Poll Process] Read 21 bytes from the device: Hello, global gfifo\n\n[Poll Process] End\n</code></pre></p>"},{"location":"booknotes/ldd/io/#epoll","title":"\u7528\u6237\u7a7a\u95f4epoll\u6d4b\u8bd5","text":"<p>\u4f8b\u5b50\"gfifo_user_epoll\"\u5bf9GFIFO\u975e\u963b\u585eI/O\u884c\u4e3a\u7684\u5728\u7528\u6237\u7a7a\u95f4\u901a\u8fc7<code>epoll</code>\u65b9\u6cd5\u8fdb\u884c\u4e86\u6d4b\u8bd5\uff0c\u5176\u884c\u4e3a\u548c\u4e0a\u8ff0<code>select</code>\u3001<code>poll</code>\u65b9\u6cd5\u7684\u6d4b\u8bd5\u7c7b\u4f3c\u3002</p> <p>Non-block IO EPoll Test<pre><code>void poll_read()\n{\n    printf(\"[Poll Process] Start\\n\");\n\n    int fd = open(GFIFO_DEV, O_RDONLY | O_NONBLOCK);\n    char buf[1024];\n    int epoll_fd = epoll_create1(0);\n    assert(epoll_fd &gt; 0);\n    struct epoll_event event, events[MAX_EVENTS];\n    event.events = EPOLLIN;\n    event.data.fd = fd;\n    int rc = epoll_ctl(epoll_fd, EPOLL_CTL_ADD, fd, &amp;event);\n    assert(rc != -1);\n    int timeout = 1 * 1000; // milliseconds\n    while (1)\n    {\n        int event_count = epoll_wait(epoll_fd, events, MAX_EVENTS, timeout);\n        if (event_count == 0)\n        {\n            printf(\"[Poll Process] epoll() timeout, no data to read\\n\");\n            continue;\n        }\n\n        if (events[0].events &amp; EPOLLIN)\n        {\n            int n = read(events[0].data.fd, buf, sizeof(data));\n            printf(\"[Poll Process] Read %d bytes from the device: %s\\n\", n, buf);\n            break;\n        }\n        printf(\"[Poll Process] Receive unexpected event 0x%x\\n\", events[0].events);\n    }\n\n    close(fd);\n    printf(\"[Poll Process] End\\n\");\n}\n</code></pre> <pre><code>&gt; ./main\n[Poll Process] Start\n[Write Process] Start\n[Poll Process] epoll() timeout, no data to read\n[Poll Process] epoll() timeout, no data to read\n[Poll Process] epoll() timeout, no data to read\n[Poll Process] epoll() timeout, no data to read\n[Write Process] Written 21 bytes to the device\n[Write Process] End\n[Poll Process] Read 21 bytes from the device: Hello, global gfifo\n\n[Poll Process] End\n</code></pre></p>"},{"location":"booknotes/ldd/io/#_5","title":"\u5f02\u6b65\u901a\u77e5","text":"<p>\u5f02\u6b65\u901a\u77e5\u662f\u6307\uff0c\u5f53\u8bbe\u5907\u51c6\u5907\u5c31\u7eea\u65f6\uff0c\u4e3b\u52a8\u901a\u77e5\u5e94\u7528\u7a0b\u5e8f\uff0c\u8fd9\u6837\u5e94\u7528\u7a0b\u5e8f\u5c31\u65e0\u9700\u8f6e\u8be2\u8bbe\u5907\u662f\u5426\u53ef\u8bbf\u95ee\u3002\u5728Linux\u4e2d\uff0c\u5f02\u6b65\u901a\u77e5\u4f7f\u7528\u4fe1\u53f7<code>SIGIO</code>\u6765\u5b9e\u73b0\u3002</p>"},{"location":"booknotes/ldd/io/#_6","title":"\u7528\u6237\u7a0b\u5e8f\u7684\u89d2\u5ea6","text":"<p>\u4e3a\u4e86\u542f\u52a8\u6587\u4ef6\u7684\u5f02\u6b65\u901a\u77e5\u673a\u5236\uff0c\u7528\u6237\u7a0b\u5e8f\u5fc5\u987b\u6267\u884c\u4e24\u4e2a\u6b65\u9aa4\uff1a</p> <ul> <li>\u4e3a\u4e86\u8ba9\u5185\u6838\u6307\u5b9a\u5e94\u8be5\u901a\u77e5\u54ea\u4e2a\u8fdb\u7a0b\uff0c\u9700\u6307\u5b9a\u4e00\u4e2a\u8fdb\u7a0b\u4f5c\u4e3a\u6587\u4ef6\u7684\u201c\u5c5e\u4e3b(owner)\u201d</li> <li>\u8bbe\u7f6e<code>FASYNC</code>\u6807\u5fd7\uff0c\u542f\u52a8\u5f02\u6b65\u901a\u77e5\u673a\u5236</li> </ul> <p>\u4f8b\u5b50\"async_stdin\"\u542f\u7528\u4e86<code>stdin</code>\u6570\u636e\u6587\u4ef6\u5230\u5f53\u524d\u8fdb\u7a0b\u7684\u5f02\u6b65\u901a\u77e5\u673a\u5236\u3002\u5f53\u7528\u6237\u8f93\u5165\u4e00\u4e32\u5b57\u7b26\u540e\uff0c\u6807\u51c6\u8f93\u5165\u8bbe\u5907\u91ca\u653e<code>SIGIO</code>\u4fe1\u53f7\uff0c\u8fd9\u4e2a\u4fe1\u53f7\u9a71\u4f7f\u5bf9\u5e94\u7684<code>input_handler()</code>\u5f97\u4ee5\u6267\u884c\u3002</p> <p>async_stdin<pre><code>#define MAX_LEN 100\nvoid input_handler(int num)\n{\n   char data[MAX_LEN];\n   int len;\n\n   len = read(STDIN_FILENO, &amp;data, MAX_LEN);\n   data[len] = 0;\n   printf(\"input available:%s\\n\", data);\n}\n\nint main()\n{\n   int oflags;\n\n   // 1. \u8fde\u63a5\u4fe1\u53f7\u548c\u4fe1\u53f7\u5904\u7406\u51fd\u6570\n   signal(SIGIO, input_handler);\n   // 2. \u901a\u8fc7F_SETOWN\u8bbe\u7f6e\u8bbe\u5907\u6587\u4ef6\u7684\u62e5\u6709\u8005\u4e3a\u672c\u8fdb\u7a0b\uff0c\u8fd9\u6837\u8bbe\u5907\u9a71\u52a8\u53d1\u51fa\u7684\u4fe1\u53f7\u624d\u80fd\u88ab\u672c\u8fdb\u7a0b\u63a5\u6536\n   fcntl(STDIN_FILENO, F_SETOWN, getpid());\n   // 3. \u901a\u8fc7FASYNC\uff0c\u8bbe\u7f6e\u5f02\u6b65\u901a\u77e5\u6a21\u5f0f\uff0c\u6bcf\u5f53FASYNC\u6807\u5fd7\u6539\u53d8\u65f6\uff0c\u9a71\u52a8\u7a0b\u5e8f\u4e2d\u7684`fasync()`\u51fd\u6570\u88ab\u6267\u884c\n   oflags = fcntl(STDIN_FILENO, F_GETFL);\n   fcntl(STDIN_FILENO, F_SETFL, oflags | FASYNC);\n\n   while (1);\n   return 0;\n}\n</code></pre> <pre><code>&gt; ./main\nhello\ninput available:hello\n\nworld\ninput available:world\n</code></pre></p>"},{"location":"booknotes/ldd/io/#_7","title":"\u9a71\u52a8\u7a0b\u5e8f\u7684\u89d2\u5ea6","text":"<p>\u7528\u6237\u7a0b\u5e8f\u7684\u52a8\u4f5c\u5728\u9a71\u52a8\u7a0b\u5e8f\u4e2d\u6240\u5bf9\u5e94\u7684\u52a8\u4f5c\u662f\uff1a</p> <ul> <li><code>F_SETOWN</code>\u88ab\u8c03\u7528\u65f6\uff0c\u9a71\u52a8\u7a0b\u5e8f\u5bf9<code>filp-&gt;f_owner</code>\u8d4b\u503c\uff0c\u6b64\u5916\u4ec0\u4e48\u4e5f\u4e0d\u505a</li> <li><code>F_SETFL</code>\u542f\u7528<code>FASYNC</code>\u65f6\uff0c\u9a71\u52a8\u7a0b\u5e8f\u8c03\u7528<code>fasync</code>\u6587\u4ef6\u64cd\u4f5c\u65b9\u6cd5\uff0c\u901a\u8fc7<code>fasync_helper</code>\u6dfb\u52a0\u5f02\u6b65\u901a\u77e5\u8fdb\u7a0b\u5230<code>struct fasync_struct</code>\u6570\u636e\u7ed3\u6784</li> <li>\u5f53\u6570\u636e\u5230\u8fbe\u65f6\uff0c\u901a\u8fc7<code>kill_fasync</code>, \u6240\u6709\u6ce8\u518c\u4e3a\u5f02\u6b65\u901a\u77e5\u7684\u8fdb\u7a0b\u90fd\u4f1a\u88ab\u53d1\u9001\u4e00\u4e2a<code>SIGIO</code>\u4fe1\u53f7</li> </ul> <p>\u4f8b\u5b50\"gfifo\"\uff0c\u901a\u8fc7\u5982\u4e0b\u6b65\u9aa4\uff0c\u5373\u53ef\u652f\u6301\u5f02\u6b65\u901a\u77e5\uff1a</p> GFIFO Driver Async IO<pre><code>struct gfifo_dev\n{\n    ...\n    struct fasync_struct *async_queue;\n};\n\nstatic int gfifo_fasync(int fd, struct file *filp, int mode)\n{\n    struct gfifo_dev *dev = filp-&gt;private_data;\n    return fasync_helper(fd, filp, mode, &amp;dev-&gt;async_queue);\n}\n\nstatic int gfifo_release(struct inode *inode, struct file *filp)\n{\n    gfifo_fasync(-1, filp, 0);\n    return 0;\n}\n\nstatic ssize_t gfifo_write(struct file *filp, const char __user *buf,\n                           size_t count, loff_t *ppos)\n{\n    ...\n    if (dev-&gt;async_queue) {\n        kill_fasync(&amp;dev-&gt;async_queue, SIGIO, POLL_IN);\n        printk(KERN_DEBUG \"%s kill SIGIO\\n\", __func__);\n    }\n    ...\n}\n\nstatic const struct file_operations gfifo_fops = {\n    ...\n    .fasync = gfifo_fasync,\n};\n</code></pre> <p>\u4f8b\u5b50\"gfifo_user_async\"\u5728\u7528\u6237\u7a7a\u95f4\u5bf9GFIFO\u7684\u5f02\u6b65\u901a\u77e5\u529f\u80fd\u8fdb\u884c\u4e86\u6d4b\u8bd5\uff0c\u8bfb\u8fdb\u7a0b\u63a5\u6536\u5230<code>SIGIO</code>\u4fe1\u53f7\u540e\uff0c\u6210\u529f\u6253\u5370\u51fa\u4e86\u5199\u8fdb\u7a0b\u5199\u5165\u7684\u6570\u636e\u3002</p> Async Signal Test<pre><code>static int read_fd = -1;\nstatic void signalio_handler(int signum)\n{\n    printf(\"[Read Process - Signal_IO] Receive a signal from global FIFO, signalnum:%d\\n\", signum);\n    assert(read_fd &gt; 0);\n    char buf[1024];\n    int n = read(read_fd, buf, sizeof(data));\n    printf(\"[Read Process - Signal_IO] Read %d bytes from the device: %s\\n\", n, buf);\n    close(read_fd);\n}\n\nvoid block_read()\n{\n    printf(\"[Read Process - Main] Start\\n\");\n\n    read_fd = open(GFIFO_DEV, O_RDWR);\n    signal(SIGIO, signalio_handler);\n    fcntl(read_fd, F_SETOWN, getpid());\n    int oflags = fcntl(read_fd, F_GETFL);\n    fcntl(read_fd, F_SETFL, oflags | FASYNC);\n\n    printf(\"[Read Process - Main] End\\n\");\n}\n</code></pre>"},{"location":"booknotes/ldd/io/#mmap","title":"mmap\u64cd\u4f5c","text":"<p>\u4e00\u822c\u60c5\u51b5\u4e0b\uff0c\u7528\u6237\u7a7a\u95f4\u662f\u4e0d\u53ef\u80fd\u4e5f\u4e0d\u5e94\u8be5\u76f4\u63a5\u8bbf\u95ee\u8bbe\u5907\u7684\uff0c\u4f46\u662f\uff0c\u8bbe\u5907\u9a71\u52a8\u7a0b\u5e8f\u4e2d\u53ef\u901a\u8fc7\u5b9e\u73b0<code>mmap()</code>\u51fd\u6570\uff0c\u4f7f\u5f97\u7528\u6237\u7a7a\u95f4\u80fd\u76f4\u63a5\u8bbf\u95ee\u8bbe\u5907\u7684\u7269\u7406\u5730\u5740\u3002\u5f53\u7528\u6237\u8bbf\u95ee\u7528\u6237\u7a7a\u95f4\u7684\u67d0\u4e2a\u7279\u5b9a\u5730\u5740\u65f6\uff0c\u5b9e\u9645\u4e0a\u4f1a\u8f6c\u5316\u4e3a\u5bf9\u8bbe\u5907\u7684\u8bbf\u95ee\u3002</p> <p>\u5f53\u7528\u6237\u8c03\u7528<code>mmap()</code>\u7cfb\u7edf\u8c03\u7528\u65f6\uff0c\u5185\u6838\u4f1a\u8fdb\u884c\u5982\u4e0b\u5904\u7406\uff1a</p> <ul> <li>\u5728\u8fdb\u7a0b\u7684\u865a\u62df\u7a7a\u95f4\u67e5\u627e\u4e00\u5757VMA</li> <li>\u5c06\u8fd9\u5757VMA\u8fdb\u884c\u6620\u5c04</li> <li>\u5982\u679c\u8bbe\u5907\u9a71\u52a8\u7a0b\u5e8f\u7684<code>file_operations</code>\u5b9a\u4e49\u4e86<code>mmap</code>\u64cd\u4f5c\uff0c\u5219\u8c03\u7528\u5b83<ul> <li>\u9a71\u52a8\u7a0b\u5e8f\u4e2d\u7684<code>mmap</code>\u64cd\u4f5c\u9700\u8981\u5efa\u7acb\u9875\u8868\uff0c\u5e76\u586b\u5145VMA\u7ed3\u6784\u4f53\u4e2d\u7684<code>vm_operations_struct</code>\u6307\u9488</li> </ul> </li> <li>\u5c06\u8fd9\u4e2aVMA\u63d2\u5165\u8fdb\u7a0b\u7684VMA\u94fe\u8868\u4e2d</li> </ul>"},{"location":"booknotes/ldd/io/#vma","title":"VMA","text":"<p>VMA\u901a\u8fc7<code>vm_area_struct</code>\u7ed3\u6784\u4f53\u63cf\u8ff0\uff0c\u9488\u5bf9VMA\u7684\u64cd\u4f5c\u90fd\u88ab\u5305\u542b\u5728<code>vm_operations_struct</code>\u7ed3\u6784\u4f53\u4e2d\uff1a <pre><code>struct vm_operations_struct {\n    // \u88abmmap()\u7cfb\u7edf\u8c03\u7528\u6240\u8c03\u7528\n    void (*open)(struct vm_area_struct * area);\n    // \u88abmunmap()\u7cfb\u7edf\u8c03\u7528\u6240\u8c03\u7528\n    void (*close)(struct vm_area_struct * area);\n    // \u5f53\u53d1\u751f\u7f3a\u9875\u5f02\u5e38\u65f6\u88ab\u8c03\u7528\n    vm_fault_t (*fault)(struct vm_fault *vmf);\n    ...\n};\n</code></pre></p> <p>\u9a71\u52a8\u7a0b\u5e8f\u4e2d\u7684<code>mmap</code>\u64cd\u4f5c\u6700\u4e3b\u8981\u7684\u4efb\u52a1\u5c31\u662f\u5efa\u7acb\u865a\u62df\u5730\u5740\u5230\u7269\u7406\u5730\u5740\u7684\u6620\u5c04\u5173\u7cfb\uff0c\u4e00\u822c\u6709\u4e24\u79cd\u65b9\u5f0f\u5b8c\u6210\u6b64\u64cd\u4f5c\uff1a</p> <ul> <li>\u8c03\u7528<code>remap_pfn_range()</code>\u51fd\u6570\uff0c\u5728\u521b\u5efa\u7684\u65f6\u5019\u5b8c\u6210     <pre><code>// \u4e3a\"addr ~ addr+size\"\u7684\u865a\u62df\u5730\u5740\u6784\u9020\u9875\u9762\n//  pfn - \u865a\u62df\u5730\u5740\u5e94\u8be5\u6620\u5c04\u5230\u7684\u7269\u7406\u5730\u5740\u7684\u9875\u5e27\u53f7(\u7269\u7406\u5730\u5740\u53f3\u79fbPAGE_SHIFT)\n//  prot - \u65b0\u9875\u6240\u8981\u6c42\u7684\u4fdd\u62a4\u5c5e\u6027\nint remap_pfn_range(struct vm_area_struct *vma, unsigned long addr, unsigned long pfn, unsigned long size, pgprot_t prot);\n</code></pre></li> <li>\u5b9e\u73b0<code>fault()</code>\u51fd\u6570\uff0c\u5728\u8bbf\u95ee\u7684\u65f6\u5019\u5b8c\u6210\uff08\u53ef\u53c2\u8003\u4e0b\u9762\u7684\u4f8b\u5b50\uff09<ul> <li>\u627e\u5230\u865a\u62df\u5730\u5740\u6240\u5bf9\u5e94\u7684\u7269\u7406\u9875\u7684\u9875\u63cf\u8ff0\u7b26</li> </ul> </li> </ul>"},{"location":"booknotes/ldd/io/#_8","title":"\u9a71\u52a8\u5b9e\u4f8b","text":"<p>\u7531\u4e8e\u786c\u4ef6\u7684\u9650\u5236\uff0c\u6211\u4eec\u7684\u5b9e\u9a8c\u5c06\u5185\u6838\u4e2d\u7533\u8bf7\u7684\u67d0\u5757\u5185\u5b58\u6620\u5c04\u5230\u7528\u6237\u7a7a\u95f4\uff0c\u800c\u4e0d\u662f\u5c06\u8bbe\u5907\u7684\u7269\u7406\u5730\u5740\u6620\u5c04\u5230\u7528\u6237\u7a7a\u95f4\u3002\u4f8b\u5b50\"gmem_mmap\"\uff0c\u521b\u5efa\u4e86\u4e00\u4e2a\"/dev/gmemp\"\u8bbe\u5907\u3002\u8be5\u8bbe\u5907\u5c31\u662f\u4e00\u5757\u5168\u5c40\u5185\u5b58(\u5927\u5c0f\u662f\u4e00\u9875)\uff0c\u7528\u6237\u53ef\u4ee5\u901a\u8fc7<code>read/write</code>\u7cfb\u7edf\u8c03\u7528\u8fdb\u884c\u8bfb\u5199\uff0c\u4e5f\u53ef\u4ee5\u901a\u8fc7<code>mmap</code>\u7cfb\u7edf\u8c03\u7528\u5c06\u5730\u5740\u6620\u5c04\u5230\u7528\u6237\u7a7a\u95f4\u8fdb\u884c\u8bfb\u5199\u3002</p> GMEMP<pre><code>void gmemp_vma_open(struct vm_area_struct *vma)\n{\n    printk(KERN_INFO \"GMEMP VMA open, vm_start %lx, vm_end %lx, vm_pgoff %lx\\n\",\n            vma-&gt;vm_start, vma-&gt;vm_end, vma-&gt;vm_pgoff);\n}\n\nvoid gmemp_vma_close(struct vm_area_struct *vma)\n{\n    printk(KERN_INFO \"GMEMP VMA close.\\n\");\n}\n\nstatic vm_fault_t gmemp_vma_nopage(struct vm_fault *vmf)\n{\n    unsigned long offset;\n    struct vm_area_struct *vma = vmf-&gt;vma;\n    struct gmemp_dev *dev = vma-&gt;vm_private_data;\n    struct page *page = NULL;\n    void *pageptr = NULL;\n\n    offset = (unsigned long)(vmf-&gt;address - vma-&gt;vm_start) + (vma-&gt;vm_pgoff &lt;&lt; PAGE_SHIFT);\n    if (offset &gt;= dev-&gt;total_size)\n        return VM_FAULT_NOPAGE;\n\n    pageptr = (void *)&amp;dev-&gt;mem[offset];\n    if (!pageptr)\n        return VM_FAULT_NOPAGE;\n\n    page = virt_to_page(pageptr);\n    get_page(page);\n    vmf-&gt;page = page;\n    return 0;\n}\n\nstruct vm_operations_struct gmemp_vm_ops = {\n    .open = gmemp_vma_open,\n    .close = gmemp_vma_close,\n    .fault = gmemp_vma_nopage,\n};\n\nint gmemp_mmap(struct file *filp, struct vm_area_struct *vma)\n{\n    /* don't do anything here: \"nopage\" will set up page table entries */\n    vma-&gt;vm_ops = &amp;gmemp_vm_ops;\n    vma-&gt;vm_private_data = filp-&gt;private_data;\n    gmemp_vma_open(vma);\n    return 0;\n}\n\nstatic const struct file_operations gmemp_fops = {\n    .mmap = gmemp_mmap,\n    ...\n};\n</code></pre>"},{"location":"booknotes/ldd/io/#_9","title":"\u7528\u6237\u7a7a\u95f4\u6d4b\u8bd5","text":"<p>\u4f8b\u5b50\"gmem_mmap_user\"\u5bf9\"GMEMP\"\u9a71\u52a8\u7684<code>mmap</code>\u64cd\u4f5c\u8fdb\u884c\u4e86\u6d4b\u8bd5\u3002\u4e00\u4e2a\u8fdb\u7a0b\u901a\u8fc7<code>write</code>\u7cfb\u7edf\u8c03\u7528\uff0c\u5f80\u5168\u5c40\u5185\u5b58\u4e2d\u5199\u5165\u6570\u636e\uff1b\u53e6\u4e00\u4e2a\u8fdb\u7a0b\u901a\u8fc7<code>mmap</code>\u7cfb\u7edf\u8c03\u7528\uff0c\u4ece\u5168\u533a\u5185\u5b58\u4e2d\u8bfb\u51fa\u6570\u636e\u3002 GMEMP Test<pre><code>#define GMEMP_DEV \"/dev/gmemp\"\nconst char data[] = \"Hello, global gmemp\\n\";\n\nvoid normal_write()\n{\n   printf(\"[Write Process] Start\\n\");\n   int fd = open(GMEMP_DEV, O_RDWR);\n\n   int n = write(fd, data, sizeof(data));\n   printf(\"[Write Process] Written %d bytes to the device\\n\", n);\n\n   close(fd);\n   printf(\"[Write Process] End\\n\");\n}\n\nvoid mmap_read()\n{\n   printf(\"[Read Process] Start\\n\");\n\n   int fd = open(GMEMP_DEV, O_RDWR);\n   const size_t MMAP_SIZE = sizeof(data);\n   void *ptr = mmap(NULL, MMAP_SIZE, PROT_READ, MAP_SHARED, fd, 0);\n\n   char buf[MMAP_SIZE + 1];\n   buf[MMAP_SIZE] = 0;\n   memcpy(buf, ptr, MMAP_SIZE);\n   printf(\"[Read Process] Read %zu bytes from the device: %s\\n\", MMAP_SIZE, buf);\n\n   munmap(ptr, MMAP_SIZE);\n   close(fd);\n\n   printf(\"[Read Process] End\\n\");\n}\n\nint main(int argc, char **argv)\n{\n   pid_t pid = fork();\n   if (pid == 0)\n   {\n      normal_write();\n      return 0;\n   }\n   wait(NULL);\n   mmap_read();\n   return 0;\n}\n</code></pre> <pre><code>&gt; ./main\n[Write Process] Start\n[Write Process] Written 21 bytes to the device\n[Write Process] End\n[Read Process] Start\n[Read Process] Read 21 bytes from the device: Hello, global gmemp\n\n[Read Process] End\n</code></pre></p>"},{"location":"booknotes/ldd/mem_port/","title":"\u4e0e\u786c\u4ef6\u901a\u4fe1","text":"<p>\u300aLinux\u8bbe\u5907\u9a71\u52a8\u7a0b\u5e8f\u300b - \u7b2c\u4e09\u7248 \u7684\u7b2c9\u7ae0\uff0c\u300aLinux\u8bbe\u5907\u9a71\u52a8\u5f00\u53d1\u8be6\u89e3\u300b - \u5b8b\u5b9d\u534e \u7684\u7b2c11\u7ae0\uff0c\u7684\u8bfb\u4e66\u7b14\u8bb0\uff0c\u672c\u6587\u4e2d\u7684\u6240\u6709\u4ee3\u7801\u53ef\u5728GitHub\u4ed3\u5e93\u4e2d\u627e\u5230\uff0c\u672c\u6587\u4e2d\u7684\u5b9e\u9a8c\u6d89\u53ca\u4e0e\u786c\u4ef6\u7684\u901a\u4fe1\uff0c\u53ef\u80fd\u4f1a\u7531\u4e8e\u786c\u4ef6\u7684\u539f\u56e0\uff0c\u65e0\u6cd5\u5f97\u5230\u671f\u671b\u7684\u7ed3\u679c</p> <p>\u8bbe\u5907\u901a\u5e38\u4f1a\u63d0\u4f9b\u4e00\u7ec4\u5bc4\u5b58\u5668\u6765\u63a7\u5236\u8bbe\u5907\u3001\u8bfb\u5199\u8bbe\u5907\u548c\u83b7\u53d6\u8bbe\u5907\u72b6\u6001\uff0c\u5373\u63a7\u5236\u5bc4\u5b58\u5668\u3001\u6570\u636e\u5bc4\u5b58\u5668\u548c\u72b6\u6001\u5bc4\u5b58\u5668\u3002\u8fd9\u4e9b\u5bc4\u5b58\u5668\u53ef\u80fd\u4f4d\u4e8eI/O\u7a7a\u95f4\u4e2d\uff0c\u4e5f\u53ef\u80fd\u4f4d\u4e8e\u5185\u5b58\u7a7a\u95f4\u4e2d\u3002</p> <ul> <li>\u5f53\u4f4d\u4e8eI/O\u7a7a\u95f4\u65f6\uff0c\u88ab\u79f0\u4e3aI/O\u7aef\u53e3</li> <li>\u5f53\u4f4d\u4e8e\u5185\u5b58\u7a7a\u95f4\u65f6\uff0c\u88ab\u79f0\u4e3aI/O\u5185\u5b58</li> </ul> <p></p>"},{"location":"booknotes/ldd/mem_port/#io","title":"I/O\u7aef\u53e3","text":"<p>\u5728x86\u5904\u7406\u5668\u4e2d\u5b58\u5728\u7740I/O\u7a7a\u95f4\uff0c\u800c\u5927\u591a\u6570\u5d4c\u5165\u5f0f\u63a7\u5236\u5668(\u5982ARM\u3001PowerPC\u7b49)\u4e2d\u5e76\u4e0d\u63d0\u4f9bI/O\u7a7a\u95f4\uff0c\u53ea\u5b58\u5728\u5185\u5b58\u7a7a\u95f4\u3002I/O\u7a7a\u95f4\u901a\u8fc7\u7279\u5b9a\u7684\u6307\u4ee4<code>in</code>\u548c<code>out</code>\u6765\u8bbf\u95ee\u3002</p> <p>\u5728linux\u4e2d\uff0c<code>/proc/ioports</code>\u8bb0\u5f55\u4e86\u7cfb\u7edf\u5206\u914d\u7684\u6240\u6709I/O\u7aef\u53e3\u3002\u4f8b\u5982\uff0c\u4e0b\u9762\u6240\u5217\u51fa\u7684\u7aef\u53e3\u90fd\u5df2\u7ecf\u88ab\u5bf9\u5e94\u7684\u9a71\u52a8\u6240\u5360\u7528\uff1a <pre><code>&gt; sudo cat /proc/ioports\n0000-0cf7 : PCI Bus 0000:00\n  0000-001f : dma1\n  0020-0021 : PNP0001:00\n    0020-0021 : pic1\n  0040-0043 : timer0\n  0050-0053 : timer1\n  0060-0060 : keyboard\n  0061-0061 : PNP0800:00\n  0064-0064 : keyboard\n  0070-0071 : rtc0\n  0080-008f : dma page reg\n  00a0-00a1 : PNP0001:00\n    00a0-00a1 : pic2\n  00c0-00df : dma2\n  00f0-00ff : fpu\n  0170-0177 : 0000:00:07.1\n    0170-0177 : ata_piix\n  01f0-01f7 : 0000:00:07.1\n    01f0-01f7 : ata_piix\n  0376-0376 : 0000:00:07.1\n    0376-0376 : ata_piix\n  03c0-03df : vga+\n  03f6-03f6 : 0000:00:07.1\n    03f6-03f6 : ata_piix\n  04d0-04d1 : PNP0001:00\n  0cf0-0cf1 : pnp 00:00\n</code></pre></p> <p><code>request_region</code>\u51fd\u6570\u7528\u4e8e\u5728\u9a71\u52a8\u7a0b\u5e8f\u4e2d\u6ce8\u518cI/O\u7aef\u53e3\u3002\u5982\u679c\u51fd\u6570\u5931\u8d25\uff0c\u53ef\u80fd\u7aef\u53e3\u5df2\u7ecf\u88ab\u5176\u4ed6\u9a71\u52a8\u6240\u5360\u7528\u3002</p> <pre><code>#include &lt;linux/ioport.h&gt;\n\n// \u6ce8\u518cI/O\u7aef\u53e3\n//  first - \u7aef\u53e3\u8d77\u59cb\u5730\u5740\n//  n - \u9700\u6ce8\u518c\u7684\u7aef\u53e3\u4e2a\u6570\n//  name - \u8bbe\u5907\u540d\u79f0\uff0c\u663e\u793a\u5728/proc/ioports\u4e2d\nstruct resource *request_region(unsigned long first, unsigned long n, const char *name);\n\n// \u91ca\u653eI/O\u7aef\u53e3\nvoid release_region(unsigned long start, unsigned long n);\n</code></pre> <p>I/O\u7aef\u53e3\u8bbf\u95ee\u7684\u4e00\u79cd\u9014\u5f84\u662f\u76f4\u63a5\u4f7f\u7528I/O\u7aef\u53e3\u64cd\u4f5c\u51fd\u6570\u3002\u5728\u8bbe\u5907\u6253\u5f00\u6216\u9a71\u52a8\u6a21\u5757\u88ab\u52a0\u8f7d\u65f6\u7533\u8bf7I/O\u7aef\u53e3\u533a\u57df\uff0c\u4e4b\u540e\u4f7f\u7528<code>inb</code>\u3001<code>outb</code>\u7b49\u8fdb\u884c\u7aef\u53e3\u8bbf\u95ee\uff0c\u6700\u540e\u5728\u8bbe\u5907\u5173\u95ed\u6216\u9a71\u52a8\u88ab\u5378\u8f7d\u65f6\u91ca\u653eI/O\u7aef\u53e3\u8303\u56f4\u3002\u4e0b\u56fe\u5c55\u793a\u4e86I/O\u7aef\u53e3\u8bbf\u95ee\u7684\u57fa\u672c\u6d41\u7a0b\uff1a</p> <p></p>"},{"location":"booknotes/ldd/mem_port/#_2","title":"\u9a71\u52a8\u7a0b\u5e8f","text":"<p>\u9a71\u52a8\"io_port\"\u901a\u8fc7<code>request_region</code>\u5728\"0x378\"I/O\u7aef\u53e3\u4e0a\uff0c\u6ce8\u518c\u4e86\u4e00\u4e2a\u540d\u4e3a\"short\"\u7684I/O\u7aef\u53e3\u9a71\u52a8\uff1a IO Port Driver<pre><code>#define DEVICE_NUM 2\n#define SHORT_MAJOR 110\n#define SHORT_PORT_BASE 0x378\n\nstatic int __init short_init(void)\n{\n    int result;\n\n    if (!request_region(SHORT_PORT_BASE, DEVICE_NUM, \"short\"))\n    {\n        printk(KERN_INFO \"[short_init] can't get I/O port address 0x%x\\n\", SHORT_PORT_BASE);\n        return -ENODEV;\n    }\n\n    result = register_chrdev(SHORT_MAJOR, \"short\", &amp;short_fops);\n    if (result &lt; 0)\n    {\n        printk(KERN_INFO \"[short_init] can't get major number\\n\");\n        release_region(SHORT_PORT_BASE, DEVICE_NUM);\n        return result;\n    }\n    printk(KERN_INFO \"[short_init] done\\n\");\n\n    return 0;\n}\nmodule_init(short_init);\n</code></pre></p> <p>\u5b89\u88c5\u4e0a\"short\"\u9a71\u52a8\u540e\uff0c\u4f1a\u5728<code>/proc/ioports</code>\u6587\u4ef6\u4e2d\u5bf9\u5e94\u7684\u4f4d\u7f6e\uff080x378\uff09\uff0c\u51fa\u73b0\"short\"\u9a71\u52a8\uff1a <pre><code>&gt; sudo cat /proc/ioports | grep short\n  0378-0379 : short\n</code></pre></p>"},{"location":"booknotes/ldd/mem_port/#_3","title":"\u7528\u6237\u8bfb\u5199","text":"<p>Linux\u5185\u6838\u63d0\u4f9b\u4e86\u4e00\u7cfb\u5217\u7684\u51fd\u6570\uff0c\u8ba9\u7528\u6237\u53ef\u4ee5\u65b9\u4fbf\u8bbf\u95eeI/O\u7aef\u53e3\uff0c\u5305\u62ec\uff1a <pre><code>// \u8bfb\u5199\u5b57\u8282\u7aef\u53e3\uff088\u4f4d\uff09\nunsigned inb(unsigned port);\nvoid outb(unsigned char byte, unsigned port);\n\n// \u8bfb\u5199\u5b57\u7aef\u53e3\uff0816\u4f4d\uff09\nunsigned inw(unsigned port);\nvoid outw(unsigned short word, unsigned port);\n\n// \u8bfb\u5199\u957f\u5b57\u7aef\u53e3\uff0832\u4f4d\uff09\nunsigned inl(unsigned port);\nvoid outl(unsigned longword, unsigned port);\n</code></pre></p> <p>\u4f8b\u5b50\"io_port_user/inp\"\u548c\"io_port_user/outp\"\u5206\u522b\u63d0\u4f9b\u4e86\u8bfb\u5199I/O\u7aef\u53e3\u7684\u65b9\u6cd5\uff1a</p> <p>inp/main.c<pre><code>static int read_and_print_one_i386(unsigned int port, int size)\n{\n    ...\n    if (size == 4)\n        printf(\"%04x: 0x%08x\\n\", port, inl(port));\n    else if (size == 2)\n        printf(\"%04x: 0x%04x\\n\", port, inw(port));\n    else\n        printf(\"%04x: 0x%02x\\n\", port, inb(port));\n    return 0;\n}\n</code></pre> outp/main.c<pre><code>static int write_one_i386(unsigned int port, int size)\n{\n    ...\n    if (size == 4)\n        outl(val, port);\n    else if (size == 2)\n        outw(val &amp; 0xffff, port);\n    else\n        outb(val &amp; 0xff, port);\n    return 0;\n}\n</code></pre></p> <p>\u9664\u4e86\u4e0a\u8ff0\u8bbf\u95ee\u65b9\u5f0f\u5916\uff0c\u7528\u6237\u4e5f\u53ef\u4ee5\u76f4\u63a5\u901a\u8fc7\u8bfb\u5199<code>/dev/port</code>\u6587\u4ef6\uff0c\u5bf9I/O\u7aef\u53e3\u8fdb\u884c\u8bbf\u95ee\u3002\u53ef\u76f4\u63a5\u53c2\u8003\u4e0a\u9762\u4f8b\u5b50\u4e2d\u7684\u5176\u4ed6\u4ee3\u7801\uff0c\u6b64\u5904\u4e0d\u518d\u8d58\u8ff0\u3002</p>"},{"location":"booknotes/ldd/mem_port/#io_1","title":"I/O\u5185\u5b58","text":"<p>\u5728linux\u4e2d\uff0c<code>/proc/iomem</code>\u8bb0\u5f55\u4e86\u7cfb\u7edf\u5206\u914d\u7684\u6240\u6709I/O\u5185\u5b58\u3002\u4f8b\u5982\uff0c\u4e0b\u9762\u6240\u5217\u51fa\u7684\u5730\u5740\u90fd\u5bf9\u5e94\u4e86\u76f8\u5e94\u7684\u9a71\u52a8\uff1a <pre><code>&gt; sudo cat /proc/iomem \n00000000-00000fff : Reserved\n00001000-0009e7ff : System RAM\n0009e800-0009ffff : Reserved\n000a0000-000bffff : PCI Bus 0000:00\n000c0000-000c7fff : Video ROM\n000ca000-000cafff : Adapter ROM\n000cb000-000ccfff : Adapter ROM\n00000000-00000000 : PCI Bus 0000:00\n00000000-00000000 : PCI Bus 0000:00\n000d0000-000dbfff : PCI Bus 0000:00\n000dc000-000fffff : Reserved\n  000f0000-000fffff : System ROM\n00100000-bfedffff : System RAM\nbfee0000-bfefefff : ACPI Tables\nbfeff000-bfefffff : ACPI Non-volatile Storage\nbff00000-bfffffff : System RAM\nc0000000-febfffff : PCI Bus 0000:00\n  c0000000-c0003fff : 0000:00:10.0\n  e5b00000-e5bfffff : PCI Bus 0000:22\n  ...\n</code></pre></p> <p>\u548cI/O\u7aef\u53e3\u4e00\u6837\uff0c\u5728\u4f7f\u7528I/O\u5185\u5b58\u524d\uff0c\u9700\u8981\u5148\u901a\u8fc7<code>request_mem_region</code>\u5411\u5185\u6838\u7533\u8bf7\uff1a <pre><code>#include &lt;linux/ioport.h&gt;\n\n// \u7533\u8bf7I/O\u5185\u5b58\uff0c\u4ecestart\u5f00\u59cb\u5206\u914dlen\u5b57\u8282\u957f\u7684\u5185\u5b58\u533a\u57df\n//  name - \u8bbe\u5907\u540d\u79f0\uff0c\u663e\u793a\u5728/proc/iomem\u4e2d\nstruct resource *request_mem_region(unsigned long start, unsigned long len, char *name);\n\n// \u91ca\u653eI/O\u5185\u5b58\nvoid release_mem_region(unsigned long start, unsigned long len);\n</code></pre></p> <p>I/O\u5185\u5b58\u7684\u8bbf\u95ee\u9996\u5148\u662f\u8c03\u7528<code>request_mem_region</code>\u7533\u8bf7\u8d44\u6e90\uff0c\u63a5\u7740\u5c06\u5bc4\u5b58\u5668\u5730\u5740\u901a\u8fc7<code>ioremap</code>\u6620\u5c04\u5230\u5185\u6838\u7a7a\u95f4\u865a\u62df\u5730\u5740\uff0c\u4e4b\u540e\u5c31\u53ef\u4ee5\u901a\u8fc7Linux\u8bbe\u5907\u8bbf\u95ee\u7f16\u7a0b\u63a5\u53e3\u8bbf\u95ee\u8fd9\u4e9b\u8bbe\u5907\u7684\u5bc4\u5b58\u5668\u4e86\u3002\u8bbf\u95ee\u5b8c\u6210\u540e\uff0c\u5e94\u5bf9<code>ioremap</code>\u7533\u8bf7\u7684\u865a\u62df\u5730\u5740\u8fdb\u884c\u91ca\u653e\uff0c\u5e76\u91ca\u653e<code>release_mem_region</code>\u7533\u8bf7\u7684I/O\u5185\u5b58\u8d44\u6e90\u3002\u4e0b\u56fe\u5c55\u793a\u4e86I/O\u5185\u5b58\u8bbf\u95ee\u7684\u57fa\u672c\u6d41\u7a0b\uff1a</p> <p></p>"},{"location":"booknotes/ldd/mem_port/#_4","title":"\u9a71\u52a8\u7a0b\u5e8f","text":"<p>\u9a71\u52a8\"io_mem\"\u901a\u8fc7<code>request_mem_region</code>\u5728\"0xfe800000\"\u5730\u5740\u4e0a\uff0c\u6ce8\u518c\u4e86\u4e00\u4e2a\u540d\u4e3a\"short\"\u7684I/O\u5185\u5b58\u9a71\u52a8\uff1a</p> IO Mem Driver<pre><code>#define DEVICE_NUM 2\n#define SHORT_MAJOR 109\n#define SHORT_MEM_BASE 0xfe800000  // pnp\nunsigned long io_short_base = 0;\n\nstatic int __init short_init(void)\n{\n    int result;\n\n    if (!request_mem_region(SHORT_MEM_BASE, DEVICE_NUM, \"short\"))\n    {\n        printk(KERN_INFO \"[short_init] can't get I/O mem address 0x%x\\n\", SHORT_MEM_BASE);\n        return -ENODEV;\n    }\n    io_short_base = (unsigned long) ioremap(SHORT_MEM_BASE, DEVICE_NUM);\n    printk(KERN_INFO \"[short_init] ioremap returns 0x%lx\\n\", io_short_base);\n\n    result = register_chrdev(SHORT_MAJOR, \"short\", &amp;short_fops);\n    if (result &lt; 0)\n    {\n        printk(KERN_INFO \"[short_init] can't get major number\\n\");\n        release_mem_region(SHORT_MEM_BASE, DEVICE_NUM);\n        return result;\n    }\n    printk(KERN_INFO \"[short_init] done\\n\");\n\n    return 0;\n}\nmodule_init(short_init);\n</code></pre> <p>\u5b89\u88c5\u4e0a\"short\"\u9a71\u52a8\u540e\uff0c\u4f1a\u5728<code>/proc/iomem</code>\u6587\u4ef6\u4e2d\u5bf9\u5e94\u7684\u4f4d\u7f6e\uff080xfe800000\uff09\uff0c\u51fa\u73b0\"short\"\u9a71\u52a8\uff1a <pre><code>&gt; sudo cat /proc/iomem | grep short\n    fe800000-fe800001 : short\n</code></pre></p>"},{"location":"booknotes/ldd/mem_port/#_5","title":"\u7528\u6237\u8bfb\u5199","text":"<p>\u5f53I/O\u5185\u5b58\u901a\u8fc7<code>ioremap</code>\u6620\u5c04\u5230\u5185\u6838\u7a7a\u95f4\u865a\u62df\u5730\u5740\u540e\uff0c\u5185\u6838\u7a7a\u95f4\u5c31\u53ef\u4ee5\u901a\u8fc7\u6b64\u865a\u62df\u5730\u5740\uff0c\u81ea\u7531\u8bbf\u95eeI/O\u5185\u5b58\u7a7a\u95f4\u4e86\u3002\u5982\u679c\u60f3\u8ba9\u7528\u6237\u7a7a\u95f4\u4e5f\u80fd\u8bbf\u95eeI/O\u5185\u5b58\uff0c\u53ef\u5728\u9a71\u52a8\u4e2d\u5b9e\u73b0<code>mmap</code>\u51fd\u6570\uff0c\u5c06I/O\u5185\u5b58\u7684\u5730\u5740\u6620\u5c04\u5230\u7528\u6237\u7a7a\u95f4\u3002\u6216\u8005\uff0c\u4e5f\u53ef\u4ee5\u901a\u8fc7\u8bfb\u5199<code>/dev/mem</code>\u6587\u4ef6\uff0c\u5728\u7528\u6237\u7a7a\u95f4\u8bbf\u95eeI/O\u5185\u5b58\u3002</p> <p>\u4f8b\u5b50\"io_mem_user/inm\"\u548c\"io_mem_user/outm\"\u901a\u8fc7\u8bfb\u5199<code>/dev/mem</code>\u6587\u4ef6\uff0c\u53ef\u8bbf\u95ee\u76f8\u5e94\u4f4d\u7f6e\u7684I/O\u5185\u5b58\u3002</p>"},{"location":"booknotes/ldd/module/","title":"\u5185\u6838\u6a21\u5757","text":"<p>\u300aLinux\u8bbe\u5907\u9a71\u52a8\u7a0b\u5e8f\u300b - \u7b2c\u4e09\u7248 \u7684\u7b2c2\u7ae0\uff0c\u300aLinux\u8bbe\u5907\u9a71\u52a8\u5f00\u53d1\u8be6\u89e3\u300b - \u5b8b\u5b9d\u534e \u7684\u7b2c4\u7ae0\uff0c\u7684\u8bfb\u4e66\u7b14\u8bb0\uff0c\u672c\u6587\u4e2d\u7684\u6240\u6709\u4ee3\u7801\u53ef\u5728GitHub\u4ed3\u5e93\u4e2d\u627e\u5230</p>"},{"location":"booknotes/ldd/module/#_2","title":"\u6a21\u5757\u521d\u63a2","text":"<p>\u6a21\u5757\"Hello World\"\u5b9e\u73b0\u4e86\u4e00\u4e2a\u6700\u7b80\u5355\u7684\u6a21\u5757\uff0c\u5176\u4e2d\"hello.c\"\u5b9a\u4e49\u4e86\u4e24\u4e2a\u51fd\u6570\uff1a</p> <ul> <li><code>hello_init</code>\u5728\u6a21\u5757\u88ab\u88c5\u8f7d\u5230\u5185\u6838\u65f6\u88ab\u8c03\u7528</li> <li><code>hello_exit</code>\u5728\u6a21\u5757\u88ab\u79fb\u9664\u65f6\u88ab\u8c03\u7528</li> </ul> <pre><code>#include &lt;linux/init.h&gt;\n#include &lt;linux/module.h&gt;\n\nstatic int hello_init(void)\n{\n   printk(KERN_INFO \"Hello World enter\\n\");\n   return 0;\n}\nmodule_init(hello_init);\n\nstatic void hello_exit(void)\n{\n   printk(KERN_INFO \"Hello World exit\\n \");\n}\nmodule_exit(hello_exit);\n</code></pre>"},{"location":"booknotes/ldd/module/#_3","title":"\u7f16\u8bd1\u6a21\u5757","text":"<p>\u7f16\u8bd1\u6a21\u5757\u9700\u8981\u51c6\u5907\u5185\u6838\u6811\uff0c\u53ef\u4f7f\u7528Ubuntu\u7cfb\u7edf\u81ea\u5e26\u7684\u9ed8\u8ba4\u5185\u6838\u76ee\u5f55<code>/lib/modules/`uname -r`/build</code>\u3002\u5bf9\u4e8e\"hello world\"\u6a21\u5757\uff0c</p> <ul> <li><code>obj-m := hello.o</code>\u914d\u7f6e\u6307\u5b9a\u4e86\u6a21\u5757\u9700\u8981\u4ece\u76ee\u6807\u6587\u4ef6<code>hello.o</code>\u4e2d\u6784\u9020</li> <li><code>make -C $(KDIR) M=$(PWD) modules</code>\u547d\u4ee4\u5c06\u5f53\u524d\u5de5\u4f5c\u73af\u5883\u548c\u5185\u6838\u6784\u9020\u7cfb\u7edf\u76f8\u8054\u7cfb\uff0c\u5b8c\u6210\u4e86\u6a21\u5757\u7684\u6784\u5efa</li> </ul> <p>\u4e0b\u9762\u662f\u5b8c\u6574\u7684<code>Makefile</code>\u5185\u5bb9\uff1a</p> <pre><code>MODULE_NAME := hello\n\n# \u5982\u679c\u5df2\u7ecf\u5b9a\u4e49KERNELRELEASE\uff0c\u8bf4\u660e\u5f53\u524d\u4efb\u52a1\u5728\u5185\u6838\u6784\u9020\u7cfb\u7edf\u4e2d\uff0c\u53ef\u5229\u7528\u5185\u5efa\u8bed\u53e5\nifneq (${KERNELRELEASE},)\n\nobj-m := $(MODULE_NAME).o\n\nelse\n\n# \u5f53\u524d\u7cfb\u7edf\u7684\u5185\u6838\u6e90\u4ee3\u7801\u76ee\u5f55\nKDIR ?= /lib/modules/`uname -r`/build\n\n# -C : \u6539\u53d8\u76ee\u5f55\u5230\u6307\u5b9a\u7684\u4f4d\u7f6e(\u5373\u5185\u6838\u6e90\u4ee3\u7801\u76ee\u5f55)\uff0c\u5176\u4e2d\u4fdd\u5b58\u6709\u5185\u6838\u7684\u9876\u5c42makefile\u6587\u4ef6\n# M= : \u5728\u6784\u9020\"modules\"\u76ee\u6807\u4e4b\u524d\u8fd4\u56de\u5230\u6a21\u5757\u6e90\u4ee3\u7801\u76ee\u5f55\uff0c\u5e76\u6307\u5411obj-m\u53d8\u91cf\u4e2d\u8bbe\u5b9a\u7684\u6a21\u5757.o\u6587\u4ef6\ndefault:\n    make -C $(KDIR) M=$(PWD) modules\n\nclean:\n    make -C $(KDIR) M=$(PWD) clean\n\nendif\n</code></pre>"},{"location":"booknotes/ldd/module/#_4","title":"\u88c5\u8f7d\u6a21\u5757","text":"<p><code>insmod</code>\u548c<code>modprobe</code>\u53ef\u7528\u4e8e\u88c5\u8f7d\u6a21\u5757\u3002<code>modprobe</code>\u547d\u4ee4\u66f4\u5f3a\u5927\uff0c\u4f1a\u540c\u65f6\u52a0\u8f7d\u8be5\u6a21\u5757\u6240\u4f9d\u8d56\u7684\u5176\u4ed6\u6a21\u5757\uff0c\u56e0\u6b64\u9700\u8981\u5728<code>/lib/modules/&lt;kernel-version&gt;/modules.dep</code>\u6587\u4ef6\u4e2d\u6307\u5b9a\u4f9d\u8d56\u5173\u7cfb\u3002</p> <p>\u6a21\u5757\u88c5\u8f7d\u5b8c\u6210\u540e\uff0c\u4f1a\u5728\u4e0b\u9762\u4e24\u4e2a\u76ee\u5f55\u4e2d\u52a0\u5165\u76f8\u5173\u4fe1\u606f\uff1a</p> <ul> <li><code>/proc/modules</code><ul> <li><code>lsmod</code>\u547d\u4ee4\u5c31\u662f\u8bfb\u53d6<code>/proc/modules</code>\u6587\u4ef6\u4e2d\u7684\u4fe1\u606f</li> </ul> </li> <li><code>/sys/module/&lt;module-name&gt;</code></li> </ul> <pre><code># \u88c5\u8f7d\u6a21\u5757\n&gt; sudo insmod hello.ko\n&gt; tail -n 1 /var/log/kern.log\nJun 19 12:09:34 ben-vm-base kernel: [181105.450980] Hello World enter\n\n# \u67e5\u770b\u6a21\u5757\n&gt; cat /proc/modules | grep hello\nhello 16384 0 - Live 0x0000000000000000 (OE)\n&gt; lsmod | grep hello\nhello                  16384  0\n&gt; ls /sys/module/hello/\ncoresize  holders  initsize  initstate  notes  refcnt  sections  srcversion  taint  uevent\n\n# \u5378\u8f7d\u6a21\u5757\n&gt; sudo rmmod hello.ko\n&gt; tail -n 2 /var/log/kern.log\nJun 19 12:09:34 ben-vm-base kernel: [181105.450980] Hello World enter\nJun 19 12:10:23 ben-vm-base kernel: [181154.345969] Hello World exit\n</code></pre>"},{"location":"booknotes/ldd/module/#_5","title":"\u6a21\u5757\u53c2\u6570","text":"<p>\u6a21\u5757\"book\"\u901a\u8fc7<code>module_param</code>\u6dfb\u52a0\u4e86\u6a21\u5757\u53c2\u6570\uff0c\u56e0\u6b64\u5728\u88c5\u8f7d\u65f6\uff0c\u5229\u7528<code>book_name=&lt;name&gt; book_num=&lt;num&gt;</code>\u5373\u53ef\u81ea\u5b9a\u4e49\u6a21\u5757\u7684\u53c2\u6570\u5185\u5bb9\uff0c<code>/sys/module/book/parameters</code>\u4e2d\u8bb0\u5f55\u4e86\u53c2\u6570\u7684\u5185\u5bb9\u3002</p> <p>book.c<pre><code>static char *book_name = \"Linux Device Driver\";\nmodule_param(book_name, charp, S_IRUGO);\n\nstatic int book_num = 4000;\nmodule_param(book_num, int , S_IRUGO);\n</code></pre> \u88c5\u8f7d\u6a21\u5757\u65f6\u4f20\u5165\u53c2\u6570<pre><code>&gt; sudo insmod book.ko book_name=\"Good_Book\" book_num=1000\n\n&gt; cat /sys/module/book/parameters/book_name\nGood_Book\n&gt; cat /sys/module/book/parameters/book_num\n1000\n</code></pre></p>"},{"location":"booknotes/ldd/module/#_6","title":"\u6a21\u5757\u7b26\u53f7","text":"<p><code>insmod</code>\u4f7f\u7528\u516c\u5171\u5185\u6838\u7b26\u53f7\u8868\u6765\u89e3\u6790\u6a21\u5757\u4e2d\u672a\u5b9a\u4e49\u7684\u7b26\u53f7\u3002\u5185\u6838\u7b26\u53f7\u8868\u53ef\u901a\u8fc7<code>cat /proc/kallsyms</code>\u67e5\u770b\u3002</p> <p>\u5f53\u6a21\u5757\u88c5\u5165\u5185\u6838\u540e\uff0c\u53ef\u901a\u8fc7\u4e0b\u9762\u7684\u5b8f\u5bfc\u51fa\u7684\u4efb\u4f55\u7b26\u53f7\uff0c\u5bfc\u51fa\u7684\u7b26\u53f7\u4f1a\u53d8\u6210\u5185\u6838\u7b26\u53f7\u8868\u7684\u4e00\u90e8\u5206\uff0c\u4f9b\u5176\u4ed6\u6a21\u5757\u4f7f\u7528\uff1a</p> <ul> <li><code>EXPORT_SYMBOL(name)</code></li> <li><code>EXPORT_SYMBOL_GPL(name)</code></li> </ul> <p>\u6a21\u5757\"symbol\"\u4e2d\uff0c\"export\"\u6a21\u5757\u5bfc\u51fa\u4e86<code>hello_export</code>\u51fd\u6570\uff0c\"import\"\u6a21\u5757\u4f7f\u7528\u4e86<code>hello_export</code>\u51fd\u6570:</p> export.cimport.c <pre><code>void hello_export(void)\n{\n    printk(KERN_INFO \"Hello from another module\");\n}\nEXPORT_SYMBOL(hello_export);\n</code></pre> <pre><code>extern void hello_export(void);\n\nstatic int import_init(void)\n{\n    hello_export();\n    printk(KERN_INFO \"Import module enter\\n\");\n    return 0;\n}\nmodule_init(import_init);\n</code></pre> <pre><code># \u5148\u88c5\u8f7dexport, \u518d\u88c5\u8f7dimport\n&gt; sudo insmod export.ko\n&gt; sudo insmod import.ko\n&gt; tail -n 3 /var/log/kern.log\nJun 19 14:39:40 ben-vm-base kernel: [190111.168523] Export module enter\nJun 19 14:39:40 ben-vm-base kernel: [190111.185477] Hello from another module\nJun 19 14:39:40 ben-vm-base kernel: [190111.185481] Import module enter\n\n# import\u4f9d\u8d56export\n&gt; modinfo import.ko\n...\ndepends:        export\n...\n\n# \u67e5\u770b\u516c\u5171\u5185\u6838\u7b26\u53f7\u8868\n&gt; cat /proc/kallsyms | grep hello_export\n0000000000000000 r __kstrtab_hello_export       [export]\n0000000000000000 r __kstrtabns_hello_export     [export]\n0000000000000000 r __ksymtab_hello_export       [export]\n0000000000000000 T hello_export [export]\n\n# \u5148\u5378\u8f7dimport, \u518d\u5378\u8f7dexport\n&gt; sudo rmmod import.ko\n&gt; sudo rmmod export.ko\n&gt; tail -n 5 /var/log/kern.log\nJun 19 14:39:40 ben-vm-base kernel: [190111.168523] Export module enter\nJun 19 14:39:40 ben-vm-base kernel: [190111.185477] Hello from another module\nJun 19 14:39:40 ben-vm-base kernel: [190111.185481] Import module enter\nJun 19 14:41:49 ben-vm-base kernel: [190240.103068] Import module exit\nJun 19 14:41:49 ben-vm-base kernel: [190240.138433] Export module exit\n</code></pre>"},{"location":"booknotes/ml/decision_tree/","title":"\u51b3\u7b56\u6811","text":"<p>\u300a\u7edf\u8ba1\u5b66\u4e60\u65b9\u6cd5\u300b - \u674e\u822a - \u7b2c\u4e8c\u7248 \u7b2c\u4e94\u7ae0\uff0c\u4ee5\u53ca\u300aPython\u6570\u636e\u624b\u518c\u300b - Jake VanderPlas \u7b2c\u4e94\u7ae0\u7684\u8bfb\u4e66\u7b14\u8bb0\uff0c\u672c\u6587\u4e2d\u7684\u6240\u6709\u4ee3\u7801\u53ef\u5728GitHub\u4ed3\u5e93\u4e2d\u627e\u5230</p>"},{"location":"booknotes/ml/decision_tree/#_2","title":"\u7406\u8bba","text":"<p>\u51b3\u7b56\u6811(decision tree)\u662f\u4e00\u79cd\u57fa\u672c\u7684\u5206\u7c7b\u4e0e\u56de\u5f52\u65b9\u6cd5\u3002\u672c\u6587\u4e3b\u8981\u8ba8\u8bba\u7528\u4e8e\u5206\u7c7b\u7684\u51b3\u7b56\u6811\u3002\u5728\u5206\u7c7b\u95ee\u9898\u79cd\uff0c\u51b3\u7b56\u6811\u53ef\u4ee5\u8ba4\u4e3a\u662f\u7ed9\u5b9a\u7279\u5f81\u6761\u4ef6\u4e0b\u7c7b\u7684\u6761\u4ef6\u6982\u7387\u5206\u5e03\u3002\u6240\u6709\u7ed9\u5b9a\u7684\u7279\u5f81\u6761\u4ef6\u5c06\u7279\u5f81\u7a7a\u95f4\u5212\u5206\u4e3a\u4e92\u4e0d\u76f8\u4ea4\u7684\u5355\u5143\u3002\u51b3\u7b56\u6811\u7684\u4e00\u6761\u8def\u5f84\u5bf9\u5e94\u4e8e\u5212\u5206\u79cd\u7684\u4e00\u4e2a\u5355\u5143\u3002\u5404\u53f6\u8282\u70b9(\u5355\u5143)\u4e0a\u7684\u6761\u4ef6\u6982\u7387\u5f80\u5f80\u504f\u5411\u67d0\u4e00\u4e2a\u7c7b\uff0c\u51b3\u7b56\u6811\u5206\u7c7b\u65f6\u5c06\u8be5\u5355\u5143\u7684\u5b9e\u4f8b\u5f3a\u884c\u5206\u5230\u6761\u4ef6\u6982\u7387\u5927\u7684\u90a3\u4e00\u7c7b\u53bb\u3002</p> <p>\u51b3\u7b56\u6811\u7684\u4e3b\u8981\u4f18\u70b9\u662f\u6a21\u578b\u5177\u6709\u53ef\u8bfb\u6027\uff0c\u5206\u7c7b\u901f\u5ea6\u5feb\u3002\u901a\u5e38\u5305\u62ec3\u4e2a\u6b65\u9aa4\uff1a</p> <ul> <li>\u7279\u5f81\u9009\u62e9</li> <li>\u51b3\u7b56\u6811\u7684\u751f\u6210</li> <li>\u51b3\u7b56\u6811\u7684\u4fee\u526a</li> </ul> <p>\u5e38\u89c1\u7684\u51b3\u7b56\u6811\u7b97\u6cd5\u6709\uff1a</p> <ul> <li>ID3\u7b97\u6cd5</li> <li>C4.5\u7b97\u6cd5</li> <li>CART\u7b97\u6cd5</li> </ul> <p>\u4e09\u79cd\u7b97\u6cd5\u7684\u7279\u70b9\u5982\u4e0b\uff1a</p> \u7b97\u6cd5 \u652f\u6301\u6a21\u578b \u6811\u7ed3\u6784 \u7279\u5f81\u9009\u62e9 \u8fde\u7eed\u503c\u5904\u7406 \u7f3a\u5931\u503c\u5904\u7406 \u526a\u679d ID3 \u5206\u7c7b \u591a\u53c9\u6811 \u4fe1\u606f\u589e\u76ca \u4e0d\u652f\u6301 \u4e0d\u652f\u6301 \u4e0d\u652f\u6301 C4.5 \u5206\u7c7b \u591a\u53c9\u6811 \u4fe1\u606f\u589e\u76ca\u6bd4 \u652f\u6301 \u652f\u6301 \u652f\u6301 CART \u5206\u7c7b\uff0c\u56de\u5f52 \u4e8c\u53c9\u6811 \u57fa\u5c3c\u7cfb\u6570,\u5747\u65b9\u5dee \u652f\u6301 \u652f\u6301 \u652f\u6301 <p>\u8868\u683c\u6765\u81ea\u6587\u7ae0</p>"},{"location":"booknotes/ml/decision_tree/#_3","title":"\u7279\u5f81\u9009\u62e9","text":""},{"location":"booknotes/ml/decision_tree/#_4","title":"\u4fe1\u606f\u589e\u76ca","text":"<p>\u5728\u4fe1\u606f\u8bba\u4e0e\u6982\u7387\u7edf\u8ba1\u4e2d\uff0c\u71b5(entropy)\u662f\u8868\u793a\u968f\u673a\u53d8\u91cf\u4e0d\u786e\u5b9a\u6027\u7684\u5ea6\u91cf\u3002\u968f\u673a\u53d8\u91cf \\(X\\) \u7684\u71b5\u5b9a\u4e49\u4e3a\uff1a</p> \\[H(X) = - \\sum_{i=1}^{n}p_i \\log p_i\\] <p>\u5176\u4e2d\uff0c \\(p_i\\) \u662f \\(X=x_i\\) \u7684\u6982\u7387\u3002\u71b5\u8d8a\u5927\uff0c\u968f\u673a\u53d8\u91cf\u7684\u4e0d\u786e\u5b9a\u6027\u5c31\u8d8a\u5927\u3002\u4f8b\u5982\uff0c\u5f53\u968f\u673a\u53d8\u91cf\u53ea\u53d6\u201c1,0\u201d\u4e24\u4e2a\u503c\uff08\u4f2f\u52aa\u5229\u5206\u5e03\uff09\u65f6\uff0c\u71b5 \\(H(p)\\) \u968f\u6982\u7387 \\(p\\) \u53d8\u5316\u7684\u66f2\u7ebf\u5982\u4e0b\u56fe\u6240\u793a\uff1a</p> <p></p> <p>\u5f53\u6982\u7387 \\(p\\) \u5e73\u5747\u5206\u5e03\uff08\u7b49\u4e8e0.5\uff09\u65f6\uff0c\u71b5\u6700\u5927\u3002\u6362\u53e5\u8bdd\u8bf4\uff0c\u5f53\u201c1,0\u201d\u51fa\u73b0\u7684\u6982\u7387\u76f8\u7b49\u65f6\uff0c\u4e0d\u786e\u5b9a\u6027\u6700\u5927\u3002</p> <p>\u6761\u4ef6\u71b5 \\(H(Y|X)\\) \u8868\u793a\u5728\u5df2\u77e5\u968f\u673a\u53d8\u91cf \\(X\\) \u7684\u6761\u4ef6\u4e0b\u968f\u673a\u53d8\u91cf \\(Y\\) \u7684\u4e0d\u786e\u5b9a\u6027\u3002\u5176\u5b9a\u4e49\u4e3a \\(X\\) \u7ed9\u5b9a\u6761\u4ef6\u4e0b \\(Y\\) \u7684\u6761\u4ef6\u6982\u7387\u5206\u5e03\u7684\u71b5\u5bf9 \\(X\\) \u7684\u6570\u5b66\u671f\u671b\uff1a</p> \\[H(Y|X) = \\sum_{i=1}^{n}p_iH(Y|X=x_i)\\] <p>\u5176\u4e2d\uff0c \\(p_i = P(X=x_i), i = 1,2,...,n\\) \u3002</p> <p>\u5b9a\u4e49\uff08\u4fe1\u606f\u589e\u76ca\uff09 \u7279\u5f81 \\(A\\) \u5bf9\u8bad\u7ec3\u6570\u636e\u96c6 \\(D\\) \u7684\u4fe1\u606f\u589e\u76ca \\(g(D, A)\\)\uff0c\u5b9a\u4e49\u4e3a\u96c6\u5408 \\(D\\) \u7684\u7ecf\u9a8c\u71b5 \\(H(D)\\) \u4e0e\u7279\u5f81 \\(A\\) \u7ed9\u5b9a\u6761\u4ef6\u4e0b \\(D\\) \u7684\u7ecf\u9a8c\u6761\u4ef6\u71b5 \\(H(D, A)\\) \u4e4b\u5dee\uff0c\u5373</p> \\[g(D, A) = H(D) - H(D|A)\\] <p>\u4fe1\u606f\u589e\u76ca\u8868\u793a\u7531\u4e8e\u7279\u5f81 \\(A\\) \u800c\u4f7f\u5f97\u5bf9\u6570\u636e\u96c6 \\(D\\) \u7684\u5206\u7c7b\u7684\u4e0d\u786e\u5b9a\u6027\u51cf\u5c11\u7684\u7a0b\u5ea6\u3002\u4fe1\u606f\u589e\u76ca\u5927\u7684\u7279\u5f81\u5177\u6709\u66f4\u5f3a\u7684\u5206\u7c7b\u80fd\u529b\u3002</p> <p>\u6839\u636e\u4fe1\u606f\u589e\u76ca\u51c6\u5219\u7684\u7279\u5f81\u9009\u62e9\u65b9\u6cd5\u662f\uff1a\u5bf9\u8bad\u7ec3\u6570\u636e(\u6216\u5b50\u96c6) \\(D\\)\uff0c\u8ba1\u7b97\u5176\u6bcf\u4e2a\u7279\u5f81\u7684\u4fe1\u606f\u589e\u76ca\uff0c\u5e76\u6bd4\u8f83\u5b83\u4eec\u7684\u5927\u5c0f\uff0c\u9009\u62e9\u4fe1\u606f\u589e\u76ca\u6700\u5927\u7684\u7279\u5f81\u3002</p> <p>\u4f8b1 \u5047\u8bbe\u6211\u4eec\u60f3\u901a\u8fc7\u5982\u4e0b\u7684\u201c\u8d37\u6b3e\u7533\u8bf7\u6837\u672c\u6570\u636e\u8868\u201d\uff0c\u5b66\u4e60\u4e00\u4e2a\u8d37\u6b3e\u7533\u8bf7\u7684\u51b3\u7b56\u6811\uff0c\u7528\u4ee5\u5bf9\u672a\u6765\u7684\u8d37\u6b3e\u7533\u8bf7\u8fdb\u884c\u5206\u7c7b\u3002\u5982\u4f55\u7528\u4fe1\u606f\u589e\u76ca\u9009\u62e9\u7279\u5f81\u6765\u5212\u5206\u7279\u5f81\u7a7a\u95f4\uff1f</p> ID \u5e74\u9f84 \u6709\u5de5\u4f5c \u6709\u81ea\u5df1\u7684\u623f\u5b50 \u4fe1\u8d37\u60c5\u51b5 \u7c7b\u522b 1 \u9752\u5e74 \u5426 \u5426 \u4e00\u822c \u5426 2 \u9752\u5e74 \u5426 \u5426 \u597d \u5426 3 \u9752\u5e74 \u662f \u5426 \u597d \u662f 4 \u9752\u5e74 \u662f \u662f \u4e00\u822c \u662f 5 \u9752\u5e74 \u5426 \u5426 \u4e00\u822c \u5426 6 \u4e2d\u5e74 \u5426 \u5426 \u4e00\u822c \u5426 7 \u4e2d\u5e74 \u5426 \u5426 \u597d \u5426 8 \u4e2d\u5e74 \u662f \u662f \u597d \u662f 9 \u4e2d\u5e74 \u5426 \u662f \u975e\u5e38\u597d \u662f 10 \u4e2d\u5e74 \u5426 \u662f \u975e\u5e38\u597d \u662f 11 \u8001\u5e74 \u5426 \u662f \u975e\u5e38\u597d \u662f 12 \u8001\u5e74 \u5426 \u662f \u597d \u662f 13 \u8001\u5e74 \u662f \u5426 \u597d \u662f 14 \u8001\u5e74 \u662f \u5426 \u975e\u5e38\u597d \u662f 15 \u8001\u5e74 \u5426 \u5426 \u4e00\u822c \u5426 <p>\u89e3 \u9996\u5148\u8ba1\u7b97\u7ecf\u9a8c\u71b5 \\(H(D)\\) \uff1a</p> \\[H(D) = -\\sum_{k=1}^{K} \\frac{|C_k|}{|D|} \\log_2 \\frac{|C_k|}{|D|} = -\\frac{9}{15} \\log_2 \\frac{9}{15} -\\frac{6}{15} \\log_2 \\frac{6}{15} = 0.971\\] <p>\u7136\u540e\u8ba1\u7b97\u5404\u7279\u5f81\u5bf9\u6570\u636e\u96c6 \\(D\\) \u7684\u4fe1\u606f\u589e\u76ca\u3002\u5206\u522b\u4ee5 \\(A_1, A_2, A_3, A_4\\) \u8868\u793a\u5e74\u9f84\u3001\u6709\u5de5\u4f5c\u3001\u6709\u81ea\u5df1\u7684\u623f\u5b50\u548c\u4fe1\u8d37\u60c5\u51b54\u4e2a\u7279\u5f81\u3002\u5206\u522b\u8ba1\u7b97\u6bcf\u4e2a\u7279\u5f81\u5728\u6570\u636e\u96c6 \\(D\\) \u4e0b\u7684\u4fe1\u606f\u589e\u76ca\uff1a</p> \\[\\begin{aligned} g(D, A_1) &amp;= H(D) - H(D|A_1) = H(D) - [\\frac{5}{15}H(D_1) + \\frac{5}{15}H(D_2) + \\frac{5}{15}H(D_3)] \\\\ &amp;= 0.971 - [\\frac{5}{15}(-\\frac{2}{5}\\log_2\\frac{2}{5} -\\frac{3}{5}\\log_2\\frac{3}{5}) + \\frac{5}{15}(-\\frac{3}{5}\\log_2\\frac{3}{5} -\\frac{2}{5}\\log_2\\frac{2}{5}) \\\\ &amp;\\quad + \\frac{5}{15}(-\\frac{4}{5}\\log_2\\frac{4}{5} -\\frac{1}{5}\\log_2\\frac{1}{5})] \\\\ &amp;= 0.971 - 0.888 = 0.083 \\end{aligned}\\] <p>\u6309\u7167\u540c\u6837\u7684\u65b9\u6cd5\uff0c\u8ba1\u7b97\u51fa \\(g(D, A_2)=0.324, g(D, A_3)=0.420, g(D, A_4)=0.363\\)\u3002\u7531\u4e8e\u7279\u5f81 \\(A_3\\) (\u6709\u81ea\u5df1\u7684\u623f\u5b50)\u7684\u4fe1\u606f\u589e\u76ca\u503c\u6700\u5927\uff0c\u6240\u4ee5\u9009\u62e9\u7279\u5f81 \\(A_3\\) \u4f5c\u4e3a\u7b2c\u4e00\u5c42\u7684\u6700\u4f18\u7279\u5f81\u3002</p> <p>\u7279\u5f81 \\(A_3\\) \u5c06\u6570\u636e\u96c6\u5212\u5206\u4e3a\u4e24\u7ec4 \\(D1,D2\\)\u3002\u5982\u679c \\(D1,D2\\) \u8fd8\u9700\u8981\u6839\u636e\u7279\u5f81\u8fdb\u884c\u5212\u5206(\u53c2\u89c1\u540e\u9762\u7ae0\u8282\u201c\u51b3\u7b56\u6811\u7684\u751f\u6210\u201d)\uff0c\u5e94\u518d\u6b21\u5206\u522b\u8ba1\u7b97 \\(D1,D2\\) \u6570\u636e\u96c6\u4e0b \\(A_1,A_2,A_4\\) \u7684\u4fe1\u606f\u589e\u76ca\uff0c\u4ee5\u9009\u53d6\u4e0b\u4e00\u5c42\u7684\u6700\u4f18\u7279\u5f81\u3002</p>"},{"location":"booknotes/ml/decision_tree/#_5","title":"\u4fe1\u606f\u589e\u76ca\u6bd4","text":"<p>\u4ee5\u4fe1\u606f\u589e\u76ca\u4f5c\u4e3a\u5212\u5206\u8bad\u7ec3\u6570\u636e\u96c6\u7684\u7279\u5f81\uff0c\u5b58\u5728\u504f\u5411\u4e8e\u9009\u62e9\u53d6\u503c\u8f83\u591a\u7684\u7279\u5f81\u7684\u95ee\u9898\u3002\u4f7f\u7528\u4fe1\u606f\u589e\u76ca\u6bd4(information gain ratio)\u53ef\u4ee5\u5bf9\u8fd9\u4e00\u95ee\u9898\u8fdb\u884c\u6821\u6b63\u3002</p> <p>\u5b9a\u4e49(\u4fe1\u606f\u589e\u76ca\u6bd4) \u7279\u5f81 \\(A\\) \u5bf9\u8bad\u7ec3\u6570\u636e\u96c6 \\(D\\) \u7684\u4fe1\u606f\u589e\u76ca\u6bd4 \\(g_R(D, A)\\) \u5b9a\u4e49\u4e3a\u5176\u4fe1\u606f\u589e\u76ca \\(g(D, A)\\) \u4e0e\u8bad\u7ec3\u6570\u636e\u96c6 \\(D\\) \u5173\u4e8e\u7279\u5f81 \\(A\\) \u7684\u503c\u7684\u71b5 \\(H_A(D)\\) \u4e4b\u6bd4\uff0c\u5373</p> \\[g_R(D, A) = \\frac {g(D, A)}{H_A(D)}\\] <p>\u5176\u4e2d\uff0c \\(H_A(D) = - \\sum_{i=1}^{n} \\frac{|D_i|}{|D|} \\log_2 \\frac{|D_i|}{|D|}\\)\uff0c\u7279\u5f81 \\(A\\) \u5c06 \\(D\\) \u5212\u5206\u4e3a \\(n\\) \u4e2a\u5b50\u96c6 \\(D_1, D_2, ..., D_n\\)\uff0c \\(|D_i|\\) \u4e3a \\(D_i\\) \u7684\u6837\u672c\u4e2a\u6570\u3002</p>"},{"location":"booknotes/ml/decision_tree/#_6","title":"\u57fa\u5c3c\u6307\u6570","text":"<p>\u4fe1\u606f\u589e\u76ca\u548c\u4fe1\u606f\u589e\u76ca\u6bd4\u7684\u8ba1\u7b97\u4f1a\u6d89\u53ca\u5927\u91cf\u7684\u5bf9\u6570\u8fd0\u7b97\u3002\u4f7f\u7528\u57fa\u5c3c\u6307\u6570\u53ef\u4ee5\u7b80\u5316\u8ba1\u7b97\u3002\u57fa\u5c3c\u6307\u6570\u4ee3\u8868\u4e86\u6a21\u578b\u7684\u4e0d\u7eaf\u5ea6\uff0c\u57fa\u5c3c\u6307\u6570\u8d8a\u5c0f\uff0c\u5219\u4e0d\u7eaf\u5ea6\u8d8a\u4f4e\uff0c\u7279\u5f81\u8d8a\u597d\u3002</p> <p>\u5b9a\u4e49\uff08\u57fa\u5c3c\u6307\u6570\uff09 \u5206\u7c7b\u95ee\u9898\u4e2d\uff0c\u5047\u8bbe\u6709 \\(K\\) \u4e2a\u7c7b\uff0c\u6837\u672c\u70b9\u5c5e\u4e8e\u7b2c \\(k\\) \u7c7b\u7684\u6982\u7387\u4e3a \\(p_k\\)\uff0c\u5219\u6982\u7387\u5206\u5e03\u7684\u57fa\u5c3c\u6307\u6570\u5b9a\u4e49\u4e3a\uff1a</p> \\[\\operatorname{Gini} (p) = \\sum_{k=1}^Kp_k(1-p_k)=1 - \\sum_{k=1}^{K}p_k^2\\] <p>\u5728\u7279\u5f81 \\(A\\) \u7684\u6761\u4ef6\u4e0b\uff0c\u96c6\u5408 \\(D\\) \u7684\u57fa\u5c3c\u6307\u6570\u5b9a\u4e49\u4e3a</p> \\[\\operatorname{Gini}(D,A) = \\frac{|D_1|}{|D|}\\operatorname{Gini}(D_1) + \\frac{|D_2|}{|D|}\\operatorname{Gini}(D_2)\\] <p>\u57fa\u5c3c\u6307\u6570 \\(\\operatorname{Gini}(D)\\) \u8868\u793a\u96c6\u5408 \\(D\\) \u7684\u4e0d\u786e\u5b9a\u6027\uff0c\u57fa\u5c3c\u6307\u6570 \\(\\operatorname{Gini}(D, A)\\) \u8868\u793a \\(A=a\\) \u5206\u5272\u540e\u96c6\u5408 \\(D\\) \u7684\u4e0d\u786e\u5b9a\u6027\u3002\u57fa\u5c3c\u6307\u6570\u6570\u503c\u8d8a\u5927\uff0c\u6837\u672c\u96c6\u5408\u7684\u4e0d\u786e\u5b9a\u6027\u4e5f\u5c31\u8d8a\u5927\uff0c\u8fd9\u4e00\u70b9\u4e0e\u71b5\u76f8\u4f3c\u3002</p> <p>\u4e0b\u56fe\u663e\u793a\u4e86\u4e8c\u5206\u7c7b\u95ee\u9898\u4e2d\u57fa\u5c3c\u6307\u6570 \\(\\operatorname{Gini}(p)\\)\u3001\u71b5(\u5355\u4f4d\u6bd4\u7279)\u4e4b\u534a \\(H(p)/2\\) \u548c\u5206\u7c7b\u8bef\u5dee\u7387\u7684\u5173\u7cfb\u3002\u6a2a\u5750\u6807\u8868\u793a\u6982\u7387 \\(p\\)\uff0c\u7eb5\u5750\u6807\u8868\u793a\u635f\u5931\u3002\u53ef\u4ee5\u770b\u51fa\u57fa\u5c3c\u6307\u6570\u548c\u71b5\u4e4b\u534a\u7684\u66f2\u7ebf\u5f88\u63a5\u8fd1\uff0c\u90fd\u53ef\u4ee5\u8fd1\u4f3c\u5730\u4ee3\u8868\u5206\u7c7b\u8bef\u5dee\u7387\u3002</p> <p></p>"},{"location":"booknotes/ml/decision_tree/#_7","title":"\u51b3\u7b56\u6811\u7684\u751f\u6210","text":"<p>\u51b3\u7b56\u6811\u7684\u4e09\u79cd\u751f\u6210\u7b97\u6cd5\u5206\u522b\u91c7\u7528\u4e86\u4e09\u79cd\u4e0d\u540c\u7684\u65b9\u6cd5\u9009\u62e9\u6700\u4f18\u5316\u7279\u5f81\u3002\u5176\u4e2d\uff0cID3\u7b97\u6cd5\u91c7\u7528\u4fe1\u606f\u589e\u76ca\u3001C4.5\u7b97\u6cd5\u91c7\u7528\u4fe1\u606f\u589e\u76ca\u6bd4\u3001CART\u7b97\u6cd5\u91c7\u7528\u57fa\u5c3c\u6307\u6570\u3002\u4f46\u662f\u4e09\u8005\u7684\u5bf9\u51b3\u7b56\u6811\u7684\u751f\u6210\u7b97\u6cd5\u662f\u7c7b\u4f3c\u7684\uff0c\u90fd\u662f\u4ece\u6839\u5f00\u59cb\uff0c\u5728\u5404\u4e2a\u7ed3\u70b9\u4e0a\u5e94\u7528\u4fe1\u606f\u589e\u76ca\u51c6\u5219\u9009\u62e9\u7279\u5f81\uff0c\u9012\u5f52\u5730\u6784\u5efa\u51b3\u7b56\u6811\uff0c\u5176\u8fc7\u7a0b\u5927\u81f4\u5982\u4e0b\uff1a</p> <pre><code>flowchart TB\n    A[\u8bad\u7ec3\u6570\u636e\u96c6D] --&gt; B{{\u5224\u65ad\u662f\u5426\u4e3a\u5355\u7ed3\u70b9}} \n    B --\u5426,\u9009\u62e9\u6700\u4f18\u7279\u5f81--&gt; C[\u5212\u5206\u6570\u636e\u96c6\u4e3aD1...Dn] --\u5bf9\u6bcf\u4e2a\u5b50\u5212\u5206\u9012\u5f52--&gt; A\n    B --\u662f--&gt; D(\u7ed3\u675f\u6b64\u6b21\u9012\u5f52)</code></pre>"},{"location":"booknotes/ml/decision_tree/#id3","title":"ID3\u7b97\u6cd5","text":"<p>\u4f8b2 \u5bf9\u4f8b1\u4e2d\u7684\u201c\u8d37\u6b3e\u7533\u8bf7\u6837\u672c\u6570\u636e\u8868\u201d\uff0c\u5229\u7528ID3\u7b97\u6cd5\u5efa\u7acb\u51b3\u7b56\u6811\u3002</p> <p>\u89e3 \u7531\u4f8b1\u7684\u7ed3\u679c\u53ef\u77e5\uff0c\u7279\u5f81 \\(A_3\\) \u7684\u4fe1\u606f\u589e\u76ca\u503c\u6700\u5927\uff0c\u6240\u4ee5\u5148\u9009\u62e9\u7279\u5f81 \\(A_3\\) \u4f5c\u4e3a\u6839\u7ed3\u70b9\u7684\u7279\u5f81\u3002\u5b83\u5c06\u8bad\u7ec3\u6570\u636e\u96c6 \\(D\\) \u5212\u5206\u4e3a\u4e24\u4e2a\u5b50\u96c6 \\(D_1\\) \u548c \\(D_2\\)\u3002\u5176\u4e2d\uff0c \\(D_1\\) \u6240\u6709\u7684\u6837\u672c\u70b9\u7684\u5206\u7c7b\u90fd\u4e3a\u201c\u662f\u201d\uff0c\u6240\u4ee5\u5b83\u6210\u4e3a\u4e00\u4e2a\u53f6\u8282\u70b9\uff0c\u7ed3\u70b9\u7684\u7c7b\u6807\u8bb0\u4e3a\u201c\u662f\u201d\uff0c\u4e0d\u9700\u8981\u4e3a\u5176\u7ee7\u7eed\u9012\u5f52\u3002</p> <p>\u5bf9 \\(D_2\\) \u5219\u9700\u4ece\u7279\u5f81 \\(A_1\\) (\u5e74\u9f84)\uff0c \\(A_2\\) (\u6709\u5de5\u4f5c)\u548c \\(A_4\\) (\u4fe1\u8d37\u60c5\u51b5)\u4e2d\u9009\u62e9\u65b0\u7684\u7279\u5f81\u3002\u8ba1\u7b97\u5404\u4e2a\u7279\u5f81\u7684\u4fe1\u606f\u589e\u76ca\uff1a</p> \\[\\begin{aligned} &amp;g(D_2, A_1) = H(D_2) - H(D_2|A_1) = 0.918 - 0.667 = 0.251 \\\\ &amp;g(D_2, A_2) = H(D_2) - H(D_2|A_2) = 0.918 \\\\ &amp;g(D_2, A_4) = H(D_2) - H(D_2|A_4) = 0.474 \\end{aligned}\\] <p>\u9009\u62e9\u4fe1\u606f\u589e\u76ca\u6700\u5927\u7684\u7279\u5f81 \\(A_2\\) (\u6709\u5de5\u4f5c)\u4f5c\u4e3a \\(D_2\\) \u7ed3\u70b9\u7684\u7279\u5f81\u3002\\(A_2\\) \u6709\u4e24\u4e2a\u53ef\u80fd\u53d6\u503c\uff0c\u5c06 \\(D_2\\) \u5212\u5206\u4e3a\u4e24\u7ec4\u6570\u636e\u3002\u4e00\u4e2a\u5bf9\u5e94\u201c\u662f\u201d\uff08\u6709\u5de5\u4f5c\uff09\uff0c\u5305\u542b3\u4e2a\u6837\u672c\uff0c\u5b83\u4eec\u5c5e\u4e8e\u540c\u4e00\u7c7b(\u201c\u662f\u201d)\uff0c\u56e0\u6b64\u662f\u53f6\u7ed3\u70b9\uff0c\u7ed3\u675f\u9012\u5f52\u3002\u53e6\u4e00\u4e2a\u5bf9\u5e94\u201c\u5426\u201d\uff08\u65e0\u5de5\u4f5c\uff09\uff0c\u5305\u542b6\u4e2a\u6837\u672c\uff0c\u4e5f\u5c5e\u4e8e\u540c\u4e00\u7c7b(\u201c\u5426\u201d)\uff0c\u7ed3\u675f\u9012\u5f52\u3002\u6700\u7ec8\uff0c\u6211\u4eec\u5f97\u5230\u5982\u4e0b\u7684\u51b3\u7b56\u6811\uff0c\u8be5\u51b3\u7b56\u6811\u53ea\u7528\u4e86\u4e24\u4e2a\u7279\u5f81\u3002</p> <p></p>"},{"location":"booknotes/ml/decision_tree/#cart","title":"CART\u7b97\u6cd5","text":"<p>\u4f8b3 \u5bf9\u4f8b1\u4e2d\u7684\u201c\u8d37\u6b3e\u7533\u8bf7\u6837\u672c\u6570\u636e\u8868\u201d\uff0c\u5229\u7528CART\u7b97\u6cd5\u5efa\u7acb\u51b3\u7b56\u6811\u3002</p> <p>\u89e3 \u9996\u5148\u8ba1\u7b97\u5404\u7279\u5f81\u7684\u57fa\u5c3c\u6307\u6570\uff0c\u9009\u62e9\u6700\u4f18\u7279\u5f81\u4ee5\u53ca\u5176\u6700\u4f18\u5207\u5206\u70b9(\u4e8c\u5206)\u3002\u5206\u522b\u4ee5 \\(A_1,A_2,A_3,A_4\\) \u8868\u793a\u5e74\u9f84\u3001\u6709\u5de5\u4f5c\u3001\u6709\u81ea\u5df1\u7684\u623f\u5b50\u548c\u4fe1\u8d37\u60c5\u51b54\u4e2a\u7279\u5f81\uff0c\u5e76\u4ee51\uff0c2\uff0c3\u8868\u793a\u5e74\u9f84\u7684\u503c\u4e3a\u9752\u5e74\u3001\u4e2d\u5e74\u548c\u8001\u5e74\uff0c\u4ee51\uff0c2\u8868\u793a\u6709\u5de5\u4f5c\u548c\u6709\u81ea\u5df1\u7684\u623f\u5b50\u503c\u4e3a\u662f\u548c\u5426\uff0c\u4ee51\uff0c2\uff0c3\u8868\u793a\u4fe1\u8d37\u60c5\u51b5\u7684\u503c\u4e3a\u975e\u5e38\u597d\u3001\u597d\u548c\u4e00\u822c\u3002</p> <p>\u6c42\u7279\u5f81 \\(A_1\\) \u7684\u57fa\u5c3c\u6307\u6570\uff1a</p> \\[\\begin{aligned} &amp;\\operatorname{Gini}(D,A_1=1)=\\frac{5}{15}(2*\\frac{2}{5}*(1-\\frac{2}{5}))+\\frac{10}{15}(2*\\frac{7}{10}*(1-\\frac{7}{10})) = 0.44\\\\ &amp;\\operatorname{Gini}(D,A_1=2)=0.48 \\\\ &amp;\\operatorname{Gini}(D,A_1=3)=0.44 \\end{aligned}\\] <p>\u7531\u4e8e \\(\\operatorname{Gini}(D,A_1=1)\\) \u548c \\(\\operatorname{Gini}(D,A_1=3)\\) \u76f8\u7b49\uff0c\u4e14\u6700\u5c0f\uff0c\u6240\u4ee5\u4e24\u4e2a\u70b9\u90fd\u53ef\u4ee5\u9009\u4f5c \\(A_1\\) \u7684\u6700\u4f18\u5207\u5206\u70b9\u3002</p> <p>\u7528\u540c\u6837\u7684\u65b9\u6cd5\uff0c\u6c42 \\(A_2\\) \u548c \\(A_3\\) \u7684\u57fa\u5c3c\u6307\u6570\uff0c\u7531\u4e8e\u5b83\u4eec\u53ea\u80fd\u53d6\u4e24\u79cd\u503c\uff0c\u6240\u4ee5\u53ea\u6709\u4e00\u4e2a\u5207\u5206\u70b9\uff1a</p> \\[\\begin{aligned} &amp;\\operatorname{Gini}(D,A_2=1)=\\frac{10}{15}(2*\\frac{4}{10}*(1-\\frac{4}{10})) = 0.32 \\\\ &amp;\\operatorname{Gini}(D,A_3=1) =\\frac{9}{15}(2*\\frac{3}{9}*(1-\\frac{3}{9})) = 0.27 \\end{aligned}\\] <p>\u7ee7\u7eed\u6c42\u7279\u5f81 \\(A_4\\) \u7684\u57fa\u5c3c\u6307\u6570\uff1a</p> \\[\\begin{aligned} &amp;\\operatorname{Gini}(D,A_4=1) = 0.36 \\\\ &amp;\\operatorname{Gini}(D,A_4=2) = 0.47 \\\\ &amp;\\operatorname{Gini}(D,A_4=3) = 0.32 \\\\ \\end{aligned}\\] <p>\\(\\operatorname{Gini}(D,A_4=3)\\) \u6700\u5c0f\uff0c\u9009\u62e9 \\(A_4=3\\) \u4e3a\u6700\u4f18\u5207\u5206\u70b9\u3002</p> <p>\u5728\u6240\u6709\u7279\u5f81\u4e2d\uff0c \\(\\operatorname{Gini}(D,A_3=1)\\) \u6700\u5c0f\uff0c\u6240\u4ee5\u9009\u62e9\u7279\u5f81 \\(A_3\\) \u4e3a\u6700\u4f18\u7279\u5f81\uff0c \\(A_3=1\\) \u4e3a\u6700\u4f18\u5207\u5206\u70b9\u3002\u4e8e\u662f\u6839\u7ed3\u70b9\u751f\u6210\u4e24\u4e2a\u5b50\u7ed3\u70b9\uff0c\u4e00\u4e2a\u662f\u53f6\u7ed3\u70b9(\u6240\u6709\u6570\u636e\u7c7b\u76f8\u540c)\u3002\u53e6\u4e00\u4e2a\u7ed3\u70b9\u7ee7\u7eed\u4f7f\u7528\u4ee5\u4e0a\u65b9\u6cd5\u5728 \\(A_1,A_2,A_4\\) \u4e2d\u9009\u62e9\u6700\u4f18\u7279\u5f81\u53ca\u5176\u6700\u4f18\u5207\u5206\u70b9\uff0c\u7ed3\u679c\u662f \\(A_2=1\\)\u3002\u4f9d\u6b64\u8ba1\u7b97\u5f97\u77e5\uff0c\u6240\u5f97\u7ed3\u70b9\u90fd\u662f\u53f6\u7ed3\u70b9\u3002</p> <p>\u5bf9\u4e8e\u672c\u95ee\u9898\uff0c\u6309\u7167CART\u7b97\u6cd5\u6240\u751f\u6210\u7684\u51b3\u7b56\u6811\u4e0e\u6309\u7167ID3\u7b97\u6cd5\u6240\u751f\u6210\u7684\u51b3\u7b56\u6811\u5b8c\u5168\u4e00\u81f4\u3002</p>"},{"location":"booknotes/ml/decision_tree/#_8","title":"\u5b9e\u9a8c","text":"<p>\u51b3\u7b56\u6811\u5206\u7c7b\u5668\u7684\u7b97\u6cd5\u76f8\u5bf9\u6e05\u6670\uff0c\u8fd9\u91cc\u63d0\u4f9b\u4e24\u4e2a\u4f8b\u5b50\uff1a</p> <ul> <li> <p>\u57fa\u4e8eID3\u7b97\u6cd5\u5b9e\u73b0\u51b3\u7b56\u6811\u5206\u7c7b\u5668</p> <ul> <li>\u201cdecision_tree.py\u201d</li> </ul> </li> <li> <p>\u5229\u7528<code>sklearn.tree</code>\u4e2d\u7684<code>DecisionTreeClassifier</code>\u76f4\u63a5\u5bf9\u6570\u636e\u8fdb\u884c\u51b3\u7b56\u6811\u5206\u7c7b</p> <ul> <li>\u201cdecision_tree_classifier.ipynb\u201d</li> </ul> </li> </ul>"},{"location":"booknotes/ml/linear_reg/","title":"\u7ebf\u6027\u56de\u5f52","text":"<p>\u300aHands-on Machine Learning with Scikit-Learn, Keras &amp; TensorFlow\u300b - \u7b2c\u4e8c\u7248 \u7b2c\u56db\u7ae0\uff0c\u300aPython\u6570\u636e\u624b\u518c\u300b - Jake VanderPlas \u7b2c\u4e94\u7ae0\uff0c\u300a\u673a\u5668\u5b66\u4e60\u300b - \u5468\u5fd7\u534e\u7b2c\u4e09\u7ae0\u7684\u8bfb\u4e66\u7b14\u8bb0\uff0c\u672c\u6587\u4e2d\u7684\u6240\u6709\u4ee3\u7801\u53ef\u5728GitHub\u4ed3\u5e93\u4e2d\u627e\u5230</p>"},{"location":"booknotes/ml/linear_reg/#_2","title":"\u6570\u5b66\u6a21\u578b","text":"<p>\u7ebf\u6027\u6a21\u578b\u8bd5\u56fe\u5b66\u5f97\u4e00\u4e2a\u901a\u8fc7\u5c5e\u6027\u7684\u7ebf\u6027\u7ec4\u5408\u6765\u8fdb\u884c\u9884\u6d4b\u7684\u51fd\u6570\uff0c\u5373\uff1a</p> \\[\\hat{y} = \\theta_0 + \\theta_1x_1 + \\theta_2x_2+...+\\theta_nx_n\\] <p>\u4e00\u822c\u7528\u5411\u91cf\u5f62\u5f0f\u5199\u6210\uff1a</p> \\[\\hat{y} = \\theta^Tx\\] <p>\u5176\u4e2d\uff0c</p> <ul> <li>\\(\\hat{y}\\) \u8868\u793a\u9884\u6d4b\u7ed3\u679c</li> <li>\\(n\\) \u8868\u793a\u7279\u5f81\u7684\u4e2a\u6570</li> <li>\\(x_i\\) \u8868\u793a\u7b2c \\(i\\) \u4e2a\u7279\u5f81\u7684\u503c</li> <li>\\(\\theta_j\\) \u8868\u793a\u7b2c \\(j\\) \u4e2a\u53c2\u6570(\u5305\u62ec\u504f\u7f6e\u9879 \\(\\theta_0\\) \u548c\u7279\u5f81\u6743\u91cd\u503c \\(\\theta_1, \\theta_2, ...\\theta_n\\) )</li> </ul>"},{"location":"booknotes/ml/linear_reg/#_3","title":"\u6b63\u89c4\u65b9\u7a0b\u6c42\u89e3","text":"<p>\u6211\u4eec\u53ef\u4ee5\u91c7\u7528\u516c\u5f0f\u89e3\uff0c\u901a\u8fc7\u6b63\u89c4\u65b9\u7a0b\u76f4\u63a5\u5f97\u5230 \\(\\theta\\) \u7684\u503c\u3002\u6b63\u89c4\u65b9\u7a0b\u5982\u4e0b\uff1a</p> \\[\\hat{\\theta} = (X^T \\cdot X)^{-1} \\cdot X^T \\cdot y\\] <p>\u5176\u4e2d\uff0c</p> <ul> <li>\\(\\hat{\\theta}\\) \u6307\u6700\u5c0f\u5316\u635f\u5931 \\(\\theta\\) \u7684\u503c</li> <li>\\(y\\) \u662f\u4e00\u4e2a\u5411\u91cf\uff0c\u5176\u5305\u542b\u4e86 \\(y^{(1)}\\) \u5230 \\(y^{(m)}\\) \u7684\u503c</li> </ul> <p>\u4f8b\u5b50\u201cnormal_equation.ipynb\u201d\u5c55\u793a\u4e86\u5982\u4f55\u5229\u7528\u65b9\u7a0b\u76f4\u63a5\u6c42\u89e3\u7ebf\u6027\u56de\u5f52\u65b9\u7a0b\uff0c\u5e76\u548c<code>sklearn</code>\u63d0\u4f9b\u7684<code>LinearRegression</code>\u6a21\u578b\u8fdb\u884c\u4e86\u5bf9\u6bd4\uff0c\u4e24\u8005\u7ed3\u679c\u76f8\u8fd1\u3002</p>"},{"location":"booknotes/ml/linear_reg/#_4","title":"\u68af\u5ea6\u4e0b\u964d\u6c42\u89e3","text":"<p>\u5f53\u7279\u5f81\u4e2a\u6570\u8f83\u5927\u65f6\uff0c\u6b63\u89c4\u65b9\u7a0b\u6c42\u89e3\u8f83\u6162\u3002\u68af\u5ea6\u4e0b\u964d\u662f\u4e00\u79cd\u975e\u5e38\u901a\u7528\u7684\u4f18\u5316\u7b97\u6cd5\u3002\u5176\u6574\u4f53\u601d\u8def\u662f\u901a\u8fc7\u8fed\u4ee3\u6765\u9010\u6e10\u8c03\u6574\u53c2\u6570\u4f7f\u5f97\u635f\u5931\u51fd\u6570\u8fbe\u5230\u6700\u5c0f\u503c\u3002</p>"},{"location":"booknotes/ml/linear_reg/#_5","title":"\u6279\u91cf\u68af\u5ea6\u4e0b\u964d","text":"<p>\u7ebf\u6027\u56de\u5f52\u6a21\u578b\u7684\u635f\u5931\u51fd\u6570\u91c7\u7528\u5747\u65b9\u8bef\u5deeMSE(mean square error)\uff1a</p> \\[MSE(\\theta) = \\frac{1}{m} \\sum_{i=1}^m(\\theta^T \\cdot x^{(i)} - y^{(i)})^2\\] <p>\u68af\u5ea6\u4e0b\u964d\u9700\u8981\u6c42\u635f\u5931\u51fd\u6570\u7684\u504f\u5bfc\u6570\uff1a</p> \\[\\frac{\\partial}{\\partial \\theta_j}MSE(\\theta) = \\frac{2}{m}  \\sum_{i=1}^m (\\theta^T \\cdot x^{(i)} - y^{(i)})x_j^{(i)}\\] <p>\u5bf9\u6240\u6709 \\(\\theta\\) \u90fd\u8ba1\u7b97\u504f\u5bfc\u6570\uff0c\u53ef\u4ee5\u7528\u77e9\u9635\u8fd0\u7b97\uff0c\u5f97\u5230\u68af\u5ea6\u5411\u91cf\uff1a</p> \\[\\bigtriangledown_{\\theta} MSE(\\theta) = \\begin{pmatrix} \\frac{\\partial}{\\partial \\theta_0}MSE(\\theta)\\\\  \\frac{\\partial}{\\partial \\theta_1}MSE(\\theta)\\\\  ...\\\\  \\frac{\\partial}{\\partial \\theta_n}MSE(\\theta)\\\\  \\end{pmatrix} = \\frac{2}{m}X^T \\cdot (X \\cdot \\theta - y)\\] <p>\u68af\u5ea6\u5411\u91cf\u662f \\(\\theta\\) \u6bcf\u6b21\u53d8\u5316\u7684\u6b65\u957f\uff0c\u901a\u8fc7\u5b66\u4e60\u7387 \\(\\eta\\) \u63a7\u5236 \\(\\theta\\) \u7684\u53d8\u5316\u901f\u5ea6\uff0c\u5f97\u5230 \\(\\theta\\) \u7684\u8fed\u4ee3\u516c\u5f0f\uff1a</p> \\[ \\theta^{(next step)} = \\theta - \\eta \\bigtriangledown_{\\theta} MSE(\\theta)\\] <p>\u68af\u5ea6\u5411\u91cf\u7684\u8ba1\u7b97\u5305\u542b\u4e86\u6574\u4e2a\u8bad\u7ec3\u96c6 \\(X\\)\uff0c\u56e0\u6b64\u8fd9\u4e2a\u7b97\u6cd5\u79f0\u4e3a\u6279\u91cf\u68af\u5ea6\u4e0b\u964d\u3002</p> <p>\u4f8b\u5b50\u201cgradient_descent.ipynb\u201d\u4e2d\u201c\u6279\u91cf\u68af\u5ea6\u4e0b\u964d\u201d\u76f8\u5173\u7ae0\u8282\uff0c\u5206\u522b\u9009\u62e9\u4e86\u201c0.02, 0.1, 0.5\u201d\u4e09\u79cd\u5b66\u4e60\u7387\uff0c\u89c2\u5bdf\u6bcf\u6b21\u8fed\u4ee3\u7684\u53d8\u5316\u60c5\u51b5\uff0c\u5176\u7ed3\u679c\u5982\u4e0b\u56fe\uff1a</p> <p></p> <ul> <li>\u5de6\u4fa7\u56fe\u7684\u5b66\u4e60\u7387\u592a\u5c0f\u4e86\uff0c\u82b1\u4e86\u5927\u91cf\u65f6\u95f4\u4e5f\u6ca1\u80fd\u6c42\u51fa\u6700\u540e\u7684\u7ed3\u679c</li> <li>\u4e2d\u95f4\u56fe\u7684\u5b66\u4e60\u7387\u6700\u5408\u9002\uff0c\u8fed\u4ee3\u51e0\u6b21\u540e\u5c31\u6536\u655b\u4e86</li> <li>\u53f3\u4fa7\u56fe\u7684\u5b66\u4e60\u7387\u592a\u5927\u4e86\uff0c\u7b97\u6cd5\u662f\u53d1\u6563\u7684</li> </ul>"},{"location":"booknotes/ml/linear_reg/#_6","title":"\u968f\u673a\u68af\u5ea6\u4e0b\u964d","text":"<p>\u6279\u91cf\u68af\u5ea6\u4e0b\u964d\u6bcf\u4e00\u6b65\u90fd\u8981\u4f7f\u7528\u6574\u4e2a\u8bad\u7ec3\u96c6\uff0c\u8fd9\u5bfc\u81f4\u5728\u89c4\u6a21\u8f83\u5927\u7684\u6570\u636e\u96c6\u4e0a\uff0c\u5176\u901f\u5ea6\u4f1a\u975e\u5e38\u6162\u3002\u800c\u968f\u673a\u68af\u5ea6\u4e0b\u964d\uff0c\u5728\u6bcf\u4e00\u6b65\u7684\u68af\u5ea6\u8ba1\u7b97\u4e0a\u53ea\u968f\u673a\u9009\u53d6\u8bad\u7ec3\u96c6\u4e2d\u7684\u4e00\u4e2a\u6837\u672c\uff0c\u8fd9\u4e00\u6bcf\u6b21\u64cd\u4f5c\u6570\u636e\u91cf\u4f1a\u975e\u5e38\u5c0f\uff0c\u4ece\u800c\u63d0\u9ad8\u4e86\u901f\u5ea6\u3002</p> <p>\u4f46\u662f\uff0c\u7531\u4e8e\u968f\u673a\u68af\u5ea6\u4e0b\u964d\u6bcf\u6b21\u8fed\u4ee3\u7684\u968f\u673a\u6027\uff0c\u5176\u5448\u73b0\u51fa\u66f4\u591a\u7684\u4e0d\u89c4\u5f8b\u6027\uff1a\u5b83\u5230\u8fbe\u6700\u5c0f\u503c\u4e0d\u662f\u5e73\u7f13\u5730\u4e0b\u964d\uff0c\u635f\u5931\u51fd\u6570\u4f1a\u5ffd\u9ad8\u5ffd\u4f4e\uff0c\u53ea\u662f\u5728\u5927\u4f53\u4e0a\u5448\u4e0b\u964d\u8d8b\u52bf\u3002\u968f\u7740\u65f6\u95f4\u7684\u63a8\u79fb\uff0c\u5b83\u4f1a\u975e\u5e38\u9760\u8fd1\u6700\u5c0f\u503c\uff0c\u4f46\u662f\u4e0d\u4f1a\u505c\u5728\u4e00\u4e2a\u503c\u4e0a\uff0c\u800c\u662f\u4e00\u76f4\u5728\u8fd9\u4e2a\u503c\u9644\u4ef6\u6446\u52a8\u3002\u4e0b\u56fe\u5bf9\u6bd4\u4e86\u68af\u5ea6\u4e0b\u964d(\u5de6\u56fe)\u548c\u968f\u673a\u68af\u5ea6\u4e0b\u964d(\u53f3\u56fe)\u7684\u8fed\u4ee3\u8def\u5f84\u3002</p> <p></p> <p>\u867d\u7136\u968f\u673a\u6027\u53ef\u4ee5\u5f88\u597d\u5730\u8df3\u8fc7\u5c40\u90e8\u6700\u4f18\u503c(\u635f\u5931\u51fd\u6570\u4e0d\u89c4\u5219)\uff0c\u4f46\u540c\u65f6\u5b83\u5374\u4e0d\u80fd\u8fbe\u5230\u6700\u5c0f\u503c(\u5728\u9644\u4ef6\u6446\u52a8)\u3002\u89e3\u51b3\u529e\u6cd5\u662f\u9010\u6e10\u964d\u4f4e\u5b66\u4e60\u7387\u3002\u5f00\u59cb\u65f6\uff0c\u8d70\u7684\u6bcf\u4e00\u6b65\u8f83\u5927(\u6709\u52a9\u4e8e\u8df3\u8fc7\u5c40\u90e8\u6700\u5c0f\u503c)\uff0c\u7136\u540e\u5b66\u4e60\u7387\u53d8\u5f97\u8d8a\u6765\u8d8a\u5c0f\uff0c\u4ece\u800c\u4f7f\u7b97\u6cd5\u8fbe\u5230\u5c40\u90e8\u6700\u5c0f\u503c\u3002</p> <p>\u4f8b\u5b50\u201cgradient_descent.ipynb\u201d\u4e2d\u201c\u968f\u673a\u68af\u5ea6\u4e0b\u964d\u201d\u7ae0\u8282\uff0c\u5b9e\u73b0\u4e86\u968f\u673a\u68af\u5ea6\u4e0b\u964d\u7b97\u6cd5\uff0c\u5176\u4e2d<code>learning_schedule</code>\u51b3\u5b9a\u4e86\u6bcf\u6b21\u8fed\u4ee3\u7684\u5b66\u4e60\u7387\u51fd\u6570\uff0c\u8fed\u4ee3\u6b21\u6570\u8d8a\u5927\uff0c\u5176\u503c\u8d8a\u5c0f\u3002</p>"},{"location":"booknotes/ml/linear_reg/#_7","title":"\u5c0f\u6279\u91cf\u68af\u5ea6\u4e0b\u964d","text":"<p>\u5728\u8fed\u4ee3\u7684\u6bcf\u4e00\u6b65\uff0c\u6279\u91cf\u68af\u5ea6\u4f7f\u7528\u6574\u4e2a\u8bad\u7ec3\u96c6\uff0c\u968f\u673a\u68af\u5ea6\u4ec5\u4ec5\u4f7f\u7528\u4e00\u4e2a\u5b9e\u4f8b\u3002\u4f46\u662f\uff0c\u5728\u5c0f\u6279\u91cf\u68af\u5ea6\u4e0b\u964d\u4e2d\uff0c\u5b83\u4f7f\u7528\u4e00\u4e2a\u968f\u673a\u7684\u5c0f\u578b\u5b9e\u4f8b\u96c6\u3002\u5b83\u6bd4\u968f\u673a\u68af\u5ea6\u7684\u4e3b\u8981\u4f18\u70b9\u5728\u4e8e\u4f60\u53ef\u4ee5\u901a\u8fc7\u77e9\u9635\u8fd0\u7b97\u7684\u786c\u4ef6\u4f18\u5316\u5f97\u5230\u4e00\u4e2a\u8f83\u597d\u7684\u8bad\u7ec3\u8868\u73b0\uff0c\u5c24\u5176\u5f53\u4f60\u4f7f\u7528GPU\u8fdb\u884c\u8fd0\u7b97\u7684\u65f6\u5019\u3002</p> <p>\u4f8b\u5b50\u201cgradient_descent.ipynb\u201d\u4e2d\u201c\u5c0f\u6279\u91cf\u68af\u5ea6\u4e0b\u964d\u201d\u7ae0\u8282\uff0c\u5b9e\u73b0\u4e86\u8fd9\u4e00\u7b97\u6cd5\u3002</p>"},{"location":"booknotes/ml/linear_reg/#_8","title":"\u603b\u7ed3","text":"<p>\u4e0b\u8868\u6bd4\u8f83\u4e86\u7ebf\u6027\u56de\u5f52\u7684\u4e0d\u540c\u7b97\u6cd5\uff1a</p> Algorithm Large m Out-of-core support Large n Hyper-params Scaling required Scikit-Learn Normal Equation Fast No Slow 0 No LinearRegression Batch GD Slow No Fast 2 Yes N/A Stochastic GD Fast Yes Fast &gt;=2 Yes SGDRegressor Mini-batch GD Fast Yes Fast &gt;=2 Yes N/A <p>\u5176\u4e2d\uff0c<code>m</code>\u8868\u793a\u6837\u672c\u6570\uff0c<code>n</code>\u8868\u793a\u7279\u5f81\u6570\u3002\u4f8b\u5b50\u201csklearn_reg.ipynb\u201d\u5229\u7528\u4e86<code>sklear</code>\u63d0\u4f9b\u7684\u56de\u5f52\u6a21\u578b\u8fdb\u884c\u4e86\u76f8\u5173\u5b9e\u9a8c\u3002</p> <p>\u4e0b\u56fe\u663e\u793a\u4e86\u8bad\u7ec3\u671f\u95f4\u4e09\u79cd\u68af\u5ea6\u4e0b\u964d\u7b97\u6cd5\u5728\u53c2\u6570\u7a7a\u95f4\u4e2d\u6240\u91c7\u7528\u7684\u8def\u5f84\u3002\u5b83\u4eec\u90fd\u63a5\u8fd1\u6700\u5c0f\u503c\uff0c\u4f46\u6279\u91cf\u68af\u5ea6\u7684\u8def\u5f84\u6700\u540e\u505c\u5728\u4e86\u6700\u5c0f\u503c\uff0c\u800c\u968f\u673a\u68af\u5ea6\u548c\u5c0f\u6279\u91cf\u68af\u5ea6\u6700\u540e\u90fd\u5728\u6700\u5c0f\u503c\u9644\u4ef6\u6446\u52a8\uff0c\u5176\u76f8\u5173\u4ee3\u7801\u53ef\u53c2\u8003\u4f8b\u5b50\u201cgradient_descent.ipynb\u201d\u4e2d\u7684\u6700\u540e\u4e00\u90e8\u5206\u603b\u7ed3\u3002</p> <p></p>"},{"location":"booknotes/ml/linear_reg/#_9","title":"\u591a\u9879\u5f0f\u56de\u5f52","text":"<p>\u5982\u679c\u8bad\u7ec3\u6570\u636e\u4e0d\u662f\u7ebf\u6027\u7684\uff0c\u4e5f\u53ef\u4ee5\u901a\u8fc7\u7279\u5f81\u6269\u5c55\uff0c\u5229\u7528\u7ebf\u6027\u56de\u5f52\u6a21\u578b\u8fdb\u884c\u9884\u6d4b\u3002</p> <p><code>sklearn</code>\u63d0\u4f9b\u4e86<code>PolynomialFeatures</code>\u7c7b\u8fdb\u884c\u8bad\u7ec3\u6570\u636e\u96c6\u7684\u8f6c\u6362\u3002\u4f8b\u5982\uff0c\u5982\u679c\u6709\u4e24\u4e2a\u7279\u5f81 \\(a, b\\)\uff0c\u4f7f\u75283\u9636(degree=3)\u7684<code>PolynomialFeatures</code>\uff0c\u4e0d\u4ec5\u4f1a\u4ea7\u751f \\(a^2,a^3,b^2,b^3\\)\uff0c\u8fd8\u4f1a\u4ea7\u751f\u5176\u4ed6\u7ec4\u5408 \\(ab, a^2b, ab^2\\)\u3002</p> <p>\u5b8c\u6210\u5bf9\u8bad\u7ec3\u6570\u636e\u96c6\u7684\u8f6c\u6362\u540e\uff0c\u5c31\u53ef\u4ee5\u901a\u8fc7<code>LinearRegression</code>\u8fdb\u884c\u7ebf\u6027\u9884\u6d4b\u4e86\u3002\u4f8b\u5b50\u201cpolynomial_reg.ipynb\u201d\u5bf9\u975e\u7ebf\u6027\u6570\u636e(\u4e8c\u6b21\u591a\u9879\u5f0f)\uff0c\u901a\u8fc7\u7ebf\u6027\u6a21\u578b\u8fdb\u884c\u4e86\u9884\u6d4b\u3002</p>"},{"location":"booknotes/ml/linear_reg/#_10","title":"\u7ebf\u6027\u6a21\u578b\u7684\u6b63\u5219\u5316","text":"<p>\u964d\u4f4e\u6a21\u578b\u7684\u8fc7\u62df\u5408\u7684\u597d\u65b9\u6cd5\u662f\u6b63\u5219\u5316\u8fd9\u4e2a\u6a21\u578b\uff0c\u5373\u9650\u5236\u6a21\u578b(\u6a21\u578b\u81ea\u7531\u5ea6\u8d8a\u5c11\uff0c\u5c31\u8d8a\u96be\u4ee5\u62df\u5408\u6570\u636e)\u3002\u6b63\u5219\u5316\u4e00\u4e2a\u591a\u9879\u5f0f\u6a21\u578b\uff0c\u53ef\u51cf\u5c11\u591a\u9879\u5f0f\u7684\u9636\u6570\u3002\u6b63\u5219\u5316\u4e00\u4e2a\u7ebf\u6027\u6a21\u578b\uff0c\u53ef\u7ea6\u675f\u6a21\u578b\u4e2d\u53c2\u6570\u7684\u6743\u91cd\uff0c\u6709\u4e09\u79cd\u4e0d\u540c\u7684\u7ea6\u675f\u6743\u91cd\u7684\u65b9\u6cd5\uff1a</p> <ul> <li>Ridge\u56de\u5f52</li> <li>Lasso\u56de\u5f52</li> <li>Elastic Net</li> </ul>"},{"location":"booknotes/ml/linear_reg/#ridge","title":"\u5cad(Ridge)\u56de\u5f52","text":"<p>\u5cad\u56de\u5f52\u662f\u7ebf\u6027\u56de\u5f52\u7684\u6b63\u5219\u5316\u7248\u672c\uff0c\u5176\u5728\u635f\u5931\u51fd\u6570\u4e0a\u76f4\u63a5\u52a0\u4e0a\u4e00\u4e2a\u6b63\u5219\u9879\uff1a</p> \\[\\alpha \\sum_{i=1}^{n}\\theta_i^2\\] <p>\u8fd9\u4f7f\u5f97\u5b66\u4e60\u7b97\u6cd5\u4e0d\u4ec5\u80fd\u591f\u62df\u5408\u6570\u636e\uff0c\u800c\u4e14\u80fd\u591f\u4f7f\u6a21\u578b\u7684\u53c2\u6570\u6743\u91cd\u5c3d\u91cf\u7684\u5c0f\u3002</p> <p>\u5cad\u56de\u5f52\u7684\u635f\u5931\u51fd\u6570\u662f\uff1a</p> \\[J(\\theta) = MSE(\\theta) + \\alpha \\frac{1}{2} \\sum_{i=1}^{n}\\theta_i^2\\]"},{"location":"booknotes/ml/linear_reg/#lasso","title":"Lasso\u56de\u5f52","text":"<p>Lasso\u56de\u5f52\u548c\u5cad\u56de\u5f52\u4e00\u6837\uff0c\u4e5f\u5728\u635f\u5931\u51fd\u6570\u4e0a\u6dfb\u52a0\u4e86\u4e00\u4e2a\u6b63\u5219\u5316\u9879\uff0c\u4f46\u662f\u5b83\u4f7f\u7528\u6743\u91cd\u5411\u91cf\u7684 $ \\ell^1 $ \u8303\u6570\uff0c\u800c\u4e0d\u662f\u53bb\u90a3\u79cd\u5411\u91cf$ \\ell^2 $ \u8303\u6570\u5e73\u65b9\u7684\u4e00\u534a\u3002</p> <p>Lasso\u56de\u5f52\u7684\u635f\u5931\u51fd\u6570\u662f\uff1a</p> \\[J(\\theta) = MSE(\\theta) + \\alpha \\sum_{i=1}^{n}\\left | \\theta_i \\right |\\]"},{"location":"booknotes/ml/linear_reg/#elasticnet","title":"\u5f39\u6027\u7f51\u7edc(ElasticNet)","text":"<p>\u5f39\u6027\u7f51\u7edc\u4ecb\u4e8eRidge\u56de\u5f52\u548cLasso\u56de\u5f52\u4e4b\u95f4\u3002\u5b83\u7684\u6b63\u5219\u9879\u662fRidge\u56de\u5f52\u548cLasso\u56de\u5f52\u6b63\u5219\u9879\u7684\u7b80\u5355\u6df7\u5408\uff0c\u540c\u65f6\u4f60\u53ef\u4ee5\u63a7\u5236\u4ed6\u4eec\u7684\u6df7\u5408\u7387 \\(r\\)\u3002\u5f53 \\(r=0\\) \u65f6\uff0c\u5f39\u6027\u7f51\u7edc\u5c31\u662fRidge\u56de\u5f52\uff1b\u5f53 \\(r=1\\) \u65f6\uff0c\u5c31\u662fLasso\u56de\u5f52\u3002</p> <p>\u5f39\u6027\u7f51\u7edc\u635f\u5931\u51fd\u6570\u662f\uff1a</p> \\[J(\\theta) = MSE(\\theta) + r\\alpha \\sum_{i=1}^{n}\\left | \\theta_i \\right | + \\frac{1-r}{2} \\alpha \\sum_{i=1}^{n}\\theta_i^2\\]"},{"location":"booknotes/ml/linear_reg/#_11","title":"\u603b\u7ed3","text":"<p>\u6211\u4eec\u5e94\u8be5\u5982\u4f55\u9009\u62e9\u7ebf\u6027\u56de\u5f52\uff0c\u5cad\u56de\u5f52\uff0cLasso\u56de\u5f52\u6216\u8005\u5f39\u6027\u7f51\u7edc\u5462\uff1f</p> <p>\u4e00\u822c\u6765\u8bf4\uff0c\u6709\u4e00\u70b9\u6b63\u5219\u9879\u7684\u8868\u73b0\u66f4\u597d\uff0c\u56e0\u6b64\u901a\u5e38\u5e94\u8be5\u907f\u514d\u4f7f\u7528\u7b80\u5355\u7684\u7ebf\u6027\u56de\u5f52\u3002\u5cad\u56de\u5f52\u662f\u4e00\u4e2a\u5f88\u597d\u7684\u9996\u9009\u9879\uff0c\u4f46\u662f\u5982\u679c\u4f60\u7684\u7279\u5f81\u4ec5\u6709\u5c11\u6570\u662f\u771f\u6b63\u6709\u7528\u7684\uff0c\u5e94\u8be5\u9009\u62e9Lasso\u56de\u5f52\u6216\u5f39\u6027\u7f51\u7edc\u3002\u56e0\u4e3a\uff0c\u4ed6\u4eec\u80fd\u5c06\u65e0\u7528\u7279\u5f81\u7684\u6743\u91cd\u964d\u4e3a\u96f6\u3002</p> <p>\u4f8b\u5b50\u201cregularized_linear_models.ipynb\u201d\u5bf9\u4e09\u79cd\u7ebf\u6027\u6a21\u578b\u7684\u6b63\u5219\u5316\u65b9\u6cd5\u8fdb\u884c\u4e86\u5bf9\u6bd4\u3002</p>"},{"location":"booknotes/ml/naive_bayes/","title":"\u6734\u7d20\u8d1d\u53f6\u65af\u6cd5","text":"<p>\u300a\u7edf\u8ba1\u5b66\u4e60\u65b9\u6cd5\u300b - \u674e\u822a - \u7b2c\u4e8c\u7248 \u7b2c\u56db\u7ae0\uff0c\u4ee5\u53ca\u300aPython\u6570\u636e\u624b\u518c\u300b - Jake VanderPlas \u7b2c\u4e94\u7ae0\u7684\u8bfb\u4e66\u7b14\u8bb0\uff0c\u672c\u6587\u4e2d\u7684\u6240\u6709\u4ee3\u7801\u53ef\u5728GitHub\u4ed3\u5e93\u4e2d\u627e\u5230</p>"},{"location":"booknotes/ml/naive_bayes/#_2","title":"\u7406\u8bba","text":"<p>\u6734\u7d20\u8d1d\u53f6\u65af(Naive Bayes)\u6cd5\u662f\u57fa\u4e8e\u8d1d\u53f6\u65af\u5b9a\u7406\u4e0e\u7279\u5f81\u6761\u4ef6\u72ec\u7acb\u5047\u8bbe\u7684\u5206\u7c7b\u65b9\u6cd5\u3002\u5bf9\u4e8e\u7ed9\u5b9a\u7684\u8bad\u7ec3\u6570\u636e\u96c6\uff0c\u9996\u5148\u57fa\u4e8e\u7279\u5f81\u6761\u4ef6\u72ec\u7acb\u5047\u8bbe\u5b66\u4e60\u8f93\u5165\u8f93\u51fa\u7684\u8054\u5408\u6982\u7387\u5206\u5e03\u3002\u7136\u540e\u57fa\u4e8e\u6b64\u8054\u5408\u6982\u7387\u5206\u5e03\uff0c\u5229\u7528\u8d1d\u53f6\u65af\u5b9a\u7406\uff0c\u6c42\u51fa\u7ed9\u5b9a\u7684\u8f93\u5165x\uff0c\u5bf9\u5e94y\u7684\u540e\u9a8c\u6982\u7387\u3002\u53d6\u540e\u9a8c\u6982\u7387\u6700\u5927\u7684y\u7c7b\u4f5c\u4e3ax\u7684\u7c7b\u8f93\u51fa\u3002</p> <pre><code>flowchart TB\n    subgraph A[\u5b66\u4e60]\n    Data{{\u8bad\u7ec3\u6570\u636e\u96c6X,Y}} --\u5b66\u4e60--&gt; Dis[XY\u7684\u8054\u5408\u6982\u7387\u5206\u5e03] --X\u72ec\u7acb\u6027\u5047\u8bbe--&gt; Model[\u6a21\u578b: Y\u7684\u5148\u9a8c\u6982\u7387,\\nX\u7684\u6761\u4ef6\u6982\u7387\u5206\u5e03]\n    end</code></pre> <pre><code>flowchart TB\n    subgraph B[\u9884\u6d4b]\n    Data{{\u6d4b\u8bd5\u6570\u636eX}} --\u8f93\u5165--&gt; Model[\u6734\u7d20\u8d1d\u53f6\u65af\u6a21\u578b] --\u7ed3\u5408\u8d1d\u53f6\u65af\u5b9a\u7406\\n\u9009\u62e9\u540e\u9a8c\u6982\u7387\u6700\u5927\u7684Y--&gt; Res[Y\u7684\u9884\u6d4b\u503c]\n    end</code></pre> <p>\u6734\u7d20\u8d1d\u53f6\u65af\u6cd5\u7684\u57fa\u672c\u5047\u8bbe\u662f\u6761\u4ef6\u72ec\u7acb\u6027\uff0c</p> \\[\\begin{aligned} P(X&amp;=x | Y=c_{k} )=P\\left(X^{(1)}=x^{(1)}, \\cdots, X^{(n)}=x^{(n)} | Y=c_{k}\\right) \\\\ &amp;=\\prod_{j=1}^{n} P\\left(X^{(j)}=x^{(j)} | Y=c_{k}\\right) \\end{aligned}\\] <p>\u8fd9\u662f\u4e00\u4e2a\u8f83\u5f3a\u7684\u5047\u8bbe\u3002\u7531\u4e8e\u8fd9\u4e00\u5047\u8bbe\uff0c\u6a21\u578b\u5305\u542b\u7684\u6761\u4ef6\u6982\u7387\u7684\u6570\u91cf\u5927\u4e3a\u51cf\u5c11\uff0c\u6734\u7d20\u8d1d\u53f6\u65af\u6cd5\u7684\u5b66\u4e60\u4e0e\u9884\u6d4b\u5927\u4e3a\u7b80\u5316\u3002\u56e0\u800c\u6734\u7d20\u8d1d\u53f6\u65af\u6cd5\u9ad8\u6548\uff0c\u4e14\u6613\u4e8e\u5b9e\u73b0\u3002\u5176\u7f3a\u70b9\u662f\u5206\u7c7b\u7684\u6027\u80fd\u4e0d\u4e00\u5b9a\u5f88\u9ad8\u3002</p> <p>\u6734\u7d20\u8d1d\u53f6\u65af\u6cd5\u5206\u7c7b\u65f6\uff0c\u5bf9\u7ed9\u5b9a\u7684\u8f93\u5165 \\(x\\)\uff0c\u901a\u8fc7\u5b66\u4e60\u5230\u7684\u6a21\u578b\u8ba1\u7b97\u540e\u9a8c\u6982\u7387\u5206\u5e03 \\(P(Y=c_k | X=x)\\)\uff0c\u5c06\u540e\u9a8c\u6982\u7387\u6700\u5927\u7684\u7c7b\u4f5c\u4e3a \\(x\\) \u7684\u7c7b\u8f93\u51fa\u3002\u540e\u9a8c\u6982\u7387\u8ba1\u7b97\u6839\u636e\u8d1d\u53f6\u65af\u5b9a\u7406\u8fdb\u884c\uff1a</p> \\[P(Y=c_k | X=x) = \\frac{P(X=x | Y=c_k)P(Y=c_k)}{\\sum_{k} P(X=x | Y=c_k)P(Y=c_k)}\\] <p>\u6839\u636e\u201c\u6761\u4ef6\u72ec\u7acb\u6027\u201d\u5047\u8bbe\uff0c\u5f97\u5230\uff1a</p> \\[P(Y=c_k | X=x) = \\frac{P(Y=c_k) \\prod_{j}P(X^{(j)}=x^{(j)}|Y=c_k)}{\\sum_{k} P(Y=c_k) \\prod_{j}P(X^{(j)}=x^{(j)}|Y=c_k} , k=1,2,...,K\\] <p>\u4e3a\u4e86\u627e\u5230\u540e\u9a8c\u6982\u7387\u6700\u5927\u7684\u5206\u7c7b(\u4e00\u5171 \\(K\\) \u79cd\u5206\u7c7b)\uff0c \u53ea\u9700\u8981\u8ba1\u7b97\u4e0b\u9762\u516c\u5f0f\uff1a</p> \\[y=\\arg \\max _{c_{k}} P\\left(Y=c_{k}\\right) \\prod_{j=1}^{n} P\\left(X_{j}=x^{(j)} | Y=c_{k}\\right)\\] <p>\u540e\u9a8c\u6982\u7387\u6700\u5927\u7b49\u4ef7\u4e8e0-1\u635f\u5931\u51fd\u6570\u65f6\u7684\u671f\u671b\u98ce\u9669\u6700\u5c0f\u5316\u3002</p> <p>\u6839\u636e\u7279\u5f81\u6982\u7387\u6a21\u578b \\(P(X^{(j)=}x^{(j)}|Y=c_k)\\) \u7684\u4e0d\u540c\uff0c\u5e38\u89c1\u7684\u6734\u7d20\u8d1d\u53f6\u65af\u6a21\u578b\u6709\uff1a</p> <ul> <li>\u9ad8\u65af\u6a21\u578b</li> <li>\u591a\u9879\u5f0f\u6a21\u578b</li> <li>\u4f2f\u52aa\u5229\u6a21\u578b</li> </ul>"},{"location":"booknotes/ml/naive_bayes/#_3","title":"\u9ad8\u65af\u6734\u7d20\u8d1d\u53f6\u65af\u5206\u7c7b\u5668","text":""},{"location":"booknotes/ml/naive_bayes/#_4","title":"\u51c6\u5907\u6570\u636e","text":"<p>\u672c\u6587\u7684\u8bad\u7ec3/\u6d4b\u8bd5\u6570\u636e\u90fd\u6765\u81ea<code>sklearn</code>\u7684\u9ad8\u65af\u6df7\u5408\u6a21\u578b(Gaussian Mixture Model)\uff1a</p> <pre><code>from sklearn.datasets import make_blobs\nimport matplotlib.pyplot as plt\nimport numpy as np\n\n# \u9ad8\u65af\u6df7\u5408\u6a21\u578b(Gaussian Mixture Model)\uff0c\u53ef\u7528\u4e8e\u65e0\u76d1\u7763\u5b66\u4e60\u4e2d\u7684\u805a\u7c7b\u6570\u636e\n# \u91c7\u6837\u6570n_smaples\uff0c\u7279\u5f81\u6570n_feature\uff0cX.shape=(n_smaples,n_feature)\uff0cy.shape=(n_smaples,)\n# centers\u6307\u5b9a\u4e86\u6570\u636e\u7c7b\u522b\u7684\u4e2a\u6570\nX, y = make_blobs(n_samples=100, n_features=2 ,centers=2, random_state=2, cluster_std=1.5)\nfig, gmmAx = plt.subplots()\ngmmAx.scatter(X[:, 0], X[:, 1], c=y, s=50, cmap='RdBu')\ngmmAx.set_title(\"GMM\")\ngmmAx.set_xlabel(\"feature1\")\ngmmAx.set_ylabel(\"feature2\")\n</code></pre> <p></p>"},{"location":"booknotes/ml/naive_bayes/#_5","title":"\u8bad\u7ec3\u6a21\u578b","text":"<p>\u5047\u8bbe\u4e0a\u56fe\u4e24\u7ec4\u6570\u636e\u670d\u4ece\u4e00\u5171\u4e24\u4e2a\u7ef4\u5ea6\u4e4b\u95f4\u6ca1\u6709\u534f(\u72ec\u7acb)\u65b9\u5dee\u7684\u6b63\u6001\u5206\u5e03\u3002\u6839\u636e\u6837\u70b9\u7684\u5747\u503c\u548c\u6807\u51c6\u5dee\u5c31\u80fd\u901a\u8fc7\u6b63\u6001\u5206\u5e03\u62df\u5408\u6a21\u578b\u4e86\u3002\u901a\u8fc7\u6b64\u6a21\u578b\uff0c\u53ef\u4ee5\u5f97\u5230\u7279\u5f81\u7684\u6761\u4ef6\u6982\u7387 \\(P({\\rm features}~|~L)\\)\uff0c\u4ee5\u53ca\u6807\u7b7e\u7684\u5148\u9a8c\u6982\u7387 \\(P(L)\\)\u3002\u56e0\u6b64\uff0c\u7ed3\u5408\u8d1d\u53f6\u65af\u5b9a\u7406\uff0c\u6211\u4eec\u5c31\u80fd\u5f97\u5230\uff0c\u6b63\u5bf9\u7ed9\u5b9a\u6570\u636e(\u7279\u5f81)\uff0c\u5404\u5206\u7c7b\u6807\u7b7e\u7684\u540e\u9a8c\u6982\u7387 \\(P(L|{\\rm features})\\)\u3002\u6211\u4eec\u9009\u53d6\u6700\u5927\u7684\u540e\u9a8c\u6982\u7387\uff0c\u4f5c\u4e3a\u9884\u6d4b\u7684\u5206\u7c7b\u6807\u7b7e\u7684\u7ed3\u679c\u3002</p> <p>\u5047\u8bbe\u6bcf\u4e2a\u7279\u5f81 \\(x^{(j)}\\) \u90fd\u670d\u4ece\u72ec\u7acb\u6b63\u6001\u5206\u5e03\uff0c\u5176\u6761\u4ef6\u6982\u7387\u5bc6\u5ea6\u51fd\u6570\u4e3a\uff1a</p> \\[P(x_i | y_k)=\\frac{1}{\\sqrt{2\\pi\\sigma^2_{yk}}}exp(-\\frac{(x_i-\\mu_{yk})^2}{2\\sigma^2_{yk}})\\] <p>\u6570\u5b66\u671f\u671b\uff1a \\(\\mu\\)</p> <p>\u65b9\u5dee\uff1a \\(\\sigma^2=\\frac{\\sum(X-\\mu)^2}{N}\\)</p> <p>\u8bad\u7ec3\u51fa\u6982\u7387\u5206\u5e03\u6a21\u578b\u540e\uff0c\u5c06\u6d4b\u8bd5\u6570\u636e \\(x\\) \u8f93\u5165\u5206\u5230\u540e\u9a8c\u6982\u7387\u6700\u5927\u7684\u7c7b \\(y\\)\uff1a</p> \\[y=\\arg \\max _{c_{k}} P\\left(Y=c_{k}\\right) \\prod_{j=1}^{n} P\\left(X_{j}=x^{(j)} | Y=c_{k}\\right)\\] <p>\u540e\u9a8c\u6982\u7387\u6700\u5927\u7b49\u4ef7\u4e8e0-1\u635f\u5931\u51fd\u6570\u65f6\u7684\u671f\u671b\u98ce\u9669\u6700\u5c0f\u5316\u3002</p> <pre><code>import math\nfrom collections import Counter\n\nclass GaussianNB:\n    def __init__(self):\n        self.x_cond_prob = {}\n        self.y_prior_prob = {}\n\n    # \u6570\u5b66\u671f\u671b\n    def mean(self, X):\n        return sum(X) / len(X)\n\n    # \u6807\u51c6\u5dee\uff08\u65b9\u5dee\uff09\n    def stdev(self, X):\n        avg = self.mean(X)\n        return math.sqrt(sum([pow(x - avg, 2) for x in X]) / len(X))\n\n    # \u6982\u7387\u5bc6\u5ea6\u51fd\u6570\n    def get_gaussian_prob(self, x, mean, stdev):\n        exponent = math.exp(-(math.pow(x - mean, 2) / (2 * math.pow(stdev, 2))))\n        return (1 / (math.sqrt(2 * math.pi) * stdev)) * exponent\n\n    # \u6c42\u5404\u7279\u5f81\u7684\u671f\u671b\u548c\u6807\u51c6\u5dee\n    def calc_x_mean_stdev(self, train_data):\n        mean_stdev = [(self.mean(i), self.stdev(i)) for i in zip(*train_data)]\n        return mean_stdev\n\n    # \u6c42\u6807\u7b7e\u7684\u5148\u9a8c\u6982\u7387\n    def calc_y_prior_prob(self, y):\n        for label, cnt in Counter(y).items():\n            self.y_prior_prob[label] = cnt / len(y)\n\n    def calc_x_cond_prob(self, X, y):\n        data = {}\n        for features, label in zip(X, y):\n            data.setdefault(label, [])\n            data[label].append(features)\n        for label, value in data.items():\n            self.x_cond_prob[label] = self.calc_x_mean_stdev(value)\n\n    # \u62df\u5408\u6570\u636e\n    def fit(self, X, y):\n        self.calc_y_prior_prob(y)\n        self.calc_x_cond_prob(X, y)\n        return 'gaussianNB train done!'\n\n    # \u8ba1\u7b97\u6982\u7387\n    def calc_y_post_probs(self, input_data):\n        probs = {}\n        for label, dist in self.x_cond_prob.items():\n            probs[label] = self.y_prior_prob[label]\n            for i in range(len(dist)):\n                mean, stdev = dist[i]\n                probs[label] *= self.get_gaussian_prob(input_data[i], mean, stdev)\n        return probs\n\n    # \u9884\u6d4b\u5206\u7c7b\n    def predict(self, X_test):\n        Y_pred = []\n        for X_one in X_test:\n            # sort with value from tuple (label, value), and get the last one label\n            label = sorted(\n                self.calc_y_post_probs(X_one).items(),\n                key=lambda x: x[-1])[-1][0]\n            Y_pred.append(label)\n        return np.array(Y_pred)\n\n# \u8bad\u7ec3\u6a21\u578b\nmodel = GaussianNB()\nmodel.fit(X, y)\n</code></pre> <p>\u901a\u8fc7\u548c<code>sklearn</code>\u7684\u9ad8\u65af\u6734\u7d20\u8d1d\u53f6\u65af\u5206\u7c7b\u5668\u7684\u7ed3\u679c\u7684\u5bf9\u6bd4\uff0c\u6211\u4eec\u53ef\u4ee5\u9a8c\u8bc1\u7ed3\u679c\u662f\u5426\u6b63\u786e\u3002<code>sklearn</code>\u63d0\u4f9b\u4e86\u6807\u51c6\u7684\u9ad8\u65af\u6734\u7d20\u8d1d\u53f6\u65af\u5206\u7c7b\u5668\uff1a</p> <pre><code>from sklearn.naive_bayes import GaussianNB\nmodel_golden = GaussianNB()\nmodel_golden.fit(X, y)\n</code></pre>"},{"location":"booknotes/ml/naive_bayes/#_6","title":"\u9884\u6d4b\u5206\u7c7b","text":"<p>\u5f97\u5230\u6a21\u578b\u540e\uff0c\u6211\u4eec\u521b\u5efa\u4e00\u4e9b\u65b0\u6570\u636e\u8fdb\u884c\u6d4b\u8bd5\uff1a</p> <pre><code>rng = np.random.RandomState(0)\n# \u4ea7\u751f\u7279\u5f811\u7684\u8303\u56f4(-6, 8)\uff0c\u7279\u5f812\u7684\u8303\u56f4(-14, 4)\nXnew = [-6, -14] + [14, 18] * rng.rand(2000, 2)\n</code></pre> <p>\u5c06\u6d4b\u8bd5\u6570\u636e<code>Xnew</code>\u548c\u8bad\u7ec3\u6570\u636e<code>X</code>\uff0c\u5c31\u80fd\u770b\u5230\u5206\u7c7b\u5224\u5b9a\u7684\u8fb9\u754c\u4f4d\u7f6e\uff1a</p> <pre><code>ynew = model.predict(Xnew)\nynew_golden = model_golden.predict(Xnew)\ndiff = ynew - ynew_golden\nprint(f'different label: {diff[np.nonzero(diff)]}')\n\nfig, ax = plt.subplots(1, 2, constrained_layout=True, sharey=True)\nax[0].scatter(X[:, 0], X[:, 1], c=y, s=50, cmap='RdBu')\nax[0].scatter(Xnew[:, 0], Xnew[:, 1], c=ynew, s=20, cmap='RdBu', alpha=0.1)\nax[0].set_title(\"myGNB\")\nax[0].set_xlabel('feature1')\nax[0].set_ylabel('feature2')\n\nax[1].scatter(X[:, 0], X[:, 1], c=y, s=50, cmap='RdBu')\nax[1].scatter(Xnew[:, 0], Xnew[:, 1], c=ynew_golden, s=20, cmap='RdBu', alpha=0.1)\nax[1].set_title(\"skGNB\")\nax[1].set_xlabel('feature1')\n\nfig.suptitle('Gaussian Naive Bayes', fontsize=16)\n</code></pre> <p></p>"},{"location":"booknotes/ml/perceptron/","title":"\u611f\u77e5\u673a","text":"<p>\u300a\u7edf\u8ba1\u5b66\u4e60\u65b9\u6cd5\u300b - \u674e\u822a - \u7b2c\u4e8c\u7248 \u7b2c\u4e8c\u7ae0\u7684\u8bfb\u4e66\u7b14\u8bb0\uff0c\u672c\u6587\u4e2d\u7684\u6240\u6709\u4ee3\u7801\u53ef\u5728GitHub\u4ed3\u5e93\u4e2d\u627e\u5230</p>"},{"location":"booknotes/ml/perceptron/#_2","title":"\u7406\u8bba","text":"<p>\u611f\u77e5\u673a(perceptron)\u662f\u4e8c\u5206\u7c7b\u7684\u7ebf\u6027\u5206\u7c7b\u6a21\u578b\uff0c\u5176\u8f93\u5165\u4e3a\u5b9e\u4f8b\u7684\u7279\u5f81\u5411\u91cf\uff0c\u8f93\u51fa\u4e3a\u5b9e\u4f8b\u7684\u7c7b\u522b\uff0c\u53d6+1\u548c-1\u4e8c\u503c\u3002</p> <p>\u611f\u77e5\u673a\u5b66\u4e60\u65e8\u5728\u6c42\u51fa\u5c06\u8bad\u7ec3\u6570\u636e\u8fdb\u884c\u7ebf\u6027\u5212\u5206\u7684\u5206\u79bb\u8d85\u5e73\u9762\uff0c\u4e3a\u6b64\uff0c\u5bfc\u5165\u57fa\u4e8e\u8bef\u5206\u7c7b\u7684\u635f\u5931\u51fd\u6570\uff0c\u5229\u7528\u68af\u5ea6\u4e0b\u964d\u6cd5\u5bf9\u635f\u5931\u51fd\u6570\u8fdb\u884c\u6781\u5c0f\u5316\uff0c\u4ece\u800c\u6c42\u5f97\u611f\u77e5\u673a\u6a21\u578b\u3002</p> <pre><code>flowchart TB\n    subgraph A[\u5b66\u4e60]\n    Data{{\u8bad\u7ec3\u6570\u636e\u96c6X,Y}} --\u5229\u7528\u68af\u5ea6\u4e0b\u964d\u6cd5\\n\u4f7f\u635f\u5931\u51fd\u6570\u6700\u5c0f--&gt; Model[\u6a21\u578b: \u5206\u79bb\u8d85\u5e73\u9762]\n    end</code></pre> <p>\u611f\u77e5\u673a\u9884\u6d4b\u662f\u7528\u5b66\u4e60\u5f97\u5230\u7684\u611f\u77e5\u673a\u6a21\u578b\u5bf9\u65b0\u7684\u8f93\u5165\u5b9e\u4f8b\u8fdb\u884c\u5206\u7c7b\u3002\u611f\u77e5\u673a\u662f\u795e\u7ecf\u7f51\u7edc\u4e0e\u652f\u6301\u5411\u91cf\u673a\u7684\u57fa\u7840\u3002</p> <pre><code>flowchart TB\n    subgraph B[\u9884\u6d4b]\n    Data{{\u6d4b\u8bd5\u6570\u636eX}} --\u8f93\u5165--&gt; Model[\u611f\u77e5\u673a\u6a21\u578b] --\u6839\u636e\u8d85\u5e73\u9762\u5212\u5206\u7ed3\u679c--&gt; Res[Y\u7684\u9884\u6d4b\u503c]\n    end</code></pre>"},{"location":"booknotes/ml/perceptron/#_3","title":"\u611f\u77e5\u673a\u6a21\u578b","text":"<p>\u611f\u77e5\u673a\u662f\u6839\u636e\u8f93\u5165\u5b9e\u4f8b\u7684\u7279\u5f81\u5411\u91cf \\(x\\) \u5bf9\u5176\u8fdb\u884c\u4e8c\u7c7b\u5206\u7c7b\u7684\u7ebf\u6027\u5206\u7c7b\u6a21\u578b\uff1a</p> \\[ f(x)=\\operatorname{sign}(w \\cdot x+b) \\] <p>\u5176\u4e2d\uff0c \\(w\\) \u548c \\(b\\) \u4e3a\u611f\u77e5\u673a\u6a21\u578b\u53c2\u6570\uff0c \\(w \\cdot x\\) \u8868\u793a \\(w\\) \u548c \\(x\\) \u7684\u5185\u79ef\u3002sign\u662f\u7b26\u53f7\u51fd\u6570\uff0c\u5373</p> \\[\\operatorname{sign}(x) = \\begin{cases}+1&amp;x\\geq0\\\\\\\\-1&amp;x&lt;0\\end{cases}\\] <p>\u611f\u77e5\u673a\u6a21\u578b\u5bf9\u5e94\u4e8e\u8f93\u5165\u7a7a\u95f4\uff08\u7279\u5f81\u7a7a\u95f4\uff09\u4e2d\u7684\u5206\u79bb\u8d85\u5e73\u9762</p> \\[w \\cdot x+b=0\\] <p>\u5176\u4e2d\uff0c \\(w\\) \u662f\u8d85\u5e73\u9762\u7684\u6cd5\u5411\u91cf\uff0c \\(b\\) \u662f\u8d85\u5e73\u9762\u7684\u622a\u8ddd\u3002\u8fd9\u4e2a\u8d85\u5e73\u9762\u5c06\u7279\u5f81\u7a7a\u95f4\u5212\u5206\u4e3a\u4e24\u4e2a\u90e8\u5206\u3002\u4f4d\u4e8e\u4e24\u90e8\u5206\u7684\u70b9\uff08\u7279\u5f81\u5411\u91cf\uff09\u5206\u522b\u88ab\u5206\u4e3a\u6b63\u3001\u8d1f\u4e24\u7c7b\u3002\u5982\u4e0b\u56fe\u6240\u793a\uff1a</p> <p></p> <p>\u56fe\u4e2d\u503c\u7684\u8bc1\u660e\u8fc7\u7a0b\u53ef\u53c2\u8003\u6587\u7ae0\u3002</p>"},{"location":"booknotes/ml/perceptron/#_4","title":"\u635f\u5931\u51fd\u6570","text":"<p>\u635f\u5931\u51fd\u6570\u7684\u4e00\u4e2a\u81ea\u7136\u9009\u62e9\u662f\u8bef\u5206\u70b9\u7684\u603b\u6570(\u5c06\u8bef\u5206\u70b9\u4e2a\u6570\u51cf\u5c11\u5230\u6700\u5c0f)\u3002\u4f46\u662f\uff0c\u8fd9\u6837\u7684\u635f\u5931\u51fd\u6570\u4e0d\u53ef\u5bfc\uff0c\u96be\u4ee5\u4f18\u5316\u3002\u56e0\u6b64\u6211\u4eec\u9700\u8981\u5bfb\u627e\u4e00\u4e2a\u66f4\u52a0\u5408\u9002\u7684\u635f\u5931\u51fd\u6570\uff0c\u5e76\u4fdd\u8bc1\u635f\u5931\u51fd\u6570\u6536\u655b\u4e8e\u8bef\u5206\u70b9\u6700\u5c11\u7684\u70b9(\u8bef\u5206\u7c7b\u6700\u5c0f\u7b56\u7565)\u3002</p> <p>\u611f\u77e5\u673a\u5b66\u4e60\u7684\u635f\u5931\u51fd\u6570\u5b9a\u4e49\u4e3a\uff1a</p> \\[\\min _{w, b} L(w, b)=-\\sum_{x_{i} \\in M} y_{i}\\left(w \\cdot x_{i}+b\\right)\\] <p>\u5176\u4e2d\uff0c \\(M\\) \u662f\u8d85\u5e73\u9762 \\(S\\) \u7684\u8bef\u5206\u7c7b\u70b9\u96c6\u5408\u3002\u901a\u8fc7\u300a\u7edf\u8ba1\u5b66\u4e60\u65b9\u6cd5\u300b\u7b2c\u4e8c\u7ae0\u4e2d\u7684\u63a8\u5bfc\u8fc7\u7a0b\u53ef\u77e5\uff0c\u67d0\u4e00\u8bef\u5206\u7c7b\u70b9 \\(x_{i}\\) \u5230\u8d85\u5e73\u9762 \\(S\\) \u7684\u8ddd\u79bb\u662f\uff1a</p> \\[-\\frac{1}{\\left \\| w \\right \\|}y_{i}(w \\cdot x_{i}+b)\\] <p>\u56e0\u6b64\uff0c\u611f\u77e5\u673a\u635f\u5931\u51fd\u6570\u7684\u610f\u4e49\u662f\u8bef\u5206\u7c7b\u70b9\u5230\u8d85\u5e73\u9762 \\(S\\) \u7684\u603b\u8ddd\u79bb\u3002</p> <p>\u635f\u5931\u51fd\u6570 \\(L(w, b)\\) \u662f\u975e\u8d1f\u7684\u3002\u5982\u679c\u6ca1\u6709\u8bef\u5206\u7c7b\u70b9\uff0c\u635f\u5931\u51fd\u6570\u503c\u662f0\u3002\u8bef\u5206\u7c7b\u70b9\u8d8a\u5c11\uff0c\u8bef\u5206\u7c7b\u70b9\u79bb\u8d85\u5e73\u9762\u8d8a\u8fd1\uff0c\u635f\u5931\u51fd\u6570\u503c\u5c31\u8d8a\u5c0f\u3002\u5229\u7528\u68af\u5ea6\u4e0b\u964d\u6cd5\u8c03\u6574 \\(w\\) \u548c \\(b\\)\uff0c\u4ee5\u4e0d\u65ad\u6781\u5c0f\u5316\u635f\u5931\u51fd\u6570\uff0c\u76f4\u5230\u635f\u5931\u51fd\u6570\u503c\u4e3a0\uff0c\u6b64\u65f6\u8d85\u5e73\u9762\u4e0b\u6ca1\u6709\u8bef\u5206\u7c7b\u70b9\u3002</p>"},{"location":"booknotes/ml/perceptron/#_5","title":"\u7b97\u6cd5","text":"<p>\u8f93\u5165\uff1a\u8bad\u7ec3\u6570\u636e\u96c6 \\(T\\)\uff0c\u5b66\u4e60\u7387 \\(\\eta (0 &lt; \\eta \\leq 1)\\)</p> <p>\u8f93\u51fa\uff1a \\(w\\)\uff0c \\(b\\)\uff0c\u611f\u77e5\u673a\u6a21\u578b \\(f(x)=\\operatorname{sign}(w \\cdot x+b)\\)</p> <p>\u5229\u7528\u68af\u5ea6\u4e0b\u964d\u6cd5\uff0c\u6c42\u53d6 \\(w\\) \u548c \\(b\\) \u7684\u5177\u4f53\u8fc7\u7a0b\u5982\u4e0b\uff1a</p> <ul> <li>\u9009\u53d6\u521d\u503c \\(w_{0}\\) \u548c \\(b_{0}\\)</li> <li>\u5728\u8bad\u7ec3\u96c6\u4e2d\u9009\u53d6\u6570\u636e \\((x_{i},y_{i})\\)</li> <li>\u5982\u679c \\(y_{i}(w \\cdot x_{i}+b) \\leq 0\\)\uff0c\u8868\u660e \\((x_{i},y_{i})\\) \u662f\u8bef\u5206\u7c7b\u70b9\uff0c\u9700\u8981\u901a\u8fc7\u68af\u5ea6\u4e0b\u964d\u6cd5\u8c03\u6574 \\(w\\) \u548c \\(b\\)\uff1a</li> </ul> \\[\\begin{aligned} &amp;w \\leftarrow w + \\eta y_{i}x_{i} \\\\ &amp;b \\leftarrow b + \\eta y_{i} \\end{aligned}\\] <ul> <li>\u8df3\u8f6c\u81f3\u7b2c\u4e8c\u6b65\uff0c\u76f4\u5230\u8bad\u7ec3\u96c6\u4e2d\u6ca1\u6709\u8bef\u5206\u7c7b\u70b9</li> </ul> <p>\u4e0a\u8ff0\u8fc7\u7a0b\u53ef\u89e3\u91ca\u4e3a\uff1a\u5f53\u4e00\u4e2a\u5b9e\u4f8b\u70b9\u88ab\u8bef\u5206\u7c7b\uff0c\u5373\u4f4d\u4e8e\u5206\u79bb\u8d85\u5e73\u9762\u7684\u9519\u8bef\u4e00\u4fa7\u65f6\uff0c\u8c03\u6574 \\(w\\) \u548c \\(b\\) \u7684\u503c\uff0c\u4f7f\u5206\u79bb\u8d85\u5e73\u9762\u5411\u8be5\u8bef\u5206\u7c7b\u70b9\u7684\u4e00\u4fa7\u79fb\u52a8\uff0c\u4ee5\u51cf\u5c11\u8be5\u8bef\u5206\u7c7b\u70b9\u4e0e\u8d85\u5e73\u9762\u7684\u8ddd\u79bb\uff0c\u76f4\u81f3\u8d85\u5e73\u9762\u8d8a\u8fc7\u8be5\u8bef\u5206\u7c7b\u70b9\u4f7f\u5176\u88ab\u6b63\u786e\u5206\u7c7b\u3002</p>"},{"location":"booknotes/ml/perceptron/#_6","title":"\u7b97\u6cd5\u7684\u6536\u655b\u6027","text":"<p>\u5f53\u8bad\u7ec3\u6570\u636e\u96c6\u7ebf\u6027\u53ef\u5206\u65f6(\u5b58\u5728\u4e00\u4e2a\u8d85\u5e73\u9762\u53ef\u4ee5\u5c06\u6b63\u8d1f\u5b9e\u4f8b\u5b8c\u5168\u5212\u5206\u5230\u4e24\u4fa7)\uff0c\u611f\u77e5\u673a\u5b66\u4e60\u7b97\u6cd5\u5b58\u5728\u65e0\u7a77\u591a\u4e2a\u89e3\uff0c\u5176\u89e3\u7531\u4e8e\u4e0d\u540c\u7684\u521d\u503c\u6216\u4e0d\u540c\u7684\u8fed\u4ee3\u987a\u5e8f\u800c\u53ef\u80fd\u6709\u6240\u4e0d\u540c\u3002\u4e3a\u4e86\u5f97\u5230\u552f\u4e00\u7684\u8d85\u5e73\u9762\uff0c\u9700\u8981\u5bf9\u5206\u79bb\u8d85\u5e73\u9762\u589e\u52a0\u7ea6\u675f\u6761\u4ef6\uff0c\u8fd9\u5c31\u662f\u652f\u6301\u5411\u91cf\u673a\u7684\u60f3\u6cd5\u6765\u6e90\u3002</p> <p>\u5f53\u8bad\u7ec3\u96c6\u7ebf\u6027\u4e0d\u53ef\u5206\u65f6\uff0c\u611f\u77e5\u673a\u5b66\u4e60\u7b97\u6cd5\u4e0d\u6536\u655b\uff0c\u8fed\u4ee3\u7ed3\u679c\u4f1a\u53d1\u751f\u9707\u8361\u3002</p>"},{"location":"booknotes/ml/perceptron/#_7","title":"\u5b9e\u9a8c","text":"<p>\u5b9e\u73b0\u4e00\u4e2a\u611f\u77e5\u673a\u4e8c\u5206\u7c7b\u5668\uff0c\u5e76\u901a\u8fc7\u4e0e<code>sklearn</code>\u7684\u611f\u77e5\u673a\u6a21\u578b\u8fdb\u884c\u5bf9\u6bd4\uff0c\u9a8c\u8bc1\u7ed3\u679c\u3002</p>"},{"location":"booknotes/ml/perceptron/#_8","title":"\u51c6\u5907\u6570\u636e","text":"<pre><code>import pandas as pd\nimport numpy as np\nimport matplotlib.pyplot as plt\nimport seaborn as sns\n\n# load data\niris = sns.load_dataset(\"iris\")\n\n# \u53d6\u51fa'sepal_length'\uff0c'sepal_width'\u548c'species'\uff0c\u524d100\u4e2a\u6570\u636e\uff0c\u524d50\u4e2a'species'\u662f'setosa'\uff0c\u540e50\u4e2a'species'\u662f'versicolor'\ndata = np.array(iris.iloc[:100, [0, 1, -1]])\n# \u7b2c\u4e00\u7ef4\u5ea6\u5168\u90e8\u53d6\u51fa(100\u884c)\uff0c\u7b2c\u4e8c\u7ef4\u5ea6\u53d6\u51fa\u7b2c\u4e00\u4e2a\u5217\uff0c\u5230\u5012\u6570\u7b2c\u4e8c\u4e2a\u5217\nX = data[:,:-1]\n# \u4e8c\u5206\u7c7b'species'\u6807\u7b7e\uff0c'setosa'\u503c\u4e3a-1\uff0c'versicolor'\u503c\u4e3a1\ny = np.array([1 if s == 'versicolor' else -1 for s in data[:,-1]])\n\nfig, ax = plt.subplots()\nsct = ax.scatter(X[:50, 0], X[:50, 1], s=50, label='setosa')\nsct = ax.scatter(X[50:100, 0], X[50:100, 1], s=50, label='versicolor')\nax.set_xlabel('sepal_length')\nax.set_ylabel('sepal_width')\nax.legend()\n</code></pre>"},{"location":"booknotes/ml/perceptron/#_9","title":"\u8bad\u7ec3\u6a21\u578b","text":"<p>\u4e0b\u9762\u7684\u4ee3\u7801\u5b9e\u73b0\u4e86\u611f\u77e5\u673a\u7684\u539f\u59cb\u7b97\u6cd5\uff0c\u5373\u5bf9\u635f\u5931\u51fd\u6570\u8fdb\u884c\u68af\u5ea6\u4e0b\u964d\u7b97\u6cd5\u8fdb\u884c\u8fed\u4ee3\uff0c\u76f4\u5230\u6ca1\u6709\u8bef\u5206\u70b9\uff1a</p> <pre><code>class MyPerceptron:\n    def __init__(self):\n        self.b = 0\n        self.l_rate = 0.1\n\n    def sign(self, x, w, b):\n        y = np.dot(x, w) + b\n        return y\n\n    # \u968f\u673a\u68af\u5ea6\u4e0b\u964d\u6cd5\n    def fit(self, X_train, y_train):\n        self.w = np.ones(len(X_train[0]), dtype=np.float32)\n        is_end = False\n        while not is_end:\n            err_point_count = 0\n            for d in range(len(X_train)):\n                X = X_train[d]\n                y = y_train[d]\n                if y * self.sign(X, self.w, self.b) &lt;= 0:\n                    # \u5904\u7406\u8bef\u5206\u70b9d\n                    self.w = self.w + self.l_rate * np.dot(y, X)\n                    self.b = self.b + self.l_rate * y\n                    err_point_count += 1\n            if err_point_count == 0:\n                is_end = True\n        return f'Perceptron Model!'\n\n# \u8bad\u7ec3\u611f\u77e5\u673a\u6a21\u578b\nperceptron = MyPerceptron()\nperceptron.fit(X, y)\n\nx_line = np.linspace(4, 7, 10)\na = -perceptron.w[0]/perceptron.w[1]\nb = -perceptron.b/perceptron.w[1]\ny_line = a*x_line + b\n</code></pre> <p>\u540c\u65f6\uff0c\u6211\u4eec\u4e5f\u7528<code>sklearn</code>\u63d0\u4f9b\u7684\u611f\u77e5\u673a\u6a21\u578b<code>Perceptron</code>\u8fdb\u884c\u5bf9\u6bd4\u5b9e\u9a8c\u3002\u7531\u4e8e\u611f\u77e5\u673a\u7b97\u6cd5\u5b58\u5728\u591a\u4e2a\u89e3\uff0c\u56e0\u6b64\u4e0b\u56fe\u4e2d\u7684\u4e24\u6761\u611f\u77e5\u673a\u7ebf\u5e76\u4e0d\u5b8c\u5168\u76f8\u540c\uff1a</p> <pre><code>import sklearn\nfrom sklearn.linear_model import Perceptron\n\n# tol\u53c2\u6570\u89c4\u5b9a\u4e86\u5982\u679c\u672c\u6b21\u8fed\u4ee3\u7684\u635f\u5931\u548c\u4e0a\u6b21\u8fed\u4ee3\u7684\u635f\u5931\u4e4b\u5dee\u5c0f\u4e8e\u4e00\u4e2a\u7279\u5b9a\u503c\u65f6\uff0c\u505c\u6b62\u8fed\u4ee3\u3002\u5982\u679c\u8bbe\u7f6e\u6210None\u53ef\u4fdd\u8bc1\u4e0d\u4f1a\u51fa\u73b0\u8bef\u5dee\u70b9\nclf = Perceptron(fit_intercept=True, max_iter=1000, shuffle=True, tol=None)\nclf.fit(X, y)\n\nx_line_g = np.arange(4, 8)\na_g = -clf.coef_[0][0]/clf.coef_[0][1]\nb_g = -clf.intercept_/clf.coef_[0][1]\ny_line_g = a_g*x_line_g + b_g\n</code></pre> <p>\u5bf9\u6bd4<code>sklearn</code>\u7684<code>Perceptron</code>\u6a21\u578b\u548c\u672c\u5730\u5b9e\u73b0\u7684<code>MyPerceptron</code>\u6a21\u578b\uff0c\u7ed3\u679c\u5982\u4e0b\uff1a</p> <pre><code>fig, ax = plt.subplots(2, 1, constrained_layout=True, sharey=True)\nfig.suptitle('\u611f\u77e5\u673a', fontsize=16)\n\nax[0].scatter(X[:, 0], X[:, 1], s=50, c=y, cmap='RdBu')\n\n# \u611f\u77e5\u673a\u7ebf\nax[0].plot(x_line, y_line, label=f'y={round(a,2)}x{round(b,2)}')\nax[0].legend(loc='upper left')\n\nax[0].set_ylabel('sepal_width')\nax[0].set_title('myPerceptron', fontsize=13)\n\nax[1].scatter(X[:, 0], X[:, 1], s=50, c=y, cmap='RdBu')\n# \u611f\u77e5\u673a\u7ebf\nax[1].plot(x_line_g, y_line_g, label=f'y={round(a_g, 2)}x{round(b_g[0],2)}')\nax[1].legend(loc='upper left')\n\nax[1].set_xlabel('sepal_length')\nax[1].set_ylabel('sepal_width')\nax[1].set_title('skPerceptron', fontsize=13)\n</code></pre> <p></p>"},{"location":"booknotes/ml/svm/","title":"\u652f\u6301\u5411\u91cf\u673a","text":"<p>\u300a\u7edf\u8ba1\u5b66\u4e60\u65b9\u6cd5\u300b - \u674e\u822a - \u7b2c\u4e8c\u7248 \u7b2c\u4e03\u7ae0\uff0c\u4ee5\u53ca\u300aPython\u6570\u636e\u624b\u518c\u300b - Jake VanderPlas \u7b2c\u4e94\u7ae0\u7684\u8bfb\u4e66\u7b14\u8bb0\uff0c\u672c\u6587\u4e2d\u7684\u6240\u6709\u4ee3\u7801\u53ef\u5728GitHub\u4ed3\u5e93\u4e2d\u627e\u5230</p>"},{"location":"booknotes/ml/svm/#_2","title":"\u7406\u8bba","text":"<p>\u652f\u6301\u5411\u91cf\u673a\u5206\u4e09\u79cd:</p> <ul> <li>\u7ebf\u6027\u53ef\u5206\u652f\u6301\u5411\u91cf\u673a<ul> <li>\u901a\u8fc7\u786c\u95f4\u9694\u6700\u5927\u5316(hard margin maximization)\uff0c\u5206\u7c7b\u53ef\u7ebf\u6027\u5212\u5206\u7684\u6570\u636e(\u6240\u6709\u6570\u636e\u6b63\u786e\u5730\u5206\u5e03\u5728\u6700\u5927\u95f4\u9694\u4e24\u4fa7)</li> </ul> </li> <li>\u7ebf\u6027\u652f\u6301\u5411\u91cf\u673a<ul> <li>\u901a\u8fc7\u8f6f\u95f4\u9694\u6700\u5927\u5316(soft margin maximization)\uff0c\u5206\u7c7b\u53ef\u7ebf\u6027\u5212\u5206\u7684\u5927\u90e8\u5206\u6570\u636e(\u53ef\u80fd\u5b58\u5728\u8bef\u5206\u70b9\uff0c\u6216\u5728\u6700\u5927\u95f4\u9694\u4e4b\u95f4)</li> </ul> </li> <li>\u975e\u7ebf\u6027\u652f\u6301\u5411\u91cf\u673a<ul> <li>\u901a\u8fc7\u4f7f\u7528\u6838\u6280\u5de7(kernel trick)\u53ca\u8f6f\u95f4\u9694\u6700\u5927\u5316\uff0c\u5206\u7c7b\u975e\u7ebf\u6027\u5212\u5206\u7684\u6570\u636e</li> </ul> </li> </ul>"},{"location":"booknotes/ml/svm/#_3","title":"\u7ebf\u6027\u53ef\u5206\u652f\u6301\u5411\u91cf\u673a","text":"<p>\u56fe\u4e2d\u6570\u636e\u7684\u8bc1\u660e\u53ef\u53c2\u8003\u53e6\u4e00\u7bc7\u535a\u6587\u300a\u611f\u77e5\u673a\u300b\uff0c\u5176\u4e2d \\(H_{1}\\) \u548c \\(H_{2}\\) \u79f0\u4e3a\u95f4\u9694\u8fb9\u754c\uff1a</p> \\[H_{1}: w \\cdot x + b = 1\uff0cH_{2}: w \\cdot x + b = -1\\] <p>\u4e3a\u4e86\u5bf9\u6700\u96be\u5206\u7684\u5b9e\u4f8b\u70b9(\u79bb\u8d85\u5e73\u9762\u6700\u8fd1\u7684\u70b9)\u4e5f\u6709\u8db3\u591f\u5927\u7684\u786e\u4fe1\u5ea6\u5c06\u5b83\u4eec\u5206\u5f00\uff0c\u6211\u4eec\u9700\u8981\u5728\u4fdd\u8bc1\u65e0\u8bef\u5206\u70b9\u7684\u60c5\u51b5\u4e0b\uff0c\u4f7f \\(H_{1}\\) \u548c \\(H_{2}\\) \u7684\u95f4\u9694\u6700\u5927\uff1a</p> \\[\\max _{w, b} \\frac{2}{\\|w\\|}\\] <p>\u800c\u6b64\u95f4\u9694\u6700\u5927\u7684\u95ee\u9898\uff0c\u53ef\u4ee5\u8f6c\u5316\u4e3a\u51f8\u4e8c\u6b21\u89c4\u5212\u95ee\u9898\uff0c\u5176\u539f\u59cb\u6700\u4f18\u5316\u95ee\u9898\u53ef\u8868\u793a\u4e3a\uff1a</p> \\[\\min _{w, b} \\frac{1}{2}\\|w\\|^{2}\\] \\[s.t. \\quad y_{i}\\left(w \\cdot x_{i}+b\\right)-1 \\geqslant 0, \\quad i=1,2, \\cdots, N\\] <p>\u6c42\u5f97\u6700\u4f18\u5316\u95ee\u9898\u7684\u89e3\u4e3a \\(w^\\ast\\)\uff0c \\(b^\\ast\\)\uff0c\u5f97\u5230\u7ebf\u6027\u53ef\u5206\u652f\u6301\u5411\u91cf\u673a\uff0c\u5206\u79bb\u8d85\u5e73\u9762\u662f\uff1a</p> \\[w^\\ast \\cdot x+b^\\ast=0\\] <p>\u5206\u7c7b\u51b3\u7b56\u51fd\u6570\u662f\uff1a</p> \\[f(x)=\\operatorname{sign}\\left(w^\\ast \\cdot x+b^\\ast\\right)\\] <p>\u5229\u7528\u62c9\u683c\u6717\u65e5\u5bf9\u5076\u6027\u53ef\u5c06\u4e0a\u8ff0\u539f\u59cb\u95ee\u9898\u8f6c\u5316\u4e3a\u5bf9\u5076\u95ee\u9898(\u53c2\u8003)\uff1a</p> \\[\\min \\frac{1}{2} \\sum_{i=1}^{N} \\sum_{j=1}^{N} \\alpha_{i} \\alpha_{j} y_{i} y_{j}\\left(x_{i} \\cdot x_{j}\\right)-\\sum_{i=1}^{N} \\alpha_{i}\\] \\[s.t. \\quad \\sum_{i=1}^{N} \\alpha_{i} y_{i}=0\\] \\[\\alpha_{i} \\geqslant 0, \\quad i=1,2, \\cdots, N\\] <p>\u901a\u8fc7\u6c42\u89e3\u5bf9\u5076\u95ee\u9898\u5b66\u4e60\u7ebf\u6027\u53ef\u5206\u652f\u6301\u5411\u91cf\u673a\uff0c\u5373\u9996\u5148\u6c42\u89e3\u5bf9\u5076\u95ee\u9898\u7684\u6700\u4f18\u503c \\(a^\\ast\\)\uff0c\u7136\u540e\u6c42\u6700\u4f18\u503c \\(w^\\ast\\) \u548c \\(b^\\ast\\)\uff0c\u5f97\u51fa\u5206\u79bb\u8d85\u5e73\u9762\u548c\u5206\u7c7b\u51b3\u7b56\u51fd\u6570\uff1a</p> \\[w^\\ast = \\sum_{i=1}^{N} \\alpha_{i}^\\ast y_{i} x_{i}\\] \\[b^\\ast = y_{j} - \\sum_{i=1}^{N} \\alpha_{i}^\\ast y_{i} (x_{i} \\cdot x_{j})\\]"},{"location":"booknotes/ml/svm/#_4","title":"\u652f\u6301\u5411\u91cf","text":"<p>\u7531KKT\u4e92\u8865\u6761\u4ef6\u53ef\u8bc1\u660e(\u53c2\u89c1\u300a\u7edf\u8ba1\u5b66\u4e60\u65b9\u6cd5\u300b\u7684\u5b9a\u4e497.4)\uff0c \\(\\alpha_{i}^\\ast&gt;0\\) \u7684\u6837\u672c\u70b9 \\(x_i\\) \u662f\u652f\u6301\u5411\u91cf\uff0c\u800c\u5176\u4ed6 \\(\\alpha_{i}^\\ast=0\\) \u7684\u6837\u672c\u70b9\u5bf9\u5206\u79bb\u8d85\u5e73\u9762\u5e76\u65e0\u5f71\u54cd\u3002</p>"},{"location":"booknotes/ml/svm/#_5","title":"\u7b97\u6cd5\u4f8b\u5b50","text":"<p>\u5df2\u77e5\u4e00\u4e2a\u5982\u4e0b\u56fe\u6240\u793a\u7684\u8bad\u7ec3\u6570\u636e\u96c6\uff0c\u5176\u6b63\u4f8b\u70b9\u662f \\(x_{1}=(3,3)^T\\)\uff0c \\(x_{2}=(4,3)^T\\)\uff0c\u8d1f\u4f8b\u70b9\u662f \\(x_{3}=(1,1)^T\\)\u3002\u8bd5\u7528\u7ebf\u6027\u53ef\u5206\u652f\u6301\u5411\u91cf\u673a\u7684\u5bf9\u5076\u95ee\u9898\uff0c\u6c42\u89e3\u5206\u79bb\u8d85\u5e73\u9762\u3002</p> <p></p> <p>\u89e3 \u6839\u636e\u6240\u7ed9\u6570\u636e\uff0c\u5bf9\u5076\u95ee\u9898\u662f</p> \\[\\begin{aligned} \\min _{\\alpha}\\quad &amp;\\frac{1}{2} \\sum_{i=1}^{N} \\sum_{j=1}^{N} \\alpha_{i} \\alpha_{j} y_{i} y_{j}\\left(x_{i} \\cdot x_{j}\\right)-\\sum_{i=1}^{N} \\alpha_{i} \\\\ &amp;= \\frac{1}{2} (18\\alpha_{1}^2 + 25\\alpha_{2}^2 + 2\\alpha_{3}^2 + 42\\alpha_{1}\\alpha_{2} - 12\\alpha_{1}\\alpha_{3} - 14\\alpha_{2}\\alpha_{3}) - \\alpha_{1} - \\alpha_{2} - \\alpha_{3} \\\\ s.t. \\quad &amp;\\alpha_{1} + \\alpha_{2} - \\alpha_{3} = 0 \\\\ &amp;\\alpha_{i} \\geqslant 0, \\quad i=1,2,3 \\end{aligned}\\] <p>\u5c06 \\(\\alpha_{3}=\\alpha_{1}+\\alpha_{2}\\) \u4ee3\u5165\u76ee\u6807\u51fd\u6570\uff0c\u6c42 \\(s(\\alpha_{1},\\alpha_{2})\\) \u6700\u5c0f\u503c\uff1a</p> \\[s(\\alpha_{1},\\alpha_{2}) = 4\\alpha_{1}^2+\\frac{13}{2}\\alpha_{2}^2+10\\alpha_{1}\\alpha_{2}-2\\alpha_{1}-2\\alpha_{2}\\] <p>\u5bf9 \\(\\alpha_{1},\\alpha_{2}\\) \u6c42\u504f\u5bfc\u6570\u5e76\u4ee4\u5176\u4e3a0\uff0c\u6613\u77e5 \\(s(\\alpha_{1},\\alpha_{2})\\) \u5728\u70b9 \\((\\frac{3}{2},-1)^T\\) \u53d6\u6781\u503c\uff0c\u4f46\u8be5\u70b9\u4e0d\u6ee1\u8db3\u7ea6\u675f\u6761\u4ef6 \\(\\alpha_{2} \\geqslant 0\\)\uff0c\u6240\u4ee5\u6700\u5c0f\u503c\u5e94\u5728\u8fb9\u754c\u4e0a\u8fbe\u5230\u3002</p> <ul> <li> <p>\u5f53 \\(\\alpha_{1} = 0\\) \u65f6\uff0c\u6700\u5c0f\u503c\u662f \\(s(0,\\frac{2}{13})=-\\frac{2}{13}\\)</p> </li> <li> <p>\u5f53 \\(\\alpha_{1} = 0\\) \u65f6\uff0c\u6700\u5c0f\u503c\u662f \\(s(\\frac{1}{4},0)=-\\frac{1}{4}\\)</p> </li> </ul> <p>\u56e0\u6b64\uff0c \\(s(\\alpha_{1},\\alpha_{2})\\) \u5728 \\((\\frac{1}{4},0)^T\\) \u8fbe\u5230\u6700\u5c0f\uff0c\u6b64\u65f6 \\(\\alpha_{3}=\\frac{1}{4}\\)\u3002</p> <p>\u8fd9\u6837\uff0c \\(\\alpha_{1}^\\ast=\\alpha_{3}^\\ast=\\frac{1}{4}\\) \u5bf9\u5e94\u7684\u5b9e\u4f8b\u70b9 \\(x_{1},x_{3}\\) \u662f\u652f\u6301\u5411\u91cf\u3002</p> <p>\u6839\u636e \\(\\alpha_{1}^\\ast,\\alpha_{2}^\\ast,\\alpha_{3}^\\ast\\) \u7684\u503c\u6c42 \\(w^\\ast\\)\uff0c\u5e76\u9009\u53d6\u6b63\u5206\u91cf \\(\\alpha_{1}^\\ast\\) \u6c42 \\(b^\\ast\\)\uff1a</p> \\[\\begin{aligned} w^{(1)\\ast} &amp;= \\sum_{i=1}^{3} \\alpha_{i}^\\ast y_{i} x_{i}^ {(1)} = \\frac{1}{4}*3 -  \\frac{1}{4}*1 = \\frac{1}{2} \\\\ w^{(2)\\ast} &amp;= \\sum_{i=1}^{3} \\alpha_{i}^\\ast y_{i} x_{i}^ {(2)} = \\frac{1}{4}*3 -  \\frac{1}{4}*1 = \\frac{1}{2} \\\\ b^\\ast &amp;= y_{1} - \\sum_{i=1}^{3} \\alpha_{i}^\\ast y_{i} (x_{i} \\cdot x_{1}) = 1 - (\\frac{1}{4}*18 - \\frac{1}{4}*6) = -2 \\end{aligned}\\] <p>\u56e0\u6b64\uff0c\u5206\u79bb\u8d85\u5e73\u9762\u4e3a\uff1a</p> \\[\\frac{1}{2}x^{(1)}+\\frac{1}{2}x^{(2)}-2 = 0\\]"},{"location":"booknotes/ml/svm/#_6","title":"\u7ebf\u6027\u652f\u6301\u5411\u91cf\u673a","text":"<p>\u73b0\u5b9e\u4e2d\u8bad\u7ec3\u6570\u636e\u4f7f\u7ebf\u6027\u53ef\u5206\u7684\u60c5\u5f62\u8f83\u5c11\uff0c\u5927\u90e8\u5206\u8bad\u7ec3\u6570\u636e\u5f80\u5f80\u4f7f\u8fd1\u4f3c\u7ebf\u6027\u53ef\u5206\u7684\u3002\u6b64\u65f6\uff0c\u5c31\u9700\u8981\u91c7\u7528\u7ebf\u6027\u652f\u6301\u5411\u91cf\u673a\uff0c\u4fee\u6539\u786c\u95f4\u9694\u6700\u5927\u5316\uff0c\u4f7f\u5176\u6210\u4e3a\u8f6f\u95f4\u9694\u6700\u5927\u5316\u3002</p> <p>\u7ebf\u6027\u4e0d\u53ef\u5206\u610f\u5473\u7740\u67d0\u4e9b\u6837\u672c\u70b9\u4e0d\u80fd\u6ee1\u8db3\u51fd\u6570\u95f4\u9694\u5927\u4e8e\u7b49\u4e8e1\u7684\u7ea6\u675f\u6761\u4ef6\u3002\u4e3a\u4e86\u89e3\u51b3\u8fd9\u4e2a\u95ee\u9898\uff0c\u5f15\u5165\u4e86\u677e\u5f1b\u53d8\u91cf \\(\\xi_i \\geqslant 0\\)\uff0c\u4f7f\u7ea6\u675f\u6761\u4ef6\u53d8\u4e3a\uff1a</p> \\[s.t. \\quad y_{i}\\left(w \\cdot x_{i}+b\\right) \\geqslant 1 - \\xi_i, \\quad i=1,2, \\cdots, N\\] <p>\u540c\u65f6\uff0c\u5bf9\u6bcf\u4e2a\u677e\u5f1b\u53d8\u91cf \\(\\xi_i\\)\uff0c\u9700\u8981\u652f\u4ed8\u4e00\u4e2a\u4ee3\u4ef7\u3002\u76ee\u6807\u51fd\u6570\u53d8\u4e3a\uff1a</p> \\[\\min _{w, b, \\xi} \\frac{1}{2}\\|w\\|^{2}+C \\sum_{i=1}^{N} \\xi_{i}\\] <p>\u8fd9\u91cc\uff0c \\(C &gt; 0\\) \u79f0\u4e3a\u60e9\u7f5a\u53c2\u6570\uff0c\u4e00\u822c\u7531\u5e94\u7528\u95ee\u9898\u51b3\u5b9a\u3002 \\(C\\) \u503c\u8d8a\u5927\u5bf9\u8bef\u5206\u7c7b\u7684\u60e9\u7f5a\u8d8a\u5927\uff0c\u8bef\u5206\u70b9\u8d8a\u5c11\u3002</p> <p>\u5f15\u5165\u677e\u5f1b\u53d8\u91cf \\(\\xi_i\\) \u540e\uff0c\u786c\u95f4\u9694\u6700\u5927\u5316\u95ee\u9898\u8f6c\u5316\u4e3a\u8f6f\u95f4\u9694\u6700\u5927\u5316\u7684\u95ee\u9898\uff0c\u5176\u539f\u59cb\u95ee\u9898\u7684\u62c9\u683c\u6717\u65e5\u51fd\u6570\u662f\uff1a</p> \\[L(w,b,\\xi,\\alpha,\\mu) \\equiv \\frac{1}{2}\\|w\\|^{2} + C \\sum_{i=1}^{N}\\xi_i - \\sum_{i=1}^{N}\\alpha_i(y_i(w \\cdot x_i+b)-1+\\xi_i) - \\sum_{i=1}^{N}\\mu_i \\xi_i \\] <p>\u5176\u4e2d\uff0c \\(\\alpha_i \\geqslant 0\\) \u4e14 \\(\\mu_i \\geqslant 0\\)\uff0c\u5bf9\u62c9\u683c\u6717\u65e5\u6c42\u6781\u503c\uff0c\u5f97\u5230\u539f\u59cb\u95ee\u9898\u7684\u5bf9\u5076\u95ee\u9898\uff1a</p> \\[\\min _{\\alpha} \\frac{1}{2} \\sum_{i=1}^{N} \\sum_{j=1}^{N} \\alpha_{i} \\alpha_{j} y_{i} y_{j}\\left(x_{i} \\cdot x_{j}\\right)-\\sum_{i=1}^{N} \\alpha_{i}\\] \\[s.t. \\quad \\sum_{i=1}^{N} \\alpha_{i} y_{i}=0\\] \\[0 \\leqslant \\alpha_{i} \\leqslant C, \\quad i=1,2, \\cdots, N\\] <p>\u548c\u7ebf\u6027\u53ef\u5206\u652f\u6301\u5411\u91cf\u673a\u4e00\u6837\uff0c\u6c42\u5f97\u5bf9\u5076\u95ee\u9898\u7684\u6700\u4f18\u503c \\(a^\\ast\\) \u540e\uff0c\u901a\u8fc7\u5982\u4e0b\u516c\u5f0f\u6c42 \\(w^\\ast\\) \u548c \\(b^\\ast\\)\uff0c\u6700\u7ec8\u5f97\u51fa\u5206\u79bb\u8d85\u5e73\u9762\u548c\u5206\u7c7b\u51b3\u7b56\u51fd\u6570\u3002</p> \\[w^\\ast = \\sum_{i=1}^{N} \\alpha_{i}^\\ast y_{i} x_{i}\\] \\[b^\\ast = y_{j} - \\sum_{i=1}^{N} \\alpha_{i}^\\ast y_{i} (x_{i} \\cdot x_{j})\\] <p>\u548c\u7ebf\u6027\u53ef\u5206\u652f\u6301\u5411\u91cf\u673a\u4e0d\u540c\u7684\u662f\uff0c\u7ebf\u6027\u652f\u6301\u5411\u91cf\u673a\u7684 \\(w\\) \u662f\u552f\u4e00\u7684\uff0c\u4f46 \\(b\\) \u7684\u89e3\u53ef\u80fd\u4e0d\u552f\u4e00(\u6839\u636e\u9009\u62e9\u7684 \\(\\alpha_j^\\ast\\) \u4e0d\u540c\u53ef\u80fd\u4e0d\u540c)\uff0c\u800c\u662f\u5b58\u5728\u4e8e\u4e00\u4e2a\u533a\u95f4\u3002</p>"},{"location":"booknotes/ml/svm/#_7","title":"\u652f\u6301\u5411\u91cf","text":"<p>\u548c\u7ebf\u6027\u53ef\u5206\u652f\u6301\u5411\u91cf\u673a\u4e00\u6837\uff0c \\(\\alpha_{i}^\\ast&gt;0\\) \u7684\u6837\u672c\u70b9 \\(x_i\\) \u662f\u652f\u6301\u5411\u91cf\u3002\u4e0d\u540c\u7684\u662f\uff0c\u8fd9\u91cc\u7684\u652f\u6301\u5411\u91cf\u4e0d\u4e00\u5b9a\u5728\u95f4\u9694\u8fb9\u754c\u4e0a\u3002\u5982\u4e0b\u56fe\uff0c\u652f\u6301\u5411\u91cf(\u5e26\u7bad\u5934\u7684\u70b9)\u53ef\u80fd\u5728\u95f4\u9694\u8fb9\u754c\u5185\uff0c\u4e5f\u53ef\u80fd\u5728\u5206\u7c7b\u8d85\u5e73\u9762\u8bef\u5206\u4e00\u4fa7\u3002</p> <p></p> <ul> <li>\u82e5 \\(0&lt; \\alpha_{i}^\\ast &lt; C\\)<ul> <li>\u5219 \\(\\xi_i = 0\\)\uff0c\u8868\u660e\u652f\u6301\u5411\u91cf \\(x_i\\) \u6070\u597d\u843d\u5728\u95f4\u9694\u8fb9\u754c\u4e0a</li> </ul> </li> <li>\u82e5 \\(\\alpha_{i}^\\ast = C\uff0c0 &lt; \\xi_i &lt; 1\\)<ul> <li>\u5219\u5206\u7c7b\u6b63\u786e\uff0c\u652f\u6301\u5411\u91cf \\(x_i\\) \u5728\u95f4\u9694\u8fb9\u754c\u4e0e\u5206\u79bb\u8d85\u5e73\u9762\u4e4b\u95f4</li> </ul> </li> <li>\u82e5 \\(\\alpha_{i}^\\ast = C\uff0c\\xi_i = 1\\)<ul> <li>\u5219\u652f\u6301\u5411\u91cf \\(x_i\\) \u5728\u5206\u79bb\u8d85\u5e73\u9762\u4e0a</li> </ul> </li> <li>\u82e5 \\(\\alpha_{i}^\\ast = C\uff0c\\xi_i &gt; 1\\)<ul> <li>\u5219\u652f\u6301\u5411\u91cf \\(x_i\\) \u5728\u5206\u79bb\u8d85\u5e73\u9762\u8bef\u5206\u4e00\u4fa7</li> </ul> </li> </ul>"},{"location":"booknotes/ml/svm/#_8","title":"\u975e\u7ebf\u6027\u652f\u6301\u5411\u91cf\u673a","text":"<p>\u975e\u7ebf\u6027\u5206\u7c7b\u95ee\u9898\u662f\u6307\u901a\u8fc7\u5229\u7528\u975e\u7ebf\u6027\u6a21\u578b\u624d\u80fd\u5f88\u597d\u5730\u8fdb\u884c\u5206\u7c7b\u7684\u95ee\u9898\u3002\u5982\u4e0b\u56fe\uff0c\u65e0\u6cd5\u7528\u76f4\u7ebf(\u7ebf\u6027\u6a21\u578b)\u5c06\u6b63\u8d1f\u5b9e\u4f8b\u5206\u5f00\uff0c\u4f46\u53ef\u4ee5\u7528\u4e00\u6761\u692d\u5706\u66f2\u7ebf(\u975e\u7ebf\u6027\u6a21\u578b)\u5c06\u5b83\u4eec\u6b63\u786e\u5206\u5f00\u3002</p> <p></p> <p>\u975e\u7ebf\u6027\u95ee\u9898\u5f80\u5f80\u4e0d\u597d\u6c42\u89e3\uff0c\u53ef\u901a\u8fc7\u5c06\u975e\u7ebf\u6027\u95ee\u9898\u8f6c\u6362\u4e3a\u7ebf\u6027\u95ee\u9898\uff0c\u6765\u7b80\u5316\u95ee\u9898\u3002\u4f8b\u5982\uff0c\u5b9a\u4e49\u4ece\u539f\u7a7a\u95f4\u5230\u65b0\u7a7a\u95f4\u7684\u6620\u5c04 \\(z\\)\uff1a</p> \\[z=\\phi(x)=((x^{(1)})^2,(x^{(2)})^2)^T\\] <p>\u901a\u8fc7\u53d8\u6362 \\(z\\)\uff0c\u539f\u7a7a\u95f4\u4e2d\u7684\u692d\u5706\uff1a</p> \\[w^{(1)}(x^{(1)})^2 + w^{(2)}(x^{(2)})^2 + b = 0\\] <p>\u53d8\u6362\u6210\u4e3a\u65b0\u7a7a\u95f4\u4e2d\u7684\u76f4\u7ebf\uff1a</p> \\[w^{(1)}z^{(1)} + w^{(2)}z^{(2)} + b = 0\\] <p>\u4e0a\u9762\u7684\u4f8b\u5b50\u8bf4\u660e\uff0c\u7528\u7ebf\u6027\u5206\u7c7b\u65b9\u6cd5\u6c42\u89e3\u975e\u7ebf\u6027\u5206\u7c7b\u95ee\u9898\u5206\u4e3a\u4e24\u6b65\uff1a</p> <ul> <li>\u9996\u5148\u4f7f\u7528\u4e00\u4e2a\u53d8\u6362\u5c06\u539f\u7a7a\u95f4\u7684\u6570\u636e\u6620\u5c04\u5230\u65b0\u7a7a\u95f4</li> <li>\u7136\u540e\u5728\u65b0\u7a7a\u95f4\u91cc\u7528\u7ebf\u6027\u5206\u7c7b\u5b66\u4e60\u65b9\u6cd5\u4ece\u8bad\u7ec3\u6570\u636e\u4e2d\u5b66\u4e60\u5206\u7c7b\u6a21\u578b</li> </ul> <p>\u7531\u4e8e\u6620\u5c04\u51fd\u6570 \\(\\phi\\) \u5e76\u4e0d\u597d\u627e\uff0c\u6211\u4eec\u5b9a\u4e49\u4e86\u6838\u51fd\u6570 \\(K(x,z)\\) \u6765\u7b80\u5316\u8fd0\u7b97\uff1a</p> \\[K(x,z) = \\phi(x) \\cdot \\phi(z)\\] <p>\u5176\u4e2d\uff0c \\(\\phi\\) \u662f\u8f93\u5165\u7a7a\u95f4 \\(\\mathbf{R}^n\\) \u5230\u7279\u5f81\u7a7a\u95f4 \\(\\mathcal{H}\\) \u7684\u6620\u5c04\uff0c\u7279\u5f81\u7a7a\u95f4 \\(\\mathcal{H}\\) \u4e00\u822c\u662f\u9ad8\u7ef4\u7684\u3002</p> <p>\u7531\u4e8e\u7ebf\u6027\u652f\u6301\u5411\u91cf\u673a\u7684\u5bf9\u5076\u95ee\u9898\u53ea\u6d89\u53ca\u8f93\u5165\u5b9e\u4f8b\u4e4b\u95f4\u7684\u5185\u79ef\uff0c\u7528\u6838\u51fd\u6570\u4ee3\u66ff\u540e\uff0c\u5bf9\u5076\u95ee\u9898\u7684\u76ee\u6807\u51fd\u6570\u6210\u4e3a\uff1a</p> \\[W(\\alpha) = \\frac{1}{2} \\sum_{i=1}^{N} \\sum_{j=1}^{N} \\alpha_{i} \\alpha_{j} y_{i} y_{j}K(x_{i} \\cdot x_{j})-\\sum_{i=1}^{N} \\alpha_{i}\\] <p>\u540c\u6837\uff0c\u5206\u7c7b\u51b3\u7b56\u51fd\u6570\u53d8\u4e3a\uff1a</p> \\[f(x)=\\operatorname{sign}(\\sum_{i=1}^{N} \\alpha_i^\\ast y_iK(x, x_i)+b^\\ast)\\]"},{"location":"booknotes/ml/svm/#_9","title":"\u5e38\u7528\u6838\u51fd\u6570","text":"<ul> <li>\u591a\u9879\u5f0f\u6838\u51fd\u6570(polynomial kernel function)</li> </ul> \\[K(x,z) = (x \\cdot z + 1)^p\\] <ul> <li>\u9ad8\u65af\u6838\u51fd\u6570(Gaussian kernel function)</li> </ul> \\[K(x,z) = \\operatorname{exp}(-\\frac{\\|x-z\\|^2}{2 \\sigma ^2})\\]"},{"location":"booknotes/ml/svm/#smo","title":"SMO\u7b97\u6cd5","text":"<p>\u5e8f\u5217\u6700\u5c0f\u6700\u4f18\u5316(sequential minimal optimization, SMO)\u7b97\u6cd5\u53ef\u4ee5\u5feb\u901f\u6c42\u89e3SVM\u4e2d\u7684\u51f8\u4e8c\u6b21\u89c4\u5212\u95ee\u9898\uff0c\u5176\u5bf9\u5076\u95ee\u9898\u662f\uff1a</p> \\[\\min _{\\alpha} \\frac{1}{2} \\sum_{i=1}^{N} \\sum_{j=1}^{N} \\alpha_{i} \\alpha_{j} y_{i} y_{j}K(x_{i} , x_{j})-\\sum_{i=1}^{N} \\alpha_{i}\\] \\[s.t. \\quad \\sum_{i=1}^{N} \\alpha_{i} y_{i}=0\\] \\[0 \\leqslant \\alpha_{i} \\leqslant C, \\quad i=1,2, \\cdots, N\\] <p>\u5728\u8fd9\u4e2a\u95ee\u9898\u4e2d\uff0c\u53d8\u91cf\u662f\u62c9\u683c\u6717\u65e5\u4e58\u5b50\uff0c\u4e00\u4e2a\u53d8\u91cf \\(\\alpha_i\\) \u5bf9\u5e94\u4e8e\u4e00\u4e2a\u6837\u672c\u70b9 \\((x_i,y_i)\\)\uff0c\u53d8\u91cf\u7684\u603b\u6570\u7b49\u4e8e\u8bad\u7ec3\u6837\u672c\u5bb9\u91cf \\(N\\)\u3002</p> <p>SMO\u7b97\u6cd5\u7684\u57fa\u672c\u601d\u8def\u662f\uff1a\u5982\u679c\u6240\u6709\u53d8\u91cf\u7684\u89e3\u90fd\u6ee1\u8db3\u6b64\u6700\u4f18\u5316\u95ee\u9898\u7684KKT\u6761\u4ef6\uff0c\u90a3\u4e48\u8fd9\u4e2a\u6700\u4f18\u5316\u95ee\u9898\u7684\u89e3\u5c31\u5f97\u5230\u4e86\u3002\u5426\u5219\uff0c\u9009\u62e9\u4e24\u4e2a\u53d8\u91cf\uff0c\u56fa\u5b9a\u5176\u4ed6\u53d8\u91cf\uff0c\u9488\u5bf9\u8fd9\u4e24\u4e2a\u53d8\u91cf\u6784\u5efa\u4e00\u4e2a\u4e8c\u6b21\u89c4\u5212\u95ee\u9898\u3002\u8fd9\u65f6\u7684\u5b50\u95ee\u9898\u53ea\u5173\u6ce8\u4e24\u4e2a\u53d8\u91cf\uff0c\u53ef\u5927\u5927\u63d0\u9ad8\u8ba1\u7b97\u901f\u5ea6\u3002\u5b50\u95ee\u9898\u6709\u4e24\u4e2a\u53d8\u91cf\uff0c\u4e00\u4e2a\u662f\u8fdd\u53cdKKT\u6761\u4ef6\u6700\u4e25\u91cd\u7684\u90a3\u4e00\u4e2a\uff0c\u53e6\u4e00\u4e2a\u7531\u7ea6\u675f\u6761\u4ef6 \\(\\sum \\alpha_i y_i = 0\\) \u81ea\u52a8\u786e\u5b9a\u3002\u5982\u6b64\uff0cSMO\u7b97\u6cd5\u5c06\u539f\u95ee\u9898\u4e0d\u65ad\u5206\u89e3\u4e3a\u5b50\u95ee\u9898\u5e76\u5bf9\u5b50\u95ee\u9898\u6c42\u89e3\uff0c\u8fdb\u800c\u8fbe\u5230\u6c42\u89e3\u539f\u95ee\u9898\u7684\u76ee\u7684\u3002</p> <p>\u6574\u4e2aSMO\u7b97\u6cd5\u5305\u62ec\uff1a</p> <ul> <li>\u6c42\u89e3\u4e24\u4e2a\u53d8\u91cf\u4e8c\u6b21\u89c4\u5212\u7684\u89e3\u6790\u65b9\u6cd5</li> <li>\u9009\u62e9\u53d8\u91cf\u7684\u542f\u53d1\u5f0f\u65b9\u6cd5</li> </ul> <p>\u5176\u4e2d\uff0c\u5bf9\u4e8e\u8bad\u7ec3\u6837\u672c\u70b9 \\((x_i, y_i)\\)\u7684KKT\u6761\u4ef6\u662f\uff1a</p> \\[\\alpha_i = 0 \\Leftrightarrow y_ig(x_i) \\geqslant 1\\] \\[0 &lt; \\alpha_i &lt; C \\Leftrightarrow y_ig(x_i) = 1\\] \\[\\alpha_i = C \\Leftrightarrow y_ig(x_i) \\leqslant 1\\] <p>\u5176\u4e2d\uff0c \\(g(x_i) = \\sum_{j=1}^{N} a_j y_j K(x_i, x_j) + b\\)\u3002</p>"},{"location":"booknotes/ml/svm/#svm","title":"SVM\u56de\u5f52","text":"<p>SVM\u7b97\u6cd5\u4e0d\u4ec5\u652f\u6301\u7ebf\u6027\u6838\u975e\u7ebf\u6027\u7684\u5206\u7c7b\u4efb\u52a1\uff0c\u8fd8\u652f\u6301\u7ebf\u6027\u6838\u975e\u7ebf\u6027\u7684\u56de\u5f52\u4efb\u52a1\u3002\u53ef\u4ee5\u4f7f\u7528<code>sklearn</code>\u7684<code>LinearSVR</code>\u7c7b\u5b9e\u73b0\u7ebf\u6027SVM\u56de\u5f52\uff0c\u800c<code>SVR</code>\u7c7b(\u652f\u6301\u6838\u6280\u5de7)\u53ef\u5b9e\u73b0\u975e\u7ebf\u6027SVM\u56de\u5f52\u3002</p> <p>\u4f8b\u5b50\"svm_regression.ipynb\"\u5229\u7528<code>sklearn</code>\u7684<code>LinearSVR</code>\u6838<code>SVR</code>\u5b8c\u6210\u4e86SVM\u7684\u7ebf\u6027\u548c\u975e\u7ebf\u6027\u56de\u5f52\u3002</p>"},{"location":"booknotes/ml/svm/#_10","title":"\u5b9e\u9a8c","text":"<p><code>sklearn</code>\u63d0\u4f9b\u4e86\u4e09\u79cdSVM\u5206\u7c7b\u6a21\u578b\uff0c\u5176\u7279\u70b9\u5982\u4e0b\uff1a</p> Class Time Complexity Out-of-core support Scaling required Kernel trick LinearSVC <code>O(m*n)</code> No Yes No SGDClassifier <code>O(m*n)</code> Yes Yes No SVC <code>O(m^2*n) to O(m^3*n)</code> No Yes Yes"},{"location":"booknotes/ml/svm/#_11","title":"\u7ebf\u6027\u652f\u6301\u5411\u91cf\u673a","text":"<p>\"svm_linear.ipynb\"\u5229\u7528<code>sklearn</code>\u7684\u7ebf\u6027\u652f\u6301\u5411\u91cf\u673a\uff0c\u5bf9\u9e22\u5c3e\u82b1\u6570\u636e\u96c6\u8fdb\u884c\u4e86\u5206\u7c7b\u5b66\u4e60\u3002\u5176\u4e2d\uff0c\u6839\u636e\u60e9\u7f5a\u53c2\u6570<code>C</code>\u7684\u9009\u62e9\u4e0d\u540c\uff0c\u6211\u4eec\u5bf9\u6bd4\u4e86\u786c\u95f4\u9694\u6700\u5927\u5316\u548c\u8f6f\u95f4\u9694\u6700\u5927\u5316\u7684\u533a\u522b\u3002</p>"},{"location":"booknotes/ml/svm/#_12","title":"\u51c6\u5907\u6570\u636e","text":"<p>\u5982\u4e0b\u56fe\uff0c\u6211\u4eec\u9009\u53d6\u4e24\u79cd\u9e22\u5c3e\u82b1\uff0c\u4e00\u90e8\u5206\u6570\u636e\u7528\u4e8e\u7ebf\u6027\u652f\u6301\u5411\u91cf\u673a\u7684\u8bad\u7ec3(\u56fe\u4e2d\u5b9e\u5fc3\u7684\u70b9)\uff0c\u53e6\u4e00\u90e8\u5206\u7528\u4e8e\u6d4b\u8bd5(\u56fe\u4e2d\u900f\u660e\u7684\u70b9)\u3002</p> <p></p>"},{"location":"booknotes/ml/svm/#_13","title":"\u8bad\u7ec3\u6a21\u578b","text":"<p>\u6211\u4eec\u4f7f\u7528<code>sklearn</code>\u652f\u6301\u5411\u91cf\u673a\u5206\u7c7b\u5668<code>SVC</code>\u6765\u8bad\u7ec3\u4e00\u4e2a\u7ebf\u6027\u652f\u6301\u5411\u91cf\u673a\u6a21\u578b\u3002</p> <p><code>SVC</code>\u6709\u4e00\u4e2a\u53c2\u6570<code>C</code>\uff0c\u79f0\u4e3a\u60e9\u7f5a\u53c2\u6570\uff0c\u5176\u503c\u4e00\u822c\u7531\u5e94\u7528\u95ee\u9898\u51b3\u5b9a\u3002\u5f53C\u503c\u5927\u65f6\u5bf9\u8bef\u5206\u7c7b\u7684\u60e9\u7f5a\u589e\u5927\uff0c\u5f53C\u503c\u5c0f\u65f6\u5bf9\u8bef\u5206\u7c7b\u7684\u60e9\u7f5a\u51cf\u5c0f\u3002\u5982\u679c\u6570\u636e\u7ebf\u6027\u53ef\u5206\uff0c\u6211\u4eec\u53ef\u4ee5\u589e\u5927<code>C</code>\uff0c\u4ee5\u589e\u52a0\u51c6\u786e\u5ea6\u3002\u5982\u679c\u6570\u636e\u7ebf\u6027\u4e0d\u53ef\u5206\uff0c\u5219\u5e94\u8be5\u51cf\u5c0f<code>C</code>\uff0c\u4ee5\u5bb9\u8bb8\u4e00\u5b9a\u91cf\u7684\u8bef\u5206\u7c7b\u5b58\u5728\u3002</p> <pre><code>from sklearn.svm import SVC # \u652f\u6301\u5411\u91cf\u5206\u7c7b\u5668\n# C\u503c\u5927\uff0c\u51cf\u5c11\u8bef\u5206\u7c7b\uff0c\u9488\u5bf9\u7ebf\u6027\u53ef\u5206\u6570\u636e\uff0c\u786c\u95f4\u9694\u6700\u5927\u5316\nmodel_hard = SVC(kernel='linear', C=1E10)\nmodel_hard.fit(X_train, y_train)\n# C\u503c\u5c0f\uff0c\u5bb9\u8bb8\u8bef\u5206\u7c7b\uff0c\u9488\u5bf9\u7ebf\u6027\u4e0d\u53ef\u5206\u6570\u636e\uff0c\u8f6f\u95f4\u9694\u6700\u5927\u5316\nmodel_soft = SVC(kernel='linear', C=1)\nmodel_soft.fit(X_train, y_train)\n</code></pre>"},{"location":"booknotes/ml/svm/#_14","title":"\u9884\u6d4b\u5206\u7c7b","text":"<p>\u4e0b\u9762\u7684\u4ee3\u7801\u901a\u8fc7\u5bf9\u6bd4\u6d4b\u8bd5\u6570\u636e\u7684\u5b9e\u9645\u7ed3\u679c\u548c\u9884\u6d4b\u7ed3\u679c\uff0c\u53d1\u73b0\u4e24\u4e2a\u6a21\u578b\u7684\u51c6\u786e\u7387\u90fd\u8fbe\u5230\u4e86100%\u3002 <pre><code>from sklearn.metrics import accuracy_score\n\npredictions_hard = model_hard.predict(X_test)\naccuracy_hard = accuracy_score(y_test, predictions_hard)\nprint(\"SVM hard linear kernel accuracy: \" + str(accuracy_hard))\n\npredictions_soft = model_soft.predict(X_test)\naccuracy_soft = accuracy_score(y_test, predictions_hard)\nprint(\"SVM soft linear kernel accuracy: \" + str(accuracy_soft))\n</code></pre> \u8f93\u51fa\u7ed3\u679c\uff1a <pre><code>SVM hard linear kernel accuracy: 1.0\nSVM soft linear kernel accuracy: 1.0\n</code></pre></p> <p>\u4e3a\u4e86\u66f4\u8fdb\u4e00\u6b65\u5730\u5c55\u793a\u6a21\u578b\u7684\u7279\u70b9\uff0c\u4e0b\u9762\u6211\u4eec\u753b\u51fa\u4e86\u4e24\u4e2a\u6a21\u578b\u7684\u51b3\u7b56\u8fb9\u754c\u548c\u652f\u6301\u5411\u91cf\u673a\u3002 <pre><code>def plot_svc_decision_function(model, ax):\n    assert ax is not None\n    xlim = ax.get_xlim()\n    ylim = ax.get_ylim()\n\n    # \u521b\u5efa\u7f51\u683c\u6765\u5c55\u793a\u6570\u636e\n    x = np.linspace(xlim[0], xlim[1], 30)\n    y = np.linspace(ylim[0], ylim[1], 30)\n    Y, X = np.meshgrid(y, x)\n    xy = np.vstack([X.ravel(), Y.ravel()]).T\n    # \u8d85\u5e73\u9762S\u5728\u5750\u6807(x,y)\u4e0b\u5bf9\u5e94\u7684\u503c\n    P = model.decision_function(xy).reshape(X.shape)\n\n    # \u7ed8\u5236\u8fb9\u754c\u548c\u95f4\u8ddd\uff0c\u5373\u8d85\u5e73\u9762S\u7684\u7b49\u9ad8\u7ebf\uff1af(x,y)=0, f(x,y)=1, f(x,y)=-1\n    ax.contour(X, Y, P, colors='k', levels=[-1, 0, 1], alpha=0.5, linestyles=['--', '-', '--'])\n\n    # \u7ed8\u5236\u652f\u6301\u5411\u91cf\n    ax.scatter(model.support_vectors_[:, 0], model.support_vectors_[:, 1], s=200, edgecolors='k', facecolors='none')\n\n    ax.set_xlim(xlim)\n    ax.set_ylim(ylim)\n\nfig, ax = plt.subplots(2, 1, constrained_layout=True)\n\nax[0].scatter(X_train[:, 0], X_train[:, 1], c=y_train, s=50, cmap='RdBu')\nax[0].scatter(X_test[:, 0], X_test[:, 1], c=y_test, s=50, alpha=0.3, cmap='RdBu')\nax[0].set_ylabel('sepal_width')\nax[0].set_title(\"hard max margin\")\nplot_svc_decision_function(model_hard, ax[0])\n\nax[1].scatter(X_train[:, 0], X_train[:, 1], c=y_train, s=50, cmap='RdBu')\nax[1].scatter(X_test[:, 0], X_test[:, 1], c=y_test, s=50, alpha=0.3, cmap='RdBu')\nax[1].set_xlabel('sepal_length')\nax[1].set_ylabel('sepal_width')\nax[1].set_title(\"soft max margin\")\nplot_svc_decision_function(model_soft, ax[1])\n</code></pre> \u53ef\u4ee5\u53d1\u73b0\uff0c\u786c\u95f4\u9694\u6700\u5927\u5316\u7531\u4e8e\u60e9\u7f5a\u53c2\u6570<code>C</code>\u8f83\u5927\uff0c\u6240\u6709\u6837\u672c\u90fd\u6b63\u786e\u5206\u5e03\u5728\u4e86\u51b3\u7b56\u8fb9\u754c\u4e24\u4fa7\uff0c\u652f\u6301\u5411\u91cf\u4f4d\u4e8e\u8fb9\u754c\u4e0a\u3002\u800c\u8f6f\u95f4\u9694\u6700\u5927\u5316\uff0c\u652f\u6301\u5411\u91cf\u53ef\u5206\u5e03\u8fb9\u754c\u5185(\u751a\u81f3\u5141\u8bb8\u5b58\u5728\u8bef\u5206\u70b9)\uff0c\u5bf9\u4e8e\u6837\u672c\u7684\u566a\u58f0\u6709\u66f4\u5927\u7684\u5bb9\u5fcd\u5ea6\u3002 </p>"},{"location":"booknotes/ml/svm/#_15","title":"\u975e\u7ebf\u6027\u652f\u6301\u5411\u91cf\u673a","text":"<p><code>sklearn</code>\u63d0\u4f9b\u4e86\u591a\u79cd\u6838\u51fd\u6570\u7684\u975e\u7ebf\u6027\u652f\u6301\u5411\u91cf\u673a\u3002\u4e0b\u9762\u6211\u4eec\u5206\u522b\u9009\u62e9\u201c\u591a\u9879\u5f0f\u6838(\u4e8c\u6b21)\u201d\u548c\u201c\u9ad8\u65af\u6838\u201d\uff0c\u5bf9\u975e\u7ebf\u6027\u6570\u636e\u8fdb\u884c\u5206\u7c7b\u9884\u6d4b\uff1a</p> <ul> <li> <p>\u591a\u9879\u5f0f\u6838</p> <ul> <li>\"svm_nonlinear_poly.ipynb\"</li> </ul> </li> <li> <p>\u9ad8\u65af\u6838</p> <ul> <li>\"svm_nonlinear_rbf.ipynb\"</li> </ul> </li> </ul>"},{"location":"booknotes/ml/svm/#_16","title":"\u51c6\u5907\u6570\u636e","text":"<p>\u6211\u4eec\u5229\u7528<code>sklearn</code>\u63d0\u4f9b\u7684<code>make_circles</code>\u4ea7\u751f\u4e86\u53ef\u4ee5\u88ab\u692d\u5706\u5206\u9694\u7684\u4e24\u7ec4\u6570\u636e\uff0c\u5373\u975e\u7ebf\u6027\u53ef\u5206\u3002</p> <p><pre><code>import matplotlib.pyplot as plt\nfrom sklearn.datasets import make_circles\n\ndef load_data(test_size_perc):\n    size = 500\n    test_size = int(size * test_size_perc)\n    X, y = make_circles(size, factor=.1, noise=.2)\n    X_train = X[:-test_size]\n    y_train = 2 * y[:-test_size] - 1 # convert to 1 or -1\n    X_test = X[-test_size:]\n    y_test = 2 * y[-test_size:] - 1 # convert to 1 or -1\n    return X_train, X_test, y_train, y_test\n\nX_train, X_test, y_train, y_test = load_data(0.2)\n\n# Plotting the training set\nfig, ax = plt.subplots()\n# adding major gridlines\nax.grid(color='grey', linestyle='-', linewidth=0.25, alpha=0.5)\nax.scatter(X_train[:,0], X_train[:,1], c=y_train, cmap='RdBu')\nax.scatter(X_test[:,0], X_test[:,1], c=y_test, alpha=0.1, cmap='RdBu')\n</code></pre> \u540c\u6837\u7684\uff0c\u6211\u4eec\u9009\u53d6\u4e00\u90e8\u5206\u6570\u636e\u8fdb\u884c\u6d4b\u8bd5\uff0c\u5373\u4e0b\u56fe\u4e2d\u900f\u660e\u7684\u70b9\uff1a </p>"},{"location":"booknotes/ml/svm/#_17","title":"\u591a\u9879\u5f0f\u6838","text":"<p>\u8bad\u7ec3\u91c7\u7528\u4e8c\u6b21\u591a\u9879\u5f0f\u6838\u7684\u652f\u6301\u5411\u91cf\u673a\u6a21\u578b\uff1a</p> <pre><code>from sklearn.svm import SVC\n\nmodel = SVC(kernel='poly', degree=2)\nmodel.fit(X_train, y_train)\n</code></pre> <p>\u6d4b\u8bd5\u6a21\u578b\uff0c\u5bf9\u6bd4\u6d4b\u8bd5\u6570\u636e\u7684\u9884\u6d4b\u7ed3\u679c\u548c\u5b9e\u9645\u7ed3\u679c\uff1a</p> <pre><code>from sklearn.metrics import accuracy_score\npredictions_poly = model.predict(X_test)\naccuracy_poly = accuracy_score(y_test, predictions_poly)\nprint(\"SVM 2nd degree polynomial kernel accuracy: \" + str(accuracy_poly))\n</code></pre> <p>\u4e8c\u6b21\u591a\u9879\u5f0f\u6838\u7684\u652f\u6301\u5411\u91cf\u673a\u7684\u51c6\u786e\u5ea6\u5982\u4e0b\uff1a</p> <pre><code>SVM 2nd degree polynomial kernel accuracy: 0.98\n</code></pre> <p>\u4e0b\u56fe\u5c55\u793a\u4e86\u8be5\u6a21\u578b\u7684\u5206\u79bb\u8d85\u5e73\u9762\u548c\u652f\u6301\u5411\u91cf\uff1a</p> <p></p>"},{"location":"booknotes/ml/svm/#_18","title":"\u9ad8\u65af\u6838","text":"<p>\u8bad\u7ec3\u91c7\u7528\u9ad8\u65af\u6838\u652f\u6301\u5411\u91cf\u673a\u6a21\u578b\uff1a</p> <pre><code>from sklearn.svm import SVC\n\nmodel = SVC(kernel='rbf', C=100, gamma='auto')\nmodel.fit(x_train, y_train)\n</code></pre> <p>\u6d4b\u8bd5\u6a21\u578b\uff0c\u5bf9\u6bd4\u6d4b\u8bd5\u6570\u636e\u7684\u9884\u6d4b\u7ed3\u679c\u548c\u5b9e\u9645\u7ed3\u679c\uff1a</p> <pre><code>from sklearn.metrics import accuracy_score\npredictions_rbf = model.predict(x_test)\naccuracy_rbf = accuracy_score(y_test, predictions_rbf)\nprint(\"SVM RBF kernel accuracy: \" + str(accuracy_rbf))\n</code></pre> <p>\u9ad8\u65af\u6838\u7684\u652f\u6301\u5411\u91cf\u673a\u7684\u51c6\u786e\u5ea6\u5982\u4e0b\uff1a</p> <pre><code>SVM RBF kernel accuracy: 0.98\n</code></pre> <p>\u4e0b\u56fe\u5c55\u793a\u4e86\u8be5\u6a21\u578b\u7684\u5206\u79bb\u8d85\u5e73\u9762\u548c\u652f\u6301\u5411\u91cf\uff1a</p> <p></p>"},{"location":"booknotes/ml/svm/#smo_1","title":"\u652f\u6301\u5411\u91cf\u673aSMO\u5b9e\u73b0","text":"<p>\"smo.ipynb\"\u57fa\u4e8eSMO\u7b97\u6cd5\u5b9e\u73b0\u4e86\u4e00\u4e2a\u652f\u6301\u5411\u91cf\u673a\uff0c\u5b83\u652f\u6301\u7ebf\u6027\u6838\u51fd\u6570\u3001\u4e8c\u6b21\u591a\u9879\u5f0f\u6838\u51fd\u6570\u548c\u9ad8\u65af\u6838\u51fd\u6570\u3002\u548c<code>sklearn</code>\u63d0\u4f9b\u7684\u652f\u6301\u5411\u91cf\u673a\u6a21\u578b\u76f8\u6bd4\uff0c\u5176\u7cbe\u5ea6\u4e0d\u9ad8\uff0c\u4f46\u53ef\u4ee5\u4f5c\u4e3a\u5b66\u4e60\u53c2\u8003\u3002</p> <p>\u6a21\u578b\u4ee3\u7801\u5982\u4e0b\uff1a</p> <pre><code>import numpy as np\nfrom matplotlib import pyplot as plt\n\n\nclass LinearKernel:  # \u7ebf\u6027\u6838\u51fd\u6570\n\n    def __call__(self, a: np.ndarray, b: np.ndarray):\n        return np.sum(a * b, axis=-1) # \u5bf9\u6700\u5185\u8f74\u8fdb\u884c\u6c42\u548c\uff0c\u5373\u884c\u5411\u91cf\u5185\u79ef\n\n\nclass PolyKernel:  # \u591a\u9879\u5f0f\u6838\u51fd\u6570\n\n    def __call__(self, a: np.ndarray, b: np.ndarray):\n        return (np.sum(a * b, axis=-1) + 1)**2 # \u516c\u5f0f(7.88)\n\n\nclass RBFKernel:  # \u9ad8\u65af\u6838\u51fd\u6570\n\n    def __init__(self, sigma):\n        self.divisor = 2 * sigma**2\n\n    def __call__(self, a: np.ndarray, b: np.ndarray):\n        return np.exp(-np.sum((a - b)**2, axis=-1) / self.divisor) # \u516c\u5f0f(7.90)\n\n\nclass SVM:\n    \"\"\"\n    Support Vector Machines(\u652f\u6301\u5411\u91cf\u673a)\n    \"\"\"\n\n    def __init__(self, kernel=\"linear\", C=1.0, iterations=100, tol=1e-3, sigma=1.0):\n        \"\"\"\n        Args:\n            kernel (str, optional): \u6838\u51fd\u6570. Defaults to 'linear'.\n            C (float, optional): \u60e9\u7f5a\u56e0\u5b50. Defaults to 1.0.\n            iterations (int, optional): \u6700\u5927\u8fed\u4ee3\u6b21\u6570. Defaults to 100.\n            tol (float, optional): \u7edd\u5bf9\u8bef\u5dee\u9650. Defaults to 1e-3.\n            sigma (float, optional): \u9ad8\u65af\u6838\u51fd\u6570\u7684sigma. Defaults to 1.0.\n        \"\"\"\n        assert kernel in [\"linear\", \"poly\", \"rbf\"]\n\n        if kernel == \"linear\":\n            self.K = LinearKernel()  # \u7ebf\u6027\u6838\u51fd\u6570\n        elif kernel == \"poly\":\n            self.K = PolyKernel()  # \u591a\u9879\u5f0f\u6838\u51fd\u6570\n        elif kernel == \"rbf\":\n            self.K = RBFKernel(sigma)  # \u5f84\u5411\u57fa\u6838\u51fd\u6570\n\n        self.C, self.iterations, self.tol, self.alpha, self.b = C, iterations, tol, None, 0.0\n        self.X, self.y = None, None\n\n    def fit(self, X: np.ndarray, y: np.ndarray):\n        self.X, self.y = X, y\n\n        # \u62c9\u683c\u6717\u65e5\u4e58\u5b50\uff0c\u957f\u5ea6\u4e3a\u6837\u672c\u4e2a\u6570\uff0c\u521d\u59cb\u503c\u4e3a1\n        self.alpha = np.ones([len(X)])\n        for _ in range(self.iterations):\n            # \u6b64\u6b21\u8fed\u4ee3\u7f13\u5b58\u7684\u8bef\u5dee\n            E = np.array([self.__E(i) for i in range(len(X))])\n\n            # 7.4.2 \u53d8\u91cf\u7684\u9009\u62e9\u65b9\u6cd5\n            # \u5916\u5c42\u5faa\u73af\uff0c\u5bfb\u627e\u7b2c\u4e00\u4e2aalpha\n            for i1 in range(len(X)):\n                if self.__satisfy_kkt(i1): #\u6ee1\u8db3KKT\u6761\u4ef6\n                    continue\n\n                # \u8ba1\u7b97\u8bef\u5dee(\u4e0d\u4f7f\u7528E\u7f13\u5b58)\n                E1 = self.__E(i1)\n                # \u5185\u5c42\u5faa\u73af\uff0c\u5bfb\u627e\u7b2c\u4e8c\u4e2aalpha\n                i2 = np.argmin(E) if E1 &gt; 0 else np.argmax(E) # \u5927\u4e8e0\u5219\u9009\u62e9\u6700\u5c0f\uff0c\u5c0f\u4e8e0\u9009\u62e9\u6700\u5927\u7684\n                if i1 == i2:\n                    continue\n                E2 = self.__E(i2)\n\n                # 7.4.1 \u4e24\u4e2a\u53d8\u91cf\u4e8c\u6b21\u89c4\u5212\u7684\u6c42\u89e3\u65b9\u6cd5\n                x1, x2, y1, y2 = X[i1], X[i2], y[i1], y[i2]\n                alpha1, alpha2 = self.alpha[i1], self.alpha[i2]\n                k11, k22, k12 = self.K(x1, x1), self.K(x2, x2), self.K(x1, x2)\n\n                # \u8ba1\u7b97\u526a\u5207\u8303\u56f4\n                if y1 * y2 &lt; 0:\n                    L = max(0, alpha2 - alpha1)\n                    H = min(self.C, self.C + alpha2 - alpha1)\n                else:\n                    L = max(0, alpha1 + alpha2 - self.C)\n                    H = min(self.C, alpha1 + alpha2)\n\n                # \u516c\u5f0f(7.107)\n                eta = k11 + k22 - 2 * k12\n                if eta &lt;= 0:\n                    continue\n\n                # \u8ba1\u7b97\u65b0alpha\n                # \u516c\u5f0f(7.106), (7.108)\n                alpha2_new = np.clip(alpha2 + y2 * (E1 - E2) / eta, L, H)\n                # \u516c\u5f0f(7.109)\n                alpha1_new = alpha1 + y1 * y2 * (alpha2 - alpha2_new)\n\n                # \u8ba1\u7b97\u65b0b\n                alpha2_delta, alpha1_delta = alpha2_new - alpha2, alpha1_new - alpha1\n                # \u516c\u5f0f(7.115)\n                b1_new = -E1 - y1 * k11 * alpha1_delta - y2 * k12 * alpha2_delta + self.b\n                # \u516c\u5f0f(7.116)\n                b2_new = -E2 - y1 * k12 * alpha1_delta - y2 * k22 * alpha2_delta + self.b\n\n                # \u66f4\u65b0\u53c2\u6570\n                self.alpha[i1] = alpha1_new\n                self.alpha[i2] = alpha2_new\n                if 0 &lt; alpha1_new &lt; self.C:\n                    self.b = b1_new\n                elif 0 &lt; alpha2_new &lt; self.C:\n                    self.b = b2_new\n                else:\n                    self.b = (b1_new + b2_new) / 2\n\n                # \u66f4\u65b0\u8bef\u5dee\u7f13\u5b58\n                E[i1] = self.__E(i1)\n                E[i2] = self.__E(i2)\n\n    # \u516c\u5f0f(7.94)\n    def predict(self, X: np.ndarray):\n        y_pred = np.array([self.__g(x) for x in X])\n        return np.where(y_pred &gt; 0, 1, -1)  # \u5c06(-\\infinity, \\infinity)\u4e4b\u95f4\u7684\u5206\u5e03\u8f6c\u4e3a{-1, +1}\u6807\u7b7e\n\n    def values(self, X: np.ndarray):\n        return np.array([self.__g(x) for x in X])\n\n    @property\n    def support_vectors(self):  # \u652f\u6301\u5411\u91cf\n        return self.X[self.alpha &gt; 0]\n\n    # \u516c\u5f0f(7.104)\n    def __g(self, x):  # g(x) =\\sum_{i=0}^N alpha_i y_i \\kappa(x_i, x)\n        return np.sum(self.alpha * self.y * self.K(self.X, x)) + self.b\n\n    # \u516c\u5f0f(7.105)\n    def __E(self, i):  # E_i = g(x_i) - y_i\n        return self.__g(self.X[i]) - self.y[i]\n\n    # \u516c\u5f0f(7.111) ~ (7.113)\n    def __satisfy_kkt(self, i):  # \u662f\u5426\u6ee1\u8db3KKT\u6761\u4ef6\n        g_i, y_i = self.__g(self.X[i]), self.y[i]\n        if np.abs(self.alpha[i]) &lt; self.tol:\n            return g_i * y_i &gt;= 1\n        if np.abs(self.alpha[i]) &gt; self.C - self.tol:\n            return g_i * y_i &lt;= 1\n        return np.abs(g_i * y_i - 1) &lt; self.tol\n</code></pre> <p>\u6211\u4eec\u91c7\u7528\u548c\u4e0a\u9762\u4e00\u6837\u7684\u6570\u636e\u8fdb\u884c\u8bad\u7ec3\u548c\u6d4b\u8bd5\uff0c\u5176\u5206\u79bb\u8d85\u5e73\u9762\u5927\u81f4\u5982\u4e0b\uff1a</p> <ul> <li>\u7ebf\u6027\u6838</li> </ul> <p></p> <ul> <li>\u4e8c\u6b21\u591a\u9879\u5f0f\u6838</li> </ul> <p></p> <ul> <li>\u9ad8\u65af\u6838</li> </ul> <p></p>"},{"location":"essays/20250127/","title":"\u6765\u81eaAI\u7684\u5f00\u7bc7","text":"<p>\u4eca\u5929\u662f2025\u5e741\u670827\u65e5\uff0c\u6211\u51b3\u5b9a\u5f00\u59cb\u5199\u4e00\u4e9b\u968f\u7b14\u6765\u8bb0\u5f55\u6211\u7684\u65e5\u5e38\u751f\u6d3b\u548c\u601d\u8003\u3002\u8fd9\u4e0d\u4ec5\u662f\u4e3a\u4e86\u953b\u70bc\u6211\u7684\u5199\u4f5c\u80fd\u529b\uff0c\u4e5f\u662f\u4e3a\u4e86\u5728\u672a\u6765\u56de\u987e\u65f6\u80fd\u591f\u770b\u5230\u81ea\u5df1\u7684\u6210\u957f\u548c\u53d8\u5316\u3002</p>"},{"location":"essays/20250127/#_1","title":"\u751f\u6d3b\u70b9\u6ef4","text":"<p>\u6700\u8fd1\u7684\u751f\u6d3b\u6bd4\u8f83\u5e73\u6de1\uff0c\u4f46\u4e5f\u6709\u4e00\u4e9b\u5c0f\u786e\u5e78\u3002\u6bcf\u5929\u65e9\u4e0a\u6211\u90fd\u4f1a\u53bb\u516c\u56ed\u8dd1\u6b65\uff0c\u547c\u5438\u65b0\u9c9c\u7a7a\u6c14\uff0c\u611f\u53d7\u5927\u81ea\u7136\u7684\u7f8e\u597d\u3002\u5de5\u4f5c\u4e0a\u4e5f\u6709\u4e00\u4e9b\u65b0\u7684\u6311\u6218\uff0c\u4f46\u6211\u76f8\u4fe1\u901a\u8fc7\u52aa\u529b\u4e00\u5b9a\u80fd\u591f\u514b\u670d\u3002</p>"},{"location":"essays/20250127/#_2","title":"\u601d\u8003\u4e0e\u611f\u609f","text":"<p>\u5728\u8fd9\u4e2a\u5feb\u8282\u594f\u7684\u793e\u4f1a\u4e2d\uff0c\u6211\u4eec\u5e38\u5e38\u4f1a\u611f\u5230\u538b\u529b\u548c\u7126\u8651\u3002\u4f46\u6211\u8ba4\u4e3a\uff0c\u4fdd\u6301\u4e00\u9897\u5e73\u5e38\u5fc3\uff0c\u5b66\u4f1a\u4eab\u53d7\u751f\u6d3b\u4e2d\u7684\u6bcf\u4e00\u4e2a\u77ac\u95f4\uff0c\u624d\u662f\u6700\u91cd\u8981\u7684\u3002\u65e0\u8bba\u9047\u5230\u4ec0\u4e48\u56f0\u96be\uff0c\u90fd\u8981\u4fdd\u6301\u4e50\u89c2\u7684\u5fc3\u6001\uff0c\u76f8\u4fe1\u81ea\u5df1\u80fd\u591f\u89e3\u51b3\u95ee\u9898\u3002</p>"},{"location":"essays/20250127/#_3","title":"\u672a\u6765\u8ba1\u5212","text":"<p>\u672a\u6765\u6211\u5e0c\u671b\u80fd\u591f\u591a\u8bfb\u4e00\u4e9b\u4e66\uff0c\u63d0\u5347\u81ea\u5df1\u7684\u77e5\u8bc6\u6c34\u5e73\u3002\u540c\u65f6\u4e5f\u5e0c\u671b\u80fd\u591f\u591a\u53c2\u52a0\u4e00\u4e9b\u793e\u4ea4\u6d3b\u52a8\uff0c\u8ba4\u8bc6\u66f4\u591a\u5fd7\u540c\u9053\u5408\u7684\u670b\u53cb\u3002\u6700\u91cd\u8981\u7684\u662f\uff0c\u5e0c\u671b\u81ea\u5df1\u80fd\u591f\u4fdd\u6301\u5065\u5eb7\uff0c\u5feb\u4e50\u5730\u751f\u6d3b\u6bcf\u4e00\u5929\u3002</p> <p>\u611f\u8c22\u4f60\u8bfb\u5230\u8fd9\u91cc\uff0c\u5e0c\u671b\u6211\u7684\u968f\u7b14\u80fd\u591f\u7ed9\u4f60\u5e26\u6765\u4e00\u4e9b\u542f\u53d1\u548c\u601d\u8003\u3002\u5982\u679c\u4f60\u4e5f\u6709\u7c7b\u4f3c\u7684\u7ecf\u5386\u6216\u611f\u609f\uff0c\u6b22\u8fce\u4e0e\u6211\u5206\u4eab\u3002</p>"},{"location":"topics/cmake/","title":"CMake","text":"<p>cmake\u4e0d\u540c\u5de5\u7a0b\u7c7b\u578b\u7684\u6837\u4f8b\uff0c\u6240\u6709\u6837\u4f8b\u53ef\u5728GitHub\u4ed3\u5e93\u4e2d\u627e\u5230</p>"},{"location":"topics/cmake/#exec","title":"Exec\u5de5\u7a0b","text":"<p>cmake\u901a\u8fc7\u76ee\u5f55\u4e0b\u7684<code>CMakeLists.txt</code>\u6587\u4ef6\uff0c\u5c06\u6574\u4e2a\u5de5\u7a0b\u4e32\u8054\u8d77\u6765\u3002\u5728\u4e3b\u76ee\u5f55\u7684<code>CMakeLists.txt</code>\u6587\u4ef6\u4e2d\uff0c\u901a\u8fc7<code>add_subdirectory</code>\u547d\u4ee4\u52a0\u5165\u5b50\u4e00\u7ea7\u7684\u76ee\u5f55\uff0c\u4ee5\u6b64\u7c7b\u63a8\u3002</p>"},{"location":"topics/cmake/#_1","title":"\u4e3b\u914d\u7f6e\u6587\u4ef6","text":"<ul> <li>\u4e3b\u914d\u7f6e\u6587\u4ef6\u4e3b\u8981\u914d\u7f6e\u4e00\u4e9b\u5168\u5c40\u4fe1\u606f\u3002\u4f8b\u5982\uff0c\u9879\u76ee\u540d\u79f0\uff0cC++\u5e93\u7248\u672c\u7b49\u3002\u540c\u65f6\u52a0\u5165\u5b50\u4e00\u7ea7\u76ee\u5f55\u3002     <pre><code>cmake_minimum_required(VERSION 3.13)\n\n# Setting a project name\nproject(exec VERSION 1.0\nDESCRIPTION \"EXEC Project\"\nLANGUAGES CXX)\n\n# set the C++ standard\nset(CMAKE_CXX_STANDARD 20)\n# Use STD c++ instead of GNU\nset(CMAKE_CXX_STANDARD_REQUIRED ON)\nset(CMAKE_CXX_EXTENSIONS OFF)\n\nmessage(STATUS \"[ROOT] CMAKE_BINARY_DIR ${CMAKE_BINARY_DIR}\")\nmessage(STATUS \"[ROOT] CMAKE_SOURCE_DIR ${CMAKE_SOURCE_DIR}\")\nmessage(STATUS \"[ROOT] CMAKE_CXX_COMPILER ${CMAKE_CXX_COMPILER}\")\n\n######################\n# Add Targets\n######################\nadd_subdirectory(src)\n</code></pre></li> </ul>"},{"location":"topics/cmake/#exec_1","title":"Exec\u76ee\u6807\u914d\u7f6e\u6587\u4ef6","text":"<ul> <li>\u4e3a\u4e86\u7edf\u4e00\uff0c\u53ef\u9009\u62e9<code>set_target_properties</code>\u547d\u4ee4\uff0c\u4e3a\u6b64\u76ee\u6807\u914d\u7f6e\u6240\u6709\u7684\u7f16\u8bd1\u4fe1\u606f<ul> <li>\u7f16\u8bd1\u548c\u94fe\u63a5\u9009\u9879\u901a\u8fc7\u5206\u53f7\u9694\u79bb</li> <li>\u9ed8\u8ba4\u6587\u4ef6\u8f93\u51fa\u8def\u5f84\u5c31\u662f<code>CMAKE_CURRENT_BINARY_DIR</code> <pre><code>set_target_properties(EXEC PROPERTIES\n    COMPILE_OPTIONS \"-Wall;-Werror;-Wpedantic;-I.\"\n    LINK_OPTIONS \"-Wl,-Map=output.map,--print-memory-usage;-L.\"\n    RUNTIME_OUTPUT_DIRECTORY ${CMAKE_CURRENT_BINARY_DIR}\n)\n</code></pre></li> <li>\u5982\u679c\u4e0d\u60f3\u7528\u5206\u53f7\u9694\u79bb\u7f16\u8bd1\u548c\u94fe\u63a5\u9009\u9879\uff0c\u53ef\u4ee5\u901a\u8fc7<code>separate_arguments</code>\u547d\u4ee4\u5c06\u7a7a\u683c\u8f6c\u6362\u6210\u5206\u53f7\uff0c\u4ece\u800c\u9009\u9879\u7684\u5199\u6cd5\u5c31\u4e0d\u4f1a\u90a3\u4e48\u5947\u602a\uff0c\u4e0b\u9762\u7684\u5199\u6cd5\u548c\u4e0a\u9762\u7684\u7684\u5199\u6cd5\u662f\u76f8\u540c\u7684\uff0c\u4f46\u662f\u53ef\u8bfb\u6027\u66f4\u597d\u4e5f\u66f4\u4e0d\u5bb9\u6613\u51fa\u9519\uff1a <pre><code>separate_arguments(COMPILE_OPTION UNIX_COMMAND \"-Wall -Werror -Wpedantic -I.\")\nseparate_arguments(LINK_OPTION UNIX_COMMAND \"-Wl,-Map=output.map,--print-memory-usage -L.\")\nset_target_properties(EXEC PROPERTIES\n    COMPILE_OPTIONS \"${COMPILE_OPTION}\"\n    LINK_OPTIONS \"${LINK_OPTION}\"\n    RUNTIME_OUTPUT_DIRECTORY ${CMAKE_CURRENT_BINARY_DIR}\n)\n</code></pre></li> </ul> </li> <li>\u5f00\u542f<code>verbose</code>\u540e\uff0c\u53ef\u5f97\u5230\u5b8c\u6574\u7684\u7f16\u8bd1\u94fe\u63a5\u547d\u4ee4<ul> <li>\u7f16\u8bd1\u547d\u4ee4     <pre><code>[ 50%] Building CXX object src/CMakeFiles/EXEC.dir/main.cpp.o\ncd /home/yuxiangw/GitHub/learning_book/docs/topics/cmake/code/exec/build/src &amp;&amp; /usr/bin/c++   -g -Wall -Werror -Wpedantic -I. -std=c++20 -MD -MT src/CMakeFiles/EXEC.dir/main.cpp.o -MF CMakeFiles/EXEC.dir/main.cpp.o.d -o CMakeFiles/EXEC.dir/main.cpp.o -c /home/yuxiangw/GitHub/learning_book/docs/topics/cmake/code/exec/src/main.cpp\n</code></pre></li> <li>\u94fe\u63a5\u547d\u4ee4     <pre><code>[100%] Linking CXX executable EXEC\ncd /home/yuxiangw/GitHub/learning_book/docs/topics/cmake/code/exec/build/src &amp;&amp; /usr/bin/cmake -E cmake_link_script CMakeFiles/EXEC.dir/link.txt --verbose=1\n/usr/bin/c++ -g -Wl,-Map=output.map,--print-memory-usage -L. CMakeFiles/EXEC.dir/main.cpp.o -o EXEC \nMemory region         Used Size  Region Size  %age Used\n</code></pre></li> </ul> </li> </ul>"},{"location":"topics/cmake/#cmake_1","title":"cmake\u76ee\u6807","text":"<p>cmake\u914d\u7f6e\u5b8c\u6210\u540e\uff0c\u53ef\u901a\u8fc7<code>cmake</code>\u751f\u6210\u5bf9\u5e94\u7684<code>Makefile</code>\u3002\u6b64\u5de5\u7a0b\u7684\u76ee\u6807\u6709\uff1a <pre><code>build&gt; make help\nThe following are some of the valid targets for this Makefile:\n... all (the default if no target is provided)\n... clean\n... depend\n... edit_cache\n... rebuild_cache\n... EXEC\n</code></pre> \u5176\u4e2d\uff0c<code>EXEC</code>\u662f\u6211\u4eec\u5b9a\u4e49\u7684\u76ee\u6807\uff0c\u5176\u4ed6\u7684\u662f\u7531<code>cmake</code>\u81ea\u5df1\u751f\u6210\u7684\u3002</p>"},{"location":"topics/cmake/#_2","title":"\u52a8\u6001\u5e93\u5de5\u7a0b","text":"<p>\u52a8\u6001\u5e93\u901a\u8fc7<code>add_library</code>\u547d\u4ee4\u6dfb\u52a0\u76ee\u6807\uff0c\u800cEXEC\u5de5\u7a0b\u901a\u8fc7<code>add_executable</code>\u6dfb\u52a0\u5de5\u7a0b\u3002\u9664\u4e86\u8fd9\u4e2a\u533a\u522b\uff0c\u5176\u4ed6\u914d\u7f6e\u4e24\u8005\u57fa\u672c\u4e00\u81f4\u3002</p>"},{"location":"topics/cmake/#_3","title":"\u52a8\u6001\u5e93\u914d\u7f6e\u6587\u4ef6","text":"<ul> <li>\u4e3a\u4e86\u65b9\u4fbf\u67e5\u627e\u52a8\u6001\u5e93\u7684\u5934\u6587\u4ef6\uff0c\u901a\u8fc7<code>target_include_directories</code>\u547d\u4ee4\uff0c\u5c06\u76ee\u5f55\u6587\u4ef6\u8f93\u51fa     <pre><code>file(GLOB_RECURSE SRC_CPP ${CMAKE_CURRENT_SOURCE_DIR} \"*.cpp\")\n# Set SHARED to build so library\nadd_library(mylib SHARED ${SRC_CPP})\n# Set public so that its dependency can get the include directory\ntarget_include_directories(mylib PUBLIC ${CMAKE_CURRENT_SOURCE_DIR})\n</code></pre></li> <li>\u7f16\u8bd1\u547d\u4ee4<ul> <li>\u5148\u7f16\u8bd1<code>.o</code>\u6587\u4ef6</li> <li>\u518d\u5c06\u6240\u6709<code>.o</code>\u6587\u4ef6\u94fe\u63a5\u6210<code>.so</code>\u6587\u4ef6     <pre><code>[ 25%] Building CXX object src/CMakeFiles/mylib.dir/hello.cpp.o\ncd /home/yuxiangw/GitHub/learning_book/docs/topics/cmake/code/libso/build/src &amp;&amp; /usr/bin/c++ -Dmylib_EXPORTS -I/home/yuxiangw/GitHub/learning_book/docs/topics/cmake/code/libso/src -g -fPIC -std=c++20 -MD -MT src/CMakeFiles/mylib.dir/hello.cpp.o -MF CMakeFiles/mylib.dir/hello.cpp.o.d -o CMakeFiles/mylib.dir/hello.cpp.o -c /home/yuxiangw/GitHub/learning_book/docs/topics/cmake/code/libso/src/hello.cpp\n[ 50%] Linking CXX shared library libmylib.so\ncd /home/yuxiangw/GitHub/learning_book/docs/topics/cmake/code/libso/build/src &amp;&amp; /usr/bin/cmake -E cmake_link_script CMakeFiles/mylib.dir/link.txt --verbose=1\n/usr/bin/c++ -fPIC -g -shared -Wl,-soname,libmylib.so -o libmylib.so CMakeFiles/mylib.dir/hello.cpp.o \nmake[3]: Leaving directory '/home/yuxiangw/GitHub/learning_book/docs/topics/cmake/code/libso/build'\n</code></pre></li> </ul> </li> </ul>"},{"location":"topics/cmake/#_4","title":"\u52a8\u6001\u5e93\u6d4b\u8bd5\u914d\u7f6e\u6587\u4ef6","text":"<ul> <li>\u901a\u8fc7<code>target_link_libraries</code>\u547d\u4ee4\u5c31\u53ef\u4ee5\u94fe\u63a5\u5230\u52a8\u6001\u5e93\uff0c\u7531\u4e8e\u52a8\u6001\u5e93\u5de5\u7a0b\u5df2\u7ecf\u5c06\u5176\u5934\u6587\u4ef6\u76ee\u5f55<code>PUBLIC</code>\u8f93\u51fa\uff0c\u6240\u4ee5\u6b64\u5904\u80fd\u627e\u5230\u5934\u6587\u4ef6     <pre><code>target_link_libraries(myTest PRIVATE\n    mylib\n)\n</code></pre></li> <li>\u7f16\u8bd1\u547d\u4ee4     <pre><code>[ 75%] Building CXX object test/CMakeFiles/myTest.dir/main.cpp.o\ncd /home/yuxiangw/GitHub/learning_book/docs/topics/cmake/code/libso/build/test &amp;&amp; /usr/bin/c++  -I/home/yuxiangw/GitHub/learning_book/docs/topics/cmake/code/libso/src -g -std=c++20 -MD -MT test/CMakeFiles/myTest.dir/main.cpp.o -MF CMakeFiles/myTest.dir/main.cpp.o.d -o CMakeFiles/myTest.dir/main.cpp.o -c /home/yuxiangw/GitHub/learning_book/docs/topics/cmake/code/libso/test/main.cpp\n[100%] Linking CXX executable myTest\ncd /home/yuxiangw/GitHub/learning_book/docs/topics/cmake/code/libso/build/test &amp;&amp; /usr/bin/cmake -E cmake_link_script CMakeFiles/myTest.dir/link.txt --verbose=1\n/usr/bin/c++ -g CMakeFiles/myTest.dir/main.cpp.o -o myTest  -Wl,-rpath,/home/yuxiangw/GitHub/learning_book/docs/topics/cmake/code/libso/build/src ../src/libmylib.so \nmake[3]: Leaving directory '/home/yuxiangw/GitHub/learning_book/docs/topics/cmake/code/libso/build'\n</code></pre></li> </ul>"},{"location":"topics/cmake/#_5","title":"\u9759\u6001\u5e93\u5de5\u7a0b","text":"<p>\u9759\u6001\u5e93\u5de5\u7a0b\u548c\u52a8\u6001\u5de5\u7a0b\u9664\u4e86\u5728<code>add_library</code>\u547d\u4ee4\u4e2d\u4f7f\u7528<code>STATIC</code>\u9009\u9879\u4ee5\u5916\uff0c\u5176\u4ed6\u548c\u52a8\u6001\u5e93\u5de5\u7a0b\u5b8c\u5168\u4e00\u6837\u3002</p>"},{"location":"topics/cmake/#_6","title":"\u9759\u6001\u5e93\u914d\u7f6e\u6587\u4ef6","text":"<ul> <li>\u901a\u8fc7<code>add_library(mylib STATIC ${SRC_CPP})</code>\u914d\u7f6e\u4e86\u9759\u6001\u5e93\u76ee\u6807</li> <li>\u7f16\u8bd1\u547d\u4ee4     <pre><code>[ 25%] Building CXX object src/CMakeFiles/mylib.dir/hello.cpp.o\ncd /home/yuxiangw/GitHub/learning_book/docs/topics/cmake/code/liba/build/src &amp;&amp; /usr/bin/c++  -I/home/yuxiangw/GitHub/learning_book/docs/topics/cmake/code/liba/src -g -std=c++20 -MD -MT src/CMakeFiles/mylib.dir/hello.cpp.o -MF CMakeFiles/mylib.dir/hello.cpp.o.d -o CMakeFiles/mylib.dir/hello.cpp.o -c /home/yuxiangw/GitHub/learning_book/docs/topics/cmake/code/liba/src/hello.cpp\n[ 50%] Linking CXX static library libmylib.a\ncd /home/yuxiangw/GitHub/learning_book/docs/topics/cmake/code/liba/build/src &amp;&amp; /usr/bin/cmake -P CMakeFiles/mylib.dir/cmake_clean_target.cmake\ncd /home/yuxiangw/GitHub/learning_book/docs/topics/cmake/code/liba/build/src &amp;&amp; /usr/bin/cmake -E cmake_link_script CMakeFiles/mylib.dir/link.txt --verbose=1\n/usr/bin/ar qc libmylib.a CMakeFiles/mylib.dir/hello.cpp.o\n/usr/bin/ranlib libmylib.a\nmake[3]: Leaving directory '/home/yuxiangw/GitHub/learning_book/docs/topics/cmake/code/liba/build'\n</code></pre></li> </ul>"},{"location":"topics/cmake/#_7","title":"\u6e90\u4ee3\u7801\u5bfc\u5165\u5de5\u7a0b","text":"<p>\u5c06\u5176\u4ed6\u76ee\u5f55\u4e0b\u7684\u6e90\u4ee3\u7801\u548c\u5f53\u524d\u76ee\u5f55\u7684\u6e90\u4ee3\u7801\u4e00\u8d77\u7f16\u8bd1\uff0c\u53ef\u4ee5\u6392\u9664\u56e0\u7f16\u8bd1\u5668\u7248\u672c\u4e0d\u540c\uff0c\u800c\u9020\u6210\u76ee\u6807\u6587\u4ef6\u7684\u517c\u5bb9\u95ee\u9898\u3002cmake\u63d0\u4f9b\u4e86\uff1a * <code>aux_source_directory(&lt;dir&gt; &lt;variable&gt;)</code>     * \u7528\u4e8e\u5c06\u6307\u5b9a\u76ee\u5f55\u4e0b\u6240\u6709\u7684\u6e90\u6587\u4ef6\u8bb0\u5f55\u5728<code>&lt;varible&gt;</code>\u4e2d\uff0c\u4ee5\u4fbf\u548c\u5f53\u524d\u76ee\u5f55\u7684\u6e90\u6587\u4ef6\u540c\u65f6\u7f16\u8bd1</p>"},{"location":"topics/cmake/#_8","title":"\u5bfc\u5165\u6e90\u4ee3\u7801\u914d\u7f6e\u6587\u4ef6","text":"<ul> <li>\u5148\u901a\u8fc7<code>aux_source_directory(${CMAKE_CURRENT_SOURCE_DIR}/src1 SRCS1)</code>\u547d\u4ee4\uff0c\u5c06<code>src1</code>\u76ee\u5f55\u4e0b\u7684\u6240\u6709\u6e90\u4ee3\u7801\u6587\u4ef6\u8bb0\u5f55\u5728<code>SRCS1</code>\u53d8\u91cf\u4e2d</li> <li>\u518d\u901a\u8fc7<code>add_executable(SRC_IMPORT_EXEC ${SRCS1} ${SRCS2} main.cpp)</code>\u547d\u4ee4\uff0c\u5c06\u5176\u4ed6\u76ee\u5f55\u4e0b\u7684\u6e90\u4ee3\u7801\u548c\u5f53\u524d\u76ee\u5f55\u4e0b\u7684\u6e90\u4ee3\u7801\u4e00\u8d77\u7f16\u8bd1</li> </ul>"},{"location":"topics/cmake/#_9","title":"\u81ea\u5b9a\u4e49\u5de5\u7a0b","text":"<p>\u9664\u4e86\u5e38\u89c4\u76ee\u6807(EXEC\uff0c\u9759\u6001\u5e93\uff0c\u52a8\u6001\u5e93)\uff0ccmake\u8fd8\u63d0\u4f9b\u4e86\u4e00\u4e9b\u547d\u4ee4\u7528\u4e8e\u7528\u6237\u81ea\u5b9a\u4e49\u7684\u76ee\u6807\uff1a</p> <ul> <li><code>add_custom_command</code><ul> <li>\u7528\u4e8e\u4ea7\u751f\u5f53\u524d\u76ee\u6807\u7684\u4f9d\u8d56\u6587\u4ef6\uff0c\u672c\u6587\u7684\u4f8b\u5b50\u5c31\u7528\u6b64\u547d\u4ee4\u6267\u884c\u4e86\u81ea\u52a8\u751f\u6210\u7684\u4ee3\u7801\uff0c\u7528\u4e8e\u5f53\u524d\u76ee\u6807\u7684\u7f16\u8bd1</li> </ul> </li> <li><code>add_custom_target</code><ul> <li>\u521b\u5efa\u4e00\u4e2a\u975e\u5e38\u89c4\u7684\u76ee\u6807\u3002\u4f8b\u5982\uff0c\u6211\u4eec\u53ef\u4ee5\u7528\u5176\u521b\u5efa\u4e00\u4e2a<code>doxygen</code>\u76ee\u6807\u7528\u6765\u751f\u6210\u4ee3\u7801\u6587\u6863</li> </ul> </li> <li><code>add_dependencies</code><ul> <li>\u5efa\u7acb\u81ea\u5b9a\u4e49\u4f9d\u8d56\u5173\u7cfb\u3002cmake\u5bf9\u5e93\u4f9d\u8d56\u4f1a\u81ea\u52a8\u5efa\u7acb\u4f9d\u8d56\u5173\u7cfb\uff0c\u4f46\u662f\u5982\u679c\u6211\u4eec\u60f3\u5efa\u7acb\u4e00\u4e2a\u975e\u5e38\u89c4\u7684\u4f9d\u8d56\u5173\u7cfb\uff0c\u5c31\u9700\u8981\u7528\u5230\u6b64\u547d\u4ee4\u3002\u4f8b\u5982\uff0c\u5efa\u7acb\u81ea\u5b9a\u4e49\u76ee\u6807\u7684\u4f9d\u8d56\u5173\u7cfb</li> <li>\u5f53\u4f9d\u8d56\u5173\u7cfb\u5efa\u7acb\u597d\u540e\uff0c\u7cfb\u7edf\u4f1a\u6309\u7167\u4f9d\u8d56\u5173\u7cfb\u8fdb\u884c\u6309\u987a\u5e8f\u7f16\u8bd1</li> </ul> </li> </ul>"},{"location":"topics/cmake/#_10","title":"\u81ea\u5b9a\u4e49\u76ee\u6807\u914d\u7f6e\u6587\u4ef6","text":"<p>\u672c\u4f8b\u7684\u7f16\u8bd1\u987a\u5e8f\u5982\u4e0b\uff0c\u53ef\u53c2\u8003\u7b80\u5355\u7684Makefile\u6587\u4ef6\uff1a</p> <ul> <li>\u5148\u901a\u8fc7<code>python</code>\u7684<code>cog</code>\u547d\u4ee4\u81ea\u52a8\u751f\u6210CPP\u6e90\u4ee3\u7801</li> <li>\u518d\u5c06<code>main.cpp</code>\u4e0e\u751f\u6210\u7684\u4ee3\u7801\u8fdb\u884c\u7f16\u8bd1</li> <li>\u6700\u7ec8\u751f\u6210\u4e00\u4e2a\u53ef\u6267\u884c\u6587\u4ef6</li> </ul> <p>\u81ea\u5b9a\u4e49\u76ee\u6807\u7684\u914d\u7f6e\u6587\u4ef6\u5982\u4e0b\uff1a <pre><code>set(CODEGEN_BINARY_DIR \"${CMAKE_CURRENT_BINARY_DIR}/internal\")\nset(CODEGEN_SRC \"${CODEGEN_BINARY_DIR}/animal.cpp\")\n\nadd_executable(main main.cpp ${CODEGEN_SRC})\n\nadd_custom_command(\n   OUTPUT ${CODEGEN_SRC}\n   # Copy all files in this folder to $(CODEGEN_BINARY_DIR)\n   COMMAND ${CMAKE_COMMAND} -E copy_directory\n        ${CMAKE_CURRENT_SOURCE_DIR}/internal ${CODEGEN_BINARY_DIR}\n   COMMAND make -C ${CODEGEN_BINARY_DIR}\n   COMMENT \"Generate C++ code with cog python tool\"\n   VERBATIM\n)\n\nset_target_properties(main PROPERTIES\n   COMPILE_OPTIONS \"-I${CODEGEN_BINARY_DIR}\"\n   LINK_OPTIONS \"\"\n   RUNTIME_OUTPUT_DIRECTORY \"\"\n)\n</code></pre></p> <ul> <li><code>internal</code>\u6587\u4ef6\u5939\u7528\u4e8e\u4ee3\u7801\u751f\u6210\uff0c\u5728\u6267\u884c\u524d\u88ab\u62f7\u8d1d\u5230\u76ee\u6807\u5de5\u4f5c\u76ee\u5f55<code>CMAKE_CURRENT_BINARY_DIR</code>\u4e0b</li> <li>\u7531\u4e8e\u5f53\u524d\u76ee\u6807\u4f9d\u8d56\u751f\u6210\u7684\u6e90\u6587\u4ef6\uff0c\u6240\u4ee5\u5728\u7f16\u8bd1\u7684\u65f6\u5019\u8981\u52a0\u5165\u5934\u6587\u4ef6\u76ee\u5f55\uff0c\u4ee5\u9632\u6b62\u81ea\u52a8\u751f\u6210\u4e86\u4f9d\u8d56\u7684\u5934\u6587\u4ef6\u5728\u7f16\u8bd1\u65f6\u65e0\u6cd5\u627e\u5230</li> <li>\u7f16\u8bd1\u547d\u4ee4<ul> <li>\u6e90\u6587\u4ef6\u81ea\u52a8\u751f\u6210\u547d\u4ee4     <pre><code>[ 25%] Generate C++ code with cog python tool\ncd /home/yuxiangw/GitHub/learning_book/docs/topics/cmake/code/custom/build/src &amp;&amp; /usr/bin/cmake -E copy_directory /home/yuxiangw/GitHub/learning_book/docs/topics/cmake/code/custom/src/internal /home/yuxiangw/GitHub/learning_book/docs/topics/cmake/code/custom/build/src/internal\ncd /home/yuxiangw/GitHub/learning_book/docs/topics/cmake/code/custom/build/src &amp;&amp; make -C /home/yuxiangw/GitHub/learning_book/docs/topics/cmake/code/custom/build/src/internal\nmake[4]: Entering directory '/home/yuxiangw/GitHub/learning_book/docs/topics/cmake/code/custom/build/src/internal'\npython3 -m cogapp -d -s \" //cog generated\" -o animal.cpp animal.cpp.cog\nmake[4]: Leaving directory '/home/yuxiangw/GitHub/learning_book/docs/topics/cmake/code/custom/build/src/internal'\n</code></pre></li> <li>\u7f16\u8bd1\u94fe\u63a5\u547d\u4ee4     <pre><code>[ 50%] Building CXX object src/CMakeFiles/main.dir/main.cpp.o\ncd /home/yuxiangw/GitHub/learning_book/docs/topics/cmake/code/custom/build/src &amp;&amp; /usr/bin/c++   -g -I/home/yuxiangw/GitHub/learning_book/docs/topics/cmake/code/custom/build/src/internal -std=c++20 -MD -MT src/CMakeFiles/main.dir/main.cpp.o -MF CMakeFiles/main.dir/main.cpp.o.d -o CMakeFiles/main.dir/main.cpp.o -c /home/yuxiangw/GitHub/learning_book/docs/topics/cmake/code/custom/src/main.cpp\n[ 75%] Building CXX object src/CMakeFiles/main.dir/internal/animal.cpp.o\ncd /home/yuxiangw/GitHub/learning_book/docs/topics/cmake/code/custom/build/src &amp;&amp; /usr/bin/c++   -g -I/home/yuxiangw/GitHub/learning_book/docs/topics/cmake/code/custom/build/src/internal -std=c++20 -MD -MT src/CMakeFiles/main.dir/internal/animal.cpp.o -MF CMakeFiles/main.dir/internal/animal.cpp.o.d -o CMakeFiles/main.dir/internal/animal.cpp.o -c /home/yuxiangw/GitHub/learning_book/docs/topics/cmake/code/custom/build/src/internal/animal.cpp\n[100%] Linking CXX executable main\ncd /home/yuxiangw/GitHub/learning_book/docs/topics/cmake/code/custom/build/src &amp;&amp; /usr/bin/cmake -E cmake_link_script CMakeFiles/main.dir/link.txt --verbose=1\n/usr/bin/c++ -g CMakeFiles/main.dir/main.cpp.o CMakeFiles/main.dir/internal/animal.cpp.o -o main \nmake[3]: Leaving directory '/home/yuxiangw/GitHub/learning_book/docs/topics/cmake/code/custom/build'\n</code></pre></li> </ul> </li> </ul>"},{"location":"topics/cmake/#webassembly","title":"WebAssembly\u5de5\u7a0b","text":"<p>\u53e6\u4e00\u7bc7\u6587\u7ae0\u201cWebAssembly\u201d\u4ecb\u7ecd\u4e86WebAssembly\u548cC/C++\u7684\u7528\u6cd5\u3002\u5f53\u65f6\u7684\u4f8b\u5b50\u662f\u7528<code>Makefile</code>\u96c6\u6210\u7f16\u8bd1\u7684\u3002\u901a\u8fc7<code>emcmake</code>\u7ed3\u5408<code>cmake</code>\u547d\u4ee4\u53ef\u4ee5\u65b9\u4fbf\u5730\u5c06<code>C/C++ cmake</code>\u5de5\u7a0b\u7f16\u8bd1\u6210\u201cWebAssembly\u201d\u5de5\u7a0b\uff0c\u547d\u4ee4\u5982\u4e0b\uff1a <pre><code>web: clean\n    emcmake cmake -S . -B build\n    cmake --build ./build --verbose\n</code></pre></p>"},{"location":"topics/cmake/#_11","title":"\u4fee\u6539\u9759\u6001\u5e93\u5de5\u7a0b","text":"<p>\u901a\u8fc7\u5c06\u9759\u6001\u5e93\u5de5\u7a0b\u7684<code>cmake</code>\u914d\u7f6e\u547d\u4ee4\u53d8\u6210<code>emcmake cmake</code>\uff0c\u5c31\u53ef\u76f4\u63a5\u7f16\u8bd1\u6210\u201cWebAssembly\u201d\u5de5\u7a0b\uff0c\u53ef\u53c2\u8003\u5176Makefile\u4e2d\u7684web\u76ee\u6807\u3002</p> <ul> <li>\u7f16\u8bd1\u547d\u4ee4<ul> <li>\u9759\u6001\u5e93     <pre><code>[ 25%] Building CXX object src/CMakeFiles/mylib.dir/hello.cpp.o\ncd /home/yuxiangw/GitHub/learning_book/docs/topics/cmake/code/liba/build/src &amp;&amp; /home/yuxiangw/emsdk/upstream/emscripten/em++  @CMakeFiles/mylib.dir/includes_CXX.rsp -std=c++20 -MD -MT src/CMakeFiles/mylib.dir/hello.cpp.o -MF CMakeFiles/mylib.dir/hello.cpp.o.d -o CMakeFiles/mylib.dir/hello.cpp.o -c /home/yuxiangw/GitHub/learning_book/docs/topics/cmake/code/liba/src/hello.cpp\n[ 50%] Linking CXX static library libmylib.a\ncd /home/yuxiangw/GitHub/learning_book/docs/topics/cmake/code/liba/build/src &amp;&amp; /usr/bin/cmake -P CMakeFiles/mylib.dir/cmake_clean_target.cmake\ncd /home/yuxiangw/GitHub/learning_book/docs/topics/cmake/code/liba/build/src &amp;&amp; /usr/bin/cmake -E cmake_link_script CMakeFiles/mylib.dir/link.txt --verbose=1\n/home/yuxiangw/emsdk/upstream/emscripten/emar qc libmylib.a CMakeFiles/mylib.dir/hello.cpp.o\n/home/yuxiangw/emsdk/upstream/emscripten/emranlib libmylib.a\nmake[3]: Leaving directory '/home/yuxiangw/GitHub/learning_book/docs/topics/cmake/code/liba/build'\n</code></pre><ul> <li>\u94fe\u63a5\u547d\u4ee4\u5b58\u5728\u4e8e<code>CMakeFiles/mylib.dir/link.txt</code>\u6587\u4ef6\uff0c\u901a\u8fc7<code>emar</code>\u547d\u4ee4\u8fdb\u884c\u538b\u7f29     <pre><code>/home/yuxiangw/emsdk/upstream/emscripten/emar qc libmylib.a CMakeFiles/mylib.dir/hello.cpp.o\n/home/yuxiangw/emsdk/upstream/emscripten/emranlib libmylib.a\n</code></pre></li> </ul> </li> <li>WASM\u548cJS\u6587\u4ef6     <pre><code>[ 75%] Building CXX object test/CMakeFiles/myTest.dir/main.cpp.o\ncd /home/yuxiangw/GitHub/learning_book/docs/topics/cmake/code/liba/build/test &amp;&amp; /home/yuxiangw/emsdk/upstream/emscripten/em++  @CMakeFiles/myTest.dir/includes_CXX.rsp -std=c++20 -MD -MT test/CMakeFiles/myTest.dir/main.cpp.o -MF CMakeFiles/myTest.dir/main.cpp.o.d -o CMakeFiles/myTest.dir/main.cpp.o -c /home/yuxiangw/GitHub/learning_book/docs/topics/cmake/code/liba/test/main.cpp\n[100%] Linking CXX executable myTest.js\ncd /home/yuxiangw/GitHub/learning_book/docs/topics/cmake/code/liba/build/test &amp;&amp; /usr/bin/cmake -E cmake_link_script CMakeFiles/myTest.dir/link.txt --verbose=1\n/home/yuxiangw/emsdk/upstream/emscripten/em++ @CMakeFiles/myTest.dir/objects1.rsp -o myTest.js @CMakeFiles/myTest.dir/linklibs.rsp\nmake[3]: Leaving directory '/home/yuxiangw/GitHub/learning_book/docs/topics/cmake/code/liba/build'\n</code></pre><ul> <li>\u540c\u6837\uff0c\u94fe\u63a5\u547d\u4ee4\u4e5f\u5b58\u5728\u4e0e<code>CMakeFiles/myTest.dir/link.txt</code>\u6587\u4ef6\u4e2d</li> </ul> </li> </ul> </li> </ul>"},{"location":"topics/cmake/#_12","title":"\u53c2\u8003","text":"<ul> <li>cmake\u5e38\u89c1\u53d8\u91cf</li> <li>gcc\u5e38\u89c1\u7f16\u8bd1\u9009\u9879</li> </ul>"},{"location":"topics/flex_bison/","title":"Flex\u548cBison","text":"<p>Flex\u548cBison\u5de5\u5177\u7684\u6837\u4f8b\uff0c\u6240\u6709\u6837\u4f8b\u53ef\u5728GitHub\u4ed3\u5e93\u4e2d\u627e\u5230</p>"},{"location":"topics/flex_bison/#_1","title":"\u7b80\u4ecb","text":"<p>\u5728\u7f16\u8bd1\u5668\u9886\u57df\uff0c\u5206\u6790\u5de5\u4f5c\u5206\u4e3a\u4e24\u4e2a\u90e8\u5206\uff1a</p> <ul> <li>\u8bcd\u6cd5\u5206\u6790(lexical analysis, \u6216scanning)<ul> <li>\u628a\u8f93\u5165\u5206\u5272\u6210\u4e00\u4e2a\u4e2a\u6709\u610f\u4e49\u7684\u8bcd\u5757</li> </ul> </li> <li>\u8bed\u6cd5\u5206\u6790(syntax analysis, \u6216parsing)<ul> <li>\u786e\u5b9a\u8fd9\u4e9b\u8bb0\u53f7\u662f\u5982\u4f55\u5f7c\u6b64\u5173\u8054\u7684</li> </ul> </li> </ul> <p>Flex\u7528\u4e8e\u8bcd\u6cd5\u5206\u6790\uff0c\u800cBison\u7528\u4e8e\u8bed\u6cd5\u5206\u6790\u3002</p>"},{"location":"topics/flex_bison/#flex","title":"Flex\u5de5\u4f5c\u6d41\u7a0b","text":"<p>Flex\u7684\u76ee\u7684\u662f\u5c06\u8f93\u5165\u5206\u5272\u6210\u4e00\u4e2a\u4e2a\u6709\u610f\u4e49\u7684\u8bcd\u5757\uff0c\u7528\u6237\u901a\u8fc7\u8c03\u7528Flex\u81ea\u52a8\u751f\u6210\u7684<code>yylex</code>\u51fd\u6570\uff0c\u5373\u53ef\u542f\u52a8\u8bcd\u6cd5\u5206\u6790\u5de5\u4f5c\u3002\u4e0b\u56fe\u662f\u5176\u5e38\u89c1\u7684\u5de5\u4f5c\u6d41\u7a0b\uff1a</p> <ul> <li>\u901a\u8fc7<code>yyin</code>\u8bfb\u5165\u7528\u6237\u7684\u8f93\u5165\uff0c\u9ed8\u8ba4\u60c5\u51b5\u4e0b\u662f\u6807\u51c6\u8f93\u5165<code>stdin</code>\uff0c\u7528\u6237\u53ef\u4ee5\u81ea\u5b9a\u4e49\u4e3a\u5176\u4ed6\u8f93\u5165\u6e90</li> <li>\u5c06\u8f93\u5165\u548c\u7528\u6237\u5b9a\u4e49\u7684\u8bcd\u6cd5\u89c4\u5219(\u6b63\u5219\u8868\u8fbe\u5f0f)\u8fdb\u884c\u6bd4\u8f83<code>match</code></li> <li>\u5982\u679c\u8f93\u5165\u5339\u914d\u67d0\u6761\u89c4\u5219\uff0c\u89e6\u53d1\u7528\u6237\u5b9a\u4e49\u7684\u52a8\u4f5c<code>action</code>\uff0c\u7528\u6237\u53ef\u901a\u8fc7<code>yytext</code>\u83b7\u53d6\u5339\u914d\u7684\u5b57\u7b26\u4e32</li> <li>\u5982\u679c\u8f93\u5165\u6ca1\u6709\u5339\u914d\u7684\u89c4\u5219\uff0c\u6216<code>action</code>\u5b8c\u6210(\u6ca1\u6709\u9000\u51fa<code>yylex</code>\u51fd\u6570\u7684\u8bed\u53e5)\uff0c\u4f1a\u91cd\u65b0\u5904\u7406\u65b0\u7684\u8f93\u5165</li> <li><code>yylex</code>\u51fd\u6570\u4f1a\u4e00\u76f4\u5faa\u73af\u4e0a\u9762\u7684\u6b65\u9aa4\uff0c\u76f4\u5230\u6ca1\u6709\u66f4\u591a\u7684\u8f93\u5165(\u9047\u5230EOF)</li> </ul> <p></p> <p>\u5f53\u9047\u5230\u591a\u4e2a\u89c4\u5219\u540c\u65f6\u5339\u914d\u65f6\uff0cFlex\u9075\u5faa\u4ee5\u4e0b\u89c4\u5219\u9009\u62e9\u6700\u5408\u9002\u7684\u89c4\u5219\uff1a</p> <ul> <li>\u5339\u914d\u5c3d\u53ef\u80fd\u591a\u7ed9\u7684\u5b57\u7b26\u4e32</li> <li>\u5982\u679c\u5339\u914d\u5b57\u7b26\u4e32\u957f\u5ea6\u76f8\u540c\uff0c\u9009\u62e9\u5728\u7a0b\u5e8f\u4e2d\u66f4\u65e9\u51fa\u73b0\u7684\u89c4\u5219</li> </ul>"},{"location":"topics/flex_bison/#bison","title":"Bison\u5de5\u4f5c\u6d41\u7a0b","text":"<p>Bison\u7684\u76ee\u7684\u662f\u5c06\u76f8\u5173\u7684\u8bcd\u5757\u8fdb\u884c\u89c4\u7ea6<code>reduce</code>\uff0c\u5f97\u5230\u65b0\u7684\u8bed\u4e49\u3002\u8bed\u6cd5\u5206\u6790\u4f9d\u8d56\u4e8e\u8bcd\u6cd5\u5206\u6790\uff0c\u7528\u6237\u901a\u8fc7\u8c03\u7528Bison\u81ea\u52a8\u751f\u6210\u7684<code>yyparse</code>\u51fd\u6570\uff0c\u5373\u53ef\u540c\u65f6\u542f\u52a8\u8bcd\u6cd5/\u8bed\u6cd5\u5206\u6790\u5de5\u4f5c\u3002\u4e0b\u56fe\u662f\u5176\u5e38\u89c1\u7684\u5de5\u4f5c\u6d41\u7a0b\uff1a</p> <ul> <li><code>yyparse</code>\u8c03\u7528<code>yylex</code>\uff0c\u5728\u5339\u914d\u5230\u67d0\u4e2a\u671f\u671b\u7684\u8bcd\u5757\u540e\uff0c\u901a\u8fc7<code>yylval</code>\u4f20\u9012\u6b64\u8bcd\u5757\u5185\u5bb9<ul> <li>\u8bed\u6cd5\u5206\u6790\u5668\u4f1a\u5b9a\u4e49\u5176\u671f\u671b\u7684\u8bb0\u53f7<code>token</code>\uff0c\u5f53\u53d1\u751f\u5339\u914d\u65f6\uff0c<code>yylex</code>\u4f1a\u5728\u5176\u52a8\u4f5c<code>action</code>\u4e2d\u8fd4\u56de\u6b64\u8bb0\u53f7<code>token</code>\uff0c\u4ece\u800c\u5c06\u5de5\u4f5c\u6d41\u7a0b\u4ea4\u7ed9\u8bed\u6cd5\u5206\u6790\u5668</li> </ul> </li> <li>\u8bed\u6cd5\u5206\u6790\u5668\u5c06\u65b0\u7684\u8bb0\u53f7<code>token</code>\u548c\u6808\u4e2d\u5148\u524d\u7684\u8bb0\u53f7\u7ed3\u5408\uff0c\u53bb\u5339\u914d\u7528\u6237\u5b9a\u4e49\u7684\u8bed\u6cd5\u89c4\u5219</li> <li>\u5982\u679c\u67d0\u6761\u8bed\u6cd5\u89c4\u5219\u5339\u914d\uff0c\u5219\u5f00\u59cb\u5f52\u7ea6<code>reduce</code>\u52a8\u4f5c<ul> <li>\u6b64\u65f6\u4f1a\u8c03\u7528\u7528\u6237\u5b9a\u4e49\u7684\u8bed\u6cd5\u52a8\u4f5c\uff0c\u5c06\u591a\u4e2a\u8bb0\u53f7\u89c4\u7ea6\u4e3a\u4e00\u4e2a\u65b0\u7684\u8bb0\u53f7</li> <li>\u65b0\u7684\u8bb0\u53f7\u4e5f\u4f1a\u89e6\u53d1\u8bed\u6cd5\u89c4\u5219\u5339\u914d</li> </ul> </li> <li>\u5982\u679c\u6ca1\u6709\u8bed\u6cd5\u89c4\u5219\u5339\u914d\uff0c\u5219\u5f00\u59cb\u79fb\u8fdb<code>shift</code>\u52a8\u4f5c\uff0c\u5c06\u65b0\u7684\u7b26\u53f7\u5165\u6808\uff0c\u7ed3\u675f\u6b64\u6b21\u8bed\u6cd5\u5206\u6790</li> <li><code>yyparse</code>\u51fd\u6570\u4f1a\u4e00\u76f4\u5faa\u73af\u4e0a\u9762\u7684\u6b65\u9aa4\uff0c\u76f4\u5230\u6ca1\u6709\u66f4\u591a\u7684\u8f93\u5165(\u9047\u5230EOF)\uff0c\u6216\u53d1\u73b0\u8bed\u6cd5\u9519\u8bef</li> </ul> <p></p> <p>\u5f53\u540c\u4e00\u4e2a\u8bb0\u53f7\u53ef\u4ee5\u5339\u914d\u4e24\u6761\u4e0d\u540c\u89c4\u5219\u7684\u65f6\u5019\uff0c\u5c31\u53d1\u751f\u4e86\u5f52\u7ea6\u9519\u8bef\u3002\u9ed8\u8ba4\u60c5\u51b5\u4e0b\uff0cBison\u91c7\u7528LALR(1)\u7b97\u6cd5\u6765\u5206\u6790\u8bed\u6cd5\uff0c\u5373\u81ea\u5de6\u5411\u53f3\u5411\u524d\u67e5\u770b\u4e00\u4e2a\u8bb0\u53f7\u3002\u56e0\u6b64\uff0c\u4e0d\u80fd\u5904\u7406\u9700\u8981\u5411\u524d\u67e5\u770b\u591a\u4e2a\u8bb0\u53f7\u624d\u80fd\u786e\u5b9a\u5339\u914d\u89c4\u5219\u7684\u8bed\u6cd5\u3002 <pre><code>phrase: cart_animal AND CART\n      | work_animal AND PLOW\ncart_animal: HORSE | GOAT\nwork_animal: HORSE | OX\n</code></pre> \u4f8b\u5982\uff0c\u4e0a\u9762\u7684\u8bed\u6cd5\u867d\u7136\u6ca1\u6709\u6b67\u4e49\uff0c\u4f46\u662f\u5bf9\u4e8e<code>HORSE AND CART</code>\u8f93\u5165\uff0c\u5728\u770b\u5230<code>CART</code>\u4e4b\u524d\u65e0\u6cd5\u786e\u5b9a<code>HORSE</code>\u662f\u4e00\u4e2a<code>cart_animal</code>\u8fd8\u662f\u4e00\u4e2a<code>work_animal</code>\uff0c\u4ece\u800c\u53d1\u751f\u8bed\u6cd5\u9519\u8bef\u3002\u4f46\u662f\uff0c\u5982\u679c\u5c06\u4e0a\u8ff0\u8bed\u6cd5\u4fee\u6539\u5982\u4e0b\uff0c\u5c31\u4e0d\u4f1a\u51fa\u73b0\u5f52\u7ea6\u9519\u8bef\uff1a <pre><code>phrase: cart_animal CART\n      | work_animal PLOW\ncart_animal: HORSE | GOAT\nwork_animal: HORSE | OX\n</code></pre></p>"},{"location":"topics/flex_bison/#flex_1","title":"Flex\u4f8b\u5b50","text":"<p>\u4f8b\u5b50\"flex_c_wc\"\u5229\u7528Flex\u5b9e\u73b0\u4e86\u4e00\u4e2aC\u4ee3\u7801\u5206\u6790\u5668\uff0c\u53ef\u4ee5\u7edf\u8ba1\u67d0\u6bb5C\u4ee3\u7801\u7684\u4ee3\u7801\u884c\u6570\u3001\u6ce8\u91ca\u884c\u6570\u3001<code>if</code>\u8bed\u53e5\u6570\u7b49\u3002</p>"},{"location":"topics/flex_bison/#_2","title":"\u8bcd\u6cd5\u89c4\u5219","text":"<p>c_wc.lex<pre><code>%{\n#include \"lexer.h\"\n#define YY_DECL int c_wc_lex(Lexer *lex)   // flex C API is wrapped Lexer class\n%}\n\n%option noyywrap\n%option nounput\n\nLineCommentStart     \\/\\/\nBlockCommentStart    \\/\\*\nBlockCommentEnd      \\*\\/\nIf                   if\nLoop                 for|while\nNewLine              \\n\nBlank                [ \\t]\n\n%x LINE_CMT\n%x BLOCK_CMT\n\n%%\n\n&lt;INITIAL&gt;{LineCommentStart}            { BEGIN LINE_CMT; }\n&lt;INITIAL&gt;{BlockCommentStart}           { BEGIN BLOCK_CMT; }\n\n&lt;INITIAL&gt;{If}                          { lex-&gt;upIfNum(); }\n&lt;INITIAL&gt;{Loop}                        { lex-&gt;upLoopNum(); }\n\n&lt;INITIAL&gt;^{NewLine}                    |\n&lt;INITIAL&gt;^{Blank}*{NewLine}            { lex-&gt;upEmptyLineNum(); }\n&lt;INITIAL&gt;{NewLine}                     { lex-&gt;upCodeLineNum(); }\n\n&lt;LINE_CMT&gt;{NewLine}                    { lex-&gt;upCommentLineNum(); BEGIN INITIAL; }\n\n&lt;BLOCK_CMT&gt;{BlockCommentEnd}{NewLine}? { lex-&gt;upCommentLineNum(); BEGIN INITIAL; }\n&lt;BLOCK_CMT&gt;{NewLine}                   { lex-&gt;upCommentLineNum(); }\n\n&lt;INITIAL,LINE_CMT,BLOCK_CMT&gt;.          ; // any character (byte) except newline\n\n%%\n</code></pre> \u4e0a\u9762\u7684\u4ee3\u7801\u662f\u4f8b\u5b50\u4e2d\u7684\u8bcd\u6cd5\u89c4\u5219(c_wc.lex)\uff0c\u7531<code>%%</code>\u7b26\u53f7\u5206\u6210\u4e09\u4e2a\u90e8\u5206\uff1a</p> <ul> <li>\u5b9a\u4e49\u90e8\u5206<ul> <li><code>%{</code>\u548c<code>%}</code>\u7684\u5185\u5bb9\u4f1a\u88ab\u62f7\u8d1d\u5230<code>yylex</code>\u4e4b\u524d\uff0c\u7528\u4e8e\u5305\u542b\u76f8\u5173\u5934\u6587\u4ef6\u548c\u58f0\u660e\u76f8\u5173\u53d8\u91cf<ul> <li>\u4f8b\u5b50\u4e2d\uff0c\u5229\u7528<code>YY_DECL</code>\u5b8f\u4fee\u7ed9<code>yylex</code>\u51fd\u6570\u6dfb\u52a0\u4e86<code>Lexer</code>\u7c7b\u6307\u9488\u53c2\u6570\u3002\u56e0\u6b64\uff0c\u6211\u4eec\u53ef\u4ee5\u5c06\u6240\u6709\u8bcd\u6cd5\u64cd\u4f5c\u90fd\u5c01\u88c5\u5728<code>Lexer</code>\u7c7b\u4e2d\uff0c\u4ee5\u7b80\u5316\u7528\u6237\u63a5\u53e3</li> </ul> </li> <li><code>%option</code>\u63d0\u4f9b\u4e86\u4e0d\u540c\u7684\u914d\u7f6e\u9009\u9879<ul> <li><code>%option noyywrap</code>\u8868\u793a\u4e0d\u9700\u8981\u81ea\u5b9a\u4e49\u7684<code>yywarp</code>\u51fd\u6570\uff0c\u8fdb\u884c\u4f9d\u6b21\u6587\u4ef6\u626b\u63cf</li> <li><code>%option noinput</code>\u8868\u793a\u4e0d\u6dfb\u52a0<code>input</code>\u51fd\u6570\uff0c\u4ee5\u6d88\u9664\u7f16\u8bd1\u8b66\u544a<code>warning: \u2018input\u2019 defined but not used</code></li> <li><code>%option nounput</code>\u8868\u793a\u4e0d\u6dfb\u52a0<code>yyunput</code>\u51fd\u6570\uff0c\u4ee5\u6d88\u9664\u7f16\u8bd1\u8b66\u544a<code>warning: \u2018yyunput\u2019 defined but not used</code></li> </ul> </li> <li><code>&lt;NAME&gt; &lt;expression&gt;</code>\u53ef\u4ee5\u5bf9\u6b63\u5219\u8868\u8fbe\u5f0f\u8fdb\u884c\u547d\u540d</li> <li>\u5b9a\u4e49\u72b6\u6001\uff0c\u5bf9\u89c4\u5219\u8fdb\u884c\u72b6\u6001\u5206\u7c7b\uff0c\u53ea\u5339\u914d\u5f53\u524d\u72b6\u6001\u7684\u89c4\u5219<ul> <li>\u8bcd\u6cd5\u5206\u6790\u5668\u4ece\u72b6\u60010\u5f00\u59cb\uff0c\u4e5f\u79f0\u4e3a<code>INITIAL</code>\u72b6\u6001</li> <li>\u5176\u4ed6\u72b6\u6001\u901a\u8fc7<code>%x</code>\u6216\u8005<code>%s</code>\u6765\u547d\u540d\uff0c\u4e24\u8005\u7684\u533a\u522b\u53c2\u8003\u6587\u6863</li> <li>\u901a\u8fc7<code>BEGIN &lt;statename&gt;</code>\u53ef\u5207\u6362\u72b6\u6001</li> </ul> </li> </ul> </li> <li>\u89c4\u5219\u90e8\u5206<ul> <li>\u6bcf\u6761\u89c4\u5219\u90fd\u6709\u81ea\u5df1\u5bf9\u4e8e\u7684\u72b6\u6001\uff0c\u9ed8\u8ba4\u72b6\u6001\u4e3a<code>INITIAL</code>\u72b6\u6001<ul> <li>\u4f8b\u5b50\u4e2d\u5927\u90e8\u5206\u89c4\u5219\u90fd\u662f\u4e92\u65a5\u7684\uff0c\u53ea\u6709\u6700\u540e\u4e00\u6761\u89c4\u5219\u88ab\u4e09\u4e2a\u72b6\u6001\u5171\u4eab</li> </ul> </li> <li>\u5f53\u89c4\u5219\u6ee1\u8db3\u65f6\uff0c\u5bf9\u5e94\u7684\u52a8\u4f5c\u88ab\u89e6\u53d1<ul> <li>\u4f8b\u5b50\u4e2d\u5c06\u5bf9\u5e94\u52a8\u4f5c\u90fd\u5c01\u88c5\u5728\u4e86<code>LEXER</code>\u7c7b\u7684\u6210\u5458\u51fd\u6570\u4e2d\u4e86</li> </ul> </li> </ul> </li> <li>\u7528\u6237\u4f8b\u7a0b<ul> <li>\u6b64\u90e8\u5206\u7684\u5185\u5bb9\u4f1a\u88ab\u539f\u6837\u62f7\u8d1d\u5230C\u6587\u4ef6\u4e2d<ul> <li>\u4f8b\u5b50\u4e2d\u5c06\u4ee3\u7801\u5355\u72ec\u653e\u5230\u4e86\u5176\u4ed6\u6587\u4ef6\u4e2d\uff0c\u6240\u4ee5\u6b64\u90e8\u5206\u4e3a\u7a7a</li> </ul> </li> </ul> </li> </ul>"},{"location":"topics/flex_bison/#_3","title":"\u7528\u6237\u4ee3\u7801","text":"lexer.cpp/h<pre><code>// c_wc_in\u662fyyin\u7684\u522b\u540d\uff0c\u7531Flex\u5de5\u5177\u81ea\u52a8\u751f\u6210\nextern FILE *c_wc_in;\n// c_wc_lex\u662fyylex\u7684\u522b\u540d\uff0c\u7531Flex\u5de5\u5177\u81ea\u52a8\u751f\u6210\nextern int c_wc_lex(Lexer *lex);\n\nLexer::Lexer(const char *fname)\n{\n    // \u6307\u5b9a\u8f93\u5165\u6765\u81ea\u6587\u4ef6`fname`\n    c_wc_in = fopen(fname, \"r\");\n}\n\nvoid Lexer::count()\n{\n    // \u542f\u52a8\u8bcd\u6cd5\u5206\u6790\n    c_wc_lex(this);\n}\n\n// \u4e0b\u9762\u7684\u51fd\u6570\u4f1a\u5728\u5bf9\u5e94\u89c4\u5219(\u67e5\u770b\u8bcd\u6cd5\u89c4\u5219\u6587\u4ef6)\u5339\u914d\u65f6\u88ab\u8c03\u7528\nvoid Lexer::upCodeLineNum() { m_codeLineNum++; };\nvoid Lexer::upCommentLineNum() { m_commentLineNum++; };\nvoid Lexer::upEmptyLineNum() { m_emptyLineNum++; };\nvoid Lexer::upIfNum() { m_ifNum++; }\nvoid Lexer::upLoopNum() { m_loopNum++; }\n</code></pre> <p>\u4e0a\u9762\u662f\u4f8b\u5b50\u4e2d\u7684\u7528\u6237\u4ee3\u7801\"lexer.cpp\"\uff0c\u901a\u8fc7<code>Lexer</code>\u7c7b\uff0c\u5c01\u88c5\u4e86\u6240\u6709\u7684\u8bcd\u6cd5\u5206\u6790\u64cd\u4f5c\u3002\u4ece\u800c\uff0c\u5728\u4f7f\u7528\u8bcd\u6cd5\u5206\u6790\u5668\u65f6\uff0c\u53ea\u9700\u8981\u5982\u4e0b\u64cd\u4f5c\u5373\u53ef\uff1a main.cpp<pre><code>int main(int argc, char *argv[])\n{\n    ...\n    Lexer lex(filename);\n    lex.count();\n    return 0;\n}\n</code></pre> <pre><code>&gt; ./main test.c \nThe statistics of the source code:\n        Code line number: 10, comment line number: 5, empty line number: 5\n        If number: 2, loop number: 1\n</code></pre></p>"},{"location":"topics/flex_bison/#bison_1","title":"Bison\u4f8b\u5b50","text":"<p>\u4f8b\u5b50\"bison_calc\"\u5229\u7528Bison\u548cFlex\u5b9e\u73b0\u4e86\u4e00\u4e2a\u8ba1\u7b97\u5668\uff0c\u652f\u6301\u52a0\u3001\u51cf\u3001\u4e58\u3001\u9664\u3001\u62ec\u53f7\u7b49\u7b26\u53f7\u7684\u7b97\u672f\u8fd0\u7b97\u3002</p>"},{"location":"topics/flex_bison/#_4","title":"\u8bed\u6cd5\u89c4\u5219","text":"calc.y<pre><code>%{\n#include &lt;stdio.h&gt;\n#include &lt;stdlib.h&gt;\n#include &lt;string.h&gt;\n\n#include \"calc.h\"\n\n// \u5b9a\u4e49token\u7684\u7c7b\u578b\u4e3aNodePtr\uff0c\u5373yylval\u7684\u7c7b\u578b\n#define YYSTYPE NodePtr\n// \u58f0\u660e\u8bcd\u6cd5\u5206\u6790\u51fd\u6570\uff0ccalc_lex\u662fyylex\u7684\u522b\u540d\nextern int calc_lex(Calc*);\n// calc_lineno\u662fyylineno\u7684\u522b\u540d\uff0c\u8868\u793a\u884c\u53f7\n// \u901a\u8fc7`%option yylineno`\u4f7f\u80fd\u540e\uff0c\u7531\u8bcd\u6cd5\u5206\u6790\u5668\u81ea\u52a8\u751f\u6210\nextern int calc_lineno;\n// calc_error\u662fyyerror\u7684\u522b\u540d\uff0c\u8bed\u6cd5\u5206\u6790\u5668\u5728\u9047\u5230\u9519\u8bef\u65f6\u88ab\u8c03\u7528\uff0c\u9700\u8981\u7528\u6237\u81ea\u5b9a\u4e49\nvoid calc_error(Calc *calc, const char *str)\n{\n   fprintf(stderr, \"Error at line %d: %s\\n\", calc_lineno, str);\n}\n\n%}\n\n%lex-param { Calc *calc }\n%parse-param { Calc *calc }\n\n%token ADD SUB MUL DIV LBRACE RBRACE NUM EOL\n\n/* All operators are left associative. Listed from lowest to highest */\n%left ADD SUB\n%left MUL DIV\n\n%%\n\ncalclist: /* empty */\n   | calclist exp EOL   { calc-&gt;evalExpr($2); }\n   | calclist EOL       ;\n   ;\n\nexp: factor\n   | exp ADD factor { $$ = calc-&gt;createNode(t_ADD, $1, $3); }\n   | exp SUB factor { $$ = calc-&gt;createNode(t_SUB, $1, $3); }\n   ;\n\nfactor: term\n   | factor MUL term { $$ = calc-&gt;createNode(t_MUL, $1, $3); }\n   | factor DIV term { $$ = calc-&gt;createNode(t_DIV, $1, $3); }\n   ;\n\nterm: NUM { $$ = $1; }\n   | LBRACE exp RBRACE { $$ = $2; }\n   | SUB term { $$ = calc-&gt;createNode(t_MINUS, $2, nullptr); }\n   ;\n\n%%\n</code></pre> <p>\u4e0a\u9762\u7684\u4ee3\u7801\u662f\u4f8b\u5b50\u4e2d\u7684\u8bed\u6cd5\u89c4\u5219(calc.y)\uff0c\u7531<code>%%</code>\u7b26\u53f7\u5206\u6210\u4e09\u4e2a\u90e8\u5206\uff1a</p> <ul> <li>\u5b9a\u4e49\u90e8\u5206<ul> <li><code>%{</code>\u548c<code>%}</code>\u5185\u5b9a\u4e49C\u4ee3\u7801</li> <li><code>%lex-param</code>\u4e3a<code>yylex</code>\u51fd\u6570\u6dfb\u52a0\u53c2\u6570</li> <li><code>%parse-param</code>\u4e3a<code>yyparse</code>\u51fd\u6570\u6dfb\u52a0\u53c2\u6570</li> <li><code>%token</code>\u5b9a\u4e49\u8bb0\u53f7<ul> <li>\u5728\u8bed\u6cd5\u5206\u6790\u5668\u7684\u89c4\u5219\u90e8\u5206\uff0c\u53ef\u5f15\u7528\u6b64\u8bb0\u53f7</li> <li>\u8bcd\u6cd5\u5206\u6790\u5668\u5339\u914d\u5230\u6b64\u8bcd\u5757\u65f6\uff0c\u8fd4\u56de\u6b64\u8bb0\u53f7</li> </ul> </li> <li><code>%left</code>\u8868\u793a\u5de6\u7ed3\u5408\uff0c\u8be6\u60c5\u53c2\u89c1\"\u4f18\u5148\u7ea7\u548c\u7ed3\u5408\u6027\"\u7ae0\u8282</li> </ul> </li> <li>\u89c4\u5219\u90e8\u5206<ul> <li>\u8bed\u4e49\u52a8\u4f5c\u53ef\u4ee5\u901a\u8fc7\u4e00\u4e2a\u7f8e\u5143\u7b26\u53f7\u52a0\u4e0a\u4e00\u4e2a\u6570\u5b57\u6765\u4f7f\u7528\u89c4\u5219\u4e2d\u8bed\u6cd5\u7b26\u53f7\u6240\u5173\u8054\u7684\u503c</li> <li><code>$$</code>\u6307\u5411\u5de6\u90e8\u7b26\u53f7\uff0c\u4e5f\u5c31\u662f\u89c4\u5219\u4e2d\u5192\u53f7\u5de6\u8fb9\u7684\u7b26\u53f7\u7684\u503c</li> <li>\u6ca1\u6709\u8bed\u4e49\u52a8\u4f5c\u7684\u89c4\u5219\uff0c\u4f7f\u7528\u9ed8\u8ba4\u52a8\u4f5c\uff1a<code>{ $$ = $1;}</code></li> </ul> </li> <li>\u7528\u6237\u4f8b\u7a0b<ul> <li>\u4f8b\u5b50\u4e2d\u5c06\u4ee3\u7801\u5355\u72ec\u653e\u5230\u4e86\u5176\u4ed6\u6587\u4ef6\u4e2d\uff0c\u6240\u4ee5\u6b64\u90e8\u5206\u4e3a\u7a7a</li> </ul> </li> </ul>"},{"location":"topics/flex_bison/#_5","title":"\u4f18\u5148\u7ea7\u548c\u7ed3\u5408\u6027","text":"<p><code>%left</code>\u3001<code>%right</code>\u548c<code>%nonassoc</code>\u5206\u522b\u4f7f\u5f97\u4e00\u4e2a\u64cd\u4f5c\u7b26\u9075\u5faa\u5de6\u7ed3\u5408\u3001\u53f3\u7ed3\u5408\u6216\u8005\u6ca1\u6709\u7ed3\u5408\u6027\u7684\u64cd\u4f5c\u3002\u5728\u540c\u4e00\u884c\u7684\u6240\u6709\u64cd\u4f5c\u7b26\u5177\u6709\u76f8\u540c\u7684\u4f18\u5148\u7ea7\u3002\u4f8b\u5982\uff0c <pre><code>%left '+' '-'\n%left '*' '/'\n%right POW\n</code></pre> \u4f18\u5148\u7ea7\u6700\u4f4e\u7684\u64cd\u4f5c\u7b26\u662f+\u548c-\uff0c\u5176\u6b21\u662f*\u548c/\uff0cPOW\u4f18\u5148\u7ea7\u6700\u9ad8\u3002</p> <p>\u6bcf\u6761\u89c4\u5219\u4e5f\u6709\u5404\u81ea\u7684\u4f18\u5148\u7ea7\u548c\u7ed3\u5408\u6027\uff0c\u901a\u8fc7<code>%prec</code>\u6765\u58f0\u660e\uff0c\u5982\u679c\u6ca1\u6709<code>%prec</code>\u5b50\u53e5\u7684\u8bdd\uff0c\u7531\u6700\u53f3\u8fb9\u7684\u8bb0\u53f7\u7684\u4f18\u5148\u7ea7\u51b3\u5b9a\u3002\u4f8b\u5982\uff0c <pre><code>exp: ...\n    | exp '-' exp\n    ...\n    | '-' exp %prec UMINUS\n</code></pre> <code>'-' exp</code>\u89c4\u5219\u7684\u4f18\u5148\u7ea7\u7531<code>UMINUS</code>\u7684\u4f18\u5148\u7ea7\u51b3\u5b9a\uff0c\u4ece\u800c\u548c<code>exp '-' exp</code>\u89c4\u5219\u7684\u4f18\u5148\u7ea7\u533a\u5206\u5f00\u6765\u3002</p> <p>\u5f53\u5728\u5b58\u5728\u79fb\u8fdb/\u5f52\u7ea6\u51b2\u7a81\u65f6\uff0c</p> <ul> <li>\u5982\u679c\u8bb0\u53f7\u7684\u4f18\u5148\u7ea7\u66f4\u9ad8\uff0c\u90a3\u4e48\u5c31\u79fb\u8fdb</li> <li>\u5982\u679c\u89c4\u5219\u7684\u4f18\u5148\u7ea7\u66f4\u9ad8\uff0c\u90a3\u4e48\u5c31\u5f52\u7ea6</li> <li>\u5982\u679c\u4e24\u8005\u5177\u6709\u76f8\u540c\u7684\u4f18\u5148\u7ea7\uff0c\u5c06\u68c0\u67e5\u7ed3\u5408\u6027<ul> <li>\u5de6\u7ed3\u5408\uff0c\u5c31\u5f52\u7ea6</li> <li>\u53f3\u7ed3\u5408\uff0c\u5c31\u79fb\u8fdb</li> </ul> </li> </ul> <p>\u4f8b\u5982\uff0c <pre><code>e: 'X'\n   | e '+' e\n   ;\n</code></pre> \u5bf9\u4e8e<code>X+X+X</code>\u8f93\u5165\uff0c\u6709\u4e24\u79cd\u53ef\u80fd\u7684\u8bed\u6cd5\u5206\u6790\uff1a</p> <ul> <li>\u5148\u9009\u62e9\u5f52\u7ea6 - <code>(X+X)+X</code><ul> <li><code>+</code>\u4f18\u5148\u7ea7\u9ad8\u4e8e<code>X</code>\u4f18\u5148\u7ea7</li> <li>\u6216\u8005\uff0c\u4f18\u5148\u7ea7\u76f8\u540c\uff0c\u5de6\u7ed3\u5408</li> </ul> </li> <li>\u5148\u9009\u62e9\u79fb\u8fdb\u64cd\u4f5c - <code>X+(X+X)</code><ul> <li><code>X</code>\u4f18\u5148\u7ea7\u9ad8\u4e8e<code>+</code>\u4f18\u5148\u7ea7</li> <li>\u6216\u8005\uff0c\u4f18\u5148\u7ea7\u76f8\u540c\uff0c\u53f3\u7ed3\u5408</li> </ul> </li> </ul>"},{"location":"topics/flex_bison/#_6","title":"\u8bcd\u6cd5\u89c4\u5219","text":"calc.lex<pre><code>%{\n#include \"calc.h\"\n#include \"stdlib.h\"\n\n// Has to define YYSTYPE before \"hcl_yacc_gen.hpp\"\n#define YYSTYPE NodePtr\n#include \"calc_yacc_gen.hpp\"\n\nextern YYSTYPE calc_lval;\n#define YY_DECL int calc_lex(Calc *calc)\n%}\n\n%option noinput\n%option nounput\n%option noyywrap\n%option yylineno\n\nEXP ([Ee][-+]?[0-9]+)\n\n%%\n\n[ \\r\\t\\f]               ;\n\"+\"                     { return ADD; }\n\"-\"                     { return SUB; }\n\"*\"                     { return MUL; }\n\"/\"                     { return DIV; }\n\"(\"                     { return LBRACE; }\n\")\"                     { return RBRACE; }\n[0-9]+\".\"[0-9]*{EXP}?   |\n\".\"?[0-9]+{EXP}?        { calc_lval = calc-&gt;createNode(t_NUM, nullptr, nullptr, atof(calc_text)); return NUM; }\n\\n                      { return EOL; }\n.                       { calc-&gt;fail(\"Bad input character '%s'\", calc_text); }\n</code></pre> <p>\u4e0a\u9762\u7684\u4ee3\u7801\u662f\u4f8b\u5b50\u4e2d\u7684\u8bcd\u6cd5\u89c4\u5219(calc.lex)\uff0c\u7ec4\u6210\u90e8\u5206\u548cFlex\u4f8b\u5b50\u4e2d\u7684\u8bcd\u6cd5\u89c4\u5219\u76f8\u540c\u3002\u4e24\u8005\u7684\u4e0d\u540c\u70b9\u5728\u4e8e\uff0c\u6b64\u5904\u6bcf\u4e2a\u89c4\u5219\u7684\u52a8\u4f5c\u90fd\u4f1a\u901a\u8fc7<code>return</code>\u8fd4\u56de\u4e00\u4e2a\u8bb0\u53f7\u7ed9\u8bed\u6cd5\u5206\u6790\u5668\uff0c\u4ece\u800c\u89e6\u53d1\u8bed\u6cd5\u5206\u6790\u5668\u8fdb\u884c\u8bed\u6cd5\u5206\u6790\u3002</p> <p>\u5bf9\u4e8e\u4e0b\u9762\u8fd9\u4e2a\u52a8\u4f5c\uff0c\u8bcd\u6cd5\u5206\u6790\u5668\u4e0d\u4ec5\u8981\u4f20\u9012<code>NUM</code>\u7c7b\u578b\u7ed9\u8bed\u6cd5\u5206\u6790\u5668\uff0c\u8fd8\u9700\u8981\u901a\u8fc7<code>calc_lval</code>\uff08<code>yylval</code>\u7684\u522b\u540d\uff09\u5c06\u5177\u4f53\u7684\u6570\u503c\u5185\u5bb9\u4f20\u9012\u8bed\u6cd5\u5206\u6790\u5668\u3002\u9ed8\u8ba4\u60c5\u51b5\u4e0b\uff0c<code>yylval</code>\u662f<code>int</code>\u7c7b\u578b\u3002\u4f8b\u5b50\u4e2d\u901a\u8fc7<code>extern YYSTYPE calc_lval</code>\uff0c\u5c06<code>yylval</code>\u5b9a\u4e49\u6210\u4e86\u81ea\u5b9a\u4e49\u6307\u9488\u7c7b\u578b<code>NodePtr</code>\uff0c\u4ee5\u4f20\u9012\u66f4\u591a\u7684\u4fe1\u606f\uff1a</p> <ul> <li><code>calc_lval = calc-&gt;createNode(t_NUM, nullptr, nullptr, atof(calc_text)); return NUM;</code></li> </ul>"},{"location":"topics/flex_bison/#_7","title":"\u7528\u6237\u4ee3\u7801","text":"<p>\u5b9a\u4e49\u597d\u4e86\u8bed\u6cd5/\u8bcd\u6cd5\u89c4\u5219\u540e\uff0c\u8fd8\u9700\u8981\u5bf9\u5e94\u7684\u89c4\u5219\u52a8\u4f5c\uff0c\u5373\u5f53\u8bed\u6cd5/\u8bcd\u6cd5\u89c4\u5219\u5339\u914d\u65f6\uff0c\u9700\u8981\u89e6\u53d1\u7684\u51fd\u6570\u3002\u4e3a\u4e86\u65b9\u4fbf\u4f7f\u7528\uff0c\u4f8b\u5b50\u4e2d\u5c06\u6240\u6709\u7684\u52a8\u4f5c\u90fd\u5c01\u88c5\u5728\u4e86<code>Calc</code>\u7c7b\u4e2d\u3002\u540c\u65f6\uff0c\u6bcf\u4e2a\u8bb0\u53f7\u7684\u5185\u5bb9\u7edf\u4e00\u7531<code>NodePtr</code>\u6307\u9488\u8bb0\u5f55\u3002</p> calc.h<pre><code>// \u516d\u79cd\u9700\u8981\u8bb0\u5f55\u5185\u5bb9\u7684\u8bb0\u53f7\nenum NodeType : int\n{\n    t_ADD,\n    t_SUB,\n    t_MUL,\n    t_DIV,\n    t_NUM,\n    t_MINUS\n};\n\ntypedef struct Node\n{\npublic:\n   Node(NodeType t, Node *l, Node *r, double n) : type(t), left(l), right(r), num(n) {}\n   NodeType type;\n   Node *left;\n   Node *right;\n   double num;\n} *NodePtr;\n\nclass Calc\n{\npublic:\n    // \u8c03\u7528yyparse\u5f00\u542f\u8bed\u6cd5\u5206\u6790\n    void compute();\n    // \u5728\u8bed\u6cd5/\u8bcd\u6cd5\u89c4\u5219\u5339\u914d\u65f6\u88ab\u8c03\u7528\uff0c\u7528\u4e8e\u521b\u5efa\u65b0\u7684\u8bb0\u53f7\n    NodePtr createNode(NodeType type, NodePtr left, NodePtr right, double num = 0);\n    // \u5728\u8bed\u6cd5\u5206\u6790\u7684\u6700\u540e\u9636\u6bb5\u88ab\u8c03\u7528\uff0c\u53c2\u89c1\u8bed\u6cd5\u89c4\u5219\n    void evalExpr(NodePtr expr);\n    ...\n};\n</code></pre> <p>\u4e00\u5207\u51c6\u5907\u5c31\u7eea\u540e\uff0c\u7528\u6237\u5229\u7528<code>Calc</code>\u8fd9\u4e2a\u7c7b\uff0c\u5c31\u53ef\u4ee5\u5b8c\u6210\u76f8\u5e94\u7684\u7b97\u672f\u8fd0\u7b97\uff1a</p> <p>main.cpp<pre><code>int main(int argc, char *argv[])\n{\n    ...\n    const char *filename = (argc == 1) ? nullptr : argv[1];\n    Calc calc(filename);\n    calc.compute();\n    return 0;\n}\n</code></pre> <pre><code>&gt; ./main test.txt \n(2.01+(1.01*0.1)) = 2.111\n((1+2)*3) = 9\n</code></pre></p>"},{"location":"topics/flex_bison/#_8","title":"\u53c2\u8003","text":"<ul> <li>\u300aflex\u4e0ebison\u300b</li> <li>Flex Manual</li> <li>Bison Manual</li> </ul>"},{"location":"topics/tcl_tk_in_c/","title":"Tcl/Tk in C","text":"<p>\u672c\u6587\u5305\u542b\u5c06<code>tcl/tk</code>\u96c6\u6210\u8fdbC\u4ee3\u7801\u7684\u7b80\u5355\u6837\u4f8b\u3002\u6837\u4f8b\u4f9d\u8d56<code>tcl/tk8.6</code>\u5f00\u53d1\u5e93\uff0c\u5982\u53d1\u73b0\u7f16\u8bd1\u9519\u8bef\uff0c\u9700\u8981\u5b89\u88c5<code>tcl-dev</code>\u548c<code>tk-dev</code>\uff0c\u5e76\u5728<code>Makefile</code>\u4e2d\u4fee\u6539\u5bf9\u5e94\u7684\u5934\u6587\u4ef6\u548c\u5e93\u6587\u4ef6\u8def\u5f84\u3002\u4f8b\u5982\uff0c\u5728<code>ubuntu20</code>\u4e0b\u901a\u8fc7<code>sudo apt install tcl tk tcl-dev tk-dev</code>\u5373\u53ef\u5b8c\u6210\u5b89\u88c5\u3002\u6240\u6709\u6837\u4f8b\u53ef\u5728GitHub\u4ed3\u5e93\u4e2d\u627e\u5230\uff0c\u5927\u90e8\u5206\u4ee3\u7801\u90fd\u53c2\u8003\u4e86\u300aPractical Programming in Tcl and Tk\u300b\u4e2d\u7684\u4f8b\u5b50</p>"},{"location":"topics/tcl_tk_in_c/#c","title":"C\u63a5\u53e3","text":""},{"location":"topics/tcl_tk_in_c/#tcl_main","title":"Tcl_Main","text":"<p>\u4f8b\u5b50\"Tcl_Main\"\u5728<code>main</code>\u51fd\u6570\u4e2d\u8c03\u7528\u4e86<code>Tcl_Main</code>\u542f\u52a8\u4e86\u4e00\u4e2aTCL\u89e3\u91ca\u5668\uff0c\u4f1a\u89e3\u6790\u5e76\u8fd0\u884c<code>argv</code>\u4e2d\u4f20\u5165\u7684TCL\u6587\u4ef6\"hello.tcl\"\uff0c\u5728\u7ec8\u7aef\u6253\u5370\u201chello\u201d\u5b57\u6837\uff1a</p> <p>main.c<pre><code>int Tcl_AppInit(Tcl_Interp *interp)\n{\n    if (Tcl_Init(interp) == TCL_ERROR)\n        return TCL_ERROR;\n\n    return TCL_OK;\n}\n\nint main(int argc, char *argv[])\n{\n    Tcl_Main(argc, argv, Tcl_AppInit);\n    return 0;\n}\n</code></pre> <pre><code># hello.tcl:\n#   puts \"hello\"\n&gt; ./main hello.tcl\nhello\n</code></pre></p>"},{"location":"topics/tcl_tk_in_c/#tk_main","title":"Tk_Main","text":"<p>\u4f8b\u5b50\"Tk_Main\"\u5728<code>main</code>\u51fd\u6570\u4e2d\u8c03\u7528\u4e86<code>Tk_Main</code>\u542f\u52a8\u4e86\u4e00\u4e2aTCL/TK\u89e3\u91ca\u5668\uff0c\u4f1a\u89e3\u6790\u5e76\u8fd0\u884c<code>argv</code>\u4e2d\u4f20\u5165\u7684TCL/TK\u6587\u4ef6\"hello.tcl\"\uff0c\u6253\u5f00\u4e00\u4e2a\u5e26\u201cHello, world!\u201d\u5b57\u6837\u7684\u6309\u94ae\uff1a main.c<pre><code>int AppInit(Tcl_Interp *interp)\n{\n    if (Tcl_Init(interp) == TCL_ERROR)\n        return TCL_ERROR;\n    if (Tk_Init(interp) == TCL_ERROR)\n        return TCL_ERROR;\n\n    return TCL_OK;\n}\n\nint main(int argc, char *argv[])\n{\n    Tk_Main(argc, argv, AppInit);\n    return 0;\n}\n</code></pre> <pre><code># hello.tcl:\n#   button .b -text \"Hello, world!\" -command exit\n#   pack .b\n&gt; ./main hello.tcl\n</code></pre> </p>"},{"location":"topics/tcl_tk_in_c/#tcl_evalfile","title":"Tcl_EvalFile","text":"<p>\u4f8b\u5b50\"Tcl_EvalFile\"\u548c\u4f8b\u5b50\"Tcl_Main\"\u529f\u80fd\u76f8\u540c\uff0c\u90fd\u4f1a\u4ea7\u751f\u4e00\u4e2a\u53ef\u6267\u884cTCL\u547d\u4ee4\u7684C\u7a0b\u5e8f\u3002\u4e0d\u540c\u7684\u662f\uff0c\u4f8b\u5b50\"Tcl_EvalFile\"\u4e0d\u662f\u5229\u7528<code>Tcl_Main</code>\u51fd\u6570\u5b9e\u73b0\u7684\uff0c\u800c\u662f\u5229\u7528\u4e86\u66f4\u5e95\u5c42\u7684<code>Tcl_CreateInterp</code>\u548c<code>Tcl_EvalFile</code>\u51fd\u6570\uff1a main.c<pre><code>int main(int argc, char *argv[])\n{\n   Tcl_Interp *interp = Tcl_CreateInterp();\n   int code = Tcl_EvalFile(interp, argv[1]);\n   const char *result = Tcl_GetStringResult(interp);\n   printf(\"Result was: %s\\n\", result);\n   Tcl_DeleteInterp(interp);\n   return 0;\n}\n</code></pre> <pre><code># hello.tcl\n#   proc helloWorld {} {\n#       puts \"Hello, World!\"\n#       return 1\n#   }\n#   helloWorld\n&gt; ./main hello.tcl\nHello, World!\nResult was: 1\n</code></pre></p>"},{"location":"topics/tcl_tk_in_c/#tcl_createcommand","title":"Tcl_CreateCommand","text":"<p>\u4f8b\u5b50\"Tcl_CreateCommand\"\u5229\u7528C\u5e93\u7684<code>random</code>\u51fd\u6570\uff0c\u521b\u5efa\u4e86\u4e00\u4e2aTCL\u547d\u4ee4<code>random</code>\uff0c\u53ef\u5728TCL\u6587\u4ef6\u4e2d\u4f7f\u7528\u6b64\u547d\u4ee4\uff0c\u5b8c\u6210\u4e86C\u4ee3\u7801\u548cTCL\u4ee3\u7801\u7684\u4ea4\u4e92\uff1a</p> <p>main.c<pre><code>// \u53c2\u8003:\u300aPractical Programming in Tcl and Tk\u300b\u7b2c47\u7ae0\u7684\"A C Command Procedure\"\nint RandomCmd(ClientData clientData, Tcl_Interp *interp, int argc, CONST char *argv[])\n{\n    int range = 0;\n    char buffer[20];\n    ...\n    printf(\"[  C] Process random()\\n\");\n    int rand = random();\n    if (range != 0)\n    {\n        rand = rand % range;\n    }\n    sprintf(buffer, \"%d\", rand);\n    // TCL_VOLATILE\u7528\u4e8e\u5c40\u90e8\u904d\u5386\u7684\u6790\u6784\uff0c\u5c06\u7ed3\u679c\u4ee5\u5b57\u7b26\u4e32\u7684\u5f62\u5f0f\u8fd4\u56de\n    Tcl_SetResult(interp, buffer, TCL_VOLATILE);\n    return TCL_OK;\n}\n\nint Random_Init(Tcl_Interp *interp)\n{\n    Tcl_CreateCommand(interp, \"random\", RandomCmd, (ClientData)NULL, (Tcl_CmdDeleteProc *)NULL);\n    return TCL_OK;\n}\n\nint main(int argc, char *argv[])\n{\n    Tcl_Main(argc, argv, Random_Init);\n    return 0;\n}\n</code></pre> <pre><code># cmd.tcl:\n#   set result [random 5]\n#   puts \"\\[TCL\\] random result: ${result}\"\n#   set result [random 100]\n#   puts \"\\[TCL\\] random result: ${result}\"\n&gt; ./main cmd.tcl\n[  C] Process random()\n[TCL] random result: 3\n[  C] Process random()\n[TCL] random result: 86\n</code></pre></p>"},{"location":"topics/tcl_tk_in_c/#tcl_createobjcommand","title":"Tcl_CreateObjCommand","text":"<p>\u4f8b\u5b50\"Tcl_CreateObjCommand\"\u548c\u4f8b\u5b50\"Tcl_CreateCommand\"\u529f\u80fd\u7c7b\u4f3c\uff0c\u4f46\u4f7f\u7528\u4e86\u53e6\u4e00\u79cd\u521b\u5efaTCL\u547d\u4ee4\u7684\u65b9\u5f0f<code>Tcl_CreateObjCommand</code>\uff1a main.c<pre><code>// \u53c2\u8003:\u300aPractical Programming in Tcl and Tk\u300b\u7b2c47\u7ae0\u7684\"A C Command Procedure\"\nint RandomObjCmd(ClientData clientData, Tcl_Interp *interp, int objc, Tcl_Obj *CONST objv[])\n{\n    Tcl_Obj *resultPtr;\n    int range = 0;\n    Tcl_GetIntFromObj(interp, objv[1], &amp;range);\n    int rand = random();\n    if (range != 0)\n    {\n        rand = rand % range;\n    }\n    resultPtr = Tcl_GetObjResult(interp);\n    Tcl_SetIntObj(resultPtr, rand);\n    return TCL_OK;\n}\n\nint Random_Init(Tcl_Interp *interp)\n{\n    Tcl_CreateObjCommand(interp, \"orandom\", RandomObjCmd, (ClientData)NULL, (Tcl_CmdDeleteProc *)NULL);\n    return TCL_OK;\n}\n</code></pre> <pre><code># cmd.tcl:\n#   set result [orandom 5]\n#   puts \"orandom result: ${result}\"\n#   set result [orandom 100]\n#   puts \"orandom result: ${result}\"\n&gt; ./main cmd.tcl\norandom result: 3\norandom result: 86\n</code></pre></p>"},{"location":"topics/tcl_tk_in_c/#tk","title":"Tk\u7ec4\u4ef6","text":""},{"location":"topics/tcl_tk_in_c/#_1","title":"\u5e03\u5c40","text":"<p>\u4f8b\u5b50\u201cpack\u201d\u5229\u7528<code>pack</code>\u547d\u4ee4\u5c06Tk\u7ec4\u4ef6\u663e\u793a\u5728\u5c4f\u5e55\u4e0a\uff0c\u662f\u6700\u5e38\u89c1\u7684\u5e03\u5c40\u65b9\u5f0f\uff1a main.tcl<pre><code># \u53c2\u8003:\u300aPractical Programming in Tcl and Tk\u300b\u7b2c23\u7ae0\"The Pack Geometry Manager\"\n# 1.\u666e\u901a\u5e03\u5c40\n. config -bg black\nframe .one -width 40 -height 40 -bg white\npack .one -side top\nlabelframe .split1 -labelanchor n -text split1 -width 200 -height 20 -bg grey50\npack .split1 -side top\n\n# 2.\u5b58\u5728\u5b50\u5e03\u5c40\nframe .three -bg white\nforeach b {alpha beta gamma} {\n   button .three.$b -text $b\n   pack .three.$b -side left\n}\npack .three -side top\nlabelframe .split2 -text split2 -width 100 -height 20 -bg grey50\npack .split2 -side top\n\n# 3.\u5b58\u5728\u4e09\u5c42\u5e03\u5c40\nframe .five -bg white\nforeach b {alpha beta} {\n   button .five.$b -text $b\n   pack .five.$b -side left\n}\nframe .five.right\nforeach b {delta epsilon} {\n   button .five.right.$b -text $b\n   pack .five.right.$b -side bottom\n}\npack .five.right -side right\npack .five -side top\nlabelframe .split3 -text split3 -width 200 -height 20 -bg grey50\npack .split3 -side top\n\n# 4. fill\u586b\u5145\nframe .menubar -bg white\nforeach b {alpha beta} {\n   button .menubar.$b -text $b\n}\npack .menubar.alpha -side left\npack .menubar.beta -side right\npack .menubar -side top -fill x\nlabelframe .split4 -text split4 -height 20 -bg grey50\npack .split4 -fill x\n</code></pre> </p> <p>\u9664\u4e86<code>pack</code>\u5e03\u5c40\u65b9\u5f0f\u5916\uff0c\u8fd8\u53ef\u4ee5\u7528<code>grid</code>\u8fdb\u884c\u5e03\u5c40\uff0c\u5982\u4f8b\u5b50\u201cgrid\u201d</p> main.tcl<pre><code># \u53c2\u8003:\u300aPractical Programming in Tcl and Tk\u300b\u7b2c26\u7ae0\"The Grid Geometry Manager\"\n\nforeach color {red orange yellow green blue purple} {\n   label .l1$color -text $color -bg white\n   frame .f1$color -background $color -width 100 -height 5\n   # \u653e\u7f6elabel\u548cframe\n   grid .l1$color .f1$color\n   # \u8c03\u6574\u5bf9\u9f50\u65b9\u5f0f\uff1awest\n   grid .l1$color -sticky w\n   # north south\n   grid .f1$color -sticky ns\n}\n\nlabel .lsplit -text --------\nframe .fsplit -width 100 -height 20\ngrid .lsplit .fsplit\n\nforeach color {red orange yellow green blue purple} {\n   label .l2$color -text $color -bg white\n   frame .f2$color -background $color -width 100 -height 5\n   grid .l2$color .f2$color\n   # \u5916\u90e8\u548c\u5185\u90e8\u8fb9\u6846\n   grid .l2$color -column 1 -sticky w -padx 10 -ipady 5\n   grid .f2$color -column 0 -sticky ns -pady 5\n}\n</code></pre> <p></p>"},{"location":"topics/tcl_tk_in_c/#button","title":"button","text":"<p>\u4f8b\u5b50\u201cbutton\u201d\u5b9e\u73b0\u4e86\u4e00\u4e2a\u7b80\u5355\u7684\u6309\u952e\u529f\u80fd\uff0c\u70b9\u51fb\u6309\u952e\u53ef\u5728\u7ec8\u7aef\u663e\u793a\u201cHello, World!\u201d\uff1a</p> main.tcl<pre><code># \u5c06\u6309\u94ae\u5b9e\u4f8b\u5b58\u4e8e\u201c$hello_button\u201d\uff0c\u540e\u9762\u5bf9\u6309\u94ae\u7684\u64cd\u4f5c\u90fd\u53ef\u4ee5\u901a\u8fc7\u201c$hello_button\u201d\u5b8c\u6210\nset hello_button [button .hello -text \"Hello, world!\" -command {puts stdout \"Hello, World!\"}]\n# \u914d\u7f6e\u6309\u94ae\u80cc\u666f\u8272\n$hello_button config -background green\n# \u5c06\u6309\u94ae\u5728\u5c4f\u5e55\u4e0a\u663e\u793a\npack $hello_button -padx 20 -pady 10\n# \u83b7\u53d6\u6309\u94ae\u7684\u5c5e\u6027\nset color [$hello_button cget -background]\nputs \"hello buttton background: $color\"\n</code></pre> <p></p>"},{"location":"topics/tcl_tk_in_c/#text","title":"text","text":"<p>\u4f8b\u5b50\u201ctext\"\u5229\u7528<code>text</code>Tk\u7ec4\u4ef6\uff0c\u5b9e\u73b0\u4e86\u4e00\u4e2a\u5e26\u6eda\u52a8\u6761\u7684\u6587\u672c\u6846\uff1a main.tcl<pre><code>proc Scrolled_Text { f args } {\n   frame $f\n   eval {text $f.text -wrap none \\\n      -xscrollcommand [list $f.xscroll set] \\\n      -yscrollcommand [list $f.yscroll set]} $args\n   scrollbar $f.xscroll -orient horizontal -command [list $f.text xview]\n   scrollbar $f.yscroll -orient vertical -command [list $f.text yview]\n   grid $f.text $f.yscroll -sticky news\n   grid $f.xscroll -sticky news\n   grid rowconfigure $f 0 -weight 1\n   grid columnconfigure $f 0 -weight 1\n   return $f.text\n}\n\nset log [Scrolled_Text .l -width 80 -height 10]\npack .l\n</code></pre> </p>"},{"location":"topics/tcl_tk_in_c/#_2","title":"\u81ea\u5b9a\u4e49\u547d\u4ee4\u5b9e\u4f8b","text":"<p>\u4f8b\u5b50\u201ccpp_cmd\"\u5728<code>C++</code>\u4e2d\u521b\u5efa\u4e86<code>blob</code>TCL\u547d\u4ee4\u4ee5\u53ca\u5176\u5b50\u547d\u4ee4\uff0c\u5b9e\u73b0\u4e86<code>C++</code>\u548c<code>TCL</code>\u7684\u4ea4\u4e92\u7f16\u7a0b\uff1a main.cpp<pre><code>// \u53c2\u8003:\u300aPractical Programming in Tcl and Tk\u300b\u7b2c47\u7ae0\u7684The blob Command Example\nint Blob_Init(Tcl_Interp *interp)\n{\n   if (Tcl_Init(interp) == TCL_ERROR)\n      return TCL_ERROR;\n\n   Blob *blobPtr = new Blob();\n   Tcl_CreateObjCommand(interp, \"blob\", BlobCmd, (ClientData)blobPtr, BlobCleanup);\n\n   return TCL_OK;\n}\n\nint BlobCmd(ClientData data, Tcl_Interp *interp, int objc, Tcl_Obj *CONST objv[])\n{\n   const char *subCmds[] = {\"add\", \"find\", \"remove\", nullptr};\n   enum BlobIx\n   {\n      AddIx,   // 4 args\n      FindIx,  // 3 args\n      RemoveIx // 3 args\n   };\n\n   ...\n   int index = 0;\n   Tcl_GetIndexFromObj(interp, objv[1], subCmds, \"option\", 0, &amp;index);\n   Blob *blobPtr = (Blob *)data;\n   switch (index)\n   {\n   case AddIx:\n   {\n      const char *name = Tcl_GetString(objv[2]);\n      int age = 0;\n      if (Tcl_GetIntFromObj(interp, objv[3], &amp;age) != TCL_OK)\n         return TCL_ERROR;\n      if (blobPtr-&gt;add(name, age))\n         return TCL_ERROR;\n      return TCL_OK;\n   }\n   case FindIx:\n   {\n      const char *name = Tcl_GetString(objv[2]);\n      int age = blobPtr-&gt;find(name);\n      Tcl_Obj *resultPtr = Tcl_GetObjResult(interp);\n      Tcl_SetIntObj(resultPtr, age);\n      return TCL_OK;\n   }\n   case RemoveIx:\n   {\n      const char *name = Tcl_GetString(objv[2]);\n      blobPtr-&gt;remove(name);\n      return TCL_OK;\n   }\n   default:\n   {\n      Tcl_WrongNumArgs(interp, 1, objv, \"wrong sub-cmd\");\n      return TCL_ERROR;\n   }\n   }\n\n   return TCL_OK;\n}\n</code></pre> main.tcl<pre><code># \u6267\u884c\u81ea\u5b9a\u4e49\u7684\u201cblob\u201d\u547d\u4ee4\nblob add Jack 100\nset res1 [blob find Jack]\nputs \"\\[  TCL\\] Jack's age is ${res1}\"\nblob find Tim\nblob remove Jack\nblob find Jack\nblob remove Jack\n# \u65e0\u6548\u547d\u4ee4\nblob clear\n</code></pre> <pre><code>&gt; ./main cmd.tcl\n[ INFO] Construct Blob\n[ INFO] Add Jack to the Blob, his age is 100\n[ INFO] Find Jack in the Blob, his age is 100\n[  TCL] Jack's age is 100\n[ WARN] Fail to find Tim in the Blob\n[ INFO] Remove Jack from the Blob, his age is 100\n[ WARN] Fail to find Jack in the Blob\n[ WARN] Cannot remove Jack from the Blob because it doesn't exist\nbad option \"clear\": must be add, find, or remove\n    while executing\n\"blob clear\"\n    (file \"cmd.tcl\" line 10)\n</code></pre></p>"},{"location":"topics/tcl_tk_in_c/#tcl-shell","title":"TCL Shell\u5b9e\u4f8b","text":"<p>\u4f8b\u5b50\u201ctcl_shell\"\u5b9e\u73b0\u4e86\u4e00\u4e2a\u5e26\u754c\u9762\u7684TCL\u89e3\u91ca\u5668\uff1a main.tcl<pre><code># \u521b\u5efa\u4e00\u4e2a\u53ef\u4ee5\u6267\u884cTCL\u547d\u4ee4\u7684\u7a97\u53e3\uff0c\u4e3b\u8981\u6d89\u53ca\u7684\u7ae0\u8282\u6709\uff1a\n#  Chapter 36. The Text Widget\n#  Chapter 29. Binding Commands to Events\n\n# \u5e26\u6eda\u52a8\u6761\u7684\u6587\u672c\u8f93\u5165\u6846\uff0c\u4f20\u5165frame\u540d\u79f0\u548ctext\u7684\u914d\u7f6e\u53c2\u6570\uff0c\u8fd4\u56detext\u5b9e\u4f8b\nproc Scrolled_Text { f args } {\n   frame $f\n   eval {text $f.text -wrap none \\\n      -xscrollcommand [list $f.xscroll set] \\\n      -yscrollcommand [list $f.yscroll set]} $args\n   scrollbar $f.xscroll -orient horizontal -command [list $f.text xview]\n   scrollbar $f.yscroll -orient vertical -command [list $f.text yview]\n   grid $f.text $f.yscroll -sticky news\n   grid $f.xscroll -sticky news\n   grid rowconfigure $f 0 -weight 1\n   grid columnconfigure $f 0 -weight 1\n   return $f.text\n}\n# \u521b\u5efaScrolled_Text\u5b9e\u4f8b\uff0c\u8fd4\u56de\u7684\u662ftext\u7ec4\u4ef6\nset t [Scrolled_Text .win -width 80 -height 10]\n# \u9700\u8981\u653e\u7f6eframe\uff0c\u800c\u4e0d\u662f\u8fd4\u56de\u7684$t\npack .win -fill both -expand true\n\n# \u4e3atext\u8f93\u5165\u6846\u521b\u5efa\u4e0d\u540c\u7c7b\u578b\u7684\u6807\u7b7e\uff0c\u7528\u4e8e\u683c\u5f0f\u5316\uff0c\u53c2\u89c1\u201cText Tags\u201d\u7ae0\u8282\n$t tag configure prompt -underline true\n$t tag configure result -foreground purple\n$t tag configure error -foreground red\n$t tag configure output -foreground blue\n\n# \u521b\u5efa\u6570\u7ec4eval\uff0c\u5176\u4e2d\uff0c\u4ee5\u201cprompt\u201d\u4e3a\u952e\u503c\u7684\u5185\u5bb9\u4e3a\u201ctcl&gt; \u201d\nset eval(prompt) \"tcl&gt; \"\n# \u5728\u8f93\u5165\u6846\u7684\u201cinsert\u201d\u4f4d\u7f6e\uff0c\u63d2\u5165$eval(prompt)\u5185\u5bb9\uff0c\u5b83\u7684\u683c\u5f0f\u662f\u6807\u7b7eprompt\n$t insert insert $eval(prompt) prompt\n# \u8bbe\u7f6elimit\u6807\u8bb0\u4e3a\u5f53\u524d\u8f93\u5165\u4f4d\u7f6e\uff0climit\u548cend\u4e4b\u95f4\u7684\u5185\u5bb9\u662f\u8981\u6267\u884c\u7684TCL\u547d\u4ee4\n$t mark set limit insert\n# \u8bbe\u7f6elimit\u6807\u8bb0\u7684gravity\u5c5e\u6027\u4e3aleft\uff0c\u8fd9\u6837insert\u52a8\u4f5c\u5c31\u4e0d\u4f1a\u6539\u53d8limit\u4f4d\u7f6e\n# \u9ed8\u8ba4\u662fright\uff0climit\u7684\u4f4d\u7f6e\u4f1a\u968finsert\u589e\u52a0\uff0c\u53c2\u89c1\u201cMark Gravity\u201d\u7ae0\u8282\n$t mark gravity limit left\n# \u5c06\u5149\u6807\u805a\u7126\u5728\u8f93\u5165\u6846\nfocus $t\n# \u8bbe\u7f6e\u53d8\u91cf\u201ceval(text)\u201d\nset eval(text) $t\n\n# \u7ed1\u5b9a\u52a8\u4f5c\u548c\u4e8b\u4ef6\n# \u7ed1\u5b9a\u56de\u8f66\u4e8b\u4ef6\uff0c\u89e6\u53d1TCL\u547d\u4ee4\u6267\u884c\u52a8\u4f5c\u201cEvalTypein\u201d\nbind $t &lt;Return&gt; {EvalTypein ; break}\n# \u7ed1\u5b9a\u56de\u9000\u4e8b\u4ef6\uff0c\u7528\u4e8e\u5220\u9664\u5b57\u7b26\nbind $t &lt;BackSpace&gt; {\n   # %W\u4ee3\u8868\u7ec4\u4ef6\u7684\u5168\u540d\u79f0\uff0c\u53c2\u89c1\u201cThe bind Command\u201d\u7ae0\u8282\n   # \u6253\u5370\u6240\u6709\u6807\u7b7e\uff1a[%W tag names] -&gt; sel prompt result error output\n   # \u5224\u65adsel\u6807\u7b7e\u57281.0\u548cend\u8303\u56f4\u5185\u662f\u5426\u4e3a\u7a7a\uff0c\u53c2\u89c1\u201cText Operations\u201d\u7ae0\u8282\n   if {[%W tag nextrange sel 1.0 end] != \"\"} {\n      # \u5220\u9664\u9009\u62e9\u7684\u591a\u4e2a\u5b57\u7b26\n      %W delete sel.first sel.last\n   } elseif {[%W compare insert &gt; limit]} {\n      # \u5220\u9664\u5f53\u524d\u5b57\u7b26\n      %W delete insert-1c\n      # \u4fee\u6539\u663e\u793a\u4f4d\u7f6e\uff0c\u5426\u5219\u7a97\u53e3\u4e0d\u4f1a\u6eda\u52a8\u663e\u793a\u6700\u65b0\u7684\u7ed3\u679c\n      %W see insert\n   }\n   # \u4e0d\u6ee1\u8db3\u4e0a\u8ff0\u6761\u4ef6\u65f6\uff0c\u4e0d\u5220\u9664\u4efb\u4f55\u5b57\u7b26\n   break\n}\n# \u7ed1\u5b9a\u8f93\u5165\u4e8b\u4ef6\uff0c\u63a7\u5236\u4e0d\u540c\u4f4d\u7f6e\u8f93\u5165\u7684\u60c5\u51b5\nbind $t &lt;Key&gt; {\n   # \u5224\u65ad\u63d2\u5165\u4f4d\u7f6e\u662f\u5426\u5728\u6d3b\u52a8\u7a97\u53e3\u5185(\u5f53\u524d\u884c)\uff0c\u53c2\u89c1\u201cText Indices\u201d\u7ae0\u8282\n   if [%W compare insert &lt; limit] {\n      # \u63d2\u5165\u4f4d\u7f6e\u4e0d\u5728\u5f53\u524d\u884c\uff0c\u8bbe\u7f6e\u63d2\u5165\u4f4d\u7f6e\u5230\u672b\u5c3e\uff0c\u8fd9\u6837\u540e\u9762\u7684\u8f93\u5165\u90fd\u4f1a\u6dfb\u52a0\u5728\u6700\u540e\n      %W mark set insert end\n   }\n}\n\n# \u5904\u7406\u7528\u6237\u8f93\u5165(TCL\u547d\u4ee4)\uff0c\u8f93\u5165\u4e3alimit\u6807\u8bb0\u548cend\u6807\u8bb0\u95f4\u7684\u5185\u5bb9\nproc EvalTypein {} {\n   global eval\n   # \u5728\u56de\u8f66\u4f4d\u7f6e\u6362\u884c\u7b26\n   $eval(text) insert insert \\n\n   # limit\u548cend\u4e4b\u95f4\u7684\u6240\u6709\u5185\u5bb9\u4e3a\u8f93\u5165\u547d\u4ee4\uff0c\u5305\u62ec\u4e0a\u9762\u7684\u6362\u884c\u7b26\u53f7\n   set command [$eval(text) get limit end]\n   # \u5224\u65ad\u662f\u5426\u4e3a\u5b8c\u6574\u7684TCL\u547d\u4ee4\n   if [info complete $command] {\n      # \u66f4\u65b0limit\u4f4d\u7f6e\u4e3a\u63d2\u5165\u4f4d\uff0c\u524d\u9762\u8bbe\u7f6e\u4e86\u6240\u6709\u7684\u547d\u4ee4\u8f93\u51fa\u7ed3\u679c\u90fd\u4f1a\u663e\u793a\u5728limit\u4f4d\u7f6e\u7684\u5de6\u4fa7\n      $eval(text) mark set limit insert\n      Eval $command\n   }\n}\n\n# \u6267\u884c\u547d\u4ee4\u5e76\u663e\u793a\u7ed3\u679c\nproc Eval {command} {\n   global eval\n   # \u8c03\u6574\u63d2\u5165\u4f4d\u7f6e\n   $eval(text) mark set insert end\n   # \u5229\u7528\u201ceval(slave)\u201d\u6267\u884cTCL\u547d\u4ee4\n   if [catch {$eval(slave) eval $command} result] {\n      # \u6267\u884c\u547d\u4ee4\u51fa\u9519\uff0c\u7528error\u6807\u7b7e\u683c\u5f0f\u5316\u8f93\u51fa\n      $eval(text) insert insert $result error\n   } else {\n      # \u6b63\u5e38\u6267\u884c\u547d\u4ee4\uff0c\u7528result\u6807\u7b7e\u683c\u5f0f\u5316\u8f93\u51fa\n      $eval(text) insert insert $result result\n   }\n   # \u5982\u679c\u4e0d\u662f\u884c\u8d77\u59cb\u4f4d(\u4f8b\u5982\u9519\u8bef\u547d\u4ee4\u65f6)\uff0c\u6362\u884c\n   if {[$eval(text) compare insert != \"insert linestart\"]} {\n      $eval(text) insert insert \\n\n   }\n   # \u8f93\u51faprompt\n   $eval(text) insert insert $eval(prompt) prompt\n   $eval(text) see insert\n   # \u66f4\u65b0limit\u4e3a\u5f53\u524d\u4f4d\u7f6e\n   $eval(text) mark set limit insert\n   return\n}\n\n# \u521b\u5efaTCL\u5b50\u89e3\u91ca\u5668\nproc SlaveInit {slave} {\n   interp create $slave\n   interp alias $slave reset {} ResetAlias $slave\n   # \u901a\u8fc7PutsAlias\u91cd\u5199puts\u547d\u4ee4\uff0c\u5c06\u7ed3\u679c\u8f93\u51fa\u5230\u754c\u9762\u4e2d\uff0c\u9ed8\u8ba4\u662f\u8f93\u51fa\u5230terminal\u7a97\u53e3\n   interp alias $slave puts {} PutsAlias $slave\n   return $slave\n}\n\nproc ResetAlias {slave} {\n   global eval\n   interp delete $slave\n   SlaveInit $slave\n   # \u6e05\u7a7a\u8f93\u5165\u6846\u4e2d\u7684\u6240\u6709\u5185\u5bb9\n   $eval(text) delete 1.0 end\n}\n\n# \u5b9a\u5236\u5316puts\u547d\u4ee4\uff0c\u5c06puts\u7684\u7ed3\u679c\u8f93\u51fa\u5230\u5f53\u524d\u7a97\u53e3\nproc PutsAlias {slave args} {\n   if {[llength $args] &gt; 3} {\n      error \"invalid arguments\"\n   }\n   set newline \"\\n\"\n   if {[string match \"-nonewline\" [lindex $args 0]]} {\n      set newline \"\"\n      set args [lreplace $args 0 0]\n   }\n   if {[llength $args] == 1} {\n      set chan stdout\n      set string [lindex $args 0]$newline\n   } else {\n      set chan [lindex $args 0]\n      set string [lindex $args 1]$newline\n   }\n   if [regexp (stdout|stderr) $chan] {\n      # \u8f93\u51faputs\u7684\u7ed3\u679c\n      global eval\n      $eval(text) insert limit $string output\n      $eval(text) see limit\n   } else {\n      puts -nonewline $chan $string\n   }\n}\n\n# \u521b\u5efaTCL\u89e3\u91ca\u5668\uff0c\u7528\u4e8e\u6267\u884cTCL\u547d\u4ee4\nset eval(slave) [SlaveInit shell]\n</code></pre> </p>"},{"location":"topics/tcl_tk_in_c/#exec-log","title":"Exec Log\u5b9e\u4f8b","text":"<p>\u4f8b\u5b50\u201cexec_log\"\u5b9e\u73b0\u4e86\u7ec8\u7aef\u6267\u884c\u754c\u9762\uff0c\u53ef\u8fd0\u884c\u7cfb\u7edf\u652f\u6301\u7684\u547d\u4ee4\uff0c\u5e76\u6253\u5370\u7ed3\u679c\uff1a main.tcl<pre><code># \u8bbe\u7f6e\u7a97\u53e3\u6807\u9898\nwm title . ExecLog\n\n# frame\u7528\u6237\u7ec4\u4ef6\u5e03\u5c40\uff0c\u521b\u5efa\u201c.top\u201d\u6846\u67b6\nframe .top -borderwidth 10\n# \u5c06\u201c.top\u201d\u6846\u67b6\u6c34\u5e73\u5e73\u94fa\u5728\u9876\u90e8\npack .top -side top -fill x\n\n# \u5728\u201c.top\u201d\u6846\u67b6\u5185\u653e\u7f6e\u6309\u94ae\n# \u201cQuit\u201d\u6309\u94ae\u7ed1\u5b9a\u9000\u51fa\u52a8\u4f5c\nbutton .top.quit -text Quit -command exit\n# \u201cRun it\u201d\u6309\u94ae\u7ed1\u5b9a\u201cRun\u201d\u52a8\u4f5c\nset button_run [button .top.run -text \"Run it\" -command Run]\n# \u5c06\u6309\u94ae\u653e\u7f6e\u5728\u201c.top\u201d\u6846\u67b6\u7684\u53f3\u4fa7\npack .top.quit .top.run -side right\n\n# \u5728\u201c.top\u201d\u6846\u67b6\u5185\u653e\u7f6e\u8f93\u5165\u6846\uff1alabel + entry\nlabel .top.l -text Command: -padx 0\n# \u5c06entry\u7ec4\u4ef6\u8f93\u5165\u7684\u5185\u5bb9\uff0c\u7ed1\u5b9a\u5728\u53d8\u91cf\u201cin_command\u201d\u4e2d\nentry .top.cmd -width 20 -relief sunken -textvariable in_command\npack .top.l -side left\n# \"-expand true\"\u914d\u7f6e\u53ef\u5c06\u8f93\u5165\u6846\u81ea\u52a8\u62c9\u4f38\npack .top.cmd -side left -fill x -expand true\n\n# \u5c06\u5feb\u6377\u952e\u7ed1\u5b9a\u5728\u7ec4\u4ef6\uff0c\u5e76\u89e6\u53d1\u76f8\u5e94\u52a8\u4f5c\nbind .top.cmd &lt;Return&gt; Run\nbind .top.cmd &lt;Control-c&gt; Stop\n# \u5f00\u59cb\u7a0b\u5e8f\u540e\uff0c\u4e3b\u52a8\u805a\u7126\u5728.top.cmd\u4e0a\uff0c\u5426\u5219\u9700\u8981\u5148\u7528\u9f20\u6807\u805a\u7126\nfocus .top.cmd\n\n# \u521b\u5efa\u201c.text\u201d\u6846\u67b6\uff0c\u7528\u4e8e\u6587\u5b57\u5e03\u5c40\nframe .text\n# \u5728\u6587\u5b57\u5e03\u5c40\u4e2d\uff0c\u521b\u5efatext\u7ec4\u4ef6\uff0c\u5305\u62ec\u6c34\u5e73\u548c\u7ad6\u76f4\u65b9\u5411\u7684\u6eda\u52a8\u6761\nset log [text .text.log -width 80 -height 10 \\\n   -borderwidth 2 -relief raised -setgrid true -state normal -wrap none \\\n   -yscrollcommand {.text.scrolly set} -xscrollcommand {.text.scrollx set}]\nscrollbar .text.scrolly -orient vertical -command {.text.log yview}\nscrollbar .text.scrollx -orient horizontal -command {.text.log xview}\npack .text.scrolly -side right -fill y\npack .text.scrollx -side bottom -fill x\npack .text.log -side left -fill both -expand true\npack .text -side top -fill both -expand true\n\n# \u6267\u884c\u547d\u4ee4\nproc Run {} {\n   global in_command input log button_run\n   # \u901a\u8fc7\u7ba1\u9053\u6267\u884c\u547d\u4ee4\n   if [catch {open \"|$in_command\"} input] {\n      # \u53d1\u751f\u9519\u8bef\n      $log insert end $input\\n\n      # \u4fee\u6539\u663e\u793a\u4f4d\u7f6e\uff0c\u5426\u5219\u7a97\u53e3\u4e0d\u4f1a\u6eda\u52a8\u663e\u793a\u6700\u65b0\u7684\u7ed3\u679c\n      $log see insert\n   } else {\n      # $input\u662f\u4e00\u4e2a\u6587\u4ef6\u63cf\u8ff0\u7b26\uff0c\u8bbe\u7f6e\u5176\u53ef\u8bfb\u56de\u8c03\u51fd\u6570Log\uff0c\u7528\u4e8e\u5c06\u6267\u884c\u7684\u7ed3\u679c\u8f93\u51fa\uff0c\u6b64\u6b65\u9aa4\u4e3a\u5f02\u6b65\n      fileevent $input readable Log\n      # \u6062\u590d\u663e\u793a\u6846\u53ef\u5199\n      $log config -state normal\n      # \u6253\u5370\u6267\u884c\u7684\u547d\u4ee4\uff0c\u7531\u4e8e\u6b64\u65f6\u547d\u4ee4\u8fd8\u6ca1\u6267\u884c\u5b8c\u6210\uff0c\u4e0b\u9762\u7684\u8bdd\u4f1a\u6253\u5370\u5728\u547d\u4ee4\u7ed3\u679c\u4e4b\u524d\n      $log insert end \"&gt;$in_command\\n\"\n      # \u8bbe\u7f6e\u663e\u793a\u6846\u53ea\u8bfb\n      $log config -state disabled\n      # \u5c06\u6309\u94ae\u6587\u5b57\u663e\u793a\u4e3aStop\uff0c\u8868\u660e\u6b63\u5219\u6267\u884c\u547d\u4ee4\n      $button_run config -text Running -command Close\n   }\n}\n\n# \u4ece\u7ed3\u679c\u6587\u4ef6\u63cf\u8ff0\u7b26$input\u4e2d\u8bfb\u51fa\u547d\u4ee4\u7684\u7ed3\u679c\uff0c\u5e76\u6253\u5370\n# \u7531\u4e8e\u6b64\u52a8\u4f5c\u88ab\u8bbe\u7f6e\u4e3a\u53ef\u8bfb\u56de\u8c03\u51fd\u6570\uff0c\u53ea\u8981\u6709\u7ed3\u679c\u6ca1\u6709\u88ab\u8bfb\u51fa\uff0c\u4f1a\u4e00\u76f4\u8c03\u7528\nproc Log {} {\n   global input log\n   if [eof $input] {\n      # \u8c03\u7528\u7ed3\u675f\u52a8\u4f5c\uff0c\u6539\u53d8\u6309\u94ae\u663e\u793a\u5185\u5bb9\n      Close\n   } else {\n      # \u6062\u590d\u663e\u793a\u6846\u53ef\u5199\n      $log config -state normal\n      # \u4ece\u6587\u4ef6\u63cf\u8ff0\u7b26\u4e2d\u8bfb\u53d6\u4e00\u884c\n      gets $input line\n      # \u6253\u5370\u4e00\u884c\u5185\u5bb9\n      $log insert end $line\\n\n      # \u4fee\u6539\u663e\u793a\u4f4d\u7f6e\u5230\u672b\u5c3e\uff0c\u5426\u5219\u7a97\u53e3\u4e0d\u4f1a\u6eda\u52a8\u663e\u793a\u6700\u65b0\u7684\u7ed3\u679c\n      $log see end\n      # \u8bbe\u7f6e\u663e\u793a\u6846\u53ea\u8bfb\n      $log config -state disabled\n   }\n}\n\n# \u5173\u95ed\u7ed3\u679c\u6587\u4ef6\u63cf\u8ff0\u7b26$input\uff0c\u5e76\u6062\u590d\u6309\u94ae\u663e\u793a\nproc Close {} {\n   global input button_run\n   catch {close $input}\n   $button_run config -text \"Run it\" -command Run\n}\n</code></pre></p> <p></p>"},{"location":"topics/tcl_tk_in_c/#browser","title":"Browser\u5b9e\u4f8b","text":"<p>\u4f8b\u5b50\u201cbrowser\"\u5b9e\u73b0\u4e86\u67d0\u4e00\u76ee\u5f55\u4e0b\u7684TCL\u6587\u4ef6\u6d4f\u89c8\u5668\uff0c\u5e76\u7ed3\u5408\u201ctcl_shell\"\u7684\u529f\u80fd\uff0c\u5728\u4e00\u4e2aTCL\u89e3\u91ca\u5668\u4e2d\u8fd0\u884c\u5f53\u524dTCL\u6587\u4ef6\uff1a</p> <p>main.tcl<pre><code># \u6d4f\u89c8\u201c./src\u201d\u76ee\u5f55\u4e2d\u6240\u6709\u7684TCL\u6587\u4ef6\uff0c\u5e76\u53ef\u901a\u8fc7\u4e00\u4e2aTCL\u89e3\u91ca\u5668\u6267\u884c\uff0c\u6d89\u53ca\u7684\u7ae0\u8282\u6709\uff1a\n#  Chapter 30. Buttons and Menus\n\n# \u4f9d\u8d56\u201c02_tcl_shell\u201d\u4e2d\u7684TCL\u89e3\u91ca\u5668\uff0c\u7528\u4e8e\u6267\u884c\u76ee\u5f55\u4e2d\u7684TCL\u6587\u4ef6\nsource ../02_tcl_shell/main.tcl\nset browse(dir) ./src\nwm minsize . 30 5\nwm title . \"Tcl Example Browser\"\n\n# \u521b\u5efa\u83dc\u5355\u680f\nset f [frame .menubar]\npack $f -fill x\nbutton $f.quit -text Quit -command exit\nbutton $f.next -text Next -command Next\nbutton $f.prev -text Previous -command Previous\nbutton $f.load -text Run -command Run\nbutton $f.reset -text Reset -command Reset\npack $f.quit $f.reset $f.load $f.next $f.prev -side right\n\n# \u521b\u5efa\u6807\u7b7e\uff0c\u7528\u4e8e\u663e\u793a\u5f53\u524d\u6253\u5f00\u7684TCL\u6587\u4ef6\u540d\nlabel $f.label -textvariable browse(current)\npack $f.label -side right -fill x -expand true\n\n# \u521b\u5efa\u591a\u7ea7\u83dc\u5355\nmenubutton $f.ex -text Examples -menu $f.ex.m\npack $f.ex -side left\nset m [menu $f.ex.m]\n\n# \u521b\u5efa\u6587\u4ef6\u5185\u5bb9\u663e\u793a\u7a97\u53e3\nset browse(text) [Scrolled_Text .body -width 80 -height 10 -setgrid true]\npack .body -fill both -expand true\n\n# \u904d\u5386\u6587\u4ef6\u5939\uff0c\u5e76\u8bb0\u5f55\u6587\u4ef6\u540d\u548c\u6807\u9898\u7b49\nforeach f [lsort -dictionary [glob [file join $browse(dir) *]]] {\n   if [catch {open $f} in] {\n      puts stderr \"Cannot open $f: $in\"\n      continue\n   }\n   while {[gets $in line] &gt;= 0} {\n      if [regexp {^# Example ([0-9]+)-([0-9]+)} $line \\\n             x chap ex] {\n         lappend examples($chap) $ex\n         lappend browse(list) $f\n         # \u4ece\u6587\u4ef6\u7684\u7b2c\u4e00\u884c\u6ce8\u91ca\u4e2d\u627e\u5230\u83dc\u5355\u6807\u9898\n         gets $in line\n         set title($chap-$ex) [string trim $line \"# \"]\n         set file($chap-$ex) $f\n         close $in\n         break\n      }\n   }\n}\n\n# \u5173\u95ed\u5b50\u83dc\u5355\u7684\u5f39\u51fa\u6309\u94ae\noption add *Menu.tearOff 0\nset limit 8\nset c 0; set i 0\n# \u6839\u636e\u4e0a\u9762\u904d\u5386\u7684\u7ed3\u679c\uff0c\u521b\u5efa\u51fa\u591a\u7ea7\u5b50\u83dc\u5355\nforeach chap [lsort -integer [array names examples]] {\n   if {$i == 0} {\n      $m add cascade -label \"Chapter $chap...\" \\\n         -menu $m.$c\n      set sub1 [menu $m.$c]\n      incr c\n   }\n   set i [expr ($i +1) % $limit]\n   $sub1 add cascade -label \"Chapter $chap\" -menu $sub1.sub$i\n   set sub2 [menu $sub1.sub$i]\n   foreach ex [lsort -integer $examples($chap)] {\n      $sub2 add command -label \"$chap-$ex $title($chap-$ex)\" \\\n         -command [list Browse $file($chap-$ex)]\n   }\n}\n\n# \u663e\u793a\u6587\u4ef6\u5185\u5bb9\nproc Browse { file } {\n   global browse\n   set browse(current) [file tail $file]\n   set browse(curix) [lsearch $browse(list) $file]\n   set t $browse(text)\n   # \u6062\u590d\u4e3a\u53ef\u5199\n   $t config -state normal\n   $t delete 1.0 end\n   if [catch {open $file} in] {\n      $t insert end $in\n   } else {\n      $t insert end [read $in]\n      close $in\n   }\n   # \u66f4\u6539\u4e3a\u53ea\u8bfb\n   $t config -state disabled\n}\n\n# \u8bb0\u5f55\u5f53\u524d\u663e\u793a\u6587\u4ef6\u7684\u6807\u53f7\nset browse(curix) -1\n# \u663e\u793a\u4e0b\u4e00\u4e2a\u6587\u4ef6\nproc Next {} {\n   global browse\n   if {$browse(curix) &lt; [llength $browse(list)] - 1} {\n      incr browse(curix)\n   }\n   Browse [lindex $browse(list) $browse(curix)]\n}\n# \u663e\u793a\u4e0a\u4e00\u4e2a\u6587\u4ef6\nproc Previous {} {\n   global browse\n   if {$browse(curix) &gt; 0} {\n      incr browse(curix) -1\n   }\n   Browse [lindex $browse(list) $browse(curix)]\n}\n\n# \u5229\u7528\u201csource &lt;file&gt;.tcl\u201d\u547d\u4ee4\uff0c\u8fd0\u884cTCL\u6587\u4ef6\nproc Run {} {\n   global browse\n   EvalEcho [list source [file join $browse(dir) $browse(current)]]\n}\n\n# \u91cd\u7f6eTCL\u89e3\u91ca\u5668\uff0c\u5e76\u6e05\u7a7a\u8bb0\u5f55\nproc Reset {} {\n   EvalEcho reset\n}\n\n# \u5728TCL\u89e3\u91ca\u5668\u4e2d\u6267\u884cTCL\u547d\u4ee4\uff0c\u5e76\u6253\u5370\u7ed3\u679c\nproc EvalEcho {command} {\n   global eval\n   $eval(text) mark set insert end\n   $eval(text) insert insert $command\\n\n   $eval(text) mark set limit insert\n   Eval $command\n}\n</code></pre> </p>"},{"location":"topics/tcl_tk_in_c/#_3","title":"\u53c2\u8003","text":"<ul> <li>\u300aPractical Programming in Tcl and Tk\u300b- 4th, Brent Welch, Ken Jones\uff0c\"Part VI: C Programming\"</li> <li>\u300aTcl and the Tk Toolkit\u300b- John K. Ousterhout\uff0c\"PART III Writing Tcl Applications in C\"</li> <li>\u300aTcl/Tk A Developers Guide\u300b- Clif Flynt\uff0c\"Chapter 15 Extending Tcl\"</li> </ul>"},{"location":"topics/vue/components/","title":"\u7ec4\u4ef6\u590d\u7528","text":"<p>\u4ecb\u7ecd<code>Vue3.0</code>\u4e2d\u7ec4\u4ef6\u590d\u7528\u6280\u672f\uff0c\u6240\u6709\u6837\u4f8b\u53ef\u5728GitHub\u4ed3\u5e93\u4e2d\u627e\u5230</p>"},{"location":"topics/vue/components/#_2","title":"\u6e32\u67d3\u63a7\u5236","text":""},{"location":"topics/vue/components/#v-if","title":"\u6761\u4ef6\u6e32\u67d3v-if\u5b9e\u4f8b","text":"<ul> <li><code>v-if</code>\u6307\u4ee4\u6839\u636e\u8868\u8fbe\u5f0f\u7684\u771f\u5047\u503c\u6765\u6709\u6761\u4ef6\u5730\u6e32\u67d3\u5143\u7d20 <pre><code>&lt;div v-if=\"type === 'A'\"&gt;\n    A\n&lt;/div&gt;\n&lt;div v-else-if=\"type === 'B'\"&gt;\n    B\n&lt;/div&gt;\n&lt;div v-else-if=\"type === 'C'\"&gt;\n    C\n&lt;/div&gt;\n&lt;div v-else&gt;\n    Not A/B/C\n&lt;/div&gt;\n</code></pre></li> </ul>"},{"location":"topics/vue/components/#v-for","title":"\u5faa\u73af\u6e32\u67d3v-for\u5b9e\u4f8b","text":"<ul> <li><code>v-for</code>\u57fa\u4e8e\u6e90\u6570\u636e\u591a\u6b21\u6e32\u67d3\u5143\u7d20\u6216\u6a21\u677f\u5757\uff0c\u5fc5\u987b\u4f7f\u7528\u7279\u5b9a\u8bed\u6cd5<code>alias in expression</code> <pre><code>&lt;li v-for=\"todo in todos\"&gt;\n    {{ todo.text }}\n&lt;/li&gt;\n</code></pre></li> </ul>"},{"location":"topics/vue/components/#_3","title":"\u6570\u636e\u4f20\u9012","text":""},{"location":"topics/vue/components/#v-bind","title":"v-bind\u5b9e\u4f8b","text":"<ul> <li><code>v-bind</code>\u53ef\u4ee5\u5730\u7ed1\u5b9a\u4e00\u4e2a\u6216\u591a\u4e2aattribute\uff0c\u6216\u7ed1\u5b9a\u4e00\u4e2a\u7ec4\u4ef6prop\u5230\u8868\u8fbe\u5f0f\uff0c\u53ef\u4ee5\u901a\u8fc7<code>:</code>\u8fdb\u884c\u7f29\u5199\uff0c\u8be6\u60c5\u53c2\u8003\u6587\u6863</li> <li>\u4ee5\u4e0b\u662f\u5e38\u89c1\u7684<code>v-bind</code>\u4f8b\u5b50\uff1a <pre><code>&lt;!-- \u7ed1\u5b9a attribute --&gt;\n&lt;img v-bind:src=\"imageSrc\" /&gt;\n\n&lt;!-- \u52a8\u6001 attribute \u540d --&gt;\n&lt;button v-bind:[key]=\"value\"&gt;&lt;/button&gt;\n\n&lt;!-- \u7f29\u5199 --&gt;\n&lt;img :src=\"imageSrc\" /&gt;\n\n&lt;!-- \u52a8\u6001 attribute \u540d\u7f29\u5199 --&gt;\n&lt;button :[key]=\"value\"&gt;&lt;/button&gt;\n\n&lt;!-- \u5185\u8054\u5b57\u7b26\u4e32\u62fc\u63a5 --&gt;\n&lt;img :src=\"'/path/to/images/' + fileName\" /&gt;\n\n&lt;!-- class \u7ed1\u5b9a --&gt;\n&lt;div :class=\"{ red: isRed }\"&gt;&lt;/div&gt;\n&lt;div :class=\"[classA, classB]\"&gt;&lt;/div&gt;\n&lt;div :class=\"[classA, { classB: isB, classC: isC }]\"&gt;&lt;/div&gt;\n\n&lt;!-- style \u7ed1\u5b9a --&gt;\n&lt;div :style=\"{ fontSize: size + 'px' }\"&gt;&lt;/div&gt;\n&lt;div :style=\"[styleObjectA, styleObjectB]\"&gt;&lt;/div&gt;\n\n&lt;!-- \u7ed1\u5b9a\u4e00\u4e2a\u5168\u662f attribute \u7684\u5bf9\u8c61 --&gt;\n&lt;div v-bind=\"{ id: someProp, 'other-attr': otherProp }\"&gt;&lt;/div&gt;\n\n&lt;!-- prop \u7ed1\u5b9a\u3002\"prop\" \u5fc5\u987b\u5728 my-component \u58f0\u660e --&gt;\n&lt;my-component :prop=\"someThing\"&gt;&lt;/my-component&gt;\n\n&lt;!-- \u5c06\u7236\u7ec4\u4ef6\u7684 props \u4e00\u8d77\u4f20\u7ed9\u5b50\u7ec4\u4ef6 --&gt;\n&lt;child-component v-bind=\"$props\"&gt;&lt;/child-component&gt;\n</code></pre></li> </ul>"},{"location":"topics/vue/components/#props","title":"props\u5b9e\u4f8b","text":"<ul> <li>\u6211\u4eec\u53ef\u4ee5\u5728\u7ec4\u4ef6\u5185\u5b9a\u4e49<code>props</code>\uff0c\u7528\u4ee5\u63a5\u53d7\u7236\u7ec4\u4ef6\u901a\u8fc7<code>v-bind</code>\u4f20\u5165\u7684\u6570\u636e\uff0c\u4ece\u800c\u66f4\u597d\u5730\u5b9e\u73b0\u7ec4\u4ef6\u7684\u590d\u7528\uff0c\u6240\u6709\u7684<code>prop</code>\u90fd\u4f7f\u5f97\u5176\u7236\u5b50 prop \u4e4b\u95f4\u5f62\u6210\u4e86\u4e00\u4e2a\u5355\u5411\u4e0b\u884c\u7ed1\u5b9a\uff0c\u8be6\u7ec6\u4f8b\u5b50\u53ef\u4ee5\u53c2\u8003\u5b98\u65b9\u6587\u6863</li> </ul>"},{"location":"topics/vue/components/#v-model","title":"v-model\u5b9e\u4f8b","text":"<ul> <li>\u5728Vue3\u4e2d\uff0c\u81ea\u5b9a\u4e49\u7ec4\u4ef6\u4e0a\u7684<code>v-model</code>\u76f8\u5f53\u4e8e\u4f20\u9012\u4e86<code>modelValue</code>prop\u5e76\u63a5\u6536\u629b\u51fa\u7684<code>update:modelValue</code>\u4e8b\u4ef6<ul> <li>\u4e0b\u9762\u7684\u4f8b\u5b50\u4e2d\uff0c<code>CustomInput</code>\u4f1a\u63a5\u53d7<code>input</code>\u4e8b\u4ef6\uff0c\u5411\u7236\u7ec4\u4ef6\u629b\u51fa<code>update:modelValue</code>\u4e8b\u4ef6\uff0c\u5e76\u9644\u52a0input\u5185\u5bb9<code>$event.target.value</code>\uff0c\u5176\u4e2d<code>$event</code>\u662f\u539f\u59cb\u7684DOM\u4e8b\u4ef6\u3002\u8fd9\u6837HTML\u4ee3\u7801\u5c31\u53ef\u4ee5\u901a\u8fc7<code>&lt;custom-input v-model=\"searchText\"&gt;&lt;/custom-input&gt;</code>\u5c06<code>searchText</code>\u548c<code>input</code>\u7684\u5185\u5bb9\u53ca\u4e8b\u4ef6\u8fdb\u884c\u7ed1\u5b9a\u3002 <pre><code>const CustomInput = {\n    props: ['modelValue'],\n    emits: ['update:modelValue'],\n    template:`\n        &lt;input\n            :value=\"modelValue\"\n            @input=\"$emit('update:modelValue', $event.target.value)\"\n        /&gt;\n    `\n}\n</code></pre></li> </ul> </li> <li>v-model\u5b9e\u4f8b\u5c55\u793a\u4e86<code>v-model</code>\u7ed1\u5b9a\u4e0d\u540cinput\u7ec4\u4ef6\u7684\u65b9\u5f0f</li> </ul>"},{"location":"topics/vue/components/#_4","title":"\u4e8b\u4ef6\u4f20\u9001","text":""},{"location":"topics/vue/components/#v-on","title":"v-on\u5b9e\u4f8b","text":"<ul> <li><code>v-on</code>\u6307\u4ee4\u7528\u4e8e\u7ed1\u5b9a\u4e8b\u4ef6\u76d1\u542c\u5668\uff0c\u7ed1\u5b9a\u7684\u76d1\u542c\u5668\u53ef\u4ee5\u63a5\u53d7\u539f\u751f\u7684DOM\u4e8b\u4ef6<code>$event</code>\u4f5c\u4e3a\u53c2\u6570\uff0c\u5e76\u901a\u8fc7\u4e8b\u4ef6\u4fee\u9970\u7b26\u63a7\u5236\u89e6\u53d1\u4e8b\u4ef6\u884c\u4e3a <pre><code>&lt;!-- \u963b\u6b62\u5355\u51fb\u4e8b\u4ef6\u7ee7\u7eed\u5192\u6ce1 --&gt;\n&lt;button @click.stop=\"say($event, 'button_clicked')\"&gt;Click_With_Stop&lt;/button&gt;\n</code></pre></li> </ul>"},{"location":"topics/vue/components/#emit","title":"$emit\u5b9e\u4f8b","text":"<p>\u901a\u8fc7<code>v-bind\u548cprops</code>\uff0c\u7236\u7ec4\u4ef6\u53ef\u4ee5\u5c06\u6570\u636e\u4f20\u9012\u5230\u5b50\u7ec4\u4ef6\uff1b\u540c\u6837\uff0c\u901a\u8fc7<code>v-on\u548cemits</code>\uff0c\u5b50\u7ec4\u4ef6\u53ef\u4ee5\u629b\u51fa\u4e8b\u4ef6\u5230\u7236\u7ec4\u4ef6</p> <ul> <li>JS\u4ee3\u7801<ul> <li><code>this.$emit(\"increment-count\")</code>\u629b\u51fa\u4e86<code>increment-count</code>\u4e8b\u4ef6\uff0c\u53ef\u4ee5\u901a\u8fc7<code>v-on:increment-count</code>\u7ed1\u5b9a\u4e8b\u4ef6\u76d1\u542c\u5668 <pre><code>const ChildComponent = {\nemits: ['increment-count'],\ntemplate: `\n    &lt;div&gt;\n        &lt;button @click='this.$emit(\"increment-count\")'&gt;click me&lt;/button&gt;\n    &lt;/div&gt;\n`\n}\n</code></pre></li> </ul> </li> </ul>"},{"location":"topics/vue/components/#_5","title":"\u6570\u636e\u76d1\u63a7","text":""},{"location":"topics/vue/components/#computed","title":"computed\u5b9e\u4f8b","text":"<p>\u6211\u4eec\u53ef\u4ee5\u7528<code>computed</code>\u521b\u5efa\u4e00\u4e2a\u8ddf\u968f\u54cd\u5e94\u6027\u6570\u636e\u53d8\u5316\u7684\u5bf9\u8c61\u3002Vue\u53ef\u4ee5\u901a\u8fc7\u4e24\u79cd\u65b9\u5f0f\u914d\u7f6ecomputed\u5bf9\u8c61\uff0ccomputed\u63a5\u53d7\u4e00\u4e2a<code>getter</code>\u51fd\u6570\uff0c\u5e76\u6839\u636e<code>getter</code>\u7684\u8fd4\u56de\u503c\u8fd4\u56de\u4e00\u4e2a\u4e0d\u53ef\u53d8\u7684\u54cd\u5e94\u5f0fref\u5bf9\u8c61\uff1a</p> <ul> <li>\u8ba1\u7b97\u5c5e\u6027</li> <li>\u54cd\u5e94\u6027API</li> </ul>"},{"location":"topics/vue/components/#watch","title":"watch\u5b9e\u4f8b","text":"<p>\u6211\u4eec\u53ef\u4ee5\u7528<code>watch</code>\u4fa6\u542c\u5305\u542b\u4e86<code>data</code>\u6216<code>computed</code>property\u7684\u53d8\u5316\uff0c\u5e76\u8c03\u7528\u76f8\u5e94\u7684\u56de\u8c03\u51fd\u6570\u3002Vue\u63d0\u4f9b\u4e86\u591a\u79cd\u65b9\u6cd5\u521b\u5efawatch\u5bf9\u8c61\uff1a</p> <ul> <li>\u4fa6\u542c\u5c5e\u6027</li> <li>\u54cd\u5e94\u6027API</li> <li>\u5b9e\u4f8b\u65b9\u6cd5</li> </ul>"},{"location":"topics/vue/components/#_6","title":"\u5185\u5bb9\u5206\u53d1","text":"<p>Vue\u901a\u8fc7\u63d2\u69fd\u5206\u53d1\u5185\u5bb9\u3002</p>"},{"location":"topics/vue/components/#_7","title":"\u63d2\u69fd\u5185\u5bb9\u5b9e\u4f8b","text":"<p>\u901a\u8fc7<code>&lt;todo-button&gt;{{ text }}&lt;/todo-button&gt;</code>\u53ef\u4ee5\u5411<code>TodoButton</code>\u5206\u53d1\u7236\u7ec4\u4ef6\u7684text\u5185\u5bb9\uff0c\u4ee5\u66ff\u6362\u5b50\u7ec4\u4ef6\u9ed8\u8ba4slot\u7684\u5185\u5bb9\u3002\u63d2\u69fd\u53ef\u4ee5\u8bbf\u95ee\u4e0e\u6a21\u677f\u5176\u4f59\u90e8\u5206\u76f8\u540c\u7684\u5b9e\u4f8bproperty(\u5373\u76f8\u540c\u7684\u201c\u4f5c\u7528\u57df\u201d)\uff0c\u4f46\u4e0d\u80fd\u8bbf\u95ee<code>&lt;todo-button&gt;</code>\u7ec4\u4ef6\u7684\u4f5c\u7528\u57df\u3002\u4f8b\u5982\uff0c\u4f8b\u5b50\u4e2d\u5c1d\u8bd5\u8bbf\u95ee<code>action</code>\u5c06\u4e0d\u8d77\u4f5c\u7528\uff1a</p> <ul> <li> <p>HTML\u4ee3\u7801 <pre><code>&lt;div id=\"app\"&gt;\n   &lt;!-- item is defined in root component, show: Delete First Item --&gt;\n   &lt;todo-button&gt;Delete {{ item }}&lt;/todo-button&gt;\n   &lt;!-- use default slot, show: Add an item  --&gt;\n   &lt;todo-button&gt;&lt;/todo-button&gt;\n   &lt;!-- action will be undefined here, show: an item --&gt;\n   &lt;todo-button action=\"Delete\"&gt;{{ action }} an item&lt;/todo-button&gt;\n&lt;/div&gt;\n</code></pre></p> </li> <li> <p>JS\u4ee3\u7801 <pre><code>const TodoButton = {\n   props: {\n      action: {\n         type: String,\n         default: 'Add'\n      }\n   },\n   template: `\n      &lt;button&gt;&lt;slot&gt;{{ action }} an item&lt;/slot&gt;&lt;/button&gt;\n   `\n}\n</code></pre></p> </li> </ul>"},{"location":"topics/vue/components/#_8","title":"\u5177\u540d\u63d2\u69fd\u5b9e\u4f8b","text":"<ul> <li>\u5728\u5411\u5177\u540d\u63d2\u69fd\u63d0\u4f9b\u5185\u5bb9\u7684\u65f6\u5019\uff0c\u6211\u4eec\u53ef\u4ee5\u5728\u4e00\u4e2a<code>&lt;template&gt;</code>\u5143\u7d20\u4e0a\u4f7f\u7528v-slot\u6307\u4ee4\uff0c\u5e76\u4ee5v-slot\u7684\u53c2\u6570\u7684\u5f62\u5f0f\u63d0\u4f9b\u5176\u540d\u79f0 <pre><code>&lt;base-layout&gt;\n  &lt;template v-slot:header&gt;\n    &lt;h1&gt;Here might be a page title&lt;/h1&gt;\n  &lt;/template&gt;\n\n  &lt;template v-slot:default&gt;\n    &lt;p&gt;A paragraph for the main content.&lt;/p&gt;\n    &lt;p&gt;And another one.&lt;/p&gt;\n  &lt;/template&gt;\n\n  &lt;template v-slot:footer&gt;\n    &lt;p&gt;Here's some contact info&lt;/p&gt;\n  &lt;/template&gt;\n&lt;/base-layout&gt;\n</code></pre></li> </ul>"},{"location":"topics/vue/components/#_9","title":"\u4f5c\u7528\u57df\u63d2\u69fd\u5b9e\u4f8b","text":"<p>\u8981\u4f7fslot\u7684\u5c5e\u6027\u5728\u7236\u7ea7\u63d0\u4f9b\u7684\u63d2\u69fd\u5185\u5bb9\u4e0a\u53ef\u7528\uff0c\u6211\u4eec\u53ef\u4ee5\u6dfb\u52a0\u4e00\u4e2a<code>&lt;slot&gt;</code>\u5143\u7d20\u5e76\u5c06\u5176\u4f5c\u4e3a\u4e00\u4e2a<code>attribute</code>\u7ed1\u5b9a\u3002</p> <ul> <li> <p>JS\u4ee3\u7801</p> <ul> <li><code>TodoList</code>\u7ec4\u4ef6\u901a\u8fc7slot\u5c5e\u6027\u66b4\u9732\u7ed9\u7236\u7ea7\u7ec4\u4ef6 <pre><code>const TodoList = {\n    data() {\n        return {\n            items: ['Feed a cat', 'Buy milk']\n        }\n    },\n    template: `\n        &lt;ul&gt;\n            &lt;li v-for=\"(item, index) in items\"&gt;\n                &lt;slot :item=\"item\" :index=\"index\"&gt;{{item}}&lt;/slot&gt;\n            &lt;/li&gt;\n        &lt;/ul&gt;\n    `\n}\n</code></pre></li> </ul> </li> <li> <p>HTML\u4ee3\u7801</p> <ul> <li><code>TodoList</code>\u7684\u7236\u7ea7\u7ec4\u4ef6\u901a\u8fc7<code>v-slot:default=\"slotProps\"</code>\u53ef\u4ee5\u62ff\u5230slot\u6240\u6709\u66b4\u9732\u7684\u5c5e\u6027 <pre><code>&lt;todo-list&gt;\n    &lt;template v-slot:default=\"slotProps\"&gt;\n        &lt;span style=\"color:blue;\"&gt;Change in parent component: {{ slotProps.item }}&lt;/span&gt;\n    &lt;/template&gt;\n&lt;/todo-list&gt;\n</code></pre></li> </ul> </li> </ul>"},{"location":"topics/vue/demo/","title":"\u6837\u4f8b\u6a21\u677f","text":"<p>\u57fa\u4e8eVue3.0+Element Plus\u7684\u6a21\u677f\uff0c\u6240\u6709\u4ee3\u7801\u53ef\u5728GitHub\u4ed3\u5e93\u4e2d\u627e\u5230</p>"},{"location":"topics/vue/demo/#_2","title":"\u5355\u9875\u9762\u6a21\u677f","text":""},{"location":"topics/vue/demo/#_3","title":"\u4ee3\u7801\u7ec4\u7ec7","text":"<pre><code>\u2514\u2500\u2500 single_page                 # \u6839\u76ee\u5f55\n    \u251c\u2500\u2500 css                     # CSS\u76ee\u5f55\n    \u2502   \u2514\u2500\u2500 index.css\n    \u251c\u2500\u2500 index.html              # HTML\u4e3b\u9875\n    \u251c\u2500\u2500 index.js                # JS\u4ee3\u7801\u5165\u53e3\n    \u2514\u2500\u2500 js                      # JS\u4ee3\u7801\u76ee\u5f55\n        \u251c\u2500\u2500 common              # \u516c\u5171\u7ec4\u4ef6\n        \u2502   \u251c\u2500\u2500 index.html\n        \u2502   \u2514\u2500\u2500 index.js\n        \u251c\u2500\u2500 footer              # \u9875\u811a\u7ec4\u4ef6\n        \u2502   \u251c\u2500\u2500 index.html\n        \u2502   \u2514\u2500\u2500 index.js\n        \u251c\u2500\u2500 header              # \u9875\u7709\u7ec4\u4ef6\n        \u2502   \u251c\u2500\u2500 index.html\n        \u2502   \u2514\u2500\u2500 index.js\n        \u251c\u2500\u2500 home                # \u4e3b\u9875\u9762\n        \u2502   \u251c\u2500\u2500 index.html\n        \u2502   \u2514\u2500\u2500 index.js\n        \u2514\u2500\u2500 index.js            # \u6839\u7ec4\u4ef6\n</code></pre>"},{"location":"topics/vue/demo/#_4","title":"\u591a\u9875\u9762\u6a21\u677f","text":""},{"location":"topics/vue/demo/#_5","title":"\u4ee3\u7801\u7ec4\u7ec7","text":"<pre><code>.\n\u2514\u2500\u2500 multi_page              # \u6839\u76ee\u5f55\n    \u251c\u2500\u2500 css                 # CSS\u76ee\u5f55\n    \u2502   \u2514\u2500\u2500 index.css\n    \u251c\u2500\u2500 index.html          # HTML\u4e3b\u9875\n    \u251c\u2500\u2500 index.js            # JS\u4ee3\u7801\u5165\u53e3\n    \u2514\u2500\u2500 js                  # JS\u4ee3\u7801\u76ee\u5f55\n        \u251c\u2500\u2500 about           # About\u9875\u9762\n        \u2502   \u251c\u2500\u2500 index.html\n        \u2502   \u2514\u2500\u2500 index.js\n        \u251c\u2500\u2500 common          # \u516c\u5171\u7ec4\u4ef6\n        \u2502   \u251c\u2500\u2500 index.html\n        \u2502   \u2514\u2500\u2500 index.js\n        \u251c\u2500\u2500 footer          # \u9875\u811a\u7ec4\u4ef6\n        \u2502   \u251c\u2500\u2500 index.html\n        \u2502   \u2514\u2500\u2500 index.js\n        \u251c\u2500\u2500 header          # \u9875\u7709\u7ec4\u4ef6\n        \u2502   \u251c\u2500\u2500 index.html\n        \u2502   \u2514\u2500\u2500 index.js\n        \u251c\u2500\u2500 home            # Home\u9875\u9762\n        \u2502   \u251c\u2500\u2500 index.html\n        \u2502   \u2514\u2500\u2500 index.js\n        \u2514\u2500\u2500 index.js        # \u6839\u7ec4\u4ef6\n</code></pre>"},{"location":"topics/vue/intro/","title":"Vue3\u7b80\u4ecb","text":"<p>\u4ecb\u7ecd<code>Vue3.0</code>\u7684\u57fa\u672c\u7528\u6cd5\u548c\u54cd\u5e94\u6027\u6a21\u578b\uff0c\u6240\u6709\u6837\u4f8b\u53ef\u5728GitHub\u4ed3\u5e93\u4e2d\u627e\u5230</p>"},{"location":"topics/vue/intro/#_1","title":"\u58f0\u660e\u5f0f\u6e32\u67d3","text":""},{"location":"topics/vue/intro/#_2","title":"\u4ee3\u7801\u5b9e\u4f8b","text":"<ul> <li> <p>HTML\u4ee3\u7801</p> <ul> <li>Vue.js\u4f7f\u7528\u4e86\u57fa\u4e8eHTML\u7684\u6a21\u677f\u8bed\u6cd5\uff0c\u5141\u8bb8\u5f00\u53d1\u8005\u58f0\u660e\u5f0f\u5730\u5c06DOM\u7ed1\u5b9a\u81f3\u5e95\u5c42\u7ec4\u4ef6\u5b9e\u4f8b\u7684\u6570\u636e\uff0c\u5177\u4f53\u8bed\u6cd5\u53ef\u53c2\u8003\u201c\u6a21\u677f\u8bed\u6cd5\u201d\u5b98\u65b9\u6587\u6863</li> <li>\u6700\u5e38\u89c1\u7684\u7ed1\u5b9aDOM\u548c\u6570\u636e\u7684\u65b9\u6cd5\u662f\uff1a\u53cc\u5927\u62ec\u53f7<code>{{ }}</code><ul> <li>\u4f8b\u5982\uff0c\u5b9e\u4f8b\u4e2d\u7684<code>{{ counter }}</code>\u5c31\u5c06<code>&lt;div&gt;</code>\u4e2d\u7684\u6587\u672c\u548c\u6839\u7ec4\u4ef6\u5b9e\u4f8b<code>vm</code>\u7684<code>counter</code>\u6570\u636e\u7ed1\u5b9a\u3002\u5f53<code>vm.counter</code>\u53d1\u751f\u53d8\u5316\u65f6\uff0c<code>&lt;div&gt;</code>\u4e2d\u7684\u6587\u672c\u4e5f\u4f1a\u76f8\u5e94\u53d8\u5316 <pre><code>&lt;div id=\"app\"&gt;\n    Counter: {{ counter }}\n&lt;/div&gt;\n</code></pre></li> </ul> </li> </ul> </li> <li> <p>JS\u4ee3\u7801</p> <ul> <li>\u6bcf\u4e2aVue\u5e94\u7528\u90fd\u662f\u901a\u8fc7\u5168\u5c40API<code>createApp</code>\u51fd\u6570\u521b\u5efa\u7684\u4e00\u4e2a\u65b0\u5e94\u7528\u5b9e\u4f8b\u5f00\u59cb\u7684\uff0c\u4f20\u9012\u7ed9<code>createApp</code>\u7684\u9009\u9879\u7528\u4e8e\u914d\u7f6e\u6839\u7ec4\u4ef6\uff0c\u5f53\u6211\u4eec\u6302\u8f7d\u5e94\u7528\u65f6\uff0c\u8be5\u7ec4\u4ef6\u88ab\u7528\u4f5c\u6e32\u67d3\u7684\u8d77\u70b9<ul> <li>\u4f8b\u5982\uff0c\u5b9e\u4f8b\u4e2d <code>RootComponent</code>\u88ab\u4f5c\u4e3a\u6839\u7ec4\u4ef6\u9009\u9879\u4f20\u7ed9<code>createApp</code>\u521b\u5efa\u51fa\u5e94\u7528\u5b9e\u4f8b<code>app</code>\u3002\u901a\u8fc7\u5e94\u7528API<code>mount</code>\uff0c\u6839\u7ec4\u4ef6\u5b9e\u4f8b<code>vm</code>\u88ab\u521b\u5efa\uff0c\u5e76\u6302\u8f7d\u5230id\u662f<code>app</code>\u7684<code>&lt;div&gt;</code>\u6807\u7b7e\uff0c\u5f00\u59cb\u6e32\u67d3 <pre><code>const RootComponent = {\n    data() {\n        return {\n            counter: 0\n        }\n    },\n    mounted() {\n        setInterval(() =&gt; {\n            this.counter++\n        }, 1000)\n    }\n}\n\nconst app = Vue.createApp(RootComponent)\nconst vm = app.mount('#app')\n</code></pre></li> </ul> </li> </ul> </li> </ul>"},{"location":"topics/vue/intro/#_3","title":"\u6df1\u5165\u7406\u89e3\u54cd\u5e94\u6027\u539f\u7406","text":"<p>Vue\u6700\u72ec\u7279\u7684\u7279\u6027\u662f\u5176\u975e\u5165\u4fb5\u6027\u7684\u54cd\u5e94\u6027\u7cfb\u7edf\uff0c\u54cd\u5e94\u6027\u7cfb\u7edf\u9700\u8981\u89e3\u51b3\u4ee5\u4e0b\u51e0\u4e2a\u95ee\u9898\uff1a</p>"},{"location":"topics/vue/intro/#_4","title":"\u4ec0\u4e48\u662f\u54cd\u5e94\u6027\uff1f","text":"<ul> <li>\u7b80\u5355\u6765\u8bf4\uff0c\u54cd\u5e94\u6027\u7cfb\u7edf\u4e2d\u7684\u5404\u7ec4\u4ef6\u80fd\u611f\u77e5\u5230\u5176\u4ed6\u76f8\u5173\u7ec4\u4ef6\u7684\u53d8\u5316\uff0c\u66f4\u65b0\u81ea\u5df1\u7684\u72b6\u6001\u3002\u4f8b\u5982\uff1a<code>sum = val1 + val2</code>\u4f5c\u4e3a\u4e00\u4e2a\u54cd\u5e94\u7cfb\u7edf\uff0c\u6211\u4eec\u9700\u8981\u5728\u8bfb\u5199\u65f6\u505a\u989d\u5916\u7684\u4e8b\u60c5(\u526f\u4f5c\u7528)\uff0c\u4ece\u800c\u5c06<code>sum</code>\u548c<code>val1, val2</code>\u7ed1\u5b9a\uff1a<ul> <li>\u5f53\u4e00\u4e2a\u503c\u88ab\u8bfb\u53d6\u65f6\u8fdb\u884c\u8ffd\u8e2a<ul> <li>\u54cd\u5e94\u6027\u7cfb\u7edf\u7684\u8bfb\u64cd\u4f5c\u662f\u6709\u526f\u4f5c\u7528\u7684\u3002\u4f8b\u5982\uff0c\u5f53\u8bfb\u53d6<code>sum</code>\u7684\u503c\u65f6\uff0c\u9700\u8981\u8ffd\u8e2a\u8bfb\u64cd\u4f5c\u7684\u4f9d\u8d56<code>val1</code>\u548c<code>val2</code>\uff0c\u8bb0\u5f55\u4f9d\u8d56\u5173\u7cfb</li> </ul> </li> <li>\u5f53\u67d0\u4e2a\u503c\u6539\u53d8\u65f6\u8fdb\u884c\u68c0\u6d4b\uff0c\u91cd\u65b0\u8fd0\u884c\u4ee3\u7801\u6765\u8bfb\u53d6\u539f\u59cb\u503c<ul> <li>\u540c\u6837\uff0c\u54cd\u5e94\u7cfb\u7edf\u7684\u5199\u64cd\u4f5c\u4e5f\u6709\u540c\u6837\u7684\u526f\u4f5c\u7528\u3002\u4f8b\u5982\uff0c\u5f53<code>val1</code>\u6216\u8005<code>val2</code>\u53d1\u751f\u53d8\u5316\u65f6\uff0c\u9700\u8981\u68c0\u6d4b\u8fd9\u4e2a\u5199\u64cd\u4f5c\u7684\u4f9d\u8d56<code>sum</code>\uff0c\u518d\u6b21\u8fd0\u884c<code>sum = val1 + val2</code>\u6765\u66f4\u65b0<code>sum</code>\u7684\u503c</li> </ul> </li> </ul> </li> </ul>"},{"location":"topics/vue/intro/#vue","title":"Vue\u5982\u4f55\u6307\u5b9a\u54ea\u4e9b\u4ee3\u7801\u5728\u6267\u884c\uff1f","text":"<ul> <li>\u4e0a\u9762\u7684\u4f8b\u5b50\u4e2d\u7684\u526f\u4f5c\u7528<code>sum = val1 + val2</code>\u88ab\u5305\u88f9\u5728\u4e00\u4e2a\u51fd\u6570<code>updateSum</code>\u4e2d\u3002\u5f53\u5728\u6570\u503c\u53d8\u5316\u65f6\uff0c\u54cd\u5e94\u6027\u7cfb\u7edf\u80fd\u968f\u65f6\u6267\u884c\u76f8\u5e94\u7684\u526f\u4f5c\u7528 <pre><code>const updateSum = () =&gt; {\n    sum = val1 + val2\n}\n</code></pre></li> </ul>"},{"location":"topics/vue/intro/#vue_1","title":"Vue\u5982\u4f55\u8ddf\u8e2a\u53d8\u5316\uff1f","text":"<ul> <li>\u526f\u4f5c\u7528\u6309\u7167\u4e0a\u8ff0\u65b9\u6cd5\u88ab\u51c6\u5907\u597d\u540e\uff0c\u9700\u8981\u89e3\u51b3\u7684\u95ee\u9898\u662f\uff1aVue\u662f\u5982\u4f55\u77e5\u9053\u54ea\u4e2a\u526f\u4f5c\u7528\uff0c\u5e94\u8be5\u5728\u4f55\u65f6\u8fd0\u884c\uff0c\u5e76\u80fd\u5728\u9700\u8981\u65f6\u518d\u6b21\u6267\u884c\u5b83\uff1f</li> <li>Vue\u4f1a\u5c06\u4e00\u4e2a\u7ec4\u4ef6\u7684<code>data</code>\u51fd\u6570\u8fd4\u56de\u7684\u5bf9\u8c61\u5305\u88f9\u5728\u4e00\u4e2a\u5e26\u6709<code>get</code>\u548c<code>set</code>\u5904\u7406\u7a0b\u5e8f\u7684Proxy\u4e2d\uff0cProxy \u662f\u4e00\u4e2a\u5bf9\u8c61\uff0c\u5b83\u5305\u88c5\u4e86\u53e6\u4e00\u4e2a\u5bf9\u8c61\uff0c\u5b58\u50a8\u4e3a<code>this.$data</code>\uff0c\u5e76\u5141\u8bb8\u4f60\u62e6\u622a\u5bf9\u8be5\u5bf9\u8c61\u7684\u4efb\u4f55\u4ea4\u4e92\u3002 <pre><code>const dinner = {\n    meal: 'tacos'\n}\n\nconst handler = {\n    get(target, property, receiver) {\n        track(target, property)\n        return Reflect.get(...arguments)\n    },\n    set(target, property, value, receiver) {\n        trigger(target, property)\n        return Reflect.set(...arguments)\n    }\n}\n\nconst proxy = new Proxy(dinner, handler)\nconsole.log(proxy.meal)\n</code></pre></li> <li>\u4ee5\u4e0a\u9762\u7684\u4ee3\u7801\u4e3a\u4f8b\uff0c<ul> <li>\u5f53\u4e00\u4e2a\u503c\u88ab\u8bfb\u53d6\u65f6\u8fdb\u884c\u8ffd\u8e2a\uff1a<ul> <li>proxy\u7684<code>get</code>\u5904\u7406\u51fd\u6570\u4e2d<code>track</code>\u51fd\u6570\u8bb0\u5f55\u4e86\u8be5property\u548c\u5f53\u524d\u526f\u4f5c\u7528</li> </ul> </li> <li>\u5f53\u67d0\u4e2a\u503c\u6539\u53d8\u65f6\u8fdb\u884c\u68c0\u6d4b\uff0c\u91cd\u65b0\u8fd0\u884c\u4ee3\u7801\u6765\u8bfb\u53d6\u539f\u59cb\u503c\uff1a<ul> <li>proxy\u7684<code>set</code>\u5904\u7406\u51fd\u6570\u4e2d<code>trigger</code>\u51fd\u6570\u67e5\u627e\u54ea\u4e9b\u526f\u4f5c\u7528\u4f9d\u8d56\u4e8e\u8be5property\u5e76\u6267\u884c\u5b83\u4eec</li> </ul> </li> </ul> </li> <li>\u4e0b\u9762\u6211\u4eec\u7528\u4e00\u4e2a\u7ec4\u4ef6\u8868\u8fbe\u54cd\u5e94\u7cfb\u7edf<code>sum = val1 + val2</code><ul> <li><code>data</code>\u8fd4\u56de\u7684\u5bf9\u8c61\u5c06\u88ab\u5305\u88f9\u5728\u54cd\u5e94\u5f0f\u4ee3\u7406\u4e2d\uff0c\u5e76\u5b58\u50a8\u4e3a<code>this.$data</code>\u3002Property<code>this.val1</code>\u548c<code>this.val2</code>\u5206\u522b\u662f<code>this.$data.val1</code>\u548c<code>this.$data.val2</code>\u7684\u522b\u540d\uff0c\u56e0\u6b64\u5b83\u4eec\u901a\u8fc7\u76f8\u540c\u7684\u4ee3\u7406</li> <li>Vue\u5c06\u628a<code>sum</code>\u7684\u51fd\u6570\u5305\u88f9\u5728\u4e00\u4e2a\u526f\u4f5c\u7528\u4e2d\u3002\u5f53\u6211\u4eec\u8bd5\u56fe\u8bbf\u95ee<code>this.sum</code>\u65f6\uff0c\u5b83\u5c06\u8fd0\u884c\u8be5\u526f\u4f5c\u7528\u6765\u8ba1\u7b97\u6570\u503c\u3002\u5305\u88f9<code>$data</code>\u7684\u54cd\u5e94\u5f0f\u4ee3\u7406\u5c06\u4f1a\u8ffd\u8e2a\u5230\uff0c\u5f53\u526f\u4f5c\u7528\u8fd0\u884c\u65f6\uff0cproperty<code>val1</code>\u548c<code>val2</code>\u88ab\u8bfb\u53d6\u4e86 <pre><code>const vm = createApp({\ndata() {\n    return {\n        val1: 2,\n        val2: 3\n    }\n},\ncomputed: {\n    sum() {\n        return this.val1 + this.val2\n    }\n}\n}).mount('#app')\n\nconsole.log(vm.sum) // 5\nvm.val1 = 3\nconsole.log(vm.sum) // 6\n</code></pre></li> </ul> </li> </ul>"},{"location":"topics/vue/intro/#_5","title":"\u5982\u4f55\u8ba9\u6e32\u67d3\u54cd\u5e94\u53d8\u5316\uff1f","text":"<ul> <li>\u4e00\u4e2a\u7ec4\u4ef6\u7684\u6a21\u677f\u88ab\u7f16\u8bd1\u6210\u4e00\u4e2a<code>render</code>\u51fd\u6570\uff0c<code>render</code>\u51fd\u6570\u901a\u8fc7<code>h</code>\u51fd\u6570\u521b\u5efaVNodes\uff0c\u63cf\u8ff0\u8be5\u7ec4\u4ef6\u5e94\u8be5\u5982\u4f55\u88ab\u6e32\u67d3\u3002\u5b83\u88ab\u5305\u88f9\u5728\u4e00\u4e2a\u526f\u4f5c\u7528\u4e2d\uff0c\u5141\u8bb8Vue\u5728\u8fd0\u884c\u65f6\u8ddf\u8e2a\u88ab\u201c\u89e6\u8fbe\u201d\u7684property\u3002\u5982\u679c\u8fd9\u4e9bproperty\u4e2d\u7684\u4efb\u4f55\u4e00\u4e2a\u968f\u540e\u53d1\u751f\u4e86\u53d8\u5316\uff0c\u5b83\u5c06\u89e6\u53d1\u526f\u4f5c\u7528\u518d\u6b21\u8fd0\u884c\uff0c\u91cd\u65b0\u8fd0\u884c<code>render</code>\u51fd\u6570\u4ee5\u751f\u6210\u65b0\u7684VNodes</li> </ul>"},{"location":"topics/vue/intro/#_6","title":"\u751f\u547d\u5468\u671f","text":""},{"location":"topics/vue/intro/#_7","title":"\u751f\u547d\u5468\u671f\u5b9e\u4f8b","text":"<ul> <li>JS\u4ee3\u7801<ul> <li>\u6240\u6709\u751f\u547d\u5468\u671f\u94a9\u5b50\u7684<code>this</code>\u4e0a\u4e0b\u6587\u5c06\u81ea\u52a8\u7ed1\u5b9a\u81f3\u5b9e\u4f8b\u4e2d\uff0c\u56e0\u6b64\u53ef\u4ee5\u8bbf\u95ee\u7ec4\u4ef6\u7684data\u3001computed\u548cmethods</li> <li>\u751f\u547d\u5468\u671f\u94a9\u5b50\u51fd\u6570\u4f1a\u6309\u7167\u751f\u547d\u5468\u671f\u7684\u6267\u884c\u987a\u5e8f\uff0c\u88ab\u6267\u884c\uff0c\u8be6\u60c5\u53ef\u4ee5\u53c2\u8003\u5b98\u65b9\u6587\u6863 <pre><code>const LifeCycle = {\n    template: `\n        &lt;p&gt;Life Cycle Component&lt;/p&gt;\n    `,\n    beforeCreate() {\n        console.log('life cycle function: beforeCreate')\n    },\n    created() {\n        console.log('life cycle function: created')\n    },\n    beforeMount() {\n        console.log('life cycle function: beforeMount')\n    },\n    mounted() {\n        console.log('life cycle function: mounted')\n    },\n    beforeUpdate() {\n        console.log('life cycle function: beforeUpdate')\n    },\n    updated() {\n        console.log('life cycle function: updated')\n    },\n    beforeUnmount() {\n        console.log('life cycle function: beforeUnmount')\n    },\n    unmounted() {\n        console.log('life cycle function: unmounted')\n    }\n}\n</code></pre></li> </ul> </li> </ul>"},{"location":"topics/vue/intro/#_8","title":"\u53c2\u8003","text":"<ul> <li>Vue\u5b98\u65b9\u6587\u6863</li> </ul>"},{"location":"topics/webassembly/","title":"WebAssembly","text":"<p>\u7b80\u5355\u7684\u201cWebAssembly + C/Cpp\u201d\u6837\u4f8b\uff0c\u6240\u6709\u6837\u4f8b\u53ef\u5728GitHub\u4ed3\u5e93\u4e2d\u627e\u5230</p>"},{"location":"topics/webassembly/#webassembly-with-c","title":"WebAssembly with C","text":""},{"location":"topics/webassembly/#_1","title":"\u4ee3\u7801\u5b9e\u4f8b","text":"<ul> <li> <p>C\u4ee3\u7801</p> <ul> <li>\u901a\u8fc7<code>EMSCRIPTEN_KEEPALIVE</code>\u5b8f\u5c06C\u51fd\u6570\u8f93\u51fa\u7ed9JS\u4ee3\u7801</li> <li>\u652f\u6301\u5b57\u7b26\u4e32\u3001\u6574\u578b\u548c\u6d6e\u70b9\u6570\u5728C\u4ee3\u7801\u548cJS\u4ee3\u7801\u4e4b\u95f4\u4f20\u9012 <pre><code>#include &lt;stdio.h&gt;\n\n#include &lt;emscripten.h&gt;\n\nEMSCRIPTEN_KEEPALIVE\nint PrintString(const char* str)\n{\n    printf(\"[%s]: %s\\n\", __func__, str);\n    return 1;\n}\n\nEMSCRIPTEN_KEEPALIVE\nconst char* GetString()\n{\n    static const char str[] = \"String from C\";\n    return str;\n}\n\nEMSCRIPTEN_KEEPALIVE\nint AddInt(int a, int b)\n{\n    int res = a + b;\n    printf(\"[%s]: %d + %d = %d\\n\", __func__, a, b, res);\n    return res;\n}\n\nEMSCRIPTEN_KEEPALIVE\nfloat DivideFloat(float a, float b)\n{\n    float res = a / b;\n    printf(\"[%s]: %f / %f = %f\\n\", __func__, a, b, res);\n    return res;\n}\n</code></pre></li> </ul> </li> <li> <p>HTML\u4ee3\u7801</p> <ul> <li>JS\u4e2d\u5b57\u7b26\u4e32\u53ef\u4ee5\u521b\u5efa\u5728\u5806\u6216\u8005\u6808\u4e0a\uff0c\u5728\u5806\u4e0a\u521b\u5efa\u7684\u5b57\u7b26\u4e32\u9700\u8981\u624b\u52a8\u91ca\u653e</li> <li>\u7531\u4e8eemcc\u9ed8\u8ba4\u4e0d\u8f93\u51fa<code>malloc</code>\u548c<code>free</code>\uff0c\u5982\u679c\u9700\u8981\u5728\u5806\u4e0a\u521b\u5efa\u5b57\u7b26\u4e32\uff0c\u9700\u8981\u5728\u7f16\u8bd1\u65f6\u52a0\u5165<code>-s \"EXPORTED_FUNCTIONS=['_malloc', '_free']\"</code>\u7f16\u8bd1\u9009\u9879 <pre><code>&lt;script&gt;\n    // Set up wasm module callback function to print info\n    Module = {};\n    Module.onRuntimeInitialized = function () {\n        console.log(Module)\n        // Print C function, malloc and free can be printed here\n        // if they are exported intentionally when compiling\n        console.log(Module['asm'])\n    }\n    // Set up button function\n    function button() {\n        // Pass string from JS to C\n        strOnStack = allocateUTF8OnStack(\"Hello from JS stack\");\n        console.log(Module._PrintString(strOnStack));\n        strOnHeap = allocateUTF8(\"Hello from JS heap\");\n        console.log(Module._PrintString(strOnHeap));\n        Module._free(strOnHeap);\n\n        // Get string from C to JS\n        var str = UTF8ToString(Module._GetString());\n        console.log(typeof (str));\n        console.log(str);\n\n        // Process Integer in C\n        console.log(Module._AddInt(1, 2));\n\n        // Process Float in C\n        console.log(Module._DivideFloat(7, 2.5));\n    }\n&lt;/script&gt;\n</code></pre></li> </ul> </li> </ul>"},{"location":"topics/webassembly/#webassembly-with-cpp","title":"WebAssembly with Cpp","text":""},{"location":"topics/webassembly/#_2","title":"\u4ee3\u7801\u5b9e\u4f8b","text":"<ul> <li>Cpp\u4ee3\u7801<ul> <li>\u4e3a\u4e86\u9632\u6b62C++\u7684<code>name mangling</code>\uff0c\u6240\u6709\u7684API\u90fd\u901a\u8fc7<code>extern \"C\"</code>\u4fee\u9970\u540e\uff0c\u4ee5C API\u7684\u5f62\u5f0f\u4f20\u7ed9JS</li> <li>\u652f\u6301C++\u591a\u6001\uff0cSTL\u5e93 <pre><code>EMSCRIPTEN_KEEPALIVE extern \"C\"\nint CppPoly()\n{\n    std::unique_ptr&lt;CPP::Animal&gt; a_dog = std::make_unique&lt;CPP::Dog&gt;(\"wang wang\");\n    std::unique_ptr&lt;CPP::Animal&gt; a_bird = std::make_unique&lt;CPP::Bird&gt;(\"zha zha\");\n\n    a_dog-&gt;set_weight(10);\n    a_bird-&gt;set_weight(2);\n\n    a_dog-&gt;dump();\n    a_bird-&gt;dump();\n\n    return 1;\n}\n\nEMSCRIPTEN_KEEPALIVE extern \"C\"\nconst char* ConvertString(const char* input)\n{\n    static std::string s_str;\n    s_str.clear();\n    s_str.append(input);\n    std::cout &lt;&lt; \"Append CPP to the string: \" &lt;&lt; s_str &lt;&lt; std::endl;\n    s_str.append(\" CPP\");\n    std::cout &lt;&lt; \"Return: \" &lt;&lt; s_str &lt;&lt; std::endl;\n    return s_str.c_str();\n}\n</code></pre></li> </ul> </li> <li>HTML\u4ee3\u7801<ul> <li>\u7528\u6cd5\u548c\u4e0a\u9762\u7684C\u4ee3\u7801\u4f8b\u5b50\u7c7b\u4f3c\uff0c\u6b64\u5904\u4e0d\u518d\u7ec6\u8ff0</li> </ul> </li> </ul>"},{"location":"topics/webassembly/#webassembly_1","title":"WebAssembly\u7684\u5185\u5b58\u6a21\u578b","text":"<p>Emscripten\u63d0\u4f9b\u4e86\u4e00\u4e2a<code>ArrayBuffer</code>\u5bf9\u8c61\uff0c\u7528\u4e8eC/C++\u548cJS\u4ee3\u7801\u5171\u4eab\u5185\u5b58\uff0c\u9ed8\u8ba4\u5185\u5b58\u5927\u5c0f\u4e3a\uff1a16MB (2^24 = 16777216)\u3002\u6211\u4eec\u53ef\u4ee5\u5728\u6d4f\u89c8\u5668\u7ec8\u7aef\u901a\u8fc7<code>Module['asm']['memory'].buffer</code>\u5f97\u5230<code>ArrayBuffer</code>\u5bf9\u8c61\u3002</p> \u5bf9\u8c61 TypedArray \u5bf9\u5e94C\u6570\u636e\u7c7b\u578b Module.HEAP8 Int8Array int8 Module.HEAP16 Int16Array int16 Module.HEAP32 Int32Array int32 Module.HEAPU8 Uint8Array uint8 Module.HEAPU16 Uint16Array uint16 Module.HEAPU32 Uint32Array uint32 Module.HEAPF32 Float32Array float Module.HEAPF64 Float64Array double <p>\u9488\u5bf9\u8fd916MB\u7684\u5185\u5b58\u7a7a\u95f4\uff0cEmscripten\u5728\u5176\u4e0a\u9762\u521b\u5efa\u4e868\u79cdview(\u5982\u4e0a\u8868)\uff0c\u5206\u522b\u5bf9\u5e948\u79cd\u6570\u636e\u7c7b\u578b\u3002\u4f8b\u5982\uff0c<code>Module['HEAP8'] = new Int8Array(Module['asm']['memory'].buffer)</code>\u5c31\u5728<code>ArrayBuffer</code>\u5bf9\u8c61\u4e0a\u521b\u5efa\u4e86\u4e00\u4e2a<code>HEAP8</code>\u7684view\u3002\u4e0b\u56fe\u4e2d\uff0c\u6240\u6709view\u7684\u7a7a\u95f4\u5185\u5b58\u7a7a\u95f4\u662f\u4e00\u6837\u7684(\u4e0b\u56fe\u4e2d\u5185\u5b58\u7684\u8d77\u59cb\u5185\u5bb9\u90fd\u662f\u4e00\u6837\u7684\uff0c\u5927\u5c0f\u4e5f\u90fd\u662f16MB)\uff0c\u7531\u7f16\u8bd1\u5668\u786e\u4fdd\u4e0d\u540c\u53d8\u91cf\u7684\u5730\u5740\u4e0d\u51b2\u7a81\u3002</p> <p></p>"},{"location":"topics/webassembly/#_3","title":"\u57fa\u672c\u6570\u636e\u7c7b\u578b\u7684\u4f20\u9012","text":"<p>\u57fa\u672c\u6570\u636e\u7c7b\u578b\u6309\u503c\u4f20\u9012\u4e0d\u9700\u8981\u8003\u8651\u5185\u5b58\u6a21\u578b\uff0c\u76f4\u63a5\u7528JS\u53d8\u91cf\u5c31\u53ef\u4ee5\u4f20\u9012\u548c\u63a5\u6536\u6570\u636e\u3002</p> <p>\u5982\u679c\u57fa\u672c\u6570\u636e\u7c7b\u578b\u6309\u6307\u9488\u4f20\u9012\uff0c\u53ef\u4ee5\u901a\u8fc7<code>Module.HEAP_[addr]</code>\u7684\u65b9\u5f0f\u5728JS\u4e2d\u76f4\u63a5\u83b7\u53d6\u5185\u5b58\u7684\u503c\uff0c\u5176\u4e2d<code>addr</code>\u5c31\u662fC\u4ee3\u7801\u8fd4\u56de\u7684\u53d8\u91cf\u6307\u9488\u3002C\u4ee3\u7801\u4e2d\u7684\u975e\u5c40\u90e8\u53d8\u91cf\u90fd\u6784\u5efa\u5728<code>ArrayBuffer</code>\u5bf9\u8c61\u4e0a\uff0c\u56e0\u6b64JS\u53ef\u4ee5\u901a\u8fc7\u76f8\u5e94\u7684view\u8fdb\u884c\u8bbf\u95ee\u3002JS\u4ee3\u7801\u62ff\u5230C\u4ee3\u7801\u8fd4\u56de\u7684\u5185\u5b58\u6307\u9488\u540e\uff0c\u7ecf\u8fc7\u504f\u79fb\u8ba1\u7b97\uff0c\u5c31\u53ef\u4ee5\u5f97\u5230\u53d8\u91cf\u5728view\u4e2d\u7684\u504f\u79fb\u3002\u5728JS\u4e2d\u5c06\u5185\u5b58\u5185\u5bb9\u62f7\u8d1d\u5230\u672c\u5730\uff0c\u5c31\u5b8c\u6210\u4e86\u4eceC\u4ee3\u7801\u9879JS\u4ee3\u7801\u4f20\u6570\u636e\u7684\u529f\u80fd\u3002</p> <p>\u4f8b\u5b50\"mem\"\u5b9e\u73b0\u4e86C\u4ee3\u7801\u548cJS\u4ee3\u7801\u5bf9\u57fa\u672c\u6570\u636e\u7c7b\u578b\u7684\u8bfb\u5199\uff1a</p> <ul> <li> <p>Cpp\u4ee3\u7801</p> <ul> <li>C\u4ee3\u7801\u4e2d\u7684\u5168\u5c40\u53d8\u91cf\u5b58\u5728\u4e8e<code>ArrayBuffer</code>\u5bf9\u8c61\uff0c\u5728JS\u4e2d\u53ef\u901a\u8fc7\u5bf9\u5e94\u7684View\u52a0\u5730\u5740\u8bbf\u95ee</li> <li>\u51fd\u6570\u8fd4\u56de\u7684\u6307\u9488\uff0c\u5728JS\u4ee3\u7801\u4e2d\u5bf9\u5e94View\u4e0a\u7684\u5730\u5740 <pre><code>int g_int = 42;\ndouble g_double = 3.1415926;\n\nEMSCRIPTEN_KEEPALIVE\nint* GetIntPtr()\n{\n    return &amp;g_int;\n}\n\nEMSCRIPTEN_KEEPALIVE\ndouble* GetDoublePtr() {\n    return &amp;g_double;\n}\n\nEMSCRIPTEN_KEEPALIVE\nvoid PrintData() {\n    printf(\"[%s]: g_int addr = %p, val = %d\\n\", __func__, &amp;g_int, g_int);\n    printf(\"[%s]: g_double addr = %p, val = %lf\\n\", __func__, &amp;g_double, g_double);\n}\n</code></pre></li> </ul> </li> <li> <p>HTML\u4ee3\u7801</p> <ul> <li>\u901a\u8fc7<code>Module.HEAP32[addr]</code>\u53ef\u4ee5\u8bbf\u95ee\u5185\u5b58\u4e2d\u7684<code>int32</code>\u53d8\u91cf\uff0c\u5176\u4ed6\u7c7b\u578b\u65b9\u6cd5\u96f7\u540c <pre><code>&lt;script&gt;\n    function button() {\n        // HEAP32 heap\n        var int_ptr = Module._GetIntPtr();\n        // right shift 2 because sizeof(int) == 4(2^2)\n        var int_value = Module.HEAP32[int_ptr &gt;&gt; 2];\n        // Console output: Module.HEAP32[256] = 42\n        console.log(\"Module.HEAP32[\" +(int_ptr &gt;&gt; 2) + \"] = \" + int_value);\n\n        // HEAPF64 heap\n        var double_ptr = Module._GetDoublePtr();\n        // right shift 2 because sizeof(double) == 8(2^3)\n        var double_value = Module.HEAPF64[double_ptr &gt;&gt; 3];\n        // Console output: Module.HEAPF64[201] = 3.1415926\n        console.log(\"Module.HEAPF64[\" +(double_ptr &gt;&gt; 3) + \"] = \" + double_value);\n\n        // Modify the memory\n        Module.HEAP32[int_ptr &gt;&gt; 2] = 13;\n        Module.HEAPF64[double_ptr &gt;&gt; 3] = 123456.789\n        // Console output: C{g_int:13} C{g_double:123456.789000}\n        Module._PrintData()\n    }\n&lt;/script&gt;\n</code></pre></li> </ul> </li> <li> <p>\u5b9e\u9a8c\u7ed3\u679c</p> <p></p> </li> </ul>"},{"location":"topics/webassembly/#64","title":"64\u4f4d\u6570\u636e\u7c7b\u578b\u7684\u4f20\u9012","text":"<p>\u4e0a\u9762\u7684<code>HEAP_</code>\u51fd\u6570\u6ca1\u6709\u9488\u5bf964\u4f4d\u6570\u636e\u7684\u64cd\u4f5c\uff0c\u4f46\u662f<code>emcc</code>\u63d0\u4f9b\u4e86\u66f4\u4e0a\u4e00\u5c42\u7684\u65b9\u6cd5<code>setValue</code>\u548c<code>getValue</code>\uff0c\u652f\u6301<code>i8</code>, <code>i16</code>, <code>i32</code>, <code>i64</code>, <code>float</code>, <code>double</code>\u4e2d\u7684\u4efb\u610f\u7c7b\u578b\uff0c\u8be6\u60c5\u53ef\u53c2\u8003\u624b\u518c\u3002\u9ed8\u8ba4\u60c5\u51b5\u4e0b\uff0c\u8fd9\u4e24\u4e2a\u51fd\u6570\u4e0d\u4f1a\u88abexport\uff0c\u56e0\u6b64\u5728\u7f16\u8bd1\u65f6\u9700\u8981\u6dfb\u52a0<code>\"EXPORTED_FUNCTIONS=[getValue, setValue]\"</code>\u9009\u9879\u3002</p> <p>\u6ce8\u610f\uff1a\u5f53\u524d\u7248\u672c\u7684<code>emcc</code>\u7684<code>getValue</code>\u5bf9\u4e8e64\u4f4d\u6574\u6570\u7684\u8bfb\u53d6\u548c32\u4f4d\u6574\u6570\u7684\u8bfb\u53d6\u5b8c\u5168\u4e00\u6837\uff0c\u56e0\u6b64\u5982\u679c\u5f53\u524d\u6570\u636e\u8d85\u8fc7<code>2^32</code>\u5927\u5c0f\u4f1a\u5b58\u5728\u95ee\u9898\uff0c\u8bf7\u901a\u8fc7\u5206\u522b\u8bfb\u53d6\u4f4e32\u4f4d\u548c\u9ad832\u4f4d\u83b7\u53d6\u5b8c\u6574\u768464\u4f4d\u6570\u636e\u3002\u800c<code>setValue</code>\u6ca1\u6709\u6b64\u95ee\u9898\u3002</p> <p>\u4f8b\u5b50\"mem_64\"\u5b9e\u73b0\u4e86C\u4ee3\u7801\u548cJS\u4ee3\u7801\u5bf964\u4f4d\u6574\u6570\u7684\u8bfb\u5199\uff1a api.c<pre><code>EMSCRIPTEN_KEEPALIVE\nint64_t* GetInt64Ptr()\n{\n   return &amp;g_int64;\n}\n\nEMSCRIPTEN_KEEPALIVE\nvoid PrintData() {\n   printf(\"[%s]: g_int64 addr = %p, val = %lld\\n\", __func__, &amp;g_int64, g_int64);\n}\n</code></pre> index.html<pre><code>&lt;script&gt;\n    function button() {\n        // Get 64-bit data\n        const int64_ptr = Module._GetInt64Ptr();\n        const int64_low32 = BigInt(Module.HEAP32[int64_ptr &gt;&gt; 2])\n        const int64_high32 = BigInt(Module.HEAP32[(int64_ptr + 4) &gt;&gt; 2])\n        const int64_value = (int64_high32 &lt;&lt; BigInt(32)) + int64_low32\n        console.log(\"Module.getValue[\" + int64_ptr + \"] = \" + int64_value.toString(16));\n\n        // Set 64-bit data\n        Module.setValue(int64_ptr, -1 * Math.pow(2, 33), \"i64\")\n        Module._PrintData()\n    }\n&lt;/script&gt;\n</code></pre></p>"},{"location":"topics/webassembly/#_4","title":"\u6570\u7ec4\u7c7b\u578b\u7684\u4f20\u9012","text":"<p>\u548c\u57fa\u672c\u6570\u636e\u7c7b\u578b\u6307\u9488\u4f20\u9012\u4e0d\u540c\uff0c\u6570\u7ec4\u7c7b\u578b\u4f20\u9012\u9700\u8981\u77e5\u9053\u6570\u7ec4\u5927\u5c0f\u3002\u5728JS\u4ee3\u7801\u4e2d\u62ff\u5230\u6570\u7ec4\u7684\u8d77\u59cb\u5730\u5740\u548c\u957f\u5ea6\u540e\uff0c\u5c06\u5168\u90e8\u5185\u5bb9\u62f7\u8d1d\u5230JS\u672c\u5730\u53d8\u91cf\u4e2d\u3002\u540c\u65f6\uff0cJS\u5e94\u8be5\u8d1f\u8d23\u5185\u5b58\u7684\u91ca\u653e\u3002</p> <p>\u4f8b\u5b50\"web_mem_arr\"\u5b9e\u73b0\u4e86C\u4ee3\u7801\u548cJS\u4ee3\u7801\u5bf9\u57fa\u672c\u6570\u7ec4\u7c7b\u578b\u7684\u8bfb\u5199\uff1a</p> <ul> <li> <p>Cpp\u4ee3\u7801</p> <ul> <li>C\u4ee3\u7801\u63a5\u6536JS\u4f20\u8fc7\u6765\u7684\u6570\u7ec4\u8d77\u59cb\u5730\u5740\u548c\u6570\u7ec4\u5927\u5c0f\uff0c\u5e76\u521b\u5efa\u4e86\u4e00\u4e2a\u65b0\u7684\u6570\u7ec4\u8fd4\u56de\u7ed9JS</li> <li>\u8fd9\u91cc\u867d\u7136C\u4ee3\u7801\u5728\u5806\u4e0a\u5efa\u7acb\u4e86\u4e00\u4e2a\u65b0\u7684\u6570\u7ec4\uff0c\u4f46\u662f\u5c06\u91ca\u653e\u7684\u6743\u9650\u8f6c\u4ea4\u7ed9\u4e86JS <pre><code>EMSCRIPTEN_KEEPALIVE\nint* DoubleArr(const int* buf, const int len) {\n    int* ret_buf = (int*)malloc(len * sizeof(int));\n\n    for (int i = 0; i &lt; len; i++) {\n        //printf(\"[%s]: Array from JS buf[%d] = %d\\n\", __func__, i, buf[i]);\n        ret_buf[i] = buf[i] * 2;\n    }\n\nreturn ret_buf;\n}\n</code></pre></li> </ul> </li> <li> <p>HTML\u4ee3\u7801</p> <ul> <li>\u4ece\u6253\u5370\u7684\u7ed3\u679c\u53ef\u4ee5\u770b\u51fa\uff0c\u867d\u7136\u6211\u4eec\u91ca\u653e\u4e86\u5185\u5b58\uff0c\u4f46\u662f\u6bcf\u6b21\u6309\u4e0b\u6309\u94ae\uff0c\u6784\u5efa\u7684\u5185\u5b58\u5730\u5740\u90fd\u662f\u4e0d\u53d8\u7684\uff0c\u8bf4\u660e\u7f16\u8bd1\u5668\u5bf9\u5176\u505a\u4e86\u4f18\u5316\u3002 <pre><code>&lt;script&gt;\n    // Set up button function\n    function button() {\n        const len = 10;\n        const elem_bytes = Int32Array.BYTES_PER_ELEMENT;\n        const js_arr_on_heap = Module._malloc(elem_bytes * len);\n        console.log(\"Address of JS buffer: \" + js_arr_on_heap);\n\n        for (let i = 0; i &lt; len; i++){\n            Module.HEAP32[js_arr_on_heap / elem_bytes + i] = i + 1;\n        }\n\n        // Pass buffer from JS to C\n        console.log(Module._SumArray(js_arr_on_heap, len));\n        // Return buffer from C to JS\n        const c_arr_on_heap = Module._DoubleArr(js_arr_on_heap, len);\n        console.log(\"Address of C buffer: \" + c_arr_on_heap);\n\n        const data = []\n        for (let i = 0; i &lt; len; i++) {\n            data.push(Module.HEAP32[c_arr_on_heap / elem_bytes + i]);\n        }\n        console.log(data);\n\n        Module._free(js_arr_on_heap);\n        Module._free(c_arr_on_heap);\n    }\n&lt;/script&gt;\n</code></pre></li> </ul> </li> <li> <p>\u5b9e\u9a8c\u7ed3\u679c</p> <p></p> </li> </ul>"},{"location":"topics/webassembly/#64_1","title":"64\u4f4d\u6570\u7ec4\u7c7b\u578b\u7684\u4f20\u9012","text":"<p>\u4f8b\u5b50\"mem_64_arr\"\u548c64\u4f4d\u6574\u6570\u7c7b\u578b\u4e00\u6837\uff0c\u5229\u7528<code>getValue/setValue</code>\u5c31\u53ef\u4ee5\u5bf964\u4f4d\u6570\u7ec4\u7c7b\u578b\u8fdb\u884c\u4e86\u8bfb\u5199\uff1a</p> <p>api.c<pre><code>EMSCRIPTEN_KEEPALIVE\nint64_t* DoubleArr64(const int64_t* buf, const int len) {\n    int64_t* ret_buf = (int64_t*)malloc(len * sizeof(int64_t));\n\n    for (int i = 0; i &lt; len; i++) {\n        printf(\"[%s]: Array from JS buf[%d] = %lld(0x%llx)\\n\", __func__, i, buf[i], buf[i]);\n        ret_buf[i] = buf[i] * 2;\n    }\n\n    return ret_buf;\n}\n</code></pre> index.html<pre><code>&lt;script&gt;\n    ...\n    function button() {\n        const len = 10;\n        const js_arr_on_heap = Module._malloc(BigInt64Array.BYTES_PER_ELEMENT * len);\n        console.log(\"Address of JS buffer: \" + js_arr_on_heap);\n\n        for (let i = 0; i &lt; len; i++){\n            let addr = js_arr_on_heap + i * BigInt64Array.BYTES_PER_ELEMENT\n            Module.setValue(addr, i + 1, \"i64\")\n        }\n\n        // Return buffer from C to JS\n        const c_arr_on_heap = Module._DoubleArr64(js_arr_on_heap, len);\n        console.log(\"Address of C buffer: \" + c_arr_on_heap);\n\n        for (let i = 0; i &lt; len; i++) {\n            let addr = c_arr_on_heap + i * BigInt64Array.BYTES_PER_ELEMENT\n            const int64_low32 = BigInt(Module.HEAP32[addr &gt;&gt; 2])\n            const int64_high32 = BigInt(Module.HEAP32[(addr + 4) &gt;&gt; 2])\n            const int64_value = (int64_high32 &lt;&lt; BigInt(32)) ^ int64_low32\n            console.log(int64_value.toString(16))\n        }\n\n        Module._free(js_arr_on_heap);\n        Module._free(c_arr_on_heap);\n    }\n&lt;/script&gt;\n</code></pre></p>"},{"location":"topics/webassembly/#_5","title":"\u53c2\u8003","text":"<ul> <li>Emscripten\u7f16\u8bd1\u9009\u9879</li> </ul>"}]}